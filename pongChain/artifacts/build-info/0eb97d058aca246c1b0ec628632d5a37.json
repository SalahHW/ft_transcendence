{"id":"0eb97d058aca246c1b0ec628632d5a37","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/interfaces/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"},"@openzeppelin/contracts/interfaces/IERC4906.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC4906.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\nimport {IERC721} from \"./IERC721.sol\";\n\n/// @title ERC-721 Metadata Update Extension\ninterface IERC4906 is IERC165, IERC721 {\n    /// @dev This event emits when the metadata of a token is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFT.\n    event MetadataUpdate(uint256 _tokenId);\n\n    /// @dev This event emits when the metadata of a range of tokens is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFTs.\n    event BatchMetadataUpdate(uint256 _fromTokenId, uint256 _toTokenId);\n}\n"},"@openzeppelin/contracts/interfaces/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../token/ERC721/IERC721.sol\";\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"./IERC721.sol\";\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\nimport {ERC721Utils} from \"./utils/ERC721Utils.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Strings} from \"../../utils/Strings.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC-721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if:\n     * - `spender` does not have approval from `owner` for `tokenId`.\n     * - `spender` does not have approval to manage all of `owner`'s assets.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC-721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/extensions/ERC721URIStorage.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC721} from \"../ERC721.sol\";\nimport {Strings} from \"../../../utils/Strings.sol\";\nimport {IERC4906} from \"../../../interfaces/IERC4906.sol\";\nimport {IERC165} from \"../../../interfaces/IERC165.sol\";\n\n/**\n * @dev ERC-721 token with storage based token URI management.\n */\nabstract contract ERC721URIStorage is IERC4906, ERC721 {\n    using Strings for uint256;\n\n    // Interface ID as defined in ERC-4906. This does not correspond to a traditional interface ID as ERC-4906 only\n    // defines events and does not include any external function.\n    bytes4 private constant ERC4906_INTERFACE_ID = bytes4(0x49064906);\n\n    // Optional mapping for token URIs\n    mapping(uint256 tokenId => string) private _tokenURIs;\n\n    /**\n     * @dev See {IERC165-supportsInterface}\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {\n        return interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory _tokenURI = _tokenURIs[tokenId];\n        string memory base = _baseURI();\n\n        // If there is no base URI, return the token URI.\n        if (bytes(base).length == 0) {\n            return _tokenURI;\n        }\n        // If both are set, concatenate the baseURI and tokenURI (via string.concat).\n        if (bytes(_tokenURI).length > 0) {\n            return string.concat(base, _tokenURI);\n        }\n\n        return super.tokenURI(tokenId);\n    }\n\n    /**\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n     *\n     * Emits {MetadataUpdate}.\n     */\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\n        _tokenURIs[tokenId] = _tokenURI;\n        emit MetadataUpdate(tokenId);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC-721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC-721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/utils/ERC721Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721Receiver} from \"../IERC721Receiver.sol\";\nimport {IERC721Errors} from \"../../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Library that provide common ERC-721 utility functions.\n *\n * See https://eips.ethereum.org/EIPS/eip-721[ERC-721].\n *\n * _Available since v5.1._\n */\nlibrary ERC721Utils {\n    /**\n     * @dev Performs an acceptance check for the provided `operator` by calling {IERC721-onERC721Received}\n     * on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n     *\n     * The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n     * Otherwise, the recipient must implement {IERC721Receiver-onERC721Received} and return the acceptance magic value to accept\n     * the transfer.\n     */\n    function checkOnERC721Received(\n        address operator,\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(operator, from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    // Token rejected\n                    revert IERC721Errors.ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-IERC721Receiver implementer\n                    revert IERC721Errors.ERC721InvalidReceiver(to);\n                } else {\n                    assembly (\"memory-safe\") {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n            // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2²⁵⁶ + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 exp;\n        unchecked {\n            exp = 128 * SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 64 * SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 32 * SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 16 * SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 8 * SafeCast.toUint(value > (1 << 8) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 4 * SafeCast.toUint(value > (1 << 4) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 2 * SafeCast.toUint(value > (1 << 2) - 1);\n            value >>= exp;\n            result += exp;\n\n            result += SafeCast.toUint(value > 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 isGt;\n        unchecked {\n            isGt = SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= isGt * 128;\n            result += isGt * 16;\n\n            isGt = SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= isGt * 64;\n            result += isGt * 8;\n\n            isGt = SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= isGt * 32;\n            result += isGt * 4;\n\n            isGt = SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= isGt * 16;\n            result += isGt * 2;\n\n            result += SafeCast.toUint(value > (1 << 8) - 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SafeCast} from \"./math/SafeCast.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    using SafeCast for *;\n\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev The string being parsed contains characters that are not in scope of the given base.\n     */\n    error StringsInvalidChar();\n\n    /**\n     * @dev The string being parsed is not a properly formatted address.\n     */\n    error StringsInvalidAddressFormat();\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input) internal pure returns (uint256) {\n        return parseUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseUint} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        uint256 result = 0;\n        for (uint256 i = begin; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 9) return (false, 0);\n            result *= 10;\n            result += chr;\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `int256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input) internal pure returns (int256) {\n        return parseInt(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input, uint256 begin, uint256 end) internal pure returns (int256) {\n        (bool success, int256 value) = tryParseInt(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n     * the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(string memory input) internal pure returns (bool success, int256 value) {\n        return _tryParseIntUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    uint256 private constant ABS_MIN_INT256 = 2 ** 255;\n\n    /**\n     * @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character or if the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, int256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseIntUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseInt} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseIntUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, int256 value) {\n        bytes memory buffer = bytes(input);\n\n        // Check presence of a negative sign.\n        bytes1 sign = begin == end ? bytes1(0) : bytes1(_unsafeReadBytesOffset(buffer, begin)); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        bool positiveSign = sign == bytes1(\"+\");\n        bool negativeSign = sign == bytes1(\"-\");\n        uint256 offset = (positiveSign || negativeSign).toUint();\n\n        (bool absSuccess, uint256 absValue) = tryParseUint(input, begin + offset, end);\n\n        if (absSuccess && absValue < ABS_MIN_INT256) {\n            return (true, negativeSign ? -int256(absValue) : int256(absValue));\n        } else if (absSuccess && negativeSign && absValue == ABS_MIN_INT256) {\n            return (true, type(int256).min);\n        } else return (false, 0);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input) internal pure returns (uint256) {\n        return parseHexUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseHexUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseHexUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n     * invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseHexUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseHexUint} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseHexUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        // skip 0x prefix if present\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(buffer, begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 offset = hasPrefix.toUint() * 2;\n\n        uint256 result = 0;\n        for (uint256 i = begin + offset; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 15) return (false, 0);\n            result *= 16;\n            unchecked {\n                // Multiplying by 16 is equivalent to a shift of 4 bits (with additional overflow check).\n                // This guaratees that adding a value < 16 will not cause an overflow, hence the unchecked.\n                result += chr;\n            }\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input) internal pure returns (address) {\n        return parseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input, uint256 begin, uint256 end) internal pure returns (address) {\n        (bool success, address value) = tryParseAddress(input, begin, end);\n        if (!success) revert StringsInvalidAddressFormat();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n     * formatted address. See {parseAddress} requirements.\n     */\n    function tryParseAddress(string memory input) internal pure returns (bool success, address value) {\n        return tryParseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n     * formatted address. See {parseAddress} requirements.\n     */\n    function tryParseAddress(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, address value) {\n        if (end > bytes(input).length || begin > end) return (false, address(0));\n\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(bytes(input), begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 expectedLength = 40 + hasPrefix.toUint() * 2;\n\n        // check that input is the correct length\n        if (end - begin == expectedLength) {\n            // length guarantees that this does not overflow, and value is at most type(uint160).max\n            (bool s, uint256 v) = _tryParseHexUintUncheckedBounds(input, begin, end);\n            return (s, address(uint160(v)));\n        } else {\n            return (false, address(0));\n        }\n    }\n\n    function _tryParseChr(bytes1 chr) private pure returns (uint8) {\n        uint8 value = uint8(chr);\n\n        // Try to parse `chr`:\n        // - Case 1: [0-9]\n        // - Case 2: [a-f]\n        // - Case 3: [A-F]\n        // - otherwise not supported\n        unchecked {\n            if (value > 47 && value < 58) value -= 48;\n            else if (value > 96 && value < 103) value -= 87;\n            else if (value > 64 && value < 71) value -= 55;\n            else return type(uint8).max;\n        }\n\n        return value;\n    }\n\n    /**\n     * @dev Reads a bytes32 from a bytes array without bounds checking.\n     *\n     * NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n     * assembly block as such would prevent some optimizations.\n     */\n    function _unsafeReadBytesOffset(bytes memory buffer, uint256 offset) private pure returns (bytes32 value) {\n        // This is not memory safe in the general case, but all calls to this private function are within bounds.\n        assembly (\"memory-safe\") {\n            value := mload(add(buffer, add(0x20, offset)))\n        }\n    }\n}\n"},"contracts/MasterContract.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"./nfts/GoatNft.sol\";\nimport \"./nfts/TournamentNft.sol\";\nimport \"./tokens/PongToken.sol\";\n\n/**\n * @title MasterContract\n * @dev MasterContract to manage all the contracts\n */\n\ncontract MasterContract is Ownable {\n    /**\n     * @dev Variables to store contract addresses\n     */\n\n    GoatNft public goatNft;\n    TournamentNft public tournamentNft;\n    PongToken public pongToken;\n\n    /**\n     * @dev Struct to store match details\n     * player1: player1 address\n     * player2: player2 address\n     * winner: winner address\n     * player1Score: player1 score\n     * player2Score: player2 score\n     * matchId: match id\n     */\n\n    struct Match {\n        address player1;\n        address player2;\n        address winner;\n        uint8 player1Score;\n        uint8 player2Score;\n        uint16 matchId;\n    }\n\n    /**\n     * @dev Struct to store tournament details\n     * endTimestamp: end timestamp of the tournament\n     * matchIds: array of match ids\n     * winner: winner address\n     * tournamentId: tournament id\n     */\n\n    struct Tournament {\n        uint32 endTimestamp;\n        uint16[] matchIds;\n        uint16 tournamentId;\n        address winner;\n    }\n\n    /**\n     * @dev Array to store all matches\n     * uint16: match id\n     * Match: match details\n     */\n\n    Match[] public globalMatchesArray;\n\n    /**\n     * @dev Array to store all tournaments\n     * uint256: tournament id\n     * Tournament: tournament details\n     */\n\n    Tournament[] public globalTournamentsArray;\n\n    /**\n     * @dev Mapping to store player\n     * string: player name to address mapping\n     * address: player address\n     */\n\n    mapping(string => address) private players;\n\n    /**\n     * @dev Event to log match reported\n     * @param player1: player1 name\n     * @param player2: player2 name\n     * @param winner: winner address\n     * @param player1Score: player1 score\n     * @param player2Score: player2 score\n     * @param matchId: match id\n     */\n\n    event MatchReported(\n        address indexed player1,\n        address indexed player2,\n        address indexed winner,\n        uint8 player1Score,\n        uint8 player2Score,\n        uint16 matchId\n    );\n\n    /**\n     * @dev Event to log tournament reported\n     * @param tournamentId: tournament id\n     * @param winner: winner address\n     */\n\n    event TournamentReported(\n        uint16 indexed tournamentId,\n        uint32 endTimestamp,\n        uint16[] matchIds,\n        address indexed winner\n    );\n\n    /**\n     * @dev Event to log player added\n     * @param name: player name\n     * @param playerAddress: player address\n     */\n\n    event PlayerAdded(string name, address playerAddress);\n\n    /**\n     * @dev tournamentTokenIds to store tournament token ids\n     */\n\n    uint16 public tournamentTokenIds;\n\n    /**\n     * @dev Constructor to initialize the contract\n     * @param _goatNft: address of GoatNft contract\n     * @param _pongToken: address of PongToken contract\n     * @param _tournamentNft: address of TournamentNft contract\n     */\n\n    constructor(\n        address _goatNft,\n        address _pongToken,\n        address _tournamentNft\n    ) Ownable(msg.sender) {\n        goatNft = GoatNft(_goatNft);\n        pongToken = PongToken(_pongToken);\n        tournamentNft = TournamentNft(_tournamentNft);\n        tournamentTokenIds = 1;\n    }\n\n    /**\n     * @dev Function to add player\n     * @param _name: player name\n     * @param _player: player address\n     */\n\n    function addPlayer(string memory _name, address _player) public onlyOwner {\n        require(players[_name] == address(0), \"Player already exists\");\n        players[_name] = _player;\n        pongToken.mint(_player, 100);\n        emit PlayerAdded(_name, _player);\n    }\n\n    /**\n     * @dev Function to get player address\n     * @param _name: player name\n     * @return player address\n     */\n\n    function getPlayerAddress(\n        string memory _name\n    ) public view onlyOwner returns (address) {\n        return players[_name];\n    }\n\n    /**\n     * @dev Function to report match\n     * @param matchId: match id\n     * @param player1: player1 name\n     * @param player2: player2 name\n     * @param player1Score: player1 score\n     * @param player2Score: player2 score\n     * @param winner: winner address\n     */\n\n    function reportMatch(\n        string memory player1,\n        string memory player2,\n        uint16 matchId,\n        uint8 player1Score,\n        uint8 player2Score,\n        address winner\n    ) public onlyOwner {\n        require(\n            getPlayerAddress(player1) != address(0),\n            \"Player1 not registered\"\n        );\n        require(\n            getPlayerAddress(player2) != address(0),\n            \"Player2 not registered\"\n        );\n        require(winner != address(0), \"Winner address is invalid\");\n        pongToken.mint(winner, 10);\n        if (\n            pongToken.balanceOf(goatNft.getGoatAddress()) <\n            pongToken.balanceOf(winner)\n        ) {\n            goatNft.transferNft(goatNft.getGoatAddress(), winner);\n        }\n        address loser = (getPlayerAddress(player1) != winner)\n            ? getPlayerAddress(player1)\n            : getPlayerAddress(player2);\n        uint256 amountToBurn = calculateBurnAmount(pongToken.balanceOf(loser));\n        pongToken.burn(loser, amountToBurn);\n        Match memory tempMatch = fillMatchStruct(\n            player1,\n            player2,\n            winner,\n            player1Score,\n            player2Score,\n            matchId\n        );\n        globalMatchesArray.push(tempMatch);\n        emit MatchReported(\n            getPlayerAddress(player1),\n            getPlayerAddress(player2),\n            winner,\n            player1Score,\n            player2Score,\n            matchId\n        );\n    }\n\n    /**\n     * @dev Function to fill match struct\n     * @param player1: player1 name\n     * @param player2: player2 name\n     * @param winner: winner address\n     * @param player1Score: player1 score\n     * @param player2Score: player2 score\n     * @param matchId: match id\n     * @return Match struct\n     */\n\n    function fillMatchStruct(\n        string memory player1,\n        string memory player2,\n        address winner,\n        uint8 player1Score,\n        uint8 player2Score,\n        uint16 matchId\n    ) internal view returns (Match memory) {\n        Match memory tempMatch = Match({\n            player1: getPlayerAddress(player1),\n            player2: getPlayerAddress(player2),\n            winner: winner,\n            player1Score: player1Score,\n            player2Score: player2Score,\n            matchId: matchId\n        });\n        return tempMatch;\n    }\n\n    /**\n     * @dev Function to get all matches played by a player\n     * @param player: player name\n     * @return array of matches played by the player\n     */\n\n    function getMatchsByPlayer(\n        string memory player\n    ) public view returns (Match[] memory) {\n        uint256 size = 0;\n        for (uint i = 0; i < globalMatchesArray.length; i++) {\n            if (\n                globalMatchesArray[i].player1 == getPlayerAddress(player) ||\n                globalMatchesArray[i].player2 == getPlayerAddress(player)\n            ) {\n                size++;\n            }\n        }\n        if (size == 0) {\n            revert(\"No matches found for the player\");\n        }\n        Match[] memory playerMatches = new Match[](size);\n        uint256 index = 0;\n        for (uint i = 0; i < globalMatchesArray.length; i++) {\n            if (\n                globalMatchesArray[i].player1 == getPlayerAddress(player) ||\n                globalMatchesArray[i].player2 == getPlayerAddress(player)\n            ) {\n                playerMatches[index] = globalMatchesArray[i];\n                index++;\n            }\n        }\n        return playerMatches;\n    }\n\n    /**\n     * @dev Function to get all matches won by a player\n     * @param winner: winner address\n     * @return array of matches won by the player\n     */\n\n    function getMatchsByWinner(\n        address winner\n    ) public view returns (Match[] memory) {\n        uint256 size = 0;\n        for (uint i = 0; i < globalMatchesArray.length; i++) {\n            if (globalMatchesArray[i].winner == winner) {\n                size++;\n            }\n        }\n        if (size == 0) {\n            revert(\"No matches found for the winner\");\n        }\n        Match[] memory playerMatches = new Match[](size);\n        uint256 index = 0;\n        for (uint i = 0; i < globalMatchesArray.length; i++) {\n            if (globalMatchesArray[i].winner == winner) {\n                playerMatches[index] = globalMatchesArray[i];\n                index++;\n            }\n        }\n        return playerMatches;\n    }\n\n    /**\n     * @dev Function to get match by match id\n     * @param matchId: match id\n     * @return match details\n     */\n\n    function getMatchsByMatchId(\n        uint16 matchId\n    ) public view returns (Match memory) {\n        for (uint i = 0; i < globalMatchesArray.length; i++) {\n            if (globalMatchesArray[i].matchId == matchId) {\n                return globalMatchesArray[i];\n            }\n        }\n        revert(\"Match not found\");\n    }\n\n    /**\n     * @dev Function to calculate amount to burn\n     * @param balance: balance of the player\n     * @return amount to burn\n     */\n\n    function calculateBurnAmount(\n        uint256 balance\n    ) internal pure returns (uint256) {\n        if (balance <= 10) {\n            return 0;\n        } else if (balance < 20) {\n            return balance - 10;\n        } else {\n            return 10;\n        }\n    }\n\n    /**\n     * @dev Function to report tournament\n     * @param endTimestamp: end timestamp of the tournament\n     * @param matchIds: array of match ids (match have to be already\n     * reported and this function called once all the matches are ended)\n     * @param winner: winner address\n     */\n\n    function reportTournament(\n        uint32 endTimestamp,\n        uint16[] memory matchIds,\n        address winner\n    ) public onlyOwner {\n        tournamentNft.mintTnt(winner, tournamentTokenIds);\n        Tournament memory tempTournament = fillTournamentStruct(\n            endTimestamp,\n            matchIds,\n            tournamentTokenIds,\n            winner\n        );\n        globalTournamentsArray.push(tempTournament);\n        emit TournamentReported(\n            tournamentTokenIds,\n            endTimestamp,\n            matchIds,\n            winner\n        );\n        tournamentTokenIds++;\n    }\n\n    /**\n     * @dev Function to fill tournament struct\n     * @param endTimestamp: end timestamp of the tournament\n     * @param matchIds: array of match ids\n     * @param winner: winner address\n     * @param tournamentId: tournament id\n     * @return Tournament struct\n     */\n\n    function fillTournamentStruct(\n        uint32 endTimestamp,\n        uint16[] memory matchIds,\n        uint16 tournamentId,\n        address winner\n    ) internal pure returns (Tournament memory) {\n        Tournament memory tempTournament = Tournament({\n            endTimestamp: endTimestamp,\n            matchIds: matchIds,\n            tournamentId: tournamentId,\n            winner: winner\n        });\n        return tempTournament;\n    }\n\n    /**\n     * @dev Function to get tournament by id\n     * @param tournamentId: tournament id\n     * @return array of tournaments\n     */\n\n    function getTournamentById(\n        uint16 tournamentId\n    ) public view returns (Tournament memory) {\n        for (uint i = 0; i < globalTournamentsArray.length; i++) {\n            if (globalTournamentsArray[i].tournamentId == tournamentId) {\n                return globalTournamentsArray[i];\n            }\n        }\n        revert(\"Tournament not found\");\n    }\n\n    /**\n     * @dev Function to get tournament by winner\n     * @param winner: winner address\n     * @return array of tournaments\n     */\n\n    function getTournamentByWinner(\n        address winner\n    ) public view returns (Tournament[] memory) {\n        uint256 size = 0;\n        for (uint i = 0; i < globalTournamentsArray.length; i++) {\n            if (globalTournamentsArray[i].winner == winner) {\n                size++;\n            }\n        }\n        if (size == 0) {\n            revert(\"No tournaments found for the winner\");\n        }\n        Tournament[] memory playerTournaments = new Tournament[](size);\n        uint256 index = 0;\n        for (uint i = 0; i < globalTournamentsArray.length; i++) {\n            if (globalTournamentsArray[i].winner == winner) {\n                playerTournaments[index] = globalTournamentsArray[i];\n                index++;\n            }\n        }\n        return playerTournaments;\n    }\n}\n"},"contracts/nfts/GoatNft.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\";\n\n/**\n * @title GoatNft\n * GoatNft - a contract for my non-fungible goats.\n */\n\ncontract GoatNft is ERC721, ERC721URIStorage, Ownable {\n    /**\n     * @dev goat: address of the goat\n     * @dev goatTokenId: id of the goat token\n     */\n\n    address public goat;\n    uint256 public goatTokenId = 299;\n\n    /**\n     * @dev Transfert event\n     * @param from: address of the sender\n     * @param to: address of the receiver\n     * @param amount: amount of the token\n     */\n\n    event Transfert(address indexed from, address indexed to, uint256 amount);\n\n    /**\n     * @dev Constructor to mint a goat token and set the token URI\n     */\n\n    constructor() ERC721(\"GoatToken\", \"GOAT\") Ownable(msg.sender) {\n        goat = msg.sender;\n        _mint(msg.sender, goatTokenId);\n        _setTokenURI(\n            goatTokenId,\n            \"ipfs://bafkreigyctqe5fb456qcfydg6pfy6zdh626eid4f5znwf6yj6rnjlzbq5a/GoatNFT.json\"\n        );\n    }\n\n    /**\n     * @dev transferNft function to transfer the goat token to a new address\n     * @param _from: address of the sender\n     * @param _to: address of the receiver\n     */\n\n    function transferNft(address _from, address _to) public onlyOwner {\n        safeTransferFrom(_from, _to, goatTokenId);\n        emit Transfert(_from, _to, goatTokenId);\n        goat = _to;\n    }\n\n    /**\n     * @dev getGoatAddress function to get the address of the goat\n     * @return address of the goat\n     */\n\n    function getGoatAddress() public view returns (address) {\n        return goat;\n    }\n\n    /**\n     * @dev override _checkAuthorized function to check if the sender is the owner\n     * @param spender: address of the spender\n     */\n\n    function _checkAuthorized(\n        address /*owner*/,\n        address spender,\n        uint256 /*tokenId*/\n    ) internal view override {\n        if (spender != Ownable.owner()) {\n            revert(\"Only admin can transfer tokens\");\n        }\n    }\n\n    /**\n     * @dev override supportsInterface and tokenURI functions\n     * @param interfaceId: id of the interface\n     * @return boolean\n     */\n\n    function supportsInterface(\n        bytes4 interfaceId\n    ) public view override(ERC721, ERC721URIStorage) returns (bool) {\n        return super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev override tokenURI function\n     * @param tokenId: id of the token\n     * @return string\n     */\n\n    function tokenURI(\n        uint256 tokenId\n    ) public view override(ERC721, ERC721URIStorage) returns (string memory) {\n        return super.tokenURI(tokenId);\n    }\n}\n"},"contracts/nfts/TournamentNft.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n/**\n * @title TournamentNft\n * TournamentNft - a contract for my non-fungible tournament tokens.\n */\n\ncontract TournamentNft is ERC721, Ownable {\n    /**\n     * @dev tntTracking: mapping of tournamentId to winner address\n     */\n\n    mapping(uint256 => address) tntTracking;\n\n    /**\n     * @dev Constructor to mint a tournament token\n     */\n\n    constructor() ERC721(\"TournamentToken\", \"TNT\") Ownable(msg.sender) {}\n\n    /**\n     * @dev mintTnt function to mint a tournament token to a new address\n     * @param winner: address of the winner\n     * @param tournamentId: id of the tournament token\n     */\n\n    function mintTnt(address winner, uint256 tournamentId) public onlyOwner {\n        _mint(winner, tournamentId);\n        tntTracking[tournamentId] = winner;\n    }\n\n    /**\n     * @dev _checkAuthorized function to check if the sender is the owner\n     * @param spender: address of the spender\n     */\n\n    function _checkAuthorized(\n        address /*owner*/,\n        address spender,\n        uint256 /*tokenId*/\n    ) internal view override {\n        if (spender != Ownable.owner()) {\n            revert(\"Only admin can transfer tokens\");\n        }\n    }\n\n    /**\n     * @dev getTracking function to get the winner address of the tournament\n     * @param tokenId: id of the tournament token\n     * @return address of the winner\n     */\n\n    function getTracking(uint256 tokenId) public view returns (address) {\n        return tntTracking[tokenId];\n    }\n}\n"},"contracts/tokens/PongToken.sol":{"content":"//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\n/**\n * @title PongToken\n * @dev ERC20 token contract\n */\n\ncontract PongToken is ERC20, Ownable {\n    /**\n     * @dev Constructor to mint initial supply\n     * name: PongToken\n     * symbol: PONG\n     */\n\n    constructor() ERC20(\"PongToken\", \"PONG\") Ownable(msg.sender) {}\n\n    /**\n     * @dev Function to mint tokens\n     * @param to: address to mint tokens\n     * @param amount: amount to mint\n     */\n\n    function mint(address to, uint256 amount) public onlyOwner {\n        _mint(to, amount);\n    }\n\n    /**\n     * @dev Function to burn tokens\n     * @param from: address to burn tokens\n     * @param amount: amount to burn\n     */\n\n    function burn(address from, uint256 amount) public onlyOwner {\n        _burn(from, amount);\n    }\n}\n"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[2288],"Ownable":[147]},"id":148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":2289,"src":"128:45:0","symbolAliases":[{"foreign":{"id":2,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2288,"src":"136:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Context","nameLocations":["692:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":2288,"src":"692:7:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"692:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"175:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":147,"linearizedBaseContracts":[147,2288],"name":"Ownable","nameLocation":"681:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8,"mutability":"mutable","name":"_owner","nameLocation":"722:6:0","nodeType":"VariableDeclaration","scope":147,"src":"706:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"735:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":13,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"866:7:0","nodeType":"VariableDeclaration","scope":13,"src":"858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:0"},"src":"825:50:0"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"881:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":18,"name":"OwnableInvalidOwner","nameLocation":"974:19:0","nodeType":"ErrorDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"owner","nameLocation":"1002:5:0","nodeType":"VariableDeclaration","scope":18,"src":"994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:0"},"src":"968:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":24,"name":"OwnershipTransferred","nameLocation":"1021:20:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:0","nodeType":"VariableDeclaration","scope":24,"src":"1042:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:0","nodeType":"VariableDeclaration","scope":24,"src":"1073:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:0"},"src":"1015:84:0"},{"body":{"id":49,"nodeType":"Block","src":"1259:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1273:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":44,"nodeType":"IfStatement","src":"1269:95:0","trueBody":{"id":43,"nodeType":"Block","src":"1301:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1322:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":42,"nodeType":"RevertStatement","src":"1315:38:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1392:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1373:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1373:32:0"}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1105:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1237:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1259:0:0"},"scope":147,"src":"1225:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":57,"nodeType":"Block","src":"1521:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1531:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1531:13:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1554:1:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1418:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nameLocation":"1509:9:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1518:2:0"},"src":"1500:62:0","virtual":false,"visibility":"internal"},{"body":{"id":66,"nodeType":"Block","src":"1693:30:0","statements":[{"expression":{"id":64,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1710:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":65,"nodeType":"Return","src":"1703:13:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1568:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1652:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"1684:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:0"},"scope":147,"src":"1638:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":83,"nodeType":"Block","src":"1841:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2270,"src":"1866:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":82,"nodeType":"IfStatement","src":"1851:101:0","trueBody":{"id":81,"nodeType":"Block","src":"1880:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":77,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2270,"src":"1928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1901:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":80,"nodeType":"RevertStatement","src":"1894:47:0"}]}}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1729:62:0","text":" @dev Throws if the sender is not the owner."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1816:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1841:0:0"},"scope":147,"src":"1796:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2347:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2357:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"2357:30:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1964:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":98,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2337:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2337:9:0"},"nodeType":"ModifierInvocation","src":"2337:9:0"}],"name":"renounceOwnership","nameLocation":"2302:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"2319:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2347:0:0"},"scope":147,"src":"2293:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2613:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2627:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:0","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2623:91:0","trueBody":{"id":119,"nodeType":"Block","src":"2651:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":112,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2672:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":118,"nodeType":"RevertStatement","src":"2665:38:0"}]}},{"expression":{"arguments":[{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2742:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2723:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"2723:28:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2400:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":126,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["2603:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2603:9:0"},"nodeType":"ModifierInvocation","src":"2603:9:0"}],"name":"transferOwnership","nameLocation":"2552:17:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2570:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2613:0:0"},"scope":147,"src":"2543:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":145,"nodeType":"Block","src":"2975:124:0","statements":[{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:0","nodeType":"VariableDeclaration","scope":145,"src":"2985:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":135,"initialValue":{"id":134,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3029:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"nodeType":"ExpressionStatement","src":"3020:17:0"},{"eventCall":{"arguments":[{"id":141,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3073:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3083:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":140,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3052:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3047:45:0"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2764:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:0","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:0","nodeType":"VariableDeclaration","scope":146,"src":"2940:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"2975:0:0"},"scope":147,"src":"2912:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":148,"src":"663:2438:0","usedErrors":[13,18],"usedEvents":[24]}],"src":"102:3000:0"},"id":0},"@openzeppelin/contracts/interfaces/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","exportedSymbols":{"IERC165":[3576]},"id":152,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:1"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../utils/introspection/IERC165.sol","id":151,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":152,"sourceUnit":3577,"src":"132:59:1","symbolAliases":[{"foreign":{"id":150,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3576,"src":"140:7:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"106:86:1"},"id":1},"@openzeppelin/contracts/interfaces/IERC4906.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC4906.sol","exportedSymbols":{"IERC165":[3576],"IERC4906":[175],"IERC721":[2009]},"id":176,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":153,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:2"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","file":"./IERC165.sol","id":155,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":176,"sourceUnit":152,"src":"133:38:2","symbolAliases":[{"foreign":{"id":154,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3576,"src":"141:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC721.sol","file":"./IERC721.sol","id":157,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":176,"sourceUnit":180,"src":"172:38:2","symbolAliases":[{"foreign":{"id":156,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2009,"src":"180:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":159,"name":"IERC165","nameLocations":["279:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":3576,"src":"279:7:2"},"id":160,"nodeType":"InheritanceSpecifier","src":"279:7:2"},{"baseName":{"id":161,"name":"IERC721","nameLocations":["288:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":2009,"src":"288:7:2"},"id":162,"nodeType":"InheritanceSpecifier","src":"288:7:2"}],"canonicalName":"IERC4906","contractDependencies":[],"contractKind":"interface","documentation":{"id":158,"nodeType":"StructuredDocumentation","src":"212:45:2","text":"@title ERC-721 Metadata Update Extension"},"fullyImplemented":false,"id":175,"linearizedBaseContracts":[175,2009,3576],"name":"IERC4906","nameLocation":"267:8:2","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":163,"nodeType":"StructuredDocumentation","src":"302:201:2","text":"@dev This event emits when the metadata of a token is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFT."},"eventSelector":"f8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7","id":167,"name":"MetadataUpdate","nameLocation":"514:14:2","nodeType":"EventDefinition","parameters":{"id":166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":165,"indexed":false,"mutability":"mutable","name":"_tokenId","nameLocation":"537:8:2","nodeType":"VariableDeclaration","scope":167,"src":"529:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":164,"name":"uint256","nodeType":"ElementaryTypeName","src":"529:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"528:18:2"},"src":"508:39:2"},{"anonymous":false,"documentation":{"id":168,"nodeType":"StructuredDocumentation","src":"553:212:2","text":"@dev This event emits when the metadata of a range of tokens is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFTs."},"eventSelector":"6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c","id":174,"name":"BatchMetadataUpdate","nameLocation":"776:19:2","nodeType":"EventDefinition","parameters":{"id":173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":170,"indexed":false,"mutability":"mutable","name":"_fromTokenId","nameLocation":"804:12:2","nodeType":"VariableDeclaration","scope":174,"src":"796:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":169,"name":"uint256","nodeType":"ElementaryTypeName","src":"796:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":172,"indexed":false,"mutability":"mutable","name":"_toTokenId","nameLocation":"826:10:2","nodeType":"VariableDeclaration","scope":174,"src":"818:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":171,"name":"uint256","nodeType":"ElementaryTypeName","src":"818:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"795:42:2"},"src":"770:68:2"}],"scope":176,"src":"257:583:2","usedErrors":[],"usedEvents":[167,174,1908,1917,1926]}],"src":"107:734:2"},"id":2},"@openzeppelin/contracts/interfaces/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC721.sol","exportedSymbols":{"IERC721":[2009]},"id":180,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":177,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../token/ERC721/IERC721.sol","id":179,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":180,"sourceUnit":2010,"src":"132:52:3","symbolAliases":[{"foreign":{"id":178,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2009,"src":"140:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"106:79:3"},"id":3},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[316],"IERC20Errors":[221],"IERC721Errors":[269]},"id":317,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":181,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":182,"nodeType":"StructuredDocumentation","src":"138:141:4","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"id":221,"linearizedBaseContracts":[221],"name":"IERC20Errors","nameLocation":"290:12:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":183,"nodeType":"StructuredDocumentation","src":"309:309:4","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":191,"name":"ERC20InsufficientBalance","nameLocation":"629:24:4","nodeType":"ErrorDefinition","parameters":{"id":190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":185,"mutability":"mutable","name":"sender","nameLocation":"662:6:4","nodeType":"VariableDeclaration","scope":191,"src":"654:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":184,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":187,"mutability":"mutable","name":"balance","nameLocation":"678:7:4","nodeType":"VariableDeclaration","scope":191,"src":"670:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":186,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":189,"mutability":"mutable","name":"needed","nameLocation":"695:6:4","nodeType":"VariableDeclaration","scope":191,"src":"687:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":188,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"653:49:4"},"src":"623:80:4"},{"documentation":{"id":192,"nodeType":"StructuredDocumentation","src":"709:152:4","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":196,"name":"ERC20InvalidSender","nameLocation":"872:18:4","nodeType":"ErrorDefinition","parameters":{"id":195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":194,"mutability":"mutable","name":"sender","nameLocation":"899:6:4","nodeType":"VariableDeclaration","scope":196,"src":"891:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":193,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:16:4"},"src":"866:41:4"},{"documentation":{"id":197,"nodeType":"StructuredDocumentation","src":"913:159:4","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":201,"name":"ERC20InvalidReceiver","nameLocation":"1083:20:4","nodeType":"ErrorDefinition","parameters":{"id":200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":199,"mutability":"mutable","name":"receiver","nameLocation":"1112:8:4","nodeType":"VariableDeclaration","scope":201,"src":"1104:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":198,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1103:18:4"},"src":"1077:45:4"},{"documentation":{"id":202,"nodeType":"StructuredDocumentation","src":"1128:345:4","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":210,"name":"ERC20InsufficientAllowance","nameLocation":"1484:26:4","nodeType":"ErrorDefinition","parameters":{"id":209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":204,"mutability":"mutable","name":"spender","nameLocation":"1519:7:4","nodeType":"VariableDeclaration","scope":210,"src":"1511:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":203,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":206,"mutability":"mutable","name":"allowance","nameLocation":"1536:9:4","nodeType":"VariableDeclaration","scope":210,"src":"1528:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":205,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":208,"mutability":"mutable","name":"needed","nameLocation":"1555:6:4","nodeType":"VariableDeclaration","scope":210,"src":"1547:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":207,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1510:52:4"},"src":"1478:85:4"},{"documentation":{"id":211,"nodeType":"StructuredDocumentation","src":"1569:174:4","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":215,"name":"ERC20InvalidApprover","nameLocation":"1754:20:4","nodeType":"ErrorDefinition","parameters":{"id":214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":213,"mutability":"mutable","name":"approver","nameLocation":"1783:8:4","nodeType":"VariableDeclaration","scope":215,"src":"1775:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":212,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1774:18:4"},"src":"1748:45:4"},{"documentation":{"id":216,"nodeType":"StructuredDocumentation","src":"1799:195:4","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":220,"name":"ERC20InvalidSpender","nameLocation":"2005:19:4","nodeType":"ErrorDefinition","parameters":{"id":219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":218,"mutability":"mutable","name":"spender","nameLocation":"2033:7:4","nodeType":"VariableDeclaration","scope":220,"src":"2025:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":217,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2024:17:4"},"src":"1999:43:4"}],"scope":317,"src":"280:1764:4","usedErrors":[191,196,201,210,215,220],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":222,"nodeType":"StructuredDocumentation","src":"2046:143:4","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"id":269,"linearizedBaseContracts":[269],"name":"IERC721Errors","nameLocation":"2200:13:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":223,"nodeType":"StructuredDocumentation","src":"2220:219:4","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":227,"name":"ERC721InvalidOwner","nameLocation":"2450:18:4","nodeType":"ErrorDefinition","parameters":{"id":226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":225,"mutability":"mutable","name":"owner","nameLocation":"2477:5:4","nodeType":"VariableDeclaration","scope":227,"src":"2469:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":224,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2468:15:4"},"src":"2444:40:4"},{"documentation":{"id":228,"nodeType":"StructuredDocumentation","src":"2490:132:4","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":232,"name":"ERC721NonexistentToken","nameLocation":"2633:22:4","nodeType":"ErrorDefinition","parameters":{"id":231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":230,"mutability":"mutable","name":"tokenId","nameLocation":"2664:7:4","nodeType":"VariableDeclaration","scope":232,"src":"2656:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":229,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2655:17:4"},"src":"2627:46:4"},{"documentation":{"id":233,"nodeType":"StructuredDocumentation","src":"2679:289:4","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":241,"name":"ERC721IncorrectOwner","nameLocation":"2979:20:4","nodeType":"ErrorDefinition","parameters":{"id":240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":235,"mutability":"mutable","name":"sender","nameLocation":"3008:6:4","nodeType":"VariableDeclaration","scope":241,"src":"3000:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":234,"name":"address","nodeType":"ElementaryTypeName","src":"3000:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":237,"mutability":"mutable","name":"tokenId","nameLocation":"3024:7:4","nodeType":"VariableDeclaration","scope":241,"src":"3016:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":236,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":239,"mutability":"mutable","name":"owner","nameLocation":"3041:5:4","nodeType":"VariableDeclaration","scope":241,"src":"3033:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":238,"name":"address","nodeType":"ElementaryTypeName","src":"3033:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2999:48:4"},"src":"2973:75:4"},{"documentation":{"id":242,"nodeType":"StructuredDocumentation","src":"3054:152:4","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":246,"name":"ERC721InvalidSender","nameLocation":"3217:19:4","nodeType":"ErrorDefinition","parameters":{"id":245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":244,"mutability":"mutable","name":"sender","nameLocation":"3245:6:4","nodeType":"VariableDeclaration","scope":246,"src":"3237:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":243,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3236:16:4"},"src":"3211:42:4"},{"documentation":{"id":247,"nodeType":"StructuredDocumentation","src":"3259:159:4","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":251,"name":"ERC721InvalidReceiver","nameLocation":"3429:21:4","nodeType":"ErrorDefinition","parameters":{"id":250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":249,"mutability":"mutable","name":"receiver","nameLocation":"3459:8:4","nodeType":"VariableDeclaration","scope":251,"src":"3451:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":248,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3450:18:4"},"src":"3423:46:4"},{"documentation":{"id":252,"nodeType":"StructuredDocumentation","src":"3475:247:4","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":258,"name":"ERC721InsufficientApproval","nameLocation":"3733:26:4","nodeType":"ErrorDefinition","parameters":{"id":257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":254,"mutability":"mutable","name":"operator","nameLocation":"3768:8:4","nodeType":"VariableDeclaration","scope":258,"src":"3760:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":253,"name":"address","nodeType":"ElementaryTypeName","src":"3760:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":256,"mutability":"mutable","name":"tokenId","nameLocation":"3786:7:4","nodeType":"VariableDeclaration","scope":258,"src":"3778:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":255,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3759:35:4"},"src":"3727:68:4"},{"documentation":{"id":259,"nodeType":"StructuredDocumentation","src":"3801:174:4","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":263,"name":"ERC721InvalidApprover","nameLocation":"3986:21:4","nodeType":"ErrorDefinition","parameters":{"id":262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":261,"mutability":"mutable","name":"approver","nameLocation":"4016:8:4","nodeType":"VariableDeclaration","scope":263,"src":"4008:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":260,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4007:18:4"},"src":"3980:46:4"},{"documentation":{"id":264,"nodeType":"StructuredDocumentation","src":"4032:197:4","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":268,"name":"ERC721InvalidOperator","nameLocation":"4240:21:4","nodeType":"ErrorDefinition","parameters":{"id":267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":266,"mutability":"mutable","name":"operator","nameLocation":"4270:8:4","nodeType":"VariableDeclaration","scope":268,"src":"4262:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":265,"name":"address","nodeType":"ElementaryTypeName","src":"4262:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4261:18:4"},"src":"4234:46:4"}],"scope":317,"src":"2190:2092:4","usedErrors":[227,232,241,246,251,258,263,268],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":270,"nodeType":"StructuredDocumentation","src":"4284:145:4","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"id":316,"linearizedBaseContracts":[316],"name":"IERC1155Errors","nameLocation":"4440:14:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":271,"nodeType":"StructuredDocumentation","src":"4461:361:4","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":281,"name":"ERC1155InsufficientBalance","nameLocation":"4833:26:4","nodeType":"ErrorDefinition","parameters":{"id":280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":273,"mutability":"mutable","name":"sender","nameLocation":"4868:6:4","nodeType":"VariableDeclaration","scope":281,"src":"4860:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":272,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":275,"mutability":"mutable","name":"balance","nameLocation":"4884:7:4","nodeType":"VariableDeclaration","scope":281,"src":"4876:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":274,"name":"uint256","nodeType":"ElementaryTypeName","src":"4876:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":277,"mutability":"mutable","name":"needed","nameLocation":"4901:6:4","nodeType":"VariableDeclaration","scope":281,"src":"4893:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":276,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":279,"mutability":"mutable","name":"tokenId","nameLocation":"4917:7:4","nodeType":"VariableDeclaration","scope":281,"src":"4909:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":278,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4859:66:4"},"src":"4827:99:4"},{"documentation":{"id":282,"nodeType":"StructuredDocumentation","src":"4932:152:4","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":286,"name":"ERC1155InvalidSender","nameLocation":"5095:20:4","nodeType":"ErrorDefinition","parameters":{"id":285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":284,"mutability":"mutable","name":"sender","nameLocation":"5124:6:4","nodeType":"VariableDeclaration","scope":286,"src":"5116:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":283,"name":"address","nodeType":"ElementaryTypeName","src":"5116:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5115:16:4"},"src":"5089:43:4"},{"documentation":{"id":287,"nodeType":"StructuredDocumentation","src":"5138:159:4","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":291,"name":"ERC1155InvalidReceiver","nameLocation":"5308:22:4","nodeType":"ErrorDefinition","parameters":{"id":290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":289,"mutability":"mutable","name":"receiver","nameLocation":"5339:8:4","nodeType":"VariableDeclaration","scope":291,"src":"5331:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":288,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5330:18:4"},"src":"5302:47:4"},{"documentation":{"id":292,"nodeType":"StructuredDocumentation","src":"5355:256:4","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":298,"name":"ERC1155MissingApprovalForAll","nameLocation":"5622:28:4","nodeType":"ErrorDefinition","parameters":{"id":297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":294,"mutability":"mutable","name":"operator","nameLocation":"5659:8:4","nodeType":"VariableDeclaration","scope":298,"src":"5651:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":293,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":296,"mutability":"mutable","name":"owner","nameLocation":"5677:5:4","nodeType":"VariableDeclaration","scope":298,"src":"5669:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":295,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:33:4"},"src":"5616:68:4"},{"documentation":{"id":299,"nodeType":"StructuredDocumentation","src":"5690:174:4","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":303,"name":"ERC1155InvalidApprover","nameLocation":"5875:22:4","nodeType":"ErrorDefinition","parameters":{"id":302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":301,"mutability":"mutable","name":"approver","nameLocation":"5906:8:4","nodeType":"VariableDeclaration","scope":303,"src":"5898:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":300,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5897:18:4"},"src":"5869:47:4"},{"documentation":{"id":304,"nodeType":"StructuredDocumentation","src":"5922:197:4","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":308,"name":"ERC1155InvalidOperator","nameLocation":"6130:22:4","nodeType":"ErrorDefinition","parameters":{"id":307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":306,"mutability":"mutable","name":"operator","nameLocation":"6161:8:4","nodeType":"VariableDeclaration","scope":308,"src":"6153:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":305,"name":"address","nodeType":"ElementaryTypeName","src":"6153:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6152:18:4"},"src":"6124:47:4"},{"documentation":{"id":309,"nodeType":"StructuredDocumentation","src":"6177:280:4","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":315,"name":"ERC1155InvalidArrayLength","nameLocation":"6468:25:4","nodeType":"ErrorDefinition","parameters":{"id":314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":311,"mutability":"mutable","name":"idsLength","nameLocation":"6502:9:4","nodeType":"VariableDeclaration","scope":315,"src":"6494:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":310,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":313,"mutability":"mutable","name":"valuesLength","nameLocation":"6521:12:4","nodeType":"VariableDeclaration","scope":315,"src":"6513:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":312,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6493:41:4"},"src":"6462:73:4"}],"scope":317,"src":"4430:2107:4","usedErrors":[281,286,291,298,303,308,315],"usedEvents":[]}],"src":"112:6426:4"},"id":4},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[2288],"ERC20":[831],"IERC20":[909],"IERC20Errors":[221],"IERC20Metadata":[935]},"id":832,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":318,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:5"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":320,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":832,"sourceUnit":910,"src":"131:36:5","symbolAliases":[{"foreign":{"id":319,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":909,"src":"139:6:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":322,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":832,"sourceUnit":936,"src":"168:63:5","symbolAliases":[{"foreign":{"id":321,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":935,"src":"176:14:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":324,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":832,"sourceUnit":2289,"src":"232:48:5","symbolAliases":[{"foreign":{"id":323,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2288,"src":"240:7:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":326,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":832,"sourceUnit":317,"src":"281:65:5","symbolAliases":[{"foreign":{"id":325,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":221,"src":"289:12:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":328,"name":"Context","nameLocations":["1133:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":2288,"src":"1133:7:5"},"id":329,"nodeType":"InheritanceSpecifier","src":"1133:7:5"},{"baseName":{"id":330,"name":"IERC20","nameLocations":["1142:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":909,"src":"1142:6:5"},"id":331,"nodeType":"InheritanceSpecifier","src":"1142:6:5"},{"baseName":{"id":332,"name":"IERC20Metadata","nameLocations":["1150:14:5"],"nodeType":"IdentifierPath","referencedDeclaration":935,"src":"1150:14:5"},"id":333,"nodeType":"InheritanceSpecifier","src":"1150:14:5"},{"baseName":{"id":334,"name":"IERC20Errors","nameLocations":["1166:12:5"],"nodeType":"IdentifierPath","referencedDeclaration":221,"src":"1166:12:5"},"id":335,"nodeType":"InheritanceSpecifier","src":"1166:12:5"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":327,"nodeType":"StructuredDocumentation","src":"348:757:5","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."},"fullyImplemented":true,"id":831,"linearizedBaseContracts":[831,221,935,909,2288],"name":"ERC20","nameLocation":"1124:5:5","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":339,"mutability":"mutable","name":"_balances","nameLocation":"1229:9:5","nodeType":"VariableDeclaration","scope":831,"src":"1185:53:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":338,"keyName":"account","keyNameLocation":"1201:7:5","keyType":{"id":336,"name":"address","nodeType":"ElementaryTypeName","src":"1193:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1185:35:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":337,"name":"uint256","nodeType":"ElementaryTypeName","src":"1212:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":345,"mutability":"mutable","name":"_allowances","nameLocation":"1317:11:5","nodeType":"VariableDeclaration","scope":831,"src":"1245:83:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":344,"keyName":"account","keyNameLocation":"1261:7:5","keyType":{"id":340,"name":"address","nodeType":"ElementaryTypeName","src":"1253:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1245:63:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":343,"keyName":"spender","keyNameLocation":"1288:7:5","keyType":{"id":341,"name":"address","nodeType":"ElementaryTypeName","src":"1280:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1272:35:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":342,"name":"uint256","nodeType":"ElementaryTypeName","src":"1299:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":347,"mutability":"mutable","name":"_totalSupply","nameLocation":"1351:12:5","nodeType":"VariableDeclaration","scope":831,"src":"1335:28:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":346,"name":"uint256","nodeType":"ElementaryTypeName","src":"1335:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":349,"mutability":"mutable","name":"_name","nameLocation":"1385:5:5","nodeType":"VariableDeclaration","scope":831,"src":"1370:20:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":348,"name":"string","nodeType":"ElementaryTypeName","src":"1370:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":351,"mutability":"mutable","name":"_symbol","nameLocation":"1411:7:5","nodeType":"VariableDeclaration","scope":831,"src":"1396:22:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":350,"name":"string","nodeType":"ElementaryTypeName","src":"1396:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":367,"nodeType":"Block","src":"1657:57:5","statements":[{"expression":{"id":361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":359,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"1667:5:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":360,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":354,"src":"1675:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1667:13:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":362,"nodeType":"ExpressionStatement","src":"1667:13:5"},{"expression":{"id":365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":363,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"1690:7:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":364,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":356,"src":"1700:7:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1690:17:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":366,"nodeType":"ExpressionStatement","src":"1690:17:5"}]},"documentation":{"id":352,"nodeType":"StructuredDocumentation","src":"1425:171:5","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":368,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":354,"mutability":"mutable","name":"name_","nameLocation":"1627:5:5","nodeType":"VariableDeclaration","scope":368,"src":"1613:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":353,"name":"string","nodeType":"ElementaryTypeName","src":"1613:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":356,"mutability":"mutable","name":"symbol_","nameLocation":"1648:7:5","nodeType":"VariableDeclaration","scope":368,"src":"1634:21:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":355,"name":"string","nodeType":"ElementaryTypeName","src":"1634:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1612:44:5"},"returnParameters":{"id":358,"nodeType":"ParameterList","parameters":[],"src":"1657:0:5"},"scope":831,"src":"1601:113:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[922],"body":{"id":376,"nodeType":"Block","src":"1839:29:5","statements":[{"expression":{"id":374,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"1856:5:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":373,"id":375,"nodeType":"Return","src":"1849:12:5"}]},"documentation":{"id":369,"nodeType":"StructuredDocumentation","src":"1720:54:5","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":377,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"1788:4:5","nodeType":"FunctionDefinition","parameters":{"id":370,"nodeType":"ParameterList","parameters":[],"src":"1792:2:5"},"returnParameters":{"id":373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":372,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":377,"src":"1824:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":371,"name":"string","nodeType":"ElementaryTypeName","src":"1824:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1823:15:5"},"scope":831,"src":"1779:89:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[928],"body":{"id":385,"nodeType":"Block","src":"2043:31:5","statements":[{"expression":{"id":383,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"2060:7:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":382,"id":384,"nodeType":"Return","src":"2053:14:5"}]},"documentation":{"id":378,"nodeType":"StructuredDocumentation","src":"1874:102:5","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":386,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"1990:6:5","nodeType":"FunctionDefinition","parameters":{"id":379,"nodeType":"ParameterList","parameters":[],"src":"1996:2:5"},"returnParameters":{"id":382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":381,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":386,"src":"2028:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":380,"name":"string","nodeType":"ElementaryTypeName","src":"2028:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2027:15:5"},"scope":831,"src":"1981:93:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[934],"body":{"id":394,"nodeType":"Block","src":"2763:26:5","statements":[{"expression":{"hexValue":"3138","id":392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2780:2:5","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":391,"id":393,"nodeType":"Return","src":"2773:9:5"}]},"documentation":{"id":387,"nodeType":"StructuredDocumentation","src":"2080:622:5","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":395,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"2716:8:5","nodeType":"FunctionDefinition","parameters":{"id":388,"nodeType":"ParameterList","parameters":[],"src":"2724:2:5"},"returnParameters":{"id":391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":390,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":395,"src":"2756:5:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":389,"name":"uint8","nodeType":"ElementaryTypeName","src":"2756:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2755:7:5"},"scope":831,"src":"2707:82:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[858],"body":{"id":403,"nodeType":"Block","src":"2910:36:5","statements":[{"expression":{"id":401,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":347,"src":"2927:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":400,"id":402,"nodeType":"Return","src":"2920:19:5"}]},"documentation":{"id":396,"nodeType":"StructuredDocumentation","src":"2795:49:5","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":404,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"2858:11:5","nodeType":"FunctionDefinition","parameters":{"id":397,"nodeType":"ParameterList","parameters":[],"src":"2869:2:5"},"returnParameters":{"id":400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":399,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":404,"src":"2901:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":398,"name":"uint256","nodeType":"ElementaryTypeName","src":"2901:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2900:9:5"},"scope":831,"src":"2849:97:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[866],"body":{"id":416,"nodeType":"Block","src":"3078:42:5","statements":[{"expression":{"baseExpression":{"id":412,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"3095:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":414,"indexExpression":{"id":413,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":407,"src":"3105:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3095:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":411,"id":415,"nodeType":"Return","src":"3088:25:5"}]},"documentation":{"id":405,"nodeType":"StructuredDocumentation","src":"2952:47:5","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":417,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3013:9:5","nodeType":"FunctionDefinition","parameters":{"id":408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":407,"mutability":"mutable","name":"account","nameLocation":"3031:7:5","nodeType":"VariableDeclaration","scope":417,"src":"3023:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":406,"name":"address","nodeType":"ElementaryTypeName","src":"3023:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3022:17:5"},"returnParameters":{"id":411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":410,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":417,"src":"3069:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":409,"name":"uint256","nodeType":"ElementaryTypeName","src":"3069:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3068:9:5"},"scope":831,"src":"3004:116:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[876],"body":{"id":440,"nodeType":"Block","src":"3390:103:5","statements":[{"assignments":[428],"declarations":[{"constant":false,"id":428,"mutability":"mutable","name":"owner","nameLocation":"3408:5:5","nodeType":"VariableDeclaration","scope":440,"src":"3400:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":427,"name":"address","nodeType":"ElementaryTypeName","src":"3400:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":431,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":429,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2270,"src":"3416:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3416:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3400:28:5"},{"expression":{"arguments":[{"id":433,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":428,"src":"3448:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":434,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":420,"src":"3455:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":435,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":422,"src":"3459:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":432,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"3438:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3438:27:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":437,"nodeType":"ExpressionStatement","src":"3438:27:5"},{"expression":{"hexValue":"74727565","id":438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3482:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":426,"id":439,"nodeType":"Return","src":"3475:11:5"}]},"documentation":{"id":418,"nodeType":"StructuredDocumentation","src":"3126:184:5","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":441,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3324:8:5","nodeType":"FunctionDefinition","parameters":{"id":423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":420,"mutability":"mutable","name":"to","nameLocation":"3341:2:5","nodeType":"VariableDeclaration","scope":441,"src":"3333:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":419,"name":"address","nodeType":"ElementaryTypeName","src":"3333:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":422,"mutability":"mutable","name":"value","nameLocation":"3353:5:5","nodeType":"VariableDeclaration","scope":441,"src":"3345:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":421,"name":"uint256","nodeType":"ElementaryTypeName","src":"3345:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3332:27:5"},"returnParameters":{"id":426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":425,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":441,"src":"3384:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":424,"name":"bool","nodeType":"ElementaryTypeName","src":"3384:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3383:6:5"},"scope":831,"src":"3315:178:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[886],"body":{"id":457,"nodeType":"Block","src":"3640:51:5","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":451,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":345,"src":"3657:11:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":453,"indexExpression":{"id":452,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"3669:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3657:18:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":455,"indexExpression":{"id":454,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"3676:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3657:27:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":450,"id":456,"nodeType":"Return","src":"3650:34:5"}]},"documentation":{"id":442,"nodeType":"StructuredDocumentation","src":"3499:47:5","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":458,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3560:9:5","nodeType":"FunctionDefinition","parameters":{"id":447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":444,"mutability":"mutable","name":"owner","nameLocation":"3578:5:5","nodeType":"VariableDeclaration","scope":458,"src":"3570:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":443,"name":"address","nodeType":"ElementaryTypeName","src":"3570:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":446,"mutability":"mutable","name":"spender","nameLocation":"3593:7:5","nodeType":"VariableDeclaration","scope":458,"src":"3585:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":445,"name":"address","nodeType":"ElementaryTypeName","src":"3585:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3569:32:5"},"returnParameters":{"id":450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":449,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":458,"src":"3631:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":448,"name":"uint256","nodeType":"ElementaryTypeName","src":"3631:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3630:9:5"},"scope":831,"src":"3551:140:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[896],"body":{"id":481,"nodeType":"Block","src":"4077:107:5","statements":[{"assignments":[469],"declarations":[{"constant":false,"id":469,"mutability":"mutable","name":"owner","nameLocation":"4095:5:5","nodeType":"VariableDeclaration","scope":481,"src":"4087:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":468,"name":"address","nodeType":"ElementaryTypeName","src":"4087:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":472,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":470,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2270,"src":"4103:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4103:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4087:28:5"},{"expression":{"arguments":[{"id":474,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":469,"src":"4134:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":475,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"4141:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":476,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":463,"src":"4150:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":473,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[722,782],"referencedDeclaration":722,"src":"4125:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4125:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":478,"nodeType":"ExpressionStatement","src":"4125:31:5"},{"expression":{"hexValue":"74727565","id":479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4173:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":467,"id":480,"nodeType":"Return","src":"4166:11:5"}]},"documentation":{"id":459,"nodeType":"StructuredDocumentation","src":"3697:296:5","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":482,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4007:7:5","nodeType":"FunctionDefinition","parameters":{"id":464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":461,"mutability":"mutable","name":"spender","nameLocation":"4023:7:5","nodeType":"VariableDeclaration","scope":482,"src":"4015:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":460,"name":"address","nodeType":"ElementaryTypeName","src":"4015:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":463,"mutability":"mutable","name":"value","nameLocation":"4040:5:5","nodeType":"VariableDeclaration","scope":482,"src":"4032:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":462,"name":"uint256","nodeType":"ElementaryTypeName","src":"4032:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4014:32:5"},"returnParameters":{"id":467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":466,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":482,"src":"4071:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":465,"name":"bool","nodeType":"ElementaryTypeName","src":"4071:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4070:6:5"},"scope":831,"src":"3998:186:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[908],"body":{"id":513,"nodeType":"Block","src":"4869:151:5","statements":[{"assignments":[495],"declarations":[{"constant":false,"id":495,"mutability":"mutable","name":"spender","nameLocation":"4887:7:5","nodeType":"VariableDeclaration","scope":513,"src":"4879:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":494,"name":"address","nodeType":"ElementaryTypeName","src":"4879:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":498,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":496,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2270,"src":"4897:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4897:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4879:30:5"},{"expression":{"arguments":[{"id":500,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"4935:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":501,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":495,"src":"4941:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":502,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"4950:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":499,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"4919:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4919:37:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":504,"nodeType":"ExpressionStatement","src":"4919:37:5"},{"expression":{"arguments":[{"id":506,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"4976:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":507,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":487,"src":"4982:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":508,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"4986:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":505,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"4966:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4966:26:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":510,"nodeType":"ExpressionStatement","src":"4966:26:5"},{"expression":{"hexValue":"74727565","id":511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5009:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":493,"id":512,"nodeType":"Return","src":"5002:11:5"}]},"documentation":{"id":483,"nodeType":"StructuredDocumentation","src":"4190:581:5","text":" @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":514,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4785:12:5","nodeType":"FunctionDefinition","parameters":{"id":490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":485,"mutability":"mutable","name":"from","nameLocation":"4806:4:5","nodeType":"VariableDeclaration","scope":514,"src":"4798:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":484,"name":"address","nodeType":"ElementaryTypeName","src":"4798:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":487,"mutability":"mutable","name":"to","nameLocation":"4820:2:5","nodeType":"VariableDeclaration","scope":514,"src":"4812:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":486,"name":"address","nodeType":"ElementaryTypeName","src":"4812:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":489,"mutability":"mutable","name":"value","nameLocation":"4832:5:5","nodeType":"VariableDeclaration","scope":514,"src":"4824:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":488,"name":"uint256","nodeType":"ElementaryTypeName","src":"4824:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4797:41:5"},"returnParameters":{"id":493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":492,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":514,"src":"4863:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":491,"name":"bool","nodeType":"ElementaryTypeName","src":"4863:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4862:6:5"},"scope":831,"src":"4776:244:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":560,"nodeType":"Block","src":"5462:231:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":524,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":517,"src":"5476:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5492:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":526,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5484:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":525,"name":"address","nodeType":"ElementaryTypeName","src":"5484:7:5","typeDescriptions":{}}},"id":528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5484:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5476:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":538,"nodeType":"IfStatement","src":"5472:86:5","trueBody":{"id":537,"nodeType":"Block","src":"5496:62:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5544:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":532,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5536:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":531,"name":"address","nodeType":"ElementaryTypeName","src":"5536:7:5","typeDescriptions":{}}},"id":534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5536:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":530,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":196,"src":"5517:18:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5517:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":536,"nodeType":"RevertStatement","src":"5510:37:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":539,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"5571:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5585:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":541,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5577:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":540,"name":"address","nodeType":"ElementaryTypeName","src":"5577:7:5","typeDescriptions":{}}},"id":543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5577:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5571:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":553,"nodeType":"IfStatement","src":"5567:86:5","trueBody":{"id":552,"nodeType":"Block","src":"5589:64:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5639:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":547,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5631:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":546,"name":"address","nodeType":"ElementaryTypeName","src":"5631:7:5","typeDescriptions":{}}},"id":549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5631:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":545,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":201,"src":"5610:20:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5610:32:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":551,"nodeType":"RevertStatement","src":"5603:39:5"}]}},{"expression":{"arguments":[{"id":555,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":517,"src":"5670:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":556,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"5676:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":557,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":521,"src":"5680:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":554,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":638,"src":"5662:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5662:24:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":559,"nodeType":"ExpressionStatement","src":"5662:24:5"}]},"documentation":{"id":515,"nodeType":"StructuredDocumentation","src":"5026:362:5","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":561,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"5402:9:5","nodeType":"FunctionDefinition","parameters":{"id":522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":517,"mutability":"mutable","name":"from","nameLocation":"5420:4:5","nodeType":"VariableDeclaration","scope":561,"src":"5412:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":516,"name":"address","nodeType":"ElementaryTypeName","src":"5412:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":519,"mutability":"mutable","name":"to","nameLocation":"5434:2:5","nodeType":"VariableDeclaration","scope":561,"src":"5426:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":518,"name":"address","nodeType":"ElementaryTypeName","src":"5426:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":521,"mutability":"mutable","name":"value","nameLocation":"5446:5:5","nodeType":"VariableDeclaration","scope":561,"src":"5438:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":520,"name":"uint256","nodeType":"ElementaryTypeName","src":"5438:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5411:41:5"},"returnParameters":{"id":523,"nodeType":"ParameterList","parameters":[],"src":"5462:0:5"},"scope":831,"src":"5393:300:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":637,"nodeType":"Block","src":"6083:1032:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":571,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":564,"src":"6097:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6113:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":573,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6105:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":572,"name":"address","nodeType":"ElementaryTypeName","src":"6105:7:5","typeDescriptions":{}}},"id":575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6105:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6097:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":608,"nodeType":"Block","src":"6271:362:5","statements":[{"assignments":[583],"declarations":[{"constant":false,"id":583,"mutability":"mutable","name":"fromBalance","nameLocation":"6293:11:5","nodeType":"VariableDeclaration","scope":608,"src":"6285:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":582,"name":"uint256","nodeType":"ElementaryTypeName","src":"6285:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":587,"initialValue":{"baseExpression":{"id":584,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"6307:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":586,"indexExpression":{"id":585,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":564,"src":"6317:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6307:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6285:37:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":588,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":583,"src":"6340:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":589,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"6354:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6340:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":598,"nodeType":"IfStatement","src":"6336:115:5","trueBody":{"id":597,"nodeType":"Block","src":"6361:90:5","statements":[{"errorCall":{"arguments":[{"id":592,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":564,"src":"6411:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":593,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":583,"src":"6417:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":594,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"6430:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":591,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":191,"src":"6386:24:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":595,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6386:50:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":596,"nodeType":"RevertStatement","src":"6379:57:5"}]}},{"id":607,"nodeType":"UncheckedBlock","src":"6464:159:5","statements":[{"expression":{"id":605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":599,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"6571:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":601,"indexExpression":{"id":600,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":564,"src":"6581:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6571:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":602,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":583,"src":"6589:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":603,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"6603:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6589:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6571:37:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":606,"nodeType":"ExpressionStatement","src":"6571:37:5"}]}]},"id":609,"nodeType":"IfStatement","src":"6093:540:5","trueBody":{"id":581,"nodeType":"Block","src":"6117:148:5","statements":[{"expression":{"id":579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":577,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":347,"src":"6233:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":578,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"6249:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6233:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":580,"nodeType":"ExpressionStatement","src":"6233:21:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":610,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":566,"src":"6647:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6661:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":612,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6653:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":611,"name":"address","nodeType":"ElementaryTypeName","src":"6653:7:5","typeDescriptions":{}}},"id":614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6653:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6647:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":629,"nodeType":"Block","src":"6862:206:5","statements":[{"id":628,"nodeType":"UncheckedBlock","src":"6876:182:5","statements":[{"expression":{"id":626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":622,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"7021:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":624,"indexExpression":{"id":623,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":566,"src":"7031:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7021:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":625,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"7038:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7021:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":627,"nodeType":"ExpressionStatement","src":"7021:22:5"}]}]},"id":630,"nodeType":"IfStatement","src":"6643:425:5","trueBody":{"id":621,"nodeType":"Block","src":"6665:191:5","statements":[{"id":620,"nodeType":"UncheckedBlock","src":"6679:167:5","statements":[{"expression":{"id":618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":616,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":347,"src":"6810:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":617,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"6826:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6810:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":619,"nodeType":"ExpressionStatement","src":"6810:21:5"}]}]}},{"eventCall":{"arguments":[{"id":632,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":564,"src":"7092:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":633,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":566,"src":"7098:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":634,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"7102:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":631,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":843,"src":"7083:8:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7083:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":636,"nodeType":"EmitStatement","src":"7078:30:5"}]},"documentation":{"id":562,"nodeType":"StructuredDocumentation","src":"5699:304:5","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":638,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"6017:7:5","nodeType":"FunctionDefinition","parameters":{"id":569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":564,"mutability":"mutable","name":"from","nameLocation":"6033:4:5","nodeType":"VariableDeclaration","scope":638,"src":"6025:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":563,"name":"address","nodeType":"ElementaryTypeName","src":"6025:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":566,"mutability":"mutable","name":"to","nameLocation":"6047:2:5","nodeType":"VariableDeclaration","scope":638,"src":"6039:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":565,"name":"address","nodeType":"ElementaryTypeName","src":"6039:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":568,"mutability":"mutable","name":"value","nameLocation":"6059:5:5","nodeType":"VariableDeclaration","scope":638,"src":"6051:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":567,"name":"uint256","nodeType":"ElementaryTypeName","src":"6051:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6024:41:5"},"returnParameters":{"id":570,"nodeType":"ParameterList","parameters":[],"src":"6083:0:5"},"scope":831,"src":"6008:1107:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":670,"nodeType":"Block","src":"7514:152:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":646,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":641,"src":"7528:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7547:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":648,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7539:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":647,"name":"address","nodeType":"ElementaryTypeName","src":"7539:7:5","typeDescriptions":{}}},"id":650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7539:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7528:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":660,"nodeType":"IfStatement","src":"7524:91:5","trueBody":{"id":659,"nodeType":"Block","src":"7551:64:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7601:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":654,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7593:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":653,"name":"address","nodeType":"ElementaryTypeName","src":"7593:7:5","typeDescriptions":{}}},"id":656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7593:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":652,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":201,"src":"7572:20:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7572:32:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":658,"nodeType":"RevertStatement","src":"7565:39:5"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7640:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":663,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7632:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":662,"name":"address","nodeType":"ElementaryTypeName","src":"7632:7:5","typeDescriptions":{}}},"id":665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7632:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":666,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":641,"src":"7644:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":667,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"7653:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":661,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":638,"src":"7624:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7624:35:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":669,"nodeType":"ExpressionStatement","src":"7624:35:5"}]},"documentation":{"id":639,"nodeType":"StructuredDocumentation","src":"7121:332:5","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":671,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7467:5:5","nodeType":"FunctionDefinition","parameters":{"id":644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":641,"mutability":"mutable","name":"account","nameLocation":"7481:7:5","nodeType":"VariableDeclaration","scope":671,"src":"7473:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":640,"name":"address","nodeType":"ElementaryTypeName","src":"7473:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":643,"mutability":"mutable","name":"value","nameLocation":"7498:5:5","nodeType":"VariableDeclaration","scope":671,"src":"7490:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":642,"name":"uint256","nodeType":"ElementaryTypeName","src":"7490:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7472:32:5"},"returnParameters":{"id":645,"nodeType":"ParameterList","parameters":[],"src":"7514:0:5"},"scope":831,"src":"7458:208:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":703,"nodeType":"Block","src":"8040:150:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":679,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":674,"src":"8054:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8073:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":681,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8065:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":680,"name":"address","nodeType":"ElementaryTypeName","src":"8065:7:5","typeDescriptions":{}}},"id":683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8065:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8054:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":693,"nodeType":"IfStatement","src":"8050:89:5","trueBody":{"id":692,"nodeType":"Block","src":"8077:62:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8125:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":687,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8117:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":686,"name":"address","nodeType":"ElementaryTypeName","src":"8117:7:5","typeDescriptions":{}}},"id":689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8117:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":685,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":196,"src":"8098:18:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8098:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":691,"nodeType":"RevertStatement","src":"8091:37:5"}]}},{"expression":{"arguments":[{"id":695,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":674,"src":"8156:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8173:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":697,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8165:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":696,"name":"address","nodeType":"ElementaryTypeName","src":"8165:7:5","typeDescriptions":{}}},"id":699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8165:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":700,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":676,"src":"8177:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":694,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":638,"src":"8148:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8148:35:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":702,"nodeType":"ExpressionStatement","src":"8148:35:5"}]},"documentation":{"id":672,"nodeType":"StructuredDocumentation","src":"7672:307:5","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":704,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"7993:5:5","nodeType":"FunctionDefinition","parameters":{"id":677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":674,"mutability":"mutable","name":"account","nameLocation":"8007:7:5","nodeType":"VariableDeclaration","scope":704,"src":"7999:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":673,"name":"address","nodeType":"ElementaryTypeName","src":"7999:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":676,"mutability":"mutable","name":"value","nameLocation":"8024:5:5","nodeType":"VariableDeclaration","scope":704,"src":"8016:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":675,"name":"uint256","nodeType":"ElementaryTypeName","src":"8016:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7998:32:5"},"returnParameters":{"id":678,"nodeType":"ParameterList","parameters":[],"src":"8040:0:5"},"scope":831,"src":"7984:206:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":721,"nodeType":"Block","src":"8800:54:5","statements":[{"expression":{"arguments":[{"id":715,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":707,"src":"8819:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":716,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":709,"src":"8826:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":717,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":711,"src":"8835:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8842:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":714,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[722,782],"referencedDeclaration":782,"src":"8810:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8810:37:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":720,"nodeType":"ExpressionStatement","src":"8810:37:5"}]},"documentation":{"id":705,"nodeType":"StructuredDocumentation","src":"8196:525:5","text":" @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":722,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"8735:8:5","nodeType":"FunctionDefinition","parameters":{"id":712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":707,"mutability":"mutable","name":"owner","nameLocation":"8752:5:5","nodeType":"VariableDeclaration","scope":722,"src":"8744:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":706,"name":"address","nodeType":"ElementaryTypeName","src":"8744:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":709,"mutability":"mutable","name":"spender","nameLocation":"8767:7:5","nodeType":"VariableDeclaration","scope":722,"src":"8759:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":708,"name":"address","nodeType":"ElementaryTypeName","src":"8759:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":711,"mutability":"mutable","name":"value","nameLocation":"8784:5:5","nodeType":"VariableDeclaration","scope":722,"src":"8776:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":710,"name":"uint256","nodeType":"ElementaryTypeName","src":"8776:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8743:47:5"},"returnParameters":{"id":713,"nodeType":"ParameterList","parameters":[],"src":"8800:0:5"},"scope":831,"src":"8726:128:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":781,"nodeType":"Block","src":"9799:334:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":734,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":725,"src":"9813:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9830:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":736,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9822:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":735,"name":"address","nodeType":"ElementaryTypeName","src":"9822:7:5","typeDescriptions":{}}},"id":738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9822:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9813:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":748,"nodeType":"IfStatement","src":"9809:89:5","trueBody":{"id":747,"nodeType":"Block","src":"9834:64:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9884:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":742,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9876:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":741,"name":"address","nodeType":"ElementaryTypeName","src":"9876:7:5","typeDescriptions":{}}},"id":744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9876:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":740,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":215,"src":"9855:20:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9855:32:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":746,"nodeType":"RevertStatement","src":"9848:39:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":749,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"9911:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9930:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":751,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9922:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":750,"name":"address","nodeType":"ElementaryTypeName","src":"9922:7:5","typeDescriptions":{}}},"id":753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9922:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9911:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":763,"nodeType":"IfStatement","src":"9907:90:5","trueBody":{"id":762,"nodeType":"Block","src":"9934:63:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9983:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":757,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9975:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":756,"name":"address","nodeType":"ElementaryTypeName","src":"9975:7:5","typeDescriptions":{}}},"id":759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9975:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":755,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"9955:19:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9955:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":761,"nodeType":"RevertStatement","src":"9948:38:5"}]}},{"expression":{"id":770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":764,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":345,"src":"10006:11:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":767,"indexExpression":{"id":765,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":725,"src":"10018:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10006:18:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":768,"indexExpression":{"id":766,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"10025:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10006:27:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":769,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"10036:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10006:35:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":771,"nodeType":"ExpressionStatement","src":"10006:35:5"},{"condition":{"id":772,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":731,"src":"10055:9:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":780,"nodeType":"IfStatement","src":"10051:76:5","trueBody":{"id":779,"nodeType":"Block","src":"10066:61:5","statements":[{"eventCall":{"arguments":[{"id":774,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":725,"src":"10094:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":775,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"10101:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":776,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"10110:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":773,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":852,"src":"10085:8:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10085:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":778,"nodeType":"EmitStatement","src":"10080:36:5"}]}}]},"documentation":{"id":723,"nodeType":"StructuredDocumentation","src":"8860:836:5","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":782,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"9710:8:5","nodeType":"FunctionDefinition","parameters":{"id":732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":725,"mutability":"mutable","name":"owner","nameLocation":"9727:5:5","nodeType":"VariableDeclaration","scope":782,"src":"9719:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":724,"name":"address","nodeType":"ElementaryTypeName","src":"9719:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":727,"mutability":"mutable","name":"spender","nameLocation":"9742:7:5","nodeType":"VariableDeclaration","scope":782,"src":"9734:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":726,"name":"address","nodeType":"ElementaryTypeName","src":"9734:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":729,"mutability":"mutable","name":"value","nameLocation":"9759:5:5","nodeType":"VariableDeclaration","scope":782,"src":"9751:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":728,"name":"uint256","nodeType":"ElementaryTypeName","src":"9751:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":731,"mutability":"mutable","name":"emitEvent","nameLocation":"9771:9:5","nodeType":"VariableDeclaration","scope":782,"src":"9766:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":730,"name":"bool","nodeType":"ElementaryTypeName","src":"9766:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9718:63:5"},"returnParameters":{"id":733,"nodeType":"ParameterList","parameters":[],"src":"9799:0:5"},"scope":831,"src":"9701:432:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":829,"nodeType":"Block","src":"10504:387:5","statements":[{"assignments":[793],"declarations":[{"constant":false,"id":793,"mutability":"mutable","name":"currentAllowance","nameLocation":"10522:16:5","nodeType":"VariableDeclaration","scope":829,"src":"10514:24:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":792,"name":"uint256","nodeType":"ElementaryTypeName","src":"10514:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":798,"initialValue":{"arguments":[{"id":795,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":785,"src":"10551:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":796,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":787,"src":"10558:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":794,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":458,"src":"10541:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10541:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10514:52:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":799,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":793,"src":"10580:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"id":802,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10604:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":801,"name":"uint256","nodeType":"ElementaryTypeName","src":"10604:7:5","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":800,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10599:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10599:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":804,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10613:3:5","memberName":"max","nodeType":"MemberAccess","src":"10599:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10580:36:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":828,"nodeType":"IfStatement","src":"10576:309:5","trueBody":{"id":827,"nodeType":"Block","src":"10618:267:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":806,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":793,"src":"10636:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":807,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":789,"src":"10655:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10636:24:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":816,"nodeType":"IfStatement","src":"10632:130:5","trueBody":{"id":815,"nodeType":"Block","src":"10662:100:5","statements":[{"errorCall":{"arguments":[{"id":810,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":787,"src":"10714:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":811,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":793,"src":"10723:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":812,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":789,"src":"10741:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":809,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":210,"src":"10687:26:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10687:60:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":814,"nodeType":"RevertStatement","src":"10680:67:5"}]}},{"id":826,"nodeType":"UncheckedBlock","src":"10775:100:5","statements":[{"expression":{"arguments":[{"id":818,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":785,"src":"10812:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":819,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":787,"src":"10819:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":820,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":793,"src":"10828:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":821,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":789,"src":"10847:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10828:24:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10854:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":817,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[722,782],"referencedDeclaration":782,"src":"10803:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10803:57:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":825,"nodeType":"ExpressionStatement","src":"10803:57:5"}]}]}}]},"documentation":{"id":783,"nodeType":"StructuredDocumentation","src":"10139:271:5","text":" @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":830,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"10424:15:5","nodeType":"FunctionDefinition","parameters":{"id":790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":785,"mutability":"mutable","name":"owner","nameLocation":"10448:5:5","nodeType":"VariableDeclaration","scope":830,"src":"10440:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":784,"name":"address","nodeType":"ElementaryTypeName","src":"10440:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":787,"mutability":"mutable","name":"spender","nameLocation":"10463:7:5","nodeType":"VariableDeclaration","scope":830,"src":"10455:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":786,"name":"address","nodeType":"ElementaryTypeName","src":"10455:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":789,"mutability":"mutable","name":"value","nameLocation":"10480:5:5","nodeType":"VariableDeclaration","scope":830,"src":"10472:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":788,"name":"uint256","nodeType":"ElementaryTypeName","src":"10472:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10439:47:5"},"returnParameters":{"id":791,"nodeType":"ParameterList","parameters":[],"src":"10504:0:5"},"scope":831,"src":"10415:476:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":832,"src":"1106:9787:5","usedErrors":[191,196,201,210,215,220],"usedEvents":[843,852]}],"src":"105:10789:5"},"id":5},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[909]},"id":910,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":833,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:6"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":834,"nodeType":"StructuredDocumentation","src":"132:71:6","text":" @dev Interface of the ERC-20 standard as defined in the ERC."},"fullyImplemented":false,"id":909,"linearizedBaseContracts":[909],"name":"IERC20","nameLocation":"214:6:6","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":835,"nodeType":"StructuredDocumentation","src":"227:158:6","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":843,"name":"Transfer","nameLocation":"396:8:6","nodeType":"EventDefinition","parameters":{"id":842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":837,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"421:4:6","nodeType":"VariableDeclaration","scope":843,"src":"405:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":836,"name":"address","nodeType":"ElementaryTypeName","src":"405:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":839,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"443:2:6","nodeType":"VariableDeclaration","scope":843,"src":"427:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":838,"name":"address","nodeType":"ElementaryTypeName","src":"427:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":841,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"455:5:6","nodeType":"VariableDeclaration","scope":843,"src":"447:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":840,"name":"uint256","nodeType":"ElementaryTypeName","src":"447:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"404:57:6"},"src":"390:72:6"},{"anonymous":false,"documentation":{"id":844,"nodeType":"StructuredDocumentation","src":"468:148:6","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":852,"name":"Approval","nameLocation":"627:8:6","nodeType":"EventDefinition","parameters":{"id":851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":846,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"652:5:6","nodeType":"VariableDeclaration","scope":852,"src":"636:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":845,"name":"address","nodeType":"ElementaryTypeName","src":"636:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":848,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"675:7:6","nodeType":"VariableDeclaration","scope":852,"src":"659:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":847,"name":"address","nodeType":"ElementaryTypeName","src":"659:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":850,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"692:5:6","nodeType":"VariableDeclaration","scope":852,"src":"684:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":849,"name":"uint256","nodeType":"ElementaryTypeName","src":"684:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"635:63:6"},"src":"621:78:6"},{"documentation":{"id":853,"nodeType":"StructuredDocumentation","src":"705:65:6","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":858,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"784:11:6","nodeType":"FunctionDefinition","parameters":{"id":854,"nodeType":"ParameterList","parameters":[],"src":"795:2:6"},"returnParameters":{"id":857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":856,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":858,"src":"821:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":855,"name":"uint256","nodeType":"ElementaryTypeName","src":"821:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"820:9:6"},"scope":909,"src":"775:55:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":859,"nodeType":"StructuredDocumentation","src":"836:71:6","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":866,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:6","nodeType":"FunctionDefinition","parameters":{"id":862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":861,"mutability":"mutable","name":"account","nameLocation":"939:7:6","nodeType":"VariableDeclaration","scope":866,"src":"931:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":860,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:6"},"returnParameters":{"id":865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":864,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":866,"src":"971:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":863,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:6"},"scope":909,"src":"912:68:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":867,"nodeType":"StructuredDocumentation","src":"986:213:6","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":876,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1213:8:6","nodeType":"FunctionDefinition","parameters":{"id":872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":869,"mutability":"mutable","name":"to","nameLocation":"1230:2:6","nodeType":"VariableDeclaration","scope":876,"src":"1222:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":868,"name":"address","nodeType":"ElementaryTypeName","src":"1222:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":871,"mutability":"mutable","name":"value","nameLocation":"1242:5:6","nodeType":"VariableDeclaration","scope":876,"src":"1234:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":870,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1221:27:6"},"returnParameters":{"id":875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":874,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":876,"src":"1267:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":873,"name":"bool","nodeType":"ElementaryTypeName","src":"1267:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1266:6:6"},"scope":909,"src":"1204:69:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":877,"nodeType":"StructuredDocumentation","src":"1279:264:6","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":886,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1557:9:6","nodeType":"FunctionDefinition","parameters":{"id":882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":879,"mutability":"mutable","name":"owner","nameLocation":"1575:5:6","nodeType":"VariableDeclaration","scope":886,"src":"1567:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":878,"name":"address","nodeType":"ElementaryTypeName","src":"1567:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":881,"mutability":"mutable","name":"spender","nameLocation":"1590:7:6","nodeType":"VariableDeclaration","scope":886,"src":"1582:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":880,"name":"address","nodeType":"ElementaryTypeName","src":"1582:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1566:32:6"},"returnParameters":{"id":885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":884,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":886,"src":"1622:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":883,"name":"uint256","nodeType":"ElementaryTypeName","src":"1622:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1621:9:6"},"scope":909,"src":"1548:83:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":887,"nodeType":"StructuredDocumentation","src":"1637:667:6","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":896,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2318:7:6","nodeType":"FunctionDefinition","parameters":{"id":892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":889,"mutability":"mutable","name":"spender","nameLocation":"2334:7:6","nodeType":"VariableDeclaration","scope":896,"src":"2326:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":888,"name":"address","nodeType":"ElementaryTypeName","src":"2326:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":891,"mutability":"mutable","name":"value","nameLocation":"2351:5:6","nodeType":"VariableDeclaration","scope":896,"src":"2343:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":890,"name":"uint256","nodeType":"ElementaryTypeName","src":"2343:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2325:32:6"},"returnParameters":{"id":895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":894,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":896,"src":"2376:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":893,"name":"bool","nodeType":"ElementaryTypeName","src":"2376:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2375:6:6"},"scope":909,"src":"2309:73:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":897,"nodeType":"StructuredDocumentation","src":"2388:297:6","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":908,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2699:12:6","nodeType":"FunctionDefinition","parameters":{"id":904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":899,"mutability":"mutable","name":"from","nameLocation":"2720:4:6","nodeType":"VariableDeclaration","scope":908,"src":"2712:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":898,"name":"address","nodeType":"ElementaryTypeName","src":"2712:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":901,"mutability":"mutable","name":"to","nameLocation":"2734:2:6","nodeType":"VariableDeclaration","scope":908,"src":"2726:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":900,"name":"address","nodeType":"ElementaryTypeName","src":"2726:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":903,"mutability":"mutable","name":"value","nameLocation":"2746:5:6","nodeType":"VariableDeclaration","scope":908,"src":"2738:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":902,"name":"uint256","nodeType":"ElementaryTypeName","src":"2738:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2711:41:6"},"returnParameters":{"id":907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":906,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":908,"src":"2771:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":905,"name":"bool","nodeType":"ElementaryTypeName","src":"2771:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2770:6:6"},"scope":909,"src":"2690:87:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":910,"src":"204:2575:6","usedErrors":[],"usedEvents":[843,852]}],"src":"106:2674:6"},"id":6},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[909],"IERC20Metadata":[935]},"id":936,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":911,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"125:24:7"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":913,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":936,"sourceUnit":910,"src":"151:37:7","symbolAliases":[{"foreign":{"id":912,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":909,"src":"159:6:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":915,"name":"IERC20","nameLocations":["306:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":909,"src":"306:6:7"},"id":916,"nodeType":"InheritanceSpecifier","src":"306:6:7"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":914,"nodeType":"StructuredDocumentation","src":"190:87:7","text":" @dev Interface for the optional metadata functions from the ERC-20 standard."},"fullyImplemented":false,"id":935,"linearizedBaseContracts":[935,909],"name":"IERC20Metadata","nameLocation":"288:14:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":917,"nodeType":"StructuredDocumentation","src":"319:54:7","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":922,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"387:4:7","nodeType":"FunctionDefinition","parameters":{"id":918,"nodeType":"ParameterList","parameters":[],"src":"391:2:7"},"returnParameters":{"id":921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":920,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":922,"src":"417:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":919,"name":"string","nodeType":"ElementaryTypeName","src":"417:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"416:15:7"},"scope":935,"src":"378:54:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":923,"nodeType":"StructuredDocumentation","src":"438:56:7","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":928,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"508:6:7","nodeType":"FunctionDefinition","parameters":{"id":924,"nodeType":"ParameterList","parameters":[],"src":"514:2:7"},"returnParameters":{"id":927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":926,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":928,"src":"540:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":925,"name":"string","nodeType":"ElementaryTypeName","src":"540:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"539:15:7"},"scope":935,"src":"499:56:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":929,"nodeType":"StructuredDocumentation","src":"561:65:7","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":934,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"640:8:7","nodeType":"FunctionDefinition","parameters":{"id":930,"nodeType":"ParameterList","parameters":[],"src":"648:2:7"},"returnParameters":{"id":933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":932,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":934,"src":"674:5:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":931,"name":"uint8","nodeType":"ElementaryTypeName","src":"674:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"673:7:7"},"scope":935,"src":"631:50:7","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":936,"src":"278:405:7","usedErrors":[],"usedEvents":[843,852]}],"src":"125:559:7"},"id":7},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","exportedSymbols":{"Context":[2288],"ERC165":[3564],"ERC721":[1892],"ERC721Utils":[2258],"IERC165":[3576],"IERC721":[2009],"IERC721Errors":[269],"IERC721Metadata":[2181],"Strings":[3540]},"id":1893,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":937,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:8"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"./IERC721.sol","id":939,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1893,"sourceUnit":2010,"src":"133:38:8","symbolAliases":[{"foreign":{"id":938,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2009,"src":"141:7:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","file":"./extensions/IERC721Metadata.sol","id":941,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1893,"sourceUnit":2182,"src":"172:65:8","symbolAliases":[{"foreign":{"id":940,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2181,"src":"180:15:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol","file":"./utils/ERC721Utils.sol","id":943,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1893,"sourceUnit":2259,"src":"238:52:8","symbolAliases":[{"foreign":{"id":942,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2258,"src":"246:11:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":945,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1893,"sourceUnit":2289,"src":"291:48:8","symbolAliases":[{"foreign":{"id":944,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2288,"src":"299:7:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../../utils/Strings.sol","id":947,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1893,"sourceUnit":3541,"src":"340:48:8","symbolAliases":[{"foreign":{"id":946,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3540,"src":"348:7:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":950,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1893,"sourceUnit":3565,"src":"389:69:8","symbolAliases":[{"foreign":{"id":948,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3576,"src":"397:7:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":949,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3564,"src":"406:6:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":952,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1893,"sourceUnit":317,"src":"459:66:8","symbolAliases":[{"foreign":{"id":951,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":269,"src":"467:13:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":954,"name":"Context","nameLocations":["803:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":2288,"src":"803:7:8"},"id":955,"nodeType":"InheritanceSpecifier","src":"803:7:8"},{"baseName":{"id":956,"name":"ERC165","nameLocations":["812:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":3564,"src":"812:6:8"},"id":957,"nodeType":"InheritanceSpecifier","src":"812:6:8"},{"baseName":{"id":958,"name":"IERC721","nameLocations":["820:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":2009,"src":"820:7:8"},"id":959,"nodeType":"InheritanceSpecifier","src":"820:7:8"},{"baseName":{"id":960,"name":"IERC721Metadata","nameLocations":["829:15:8"],"nodeType":"IdentifierPath","referencedDeclaration":2181,"src":"829:15:8"},"id":961,"nodeType":"InheritanceSpecifier","src":"829:15:8"},{"baseName":{"id":962,"name":"IERC721Errors","nameLocations":["846:13:8"],"nodeType":"IdentifierPath","referencedDeclaration":269,"src":"846:13:8"},"id":963,"nodeType":"InheritanceSpecifier","src":"846:13:8"}],"canonicalName":"ERC721","contractDependencies":[],"contractKind":"contract","documentation":{"id":953,"nodeType":"StructuredDocumentation","src":"527:247:8","text":" @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."},"fullyImplemented":true,"id":1892,"linearizedBaseContracts":[1892,269,2181,2009,3564,3576,2288],"name":"ERC721","nameLocation":"793:6:8","nodeType":"ContractDefinition","nodes":[{"global":false,"id":966,"libraryName":{"id":964,"name":"Strings","nameLocations":["872:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":3540,"src":"872:7:8"},"nodeType":"UsingForDirective","src":"866:26:8","typeName":{"id":965,"name":"uint256","nodeType":"ElementaryTypeName","src":"884:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":968,"mutability":"mutable","name":"_name","nameLocation":"931:5:8","nodeType":"VariableDeclaration","scope":1892,"src":"916:20:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":967,"name":"string","nodeType":"ElementaryTypeName","src":"916:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":970,"mutability":"mutable","name":"_symbol","nameLocation":"978:7:8","nodeType":"VariableDeclaration","scope":1892,"src":"963:22:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":969,"name":"string","nodeType":"ElementaryTypeName","src":"963:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":974,"mutability":"mutable","name":"_owners","nameLocation":"1036:7:8","nodeType":"VariableDeclaration","scope":1892,"src":"992:51:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":973,"keyName":"tokenId","keyNameLocation":"1008:7:8","keyType":{"id":971,"name":"uint256","nodeType":"ElementaryTypeName","src":"1000:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"992:35:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":972,"name":"address","nodeType":"ElementaryTypeName","src":"1019:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":978,"mutability":"mutable","name":"_balances","nameLocation":"1092:9:8","nodeType":"VariableDeclaration","scope":1892,"src":"1050:51:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":977,"keyName":"owner","keyNameLocation":"1066:5:8","keyType":{"id":975,"name":"address","nodeType":"ElementaryTypeName","src":"1058:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1050:33:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":976,"name":"uint256","nodeType":"ElementaryTypeName","src":"1075:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":982,"mutability":"mutable","name":"_tokenApprovals","nameLocation":"1152:15:8","nodeType":"VariableDeclaration","scope":1892,"src":"1108:59:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":981,"keyName":"tokenId","keyNameLocation":"1124:7:8","keyType":{"id":979,"name":"uint256","nodeType":"ElementaryTypeName","src":"1116:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1108:35:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":980,"name":"address","nodeType":"ElementaryTypeName","src":"1135:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":988,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1242:18:8","nodeType":"VariableDeclaration","scope":1892,"src":"1174:86:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":987,"keyName":"owner","keyNameLocation":"1190:5:8","keyType":{"id":983,"name":"address","nodeType":"ElementaryTypeName","src":"1182:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1174:59:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":986,"keyName":"operator","keyNameLocation":"1215:8:8","keyType":{"id":984,"name":"address","nodeType":"ElementaryTypeName","src":"1207:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1199:33:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":985,"name":"bool","nodeType":"ElementaryTypeName","src":"1227:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"body":{"id":1004,"nodeType":"Block","src":"1436:57:8","statements":[{"expression":{"id":998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":996,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":968,"src":"1446:5:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":997,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"1454:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1446:13:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":999,"nodeType":"ExpressionStatement","src":"1446:13:8"},{"expression":{"id":1002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1000,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":970,"src":"1469:7:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1001,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":993,"src":"1479:7:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1469:17:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1003,"nodeType":"ExpressionStatement","src":"1469:17:8"}]},"documentation":{"id":989,"nodeType":"StructuredDocumentation","src":"1267:108:8","text":" @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."},"id":1005,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":991,"mutability":"mutable","name":"name_","nameLocation":"1406:5:8","nodeType":"VariableDeclaration","scope":1005,"src":"1392:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":990,"name":"string","nodeType":"ElementaryTypeName","src":"1392:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":993,"mutability":"mutable","name":"symbol_","nameLocation":"1427:7:8","nodeType":"VariableDeclaration","scope":1005,"src":"1413:21:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":992,"name":"string","nodeType":"ElementaryTypeName","src":"1413:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1391:44:8"},"returnParameters":{"id":995,"nodeType":"ParameterList","parameters":[],"src":"1436:0:8"},"scope":1892,"src":"1380:113:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[3563,3575],"body":{"id":1035,"nodeType":"Block","src":"1668:192:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1016,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1008,"src":"1697:11:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1018,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2009,"src":"1717:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$2009_$","typeString":"type(contract IERC721)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721_$2009_$","typeString":"type(contract IERC721)"}],"id":1017,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1712:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1712:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721_$2009","typeString":"type(contract IERC721)"}},"id":1020,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1726:11:8","memberName":"interfaceId","nodeType":"MemberAccess","src":"1712:25:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1697:40:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1022,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1008,"src":"1753:11:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1024,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2181,"src":"1773:15:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$2181_$","typeString":"type(contract IERC721Metadata)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$2181_$","typeString":"type(contract IERC721Metadata)"}],"id":1023,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1768:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1768:21:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Metadata_$2181","typeString":"type(contract IERC721Metadata)"}},"id":1026,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1790:11:8","memberName":"interfaceId","nodeType":"MemberAccess","src":"1768:33:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1753:48:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1697:104:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1031,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1008,"src":"1841:11:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":1029,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1817:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721_$1892_$","typeString":"type(contract super ERC721)"}},"id":1030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1823:17:8","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":3563,"src":"1817:23:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":1032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1817:36:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1697:156:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1015,"id":1034,"nodeType":"Return","src":"1678:175:8"}]},"documentation":{"id":1006,"nodeType":"StructuredDocumentation","src":"1499:56:8","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":1036,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1569:17:8","nodeType":"FunctionDefinition","overrides":{"id":1012,"nodeType":"OverrideSpecifier","overrides":[{"id":1010,"name":"ERC165","nameLocations":["1636:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":3564,"src":"1636:6:8"},{"id":1011,"name":"IERC165","nameLocations":["1644:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":3576,"src":"1644:7:8"}],"src":"1627:25:8"},"parameters":{"id":1009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1008,"mutability":"mutable","name":"interfaceId","nameLocation":"1594:11:8","nodeType":"VariableDeclaration","scope":1036,"src":"1587:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1007,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1587:6:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1586:20:8"},"returnParameters":{"id":1015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1014,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1036,"src":"1662:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1013,"name":"bool","nodeType":"ElementaryTypeName","src":"1662:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1661:6:8"},"scope":1892,"src":"1560:300:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1934],"body":{"id":1063,"nodeType":"Block","src":"1991:136:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1044,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1039,"src":"2005:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2022:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1046,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2014:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1045,"name":"address","nodeType":"ElementaryTypeName","src":"2014:7:8","typeDescriptions":{}}},"id":1048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2014:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2005:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1058,"nodeType":"IfStatement","src":"2001:87:8","trueBody":{"id":1057,"nodeType":"Block","src":"2026:62:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2074:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1052,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2066:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1051,"name":"address","nodeType":"ElementaryTypeName","src":"2066:7:8","typeDescriptions":{}}},"id":1054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2066:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1050,"name":"ERC721InvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":227,"src":"2047:18:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2047:30:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1056,"nodeType":"RevertStatement","src":"2040:37:8"}]}},{"expression":{"baseExpression":{"id":1059,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":978,"src":"2104:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1061,"indexExpression":{"id":1060,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1039,"src":"2114:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2104:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1043,"id":1062,"nodeType":"Return","src":"2097:23:8"}]},"documentation":{"id":1037,"nodeType":"StructuredDocumentation","src":"1866:48:8","text":" @dev See {IERC721-balanceOf}."},"functionSelector":"70a08231","id":1064,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1928:9:8","nodeType":"FunctionDefinition","parameters":{"id":1040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1039,"mutability":"mutable","name":"owner","nameLocation":"1946:5:8","nodeType":"VariableDeclaration","scope":1064,"src":"1938:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1038,"name":"address","nodeType":"ElementaryTypeName","src":"1938:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1937:15:8"},"returnParameters":{"id":1043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1042,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1064,"src":"1982:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1041,"name":"uint256","nodeType":"ElementaryTypeName","src":"1982:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1981:9:8"},"scope":1892,"src":"1919:208:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1942],"body":{"id":1076,"nodeType":"Block","src":"2256:46:8","statements":[{"expression":{"arguments":[{"id":1073,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1067,"src":"2287:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1072,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1891,"src":"2273:13:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2273:22:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1071,"id":1075,"nodeType":"Return","src":"2266:29:8"}]},"documentation":{"id":1065,"nodeType":"StructuredDocumentation","src":"2133:46:8","text":" @dev See {IERC721-ownerOf}."},"functionSelector":"6352211e","id":1077,"implemented":true,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"2193:7:8","nodeType":"FunctionDefinition","parameters":{"id":1068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1067,"mutability":"mutable","name":"tokenId","nameLocation":"2209:7:8","nodeType":"VariableDeclaration","scope":1077,"src":"2201:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1066,"name":"uint256","nodeType":"ElementaryTypeName","src":"2201:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2200:17:8"},"returnParameters":{"id":1071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1070,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1077,"src":"2247:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1069,"name":"address","nodeType":"ElementaryTypeName","src":"2247:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2246:9:8"},"scope":1892,"src":"2184:118:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2166],"body":{"id":1085,"nodeType":"Block","src":"2424:29:8","statements":[{"expression":{"id":1083,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":968,"src":"2441:5:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1082,"id":1084,"nodeType":"Return","src":"2434:12:8"}]},"documentation":{"id":1078,"nodeType":"StructuredDocumentation","src":"2308:51:8","text":" @dev See {IERC721Metadata-name}."},"functionSelector":"06fdde03","id":1086,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2373:4:8","nodeType":"FunctionDefinition","parameters":{"id":1079,"nodeType":"ParameterList","parameters":[],"src":"2377:2:8"},"returnParameters":{"id":1082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1081,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1086,"src":"2409:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1080,"name":"string","nodeType":"ElementaryTypeName","src":"2409:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2408:15:8"},"scope":1892,"src":"2364:89:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2172],"body":{"id":1094,"nodeType":"Block","src":"2579:31:8","statements":[{"expression":{"id":1092,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":970,"src":"2596:7:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1091,"id":1093,"nodeType":"Return","src":"2589:14:8"}]},"documentation":{"id":1087,"nodeType":"StructuredDocumentation","src":"2459:53:8","text":" @dev See {IERC721Metadata-symbol}."},"functionSelector":"95d89b41","id":1095,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2526:6:8","nodeType":"FunctionDefinition","parameters":{"id":1088,"nodeType":"ParameterList","parameters":[],"src":"2532:2:8"},"returnParameters":{"id":1091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1090,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1095,"src":"2564:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1089,"name":"string","nodeType":"ElementaryTypeName","src":"2564:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2563:15:8"},"scope":1892,"src":"2517:93:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2180],"body":{"id":1130,"nodeType":"Block","src":"2755:176:8","statements":[{"expression":{"arguments":[{"id":1104,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1098,"src":"2779:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1103,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1891,"src":"2765:13:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2765:22:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1106,"nodeType":"ExpressionStatement","src":"2765:22:8"},{"assignments":[1108],"declarations":[{"constant":false,"id":1108,"mutability":"mutable","name":"baseURI","nameLocation":"2812:7:8","nodeType":"VariableDeclaration","scope":1130,"src":"2798:21:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1107,"name":"string","nodeType":"ElementaryTypeName","src":"2798:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1111,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1109,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1140,"src":"2822:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":1110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2822:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2798:34:8"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1114,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1108,"src":"2855:7:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1113,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2849:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1112,"name":"bytes","nodeType":"ElementaryTypeName","src":"2849:5:8","typeDescriptions":{}}},"id":1115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2849:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2864:6:8","memberName":"length","nodeType":"MemberAccess","src":"2849:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2873:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2849:25:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":1127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2922:2:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":1128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2849:75:8","trueExpression":{"arguments":[{"id":1122,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1108,"src":"2891:7:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1123,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1098,"src":"2900:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2908:8:8","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":2418,"src":"2900:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2900:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1120,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2877:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1119,"name":"string","nodeType":"ElementaryTypeName","src":"2877:6:8","typeDescriptions":{}}},"id":1121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2884:6:8","memberName":"concat","nodeType":"MemberAccess","src":"2877:13:8","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":1126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2877:42:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1102,"id":1129,"nodeType":"Return","src":"2842:82:8"}]},"documentation":{"id":1096,"nodeType":"StructuredDocumentation","src":"2616:55:8","text":" @dev See {IERC721Metadata-tokenURI}."},"functionSelector":"c87b56dd","id":1131,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"2685:8:8","nodeType":"FunctionDefinition","parameters":{"id":1099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1098,"mutability":"mutable","name":"tokenId","nameLocation":"2702:7:8","nodeType":"VariableDeclaration","scope":1131,"src":"2694:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1097,"name":"uint256","nodeType":"ElementaryTypeName","src":"2694:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2693:17:8"},"returnParameters":{"id":1102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1101,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1131,"src":"2740:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1100,"name":"string","nodeType":"ElementaryTypeName","src":"2740:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2739:15:8"},"scope":1892,"src":"2676:255:8","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1139,"nodeType":"Block","src":"3239:26:8","statements":[{"expression":{"hexValue":"","id":1137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3256:2:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":1136,"id":1138,"nodeType":"Return","src":"3249:9:8"}]},"documentation":{"id":1132,"nodeType":"StructuredDocumentation","src":"2937:231:8","text":" @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."},"id":1140,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"3182:8:8","nodeType":"FunctionDefinition","parameters":{"id":1133,"nodeType":"ParameterList","parameters":[],"src":"3190:2:8"},"returnParameters":{"id":1136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1135,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1140,"src":"3224:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1134,"name":"string","nodeType":"ElementaryTypeName","src":"3224:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3223:15:8"},"scope":1892,"src":"3173:92:8","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[1982],"body":{"id":1155,"nodeType":"Block","src":"3383:52:8","statements":[{"expression":{"arguments":[{"id":1149,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1143,"src":"3402:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1150,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1145,"src":"3406:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1151,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2270,"src":"3415:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3415:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1148,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1759,1825],"referencedDeclaration":1759,"src":"3393:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address)"}},"id":1153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3393:35:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1154,"nodeType":"ExpressionStatement","src":"3393:35:8"}]},"documentation":{"id":1141,"nodeType":"StructuredDocumentation","src":"3271:46:8","text":" @dev See {IERC721-approve}."},"functionSelector":"095ea7b3","id":1156,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3331:7:8","nodeType":"FunctionDefinition","parameters":{"id":1146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1143,"mutability":"mutable","name":"to","nameLocation":"3347:2:8","nodeType":"VariableDeclaration","scope":1156,"src":"3339:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1142,"name":"address","nodeType":"ElementaryTypeName","src":"3339:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1145,"mutability":"mutable","name":"tokenId","nameLocation":"3359:7:8","nodeType":"VariableDeclaration","scope":1156,"src":"3351:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1144,"name":"uint256","nodeType":"ElementaryTypeName","src":"3351:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3338:29:8"},"returnParameters":{"id":1147,"nodeType":"ParameterList","parameters":[],"src":"3383:0:8"},"scope":1892,"src":"3322:113:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1998],"body":{"id":1172,"nodeType":"Block","src":"3572:78:8","statements":[{"expression":{"arguments":[{"id":1165,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"3596:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1164,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1891,"src":"3582:13:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3582:22:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1167,"nodeType":"ExpressionStatement","src":"3582:22:8"},{"expression":{"arguments":[{"id":1169,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"3635:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1168,"name":"_getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1326,"src":"3622:12:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3622:21:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1163,"id":1171,"nodeType":"Return","src":"3615:28:8"}]},"documentation":{"id":1157,"nodeType":"StructuredDocumentation","src":"3441:50:8","text":" @dev See {IERC721-getApproved}."},"functionSelector":"081812fc","id":1173,"implemented":true,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"3505:11:8","nodeType":"FunctionDefinition","parameters":{"id":1160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1159,"mutability":"mutable","name":"tokenId","nameLocation":"3525:7:8","nodeType":"VariableDeclaration","scope":1173,"src":"3517:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1158,"name":"uint256","nodeType":"ElementaryTypeName","src":"3517:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3516:17:8"},"returnParameters":{"id":1163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1162,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1173,"src":"3563:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1161,"name":"address","nodeType":"ElementaryTypeName","src":"3563:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3562:9:8"},"scope":1892,"src":"3496:154:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1990],"body":{"id":1188,"nodeType":"Block","src":"3792:69:8","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1182,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2270,"src":"3821:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3821:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1184,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1176,"src":"3835:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1185,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1178,"src":"3845:8:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1181,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1862,"src":"3802:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3802:52:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1187,"nodeType":"ExpressionStatement","src":"3802:52:8"}]},"documentation":{"id":1174,"nodeType":"StructuredDocumentation","src":"3656:56:8","text":" @dev See {IERC721-setApprovalForAll}."},"functionSelector":"a22cb465","id":1189,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"3726:17:8","nodeType":"FunctionDefinition","parameters":{"id":1179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1176,"mutability":"mutable","name":"operator","nameLocation":"3752:8:8","nodeType":"VariableDeclaration","scope":1189,"src":"3744:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1175,"name":"address","nodeType":"ElementaryTypeName","src":"3744:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1178,"mutability":"mutable","name":"approved","nameLocation":"3767:8:8","nodeType":"VariableDeclaration","scope":1189,"src":"3762:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1177,"name":"bool","nodeType":"ElementaryTypeName","src":"3762:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3743:33:8"},"returnParameters":{"id":1180,"nodeType":"ParameterList","parameters":[],"src":"3792:0:8"},"scope":1892,"src":"3717:144:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2008],"body":{"id":1205,"nodeType":"Block","src":"4021:59:8","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":1199,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":988,"src":"4038:18:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1201,"indexExpression":{"id":1200,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1192,"src":"4057:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4038:25:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1203,"indexExpression":{"id":1202,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1194,"src":"4064:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4038:35:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1198,"id":1204,"nodeType":"Return","src":"4031:42:8"}]},"documentation":{"id":1190,"nodeType":"StructuredDocumentation","src":"3867:55:8","text":" @dev See {IERC721-isApprovedForAll}."},"functionSelector":"e985e9c5","id":1206,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"3936:16:8","nodeType":"FunctionDefinition","parameters":{"id":1195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1192,"mutability":"mutable","name":"owner","nameLocation":"3961:5:8","nodeType":"VariableDeclaration","scope":1206,"src":"3953:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1191,"name":"address","nodeType":"ElementaryTypeName","src":"3953:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1194,"mutability":"mutable","name":"operator","nameLocation":"3976:8:8","nodeType":"VariableDeclaration","scope":1206,"src":"3968:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1193,"name":"address","nodeType":"ElementaryTypeName","src":"3968:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3952:33:8"},"returnParameters":{"id":1198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1197,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1206,"src":"4015:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1196,"name":"bool","nodeType":"ElementaryTypeName","src":"4015:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4014:6:8"},"scope":1892,"src":"3927:153:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1974],"body":{"id":1251,"nodeType":"Block","src":"4222:498:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1216,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"4236:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4250:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1218,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4242:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1217,"name":"address","nodeType":"ElementaryTypeName","src":"4242:7:8","typeDescriptions":{}}},"id":1220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4242:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4236:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1230,"nodeType":"IfStatement","src":"4232:87:8","trueBody":{"id":1229,"nodeType":"Block","src":"4254:65:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4305:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1224,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4297:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1223,"name":"address","nodeType":"ElementaryTypeName","src":"4297:7:8","typeDescriptions":{}}},"id":1226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4297:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1222,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":251,"src":"4275:21:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4275:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1228,"nodeType":"RevertStatement","src":"4268:40:8"}]}},{"assignments":[1232],"declarations":[{"constant":false,"id":1232,"mutability":"mutable","name":"previousOwner","nameLocation":"4545:13:8","nodeType":"VariableDeclaration","scope":1251,"src":"4537:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1231,"name":"address","nodeType":"ElementaryTypeName","src":"4537:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1239,"initialValue":{"arguments":[{"id":1234,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"4569:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1235,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"4573:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1236,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2270,"src":"4582:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4582:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1233,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1505,"src":"4561:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":1238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4561:34:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4537:58:8"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1240,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1232,"src":"4609:13:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1241,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"4626:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4609:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1250,"nodeType":"IfStatement","src":"4605:109:8","trueBody":{"id":1249,"nodeType":"Block","src":"4632:82:8","statements":[{"errorCall":{"arguments":[{"id":1244,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"4674:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1245,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"4680:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1246,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1232,"src":"4689:13:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1243,"name":"ERC721IncorrectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":241,"src":"4653:20:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address) pure"}},"id":1247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4653:50:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1248,"nodeType":"RevertStatement","src":"4646:57:8"}]}}]},"documentation":{"id":1207,"nodeType":"StructuredDocumentation","src":"4086:51:8","text":" @dev See {IERC721-transferFrom}."},"functionSelector":"23b872dd","id":1252,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4151:12:8","nodeType":"FunctionDefinition","parameters":{"id":1214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1209,"mutability":"mutable","name":"from","nameLocation":"4172:4:8","nodeType":"VariableDeclaration","scope":1252,"src":"4164:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1208,"name":"address","nodeType":"ElementaryTypeName","src":"4164:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1211,"mutability":"mutable","name":"to","nameLocation":"4186:2:8","nodeType":"VariableDeclaration","scope":1252,"src":"4178:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1210,"name":"address","nodeType":"ElementaryTypeName","src":"4178:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1213,"mutability":"mutable","name":"tokenId","nameLocation":"4198:7:8","nodeType":"VariableDeclaration","scope":1252,"src":"4190:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1212,"name":"uint256","nodeType":"ElementaryTypeName","src":"4190:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4163:43:8"},"returnParameters":{"id":1215,"nodeType":"ParameterList","parameters":[],"src":"4222:0:8"},"scope":1892,"src":"4142:578:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1964],"body":{"id":1269,"nodeType":"Block","src":"4862:56:8","statements":[{"expression":{"arguments":[{"id":1263,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1255,"src":"4889:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1264,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1257,"src":"4895:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1265,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1259,"src":"4899:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":1266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4908:2:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1262,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[1270,1300],"referencedDeclaration":1300,"src":"4872:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":1267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4872:39:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1268,"nodeType":"ExpressionStatement","src":"4872:39:8"}]},"documentation":{"id":1253,"nodeType":"StructuredDocumentation","src":"4726:55:8","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"42842e0e","id":1270,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4795:16:8","nodeType":"FunctionDefinition","parameters":{"id":1260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1255,"mutability":"mutable","name":"from","nameLocation":"4820:4:8","nodeType":"VariableDeclaration","scope":1270,"src":"4812:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1254,"name":"address","nodeType":"ElementaryTypeName","src":"4812:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1257,"mutability":"mutable","name":"to","nameLocation":"4834:2:8","nodeType":"VariableDeclaration","scope":1270,"src":"4826:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1256,"name":"address","nodeType":"ElementaryTypeName","src":"4826:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1259,"mutability":"mutable","name":"tokenId","nameLocation":"4846:7:8","nodeType":"VariableDeclaration","scope":1270,"src":"4838:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1258,"name":"uint256","nodeType":"ElementaryTypeName","src":"4838:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4811:43:8"},"returnParameters":{"id":1261,"nodeType":"ParameterList","parameters":[],"src":"4862:0:8"},"scope":1892,"src":"4786:132:8","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1954],"body":{"id":1299,"nodeType":"Block","src":"5087:130:8","statements":[{"expression":{"arguments":[{"id":1283,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1273,"src":"5110:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1284,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1275,"src":"5116:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1285,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1277,"src":"5120:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1282,"name":"transferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1252,"src":"5097:12:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5097:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1287,"nodeType":"ExpressionStatement","src":"5097:31:8"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1291,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2270,"src":"5172:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5172:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1293,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1273,"src":"5186:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1294,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1275,"src":"5192:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1295,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1277,"src":"5196:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1296,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1279,"src":"5205:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1288,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2258,"src":"5138:11:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$2258_$","typeString":"type(library ERC721Utils)"}},"id":1290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5150:21:8","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":2257,"src":"5138:33:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":1297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5138:72:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1298,"nodeType":"ExpressionStatement","src":"5138:72:8"}]},"documentation":{"id":1271,"nodeType":"StructuredDocumentation","src":"4924:55:8","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"b88d4fde","id":1300,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4993:16:8","nodeType":"FunctionDefinition","parameters":{"id":1280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1273,"mutability":"mutable","name":"from","nameLocation":"5018:4:8","nodeType":"VariableDeclaration","scope":1300,"src":"5010:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1272,"name":"address","nodeType":"ElementaryTypeName","src":"5010:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1275,"mutability":"mutable","name":"to","nameLocation":"5032:2:8","nodeType":"VariableDeclaration","scope":1300,"src":"5024:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1274,"name":"address","nodeType":"ElementaryTypeName","src":"5024:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1277,"mutability":"mutable","name":"tokenId","nameLocation":"5044:7:8","nodeType":"VariableDeclaration","scope":1300,"src":"5036:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1276,"name":"uint256","nodeType":"ElementaryTypeName","src":"5036:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1279,"mutability":"mutable","name":"data","nameLocation":"5066:4:8","nodeType":"VariableDeclaration","scope":1300,"src":"5053:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1278,"name":"bytes","nodeType":"ElementaryTypeName","src":"5053:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5009:62:8"},"returnParameters":{"id":1281,"nodeType":"ParameterList","parameters":[],"src":"5087:0:8"},"scope":1892,"src":"4984:233:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1312,"nodeType":"Block","src":"5807:40:8","statements":[{"expression":{"baseExpression":{"id":1308,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":974,"src":"5824:7:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1310,"indexExpression":{"id":1309,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1303,"src":"5832:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5824:16:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1307,"id":1311,"nodeType":"Return","src":"5817:23:8"}]},"documentation":{"id":1301,"nodeType":"StructuredDocumentation","src":"5223:504:8","text":" @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC-721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."},"id":1313,"implemented":true,"kind":"function","modifiers":[],"name":"_ownerOf","nameLocation":"5741:8:8","nodeType":"FunctionDefinition","parameters":{"id":1304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1303,"mutability":"mutable","name":"tokenId","nameLocation":"5758:7:8","nodeType":"VariableDeclaration","scope":1313,"src":"5750:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1302,"name":"uint256","nodeType":"ElementaryTypeName","src":"5750:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5749:17:8"},"returnParameters":{"id":1307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1306,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1313,"src":"5798:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1305,"name":"address","nodeType":"ElementaryTypeName","src":"5798:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5797:9:8"},"scope":1892,"src":"5732:115:8","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1325,"nodeType":"Block","src":"6042:48:8","statements":[{"expression":{"baseExpression":{"id":1321,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":982,"src":"6059:15:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1323,"indexExpression":{"id":1322,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1316,"src":"6075:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6059:24:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1320,"id":1324,"nodeType":"Return","src":"6052:31:8"}]},"documentation":{"id":1314,"nodeType":"StructuredDocumentation","src":"5853:105:8","text":" @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."},"id":1326,"implemented":true,"kind":"function","modifiers":[],"name":"_getApproved","nameLocation":"5972:12:8","nodeType":"FunctionDefinition","parameters":{"id":1317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1316,"mutability":"mutable","name":"tokenId","nameLocation":"5993:7:8","nodeType":"VariableDeclaration","scope":1326,"src":"5985:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1315,"name":"uint256","nodeType":"ElementaryTypeName","src":"5985:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5984:17:8"},"returnParameters":{"id":1320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1319,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1326,"src":"6033:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1318,"name":"address","nodeType":"ElementaryTypeName","src":"6033:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6032:9:8"},"scope":1892,"src":"5963:127:8","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1361,"nodeType":"Block","src":"6510:163:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1338,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1331,"src":"6539:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6558:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1340,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6550:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1339,"name":"address","nodeType":"ElementaryTypeName","src":"6550:7:8","typeDescriptions":{}}},"id":1342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6550:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6539:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1344,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"6577:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1345,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1331,"src":"6586:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6577:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1348,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"6614:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1349,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1331,"src":"6621:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1347,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1206,"src":"6597:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6597:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6577:52:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1353,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1333,"src":"6646:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1352,"name":"_getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1326,"src":"6633:12:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6633:21:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1355,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1331,"src":"6658:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6633:32:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6577:88:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1358,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6576:90:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6539:127:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1337,"id":1360,"nodeType":"Return","src":"6520:146:8"}]},"documentation":{"id":1327,"nodeType":"StructuredDocumentation","src":"6096:300:8","text":" @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."},"id":1362,"implemented":true,"kind":"function","modifiers":[],"name":"_isAuthorized","nameLocation":"6410:13:8","nodeType":"FunctionDefinition","parameters":{"id":1334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1329,"mutability":"mutable","name":"owner","nameLocation":"6432:5:8","nodeType":"VariableDeclaration","scope":1362,"src":"6424:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1328,"name":"address","nodeType":"ElementaryTypeName","src":"6424:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1331,"mutability":"mutable","name":"spender","nameLocation":"6447:7:8","nodeType":"VariableDeclaration","scope":1362,"src":"6439:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1330,"name":"address","nodeType":"ElementaryTypeName","src":"6439:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1333,"mutability":"mutable","name":"tokenId","nameLocation":"6464:7:8","nodeType":"VariableDeclaration","scope":1362,"src":"6456:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1332,"name":"uint256","nodeType":"ElementaryTypeName","src":"6456:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6423:49:8"},"returnParameters":{"id":1337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1336,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1362,"src":"6504:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1335,"name":"bool","nodeType":"ElementaryTypeName","src":"6504:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6503:6:8"},"scope":1892,"src":"6401:272:8","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1398,"nodeType":"Block","src":"7202:271:8","statements":[{"condition":{"id":1377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7216:39:8","subExpression":{"arguments":[{"id":1373,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1365,"src":"7231:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1374,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1367,"src":"7238:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1375,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1369,"src":"7247:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1372,"name":"_isAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1362,"src":"7217:13:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) view returns (bool)"}},"id":1376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7217:38:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1397,"nodeType":"IfStatement","src":"7212:255:8","trueBody":{"id":1396,"nodeType":"Block","src":"7257:210:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1378,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1365,"src":"7275:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7292:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1380,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7284:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1379,"name":"address","nodeType":"ElementaryTypeName","src":"7284:7:8","typeDescriptions":{}}},"id":1382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7284:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7275:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1394,"nodeType":"Block","src":"7373:84:8","statements":[{"errorCall":{"arguments":[{"id":1390,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1367,"src":"7425:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1391,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1369,"src":"7434:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1389,"name":"ERC721InsufficientApproval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":258,"src":"7398:26:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) pure"}},"id":1392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7398:44:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1393,"nodeType":"RevertStatement","src":"7391:51:8"}]},"id":1395,"nodeType":"IfStatement","src":"7271:186:8","trueBody":{"id":1388,"nodeType":"Block","src":"7296:71:8","statements":[{"errorCall":{"arguments":[{"id":1385,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1369,"src":"7344:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1384,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":232,"src":"7321:22:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7321:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1387,"nodeType":"RevertStatement","src":"7314:38:8"}]}}]}}]},"documentation":{"id":1363,"nodeType":"StructuredDocumentation","src":"6679:421:8","text":" @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if:\n - `spender` does not have approval from `owner` for `tokenId`.\n - `spender` does not have approval to manage all of `owner`'s assets.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."},"id":1399,"implemented":true,"kind":"function","modifiers":[],"name":"_checkAuthorized","nameLocation":"7114:16:8","nodeType":"FunctionDefinition","parameters":{"id":1370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1365,"mutability":"mutable","name":"owner","nameLocation":"7139:5:8","nodeType":"VariableDeclaration","scope":1399,"src":"7131:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1364,"name":"address","nodeType":"ElementaryTypeName","src":"7131:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1367,"mutability":"mutable","name":"spender","nameLocation":"7154:7:8","nodeType":"VariableDeclaration","scope":1399,"src":"7146:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1366,"name":"address","nodeType":"ElementaryTypeName","src":"7146:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1369,"mutability":"mutable","name":"tokenId","nameLocation":"7171:7:8","nodeType":"VariableDeclaration","scope":1399,"src":"7163:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1368,"name":"uint256","nodeType":"ElementaryTypeName","src":"7163:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7130:49:8"},"returnParameters":{"id":1371,"nodeType":"ParameterList","parameters":[],"src":"7202:0:8"},"scope":1892,"src":"7105:368:8","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1414,"nodeType":"Block","src":"8190:78:8","statements":[{"id":1413,"nodeType":"UncheckedBlock","src":"8200:62:8","statements":[{"expression":{"id":1411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1407,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":978,"src":"8224:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1409,"indexExpression":{"id":1408,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1402,"src":"8234:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8224:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1410,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1404,"src":"8246:5:8","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"8224:27:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1412,"nodeType":"ExpressionStatement","src":"8224:27:8"}]}]},"documentation":{"id":1400,"nodeType":"StructuredDocumentation","src":"7479:631:8","text":" @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."},"id":1415,"implemented":true,"kind":"function","modifiers":[],"name":"_increaseBalance","nameLocation":"8124:16:8","nodeType":"FunctionDefinition","parameters":{"id":1405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1402,"mutability":"mutable","name":"account","nameLocation":"8149:7:8","nodeType":"VariableDeclaration","scope":1415,"src":"8141:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1401,"name":"address","nodeType":"ElementaryTypeName","src":"8141:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1404,"mutability":"mutable","name":"value","nameLocation":"8166:5:8","nodeType":"VariableDeclaration","scope":1415,"src":"8158:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1403,"name":"uint128","nodeType":"ElementaryTypeName","src":"8158:7:8","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"8140:32:8"},"returnParameters":{"id":1406,"nodeType":"ParameterList","parameters":[],"src":"8190:0:8"},"scope":1892,"src":"8115:153:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1504,"nodeType":"Block","src":"8956:700:8","statements":[{"assignments":[1428],"declarations":[{"constant":false,"id":1428,"mutability":"mutable","name":"from","nameLocation":"8974:4:8","nodeType":"VariableDeclaration","scope":1504,"src":"8966:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1427,"name":"address","nodeType":"ElementaryTypeName","src":"8966:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1432,"initialValue":{"arguments":[{"id":1430,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1420,"src":"8990:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1429,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1313,"src":"8981:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8981:17:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8966:32:8"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1433,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1422,"src":"9058:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9074:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1435,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9066:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1434,"name":"address","nodeType":"ElementaryTypeName","src":"9066:7:8","typeDescriptions":{}}},"id":1437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9066:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9058:18:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1446,"nodeType":"IfStatement","src":"9054:86:8","trueBody":{"id":1445,"nodeType":"Block","src":"9078:62:8","statements":[{"expression":{"arguments":[{"id":1440,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1428,"src":"9109:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1441,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1422,"src":"9115:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1442,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1420,"src":"9121:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1439,"name":"_checkAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1399,"src":"9092:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) view"}},"id":1443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9092:37:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1444,"nodeType":"ExpressionStatement","src":"9092:37:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1447,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1428,"src":"9184:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9200:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1449,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9192:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1448,"name":"address","nodeType":"ElementaryTypeName","src":"9192:7:8","typeDescriptions":{}}},"id":1451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9192:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9184:18:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1474,"nodeType":"IfStatement","src":"9180:256:8","trueBody":{"id":1473,"nodeType":"Block","src":"9204:232:8","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9317:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1455,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9309:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1454,"name":"address","nodeType":"ElementaryTypeName","src":"9309:7:8","typeDescriptions":{}}},"id":1457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9309:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1458,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1420,"src":"9321:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":1461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9338:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1460,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9330:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1459,"name":"address","nodeType":"ElementaryTypeName","src":"9330:7:8","typeDescriptions":{}}},"id":1462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9330:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"66616c7365","id":1463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9342:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1453,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1759,1825],"referencedDeclaration":1825,"src":"9300:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,uint256,address,bool)"}},"id":1464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9300:48:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1465,"nodeType":"ExpressionStatement","src":"9300:48:8"},{"id":1472,"nodeType":"UncheckedBlock","src":"9363:63:8","statements":[{"expression":{"id":1470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1466,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":978,"src":"9391:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1468,"indexExpression":{"id":1467,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1428,"src":"9401:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9391:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":1469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9410:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9391:20:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1471,"nodeType":"ExpressionStatement","src":"9391:20:8"}]}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1475,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"9450:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9464:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1477,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9456:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1476,"name":"address","nodeType":"ElementaryTypeName","src":"9456:7:8","typeDescriptions":{}}},"id":1479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9456:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9450:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1489,"nodeType":"IfStatement","src":"9446:107:8","trueBody":{"id":1488,"nodeType":"Block","src":"9468:85:8","statements":[{"id":1487,"nodeType":"UncheckedBlock","src":"9482:61:8","statements":[{"expression":{"id":1485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1481,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":978,"src":"9510:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1483,"indexExpression":{"id":1482,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"9520:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9510:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9527:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9510:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1486,"nodeType":"ExpressionStatement","src":"9510:18:8"}]}]}},{"expression":{"id":1494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1490,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":974,"src":"9563:7:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1492,"indexExpression":{"id":1491,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1420,"src":"9571:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9563:16:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1493,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"9582:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9563:21:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1495,"nodeType":"ExpressionStatement","src":"9563:21:8"},{"eventCall":{"arguments":[{"id":1497,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1428,"src":"9609:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1498,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"9615:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1499,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1420,"src":"9619:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1496,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"9600:8:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9600:27:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1501,"nodeType":"EmitStatement","src":"9595:32:8"},{"expression":{"id":1502,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1428,"src":"9645:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1426,"id":1503,"nodeType":"Return","src":"9638:11:8"}]},"documentation":{"id":1416,"nodeType":"StructuredDocumentation","src":"8274:582:8","text":" @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."},"id":1505,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"8870:7:8","nodeType":"FunctionDefinition","parameters":{"id":1423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1418,"mutability":"mutable","name":"to","nameLocation":"8886:2:8","nodeType":"VariableDeclaration","scope":1505,"src":"8878:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1417,"name":"address","nodeType":"ElementaryTypeName","src":"8878:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1420,"mutability":"mutable","name":"tokenId","nameLocation":"8898:7:8","nodeType":"VariableDeclaration","scope":1505,"src":"8890:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1419,"name":"uint256","nodeType":"ElementaryTypeName","src":"8890:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1422,"mutability":"mutable","name":"auth","nameLocation":"8915:4:8","nodeType":"VariableDeclaration","scope":1505,"src":"8907:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1421,"name":"address","nodeType":"ElementaryTypeName","src":"8907:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8877:43:8"},"returnParameters":{"id":1426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1425,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1505,"src":"8947:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1424,"name":"address","nodeType":"ElementaryTypeName","src":"8947:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8946:9:8"},"scope":1892,"src":"8861:795:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1554,"nodeType":"Block","src":"10031:274:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1513,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1508,"src":"10045:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10059:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1515,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10051:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1514,"name":"address","nodeType":"ElementaryTypeName","src":"10051:7:8","typeDescriptions":{}}},"id":1517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10051:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10045:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1527,"nodeType":"IfStatement","src":"10041:87:8","trueBody":{"id":1526,"nodeType":"Block","src":"10063:65:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10114:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1521,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10106:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1520,"name":"address","nodeType":"ElementaryTypeName","src":"10106:7:8","typeDescriptions":{}}},"id":1523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10106:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1519,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":251,"src":"10084:21:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10084:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1525,"nodeType":"RevertStatement","src":"10077:40:8"}]}},{"assignments":[1529],"declarations":[{"constant":false,"id":1529,"mutability":"mutable","name":"previousOwner","nameLocation":"10145:13:8","nodeType":"VariableDeclaration","scope":1554,"src":"10137:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1528,"name":"address","nodeType":"ElementaryTypeName","src":"10137:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1538,"initialValue":{"arguments":[{"id":1531,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1508,"src":"10169:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1532,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1510,"src":"10173:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":1535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10190:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1534,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10182:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1533,"name":"address","nodeType":"ElementaryTypeName","src":"10182:7:8","typeDescriptions":{}}},"id":1536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10182:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1530,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1505,"src":"10161:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":1537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10161:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"10137:56:8"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1539,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1529,"src":"10207:13:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10232:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1541,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10224:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1540,"name":"address","nodeType":"ElementaryTypeName","src":"10224:7:8","typeDescriptions":{}}},"id":1543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10224:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10207:27:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1553,"nodeType":"IfStatement","src":"10203:96:8","trueBody":{"id":1552,"nodeType":"Block","src":"10236:63:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10285:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1547,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10277:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1546,"name":"address","nodeType":"ElementaryTypeName","src":"10277:7:8","typeDescriptions":{}}},"id":1549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10277:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1545,"name":"ERC721InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":246,"src":"10257:19:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10257:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1551,"nodeType":"RevertStatement","src":"10250:38:8"}]}}]},"documentation":{"id":1506,"nodeType":"StructuredDocumentation","src":"9662:311:8","text":" @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."},"id":1555,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"9987:5:8","nodeType":"FunctionDefinition","parameters":{"id":1511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1508,"mutability":"mutable","name":"to","nameLocation":"10001:2:8","nodeType":"VariableDeclaration","scope":1555,"src":"9993:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1507,"name":"address","nodeType":"ElementaryTypeName","src":"9993:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1510,"mutability":"mutable","name":"tokenId","nameLocation":"10013:7:8","nodeType":"VariableDeclaration","scope":1555,"src":"10005:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1509,"name":"uint256","nodeType":"ElementaryTypeName","src":"10005:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9992:29:8"},"returnParameters":{"id":1512,"nodeType":"ParameterList","parameters":[],"src":"10031:0:8"},"scope":1892,"src":"9978:327:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1569,"nodeType":"Block","src":"10713:43:8","statements":[{"expression":{"arguments":[{"id":1564,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1558,"src":"10733:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1565,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1560,"src":"10737:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":1566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10746:2:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1563,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[1570,1600],"referencedDeclaration":1600,"src":"10723:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":1567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10723:26:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1568,"nodeType":"ExpressionStatement","src":"10723:26:8"}]},"documentation":{"id":1556,"nodeType":"StructuredDocumentation","src":"10311:340:8","text":" @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":1570,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"10665:9:8","nodeType":"FunctionDefinition","parameters":{"id":1561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1558,"mutability":"mutable","name":"to","nameLocation":"10683:2:8","nodeType":"VariableDeclaration","scope":1570,"src":"10675:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1557,"name":"address","nodeType":"ElementaryTypeName","src":"10675:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1560,"mutability":"mutable","name":"tokenId","nameLocation":"10695:7:8","nodeType":"VariableDeclaration","scope":1570,"src":"10687:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1559,"name":"uint256","nodeType":"ElementaryTypeName","src":"10687:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10674:29:8"},"returnParameters":{"id":1562,"nodeType":"ParameterList","parameters":[],"src":"10713:0:8"},"scope":1892,"src":"10656:100:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1599,"nodeType":"Block","src":"11061:123:8","statements":[{"expression":{"arguments":[{"id":1581,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1573,"src":"11077:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1582,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1575,"src":"11081:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1580,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1555,"src":"11071:5:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11071:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1584,"nodeType":"ExpressionStatement","src":"11071:18:8"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1588,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2270,"src":"11133:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11133:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11155:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1591,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11147:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1590,"name":"address","nodeType":"ElementaryTypeName","src":"11147:7:8","typeDescriptions":{}}},"id":1593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11147:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1594,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1573,"src":"11159:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1595,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1575,"src":"11163:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1596,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1577,"src":"11172:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1585,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2258,"src":"11099:11:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$2258_$","typeString":"type(library ERC721Utils)"}},"id":1587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11111:21:8","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":2257,"src":"11099:33:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":1597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11099:78:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1598,"nodeType":"ExpressionStatement","src":"11099:78:8"}]},"documentation":{"id":1571,"nodeType":"StructuredDocumentation","src":"10762:210:8","text":" @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":1600,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"10986:9:8","nodeType":"FunctionDefinition","parameters":{"id":1578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1573,"mutability":"mutable","name":"to","nameLocation":"11004:2:8","nodeType":"VariableDeclaration","scope":1600,"src":"10996:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1572,"name":"address","nodeType":"ElementaryTypeName","src":"10996:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1575,"mutability":"mutable","name":"tokenId","nameLocation":"11016:7:8","nodeType":"VariableDeclaration","scope":1600,"src":"11008:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1574,"name":"uint256","nodeType":"ElementaryTypeName","src":"11008:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1577,"mutability":"mutable","name":"data","nameLocation":"11038:4:8","nodeType":"VariableDeclaration","scope":1600,"src":"11025:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1576,"name":"bytes","nodeType":"ElementaryTypeName","src":"11025:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10995:48:8"},"returnParameters":{"id":1579,"nodeType":"ParameterList","parameters":[],"src":"11061:0:8"},"scope":1892,"src":"10977:207:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1632,"nodeType":"Block","src":"11551:186:8","statements":[{"assignments":[1607],"declarations":[{"constant":false,"id":1607,"mutability":"mutable","name":"previousOwner","nameLocation":"11569:13:8","nodeType":"VariableDeclaration","scope":1632,"src":"11561:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1606,"name":"address","nodeType":"ElementaryTypeName","src":"11561:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1619,"initialValue":{"arguments":[{"arguments":[{"hexValue":"30","id":1611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11601:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1610,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11593:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1609,"name":"address","nodeType":"ElementaryTypeName","src":"11593:7:8","typeDescriptions":{}}},"id":1612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11593:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1613,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1603,"src":"11605:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":1616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11622:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1615,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11614:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1614,"name":"address","nodeType":"ElementaryTypeName","src":"11614:7:8","typeDescriptions":{}}},"id":1617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11614:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1608,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1505,"src":"11585:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":1618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11585:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"11561:64:8"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1620,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1607,"src":"11639:13:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11664:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1622,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11656:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1621,"name":"address","nodeType":"ElementaryTypeName","src":"11656:7:8","typeDescriptions":{}}},"id":1624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11656:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11639:27:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1631,"nodeType":"IfStatement","src":"11635:96:8","trueBody":{"id":1630,"nodeType":"Block","src":"11668:63:8","statements":[{"errorCall":{"arguments":[{"id":1627,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1603,"src":"11712:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1626,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":232,"src":"11689:22:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11689:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1629,"nodeType":"RevertStatement","src":"11682:38:8"}]}}]},"documentation":{"id":1601,"nodeType":"StructuredDocumentation","src":"11190:315:8","text":" @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."},"id":1633,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"11519:5:8","nodeType":"FunctionDefinition","parameters":{"id":1604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1603,"mutability":"mutable","name":"tokenId","nameLocation":"11533:7:8","nodeType":"VariableDeclaration","scope":1633,"src":"11525:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1602,"name":"uint256","nodeType":"ElementaryTypeName","src":"11525:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11524:17:8"},"returnParameters":{"id":1605,"nodeType":"ParameterList","parameters":[],"src":"11551:0:8"},"scope":1892,"src":"11510:227:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1692,"nodeType":"Block","src":"12132:389:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1643,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1638,"src":"12146:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12160:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1645,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12152:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1644,"name":"address","nodeType":"ElementaryTypeName","src":"12152:7:8","typeDescriptions":{}}},"id":1647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12152:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12146:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1657,"nodeType":"IfStatement","src":"12142:87:8","trueBody":{"id":1656,"nodeType":"Block","src":"12164:65:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12215:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1651,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12207:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1650,"name":"address","nodeType":"ElementaryTypeName","src":"12207:7:8","typeDescriptions":{}}},"id":1653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12207:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1649,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":251,"src":"12185:21:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12185:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1655,"nodeType":"RevertStatement","src":"12178:40:8"}]}},{"assignments":[1659],"declarations":[{"constant":false,"id":1659,"mutability":"mutable","name":"previousOwner","nameLocation":"12246:13:8","nodeType":"VariableDeclaration","scope":1692,"src":"12238:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1658,"name":"address","nodeType":"ElementaryTypeName","src":"12238:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1668,"initialValue":{"arguments":[{"id":1661,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1638,"src":"12270:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1662,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1640,"src":"12274:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":1665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12291:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1664,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12283:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1663,"name":"address","nodeType":"ElementaryTypeName","src":"12283:7:8","typeDescriptions":{}}},"id":1666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12283:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1660,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1505,"src":"12262:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":1667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12262:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"12238:56:8"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1669,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1659,"src":"12308:13:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12333:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1671,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12325:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1670,"name":"address","nodeType":"ElementaryTypeName","src":"12325:7:8","typeDescriptions":{}}},"id":1673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12325:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12308:27:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1680,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1659,"src":"12410:13:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1681,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1636,"src":"12427:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12410:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1690,"nodeType":"IfStatement","src":"12406:109:8","trueBody":{"id":1689,"nodeType":"Block","src":"12433:82:8","statements":[{"errorCall":{"arguments":[{"id":1684,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1636,"src":"12475:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1685,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1640,"src":"12481:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1686,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1659,"src":"12490:13:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1683,"name":"ERC721IncorrectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":241,"src":"12454:20:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address) pure"}},"id":1687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12454:50:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1688,"nodeType":"RevertStatement","src":"12447:57:8"}]}},"id":1691,"nodeType":"IfStatement","src":"12304:211:8","trueBody":{"id":1679,"nodeType":"Block","src":"12337:63:8","statements":[{"errorCall":{"arguments":[{"id":1676,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1640,"src":"12381:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1675,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":232,"src":"12358:22:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12358:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1678,"nodeType":"RevertStatement","src":"12351:38:8"}]}}]},"documentation":{"id":1634,"nodeType":"StructuredDocumentation","src":"11743:313:8","text":" @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."},"id":1693,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"12070:9:8","nodeType":"FunctionDefinition","parameters":{"id":1641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1636,"mutability":"mutable","name":"from","nameLocation":"12088:4:8","nodeType":"VariableDeclaration","scope":1693,"src":"12080:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1635,"name":"address","nodeType":"ElementaryTypeName","src":"12080:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1638,"mutability":"mutable","name":"to","nameLocation":"12102:2:8","nodeType":"VariableDeclaration","scope":1693,"src":"12094:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1637,"name":"address","nodeType":"ElementaryTypeName","src":"12094:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1640,"mutability":"mutable","name":"tokenId","nameLocation":"12114:7:8","nodeType":"VariableDeclaration","scope":1693,"src":"12106:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1639,"name":"uint256","nodeType":"ElementaryTypeName","src":"12106:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12079:43:8"},"returnParameters":{"id":1642,"nodeType":"ParameterList","parameters":[],"src":"12132:0:8"},"scope":1892,"src":"12061:460:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1710,"nodeType":"Block","src":"13530:53:8","statements":[{"expression":{"arguments":[{"id":1704,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1696,"src":"13554:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1705,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1698,"src":"13560:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1706,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1700,"src":"13564:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":1707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13573:2:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1703,"name":"_safeTransfer","nodeType":"Identifier","overloadedDeclarations":[1711,1741],"referencedDeclaration":1741,"src":"13540:13:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":1708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13540:36:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1709,"nodeType":"ExpressionStatement","src":"13540:36:8"}]},"documentation":{"id":1694,"nodeType":"StructuredDocumentation","src":"12527:923:8","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC-721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":1711,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"13464:13:8","nodeType":"FunctionDefinition","parameters":{"id":1701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1696,"mutability":"mutable","name":"from","nameLocation":"13486:4:8","nodeType":"VariableDeclaration","scope":1711,"src":"13478:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1695,"name":"address","nodeType":"ElementaryTypeName","src":"13478:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1698,"mutability":"mutable","name":"to","nameLocation":"13500:2:8","nodeType":"VariableDeclaration","scope":1711,"src":"13492:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1697,"name":"address","nodeType":"ElementaryTypeName","src":"13492:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1700,"mutability":"mutable","name":"tokenId","nameLocation":"13512:7:8","nodeType":"VariableDeclaration","scope":1711,"src":"13504:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1699,"name":"uint256","nodeType":"ElementaryTypeName","src":"13504:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13477:43:8"},"returnParameters":{"id":1702,"nodeType":"ParameterList","parameters":[],"src":"13530:0:8"},"scope":1892,"src":"13455:128:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1740,"nodeType":"Block","src":"13922:127:8","statements":[{"expression":{"arguments":[{"id":1724,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1714,"src":"13942:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1725,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1716,"src":"13948:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1726,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1718,"src":"13952:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1723,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1693,"src":"13932:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13932:28:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1728,"nodeType":"ExpressionStatement","src":"13932:28:8"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1732,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2270,"src":"14004:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14004:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1734,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1714,"src":"14018:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1735,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1716,"src":"14024:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1736,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1718,"src":"14028:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1737,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1720,"src":"14037:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1729,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2258,"src":"13970:11:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$2258_$","typeString":"type(library ERC721Utils)"}},"id":1731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13982:21:8","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":2257,"src":"13970:33:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":1738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13970:72:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1739,"nodeType":"ExpressionStatement","src":"13970:72:8"}]},"documentation":{"id":1712,"nodeType":"StructuredDocumentation","src":"13589:226:8","text":" @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":1741,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"13829:13:8","nodeType":"FunctionDefinition","parameters":{"id":1721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1714,"mutability":"mutable","name":"from","nameLocation":"13851:4:8","nodeType":"VariableDeclaration","scope":1741,"src":"13843:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1713,"name":"address","nodeType":"ElementaryTypeName","src":"13843:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1716,"mutability":"mutable","name":"to","nameLocation":"13865:2:8","nodeType":"VariableDeclaration","scope":1741,"src":"13857:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1715,"name":"address","nodeType":"ElementaryTypeName","src":"13857:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1718,"mutability":"mutable","name":"tokenId","nameLocation":"13877:7:8","nodeType":"VariableDeclaration","scope":1741,"src":"13869:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1717,"name":"uint256","nodeType":"ElementaryTypeName","src":"13869:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1720,"mutability":"mutable","name":"data","nameLocation":"13899:4:8","nodeType":"VariableDeclaration","scope":1741,"src":"13886:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1719,"name":"bytes","nodeType":"ElementaryTypeName","src":"13886:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"13842:62:8"},"returnParameters":{"id":1722,"nodeType":"ParameterList","parameters":[],"src":"13922:0:8"},"scope":1892,"src":"13820:229:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1758,"nodeType":"Block","src":"14562:50:8","statements":[{"expression":{"arguments":[{"id":1752,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"14581:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1753,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1746,"src":"14585:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1754,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"14594:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"74727565","id":1755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14600:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1751,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1759,1825],"referencedDeclaration":1825,"src":"14572:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,uint256,address,bool)"}},"id":1756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14572:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1757,"nodeType":"ExpressionStatement","src":"14572:33:8"}]},"documentation":{"id":1742,"nodeType":"StructuredDocumentation","src":"14055:432:8","text":" @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":1759,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"14501:8:8","nodeType":"FunctionDefinition","parameters":{"id":1749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1744,"mutability":"mutable","name":"to","nameLocation":"14518:2:8","nodeType":"VariableDeclaration","scope":1759,"src":"14510:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1743,"name":"address","nodeType":"ElementaryTypeName","src":"14510:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1746,"mutability":"mutable","name":"tokenId","nameLocation":"14530:7:8","nodeType":"VariableDeclaration","scope":1759,"src":"14522:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1745,"name":"uint256","nodeType":"ElementaryTypeName","src":"14522:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1748,"mutability":"mutable","name":"auth","nameLocation":"14547:4:8","nodeType":"VariableDeclaration","scope":1759,"src":"14539:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1747,"name":"address","nodeType":"ElementaryTypeName","src":"14539:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14509:43:8"},"returnParameters":{"id":1750,"nodeType":"ParameterList","parameters":[],"src":"14562:0:8"},"scope":1892,"src":"14492:120:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1824,"nodeType":"Block","src":"14888:568:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1771,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1768,"src":"14954:9:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1772,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1766,"src":"14967:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14983:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1774,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14975:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1773,"name":"address","nodeType":"ElementaryTypeName","src":"14975:7:8","typeDescriptions":{}}},"id":1776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14975:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14967:18:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14954:31:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1817,"nodeType":"IfStatement","src":"14950:460:8","trueBody":{"id":1816,"nodeType":"Block","src":"14987:423:8","statements":[{"assignments":[1780],"declarations":[{"constant":false,"id":1780,"mutability":"mutable","name":"owner","nameLocation":"15009:5:8","nodeType":"VariableDeclaration","scope":1816,"src":"15001:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1779,"name":"address","nodeType":"ElementaryTypeName","src":"15001:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1784,"initialValue":{"arguments":[{"id":1782,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1764,"src":"15031:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1781,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1891,"src":"15017:13:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15017:22:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"15001:38:8"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1785,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1766,"src":"15167:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15183:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1787,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15175:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1786,"name":"address","nodeType":"ElementaryTypeName","src":"15175:7:8","typeDescriptions":{}}},"id":1789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15175:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15167:18:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1791,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1780,"src":"15189:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1792,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1766,"src":"15198:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15189:13:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15167:35:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":1799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"15206:30:8","subExpression":{"arguments":[{"id":1796,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1780,"src":"15224:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1797,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1766,"src":"15231:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1795,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1206,"src":"15207:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15207:29:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15167:69:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1806,"nodeType":"IfStatement","src":"15163:142:8","trueBody":{"id":1805,"nodeType":"Block","src":"15238:67:8","statements":[{"errorCall":{"arguments":[{"id":1802,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1766,"src":"15285:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1801,"name":"ERC721InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":263,"src":"15263:21:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15263:27:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1804,"nodeType":"RevertStatement","src":"15256:34:8"}]}},{"condition":{"id":1807,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1768,"src":"15323:9:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1815,"nodeType":"IfStatement","src":"15319:81:8","trueBody":{"id":1814,"nodeType":"Block","src":"15334:66:8","statements":[{"eventCall":{"arguments":[{"id":1809,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1780,"src":"15366:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1810,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1762,"src":"15373:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1811,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1764,"src":"15377:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1808,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1917,"src":"15357:8:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15357:28:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1813,"nodeType":"EmitStatement","src":"15352:33:8"}]}}]}},{"expression":{"id":1822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1818,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":982,"src":"15420:15:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1820,"indexExpression":{"id":1819,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1764,"src":"15436:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15420:24:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1821,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1762,"src":"15447:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15420:29:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1823,"nodeType":"ExpressionStatement","src":"15420:29:8"}]},"documentation":{"id":1760,"nodeType":"StructuredDocumentation","src":"14618:171:8","text":" @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."},"id":1825,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"14803:8:8","nodeType":"FunctionDefinition","parameters":{"id":1769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1762,"mutability":"mutable","name":"to","nameLocation":"14820:2:8","nodeType":"VariableDeclaration","scope":1825,"src":"14812:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1761,"name":"address","nodeType":"ElementaryTypeName","src":"14812:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1764,"mutability":"mutable","name":"tokenId","nameLocation":"14832:7:8","nodeType":"VariableDeclaration","scope":1825,"src":"14824:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1763,"name":"uint256","nodeType":"ElementaryTypeName","src":"14824:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1766,"mutability":"mutable","name":"auth","nameLocation":"14849:4:8","nodeType":"VariableDeclaration","scope":1825,"src":"14841:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1765,"name":"address","nodeType":"ElementaryTypeName","src":"14841:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1768,"mutability":"mutable","name":"emitEvent","nameLocation":"14860:9:8","nodeType":"VariableDeclaration","scope":1825,"src":"14855:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1767,"name":"bool","nodeType":"ElementaryTypeName","src":"14855:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"14811:59:8"},"returnParameters":{"id":1770,"nodeType":"ParameterList","parameters":[],"src":"14888:0:8"},"scope":1892,"src":"14794:662:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1861,"nodeType":"Block","src":"15758:219:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1835,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1830,"src":"15772:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15792:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1837,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15784:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1836,"name":"address","nodeType":"ElementaryTypeName","src":"15784:7:8","typeDescriptions":{}}},"id":1839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15784:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15772:22:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1846,"nodeType":"IfStatement","src":"15768:91:8","trueBody":{"id":1845,"nodeType":"Block","src":"15796:63:8","statements":[{"errorCall":{"arguments":[{"id":1842,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1830,"src":"15839:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1841,"name":"ERC721InvalidOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":268,"src":"15817:21:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15817:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1844,"nodeType":"RevertStatement","src":"15810:38:8"}]}},{"expression":{"id":1853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1847,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":988,"src":"15868:18:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1850,"indexExpression":{"id":1848,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1828,"src":"15887:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15868:25:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1851,"indexExpression":{"id":1849,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1830,"src":"15894:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15868:35:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1852,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1832,"src":"15906:8:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15868:46:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1854,"nodeType":"ExpressionStatement","src":"15868:46:8"},{"eventCall":{"arguments":[{"id":1856,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1828,"src":"15944:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1857,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1830,"src":"15951:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1858,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1832,"src":"15961:8:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1855,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1926,"src":"15929:14:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15929:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1860,"nodeType":"EmitStatement","src":"15924:46:8"}]},"documentation":{"id":1826,"nodeType":"StructuredDocumentation","src":"15462:198:8","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."},"id":1862,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"15674:18:8","nodeType":"FunctionDefinition","parameters":{"id":1833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1828,"mutability":"mutable","name":"owner","nameLocation":"15701:5:8","nodeType":"VariableDeclaration","scope":1862,"src":"15693:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1827,"name":"address","nodeType":"ElementaryTypeName","src":"15693:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1830,"mutability":"mutable","name":"operator","nameLocation":"15716:8:8","nodeType":"VariableDeclaration","scope":1862,"src":"15708:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1829,"name":"address","nodeType":"ElementaryTypeName","src":"15708:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1832,"mutability":"mutable","name":"approved","nameLocation":"15731:8:8","nodeType":"VariableDeclaration","scope":1862,"src":"15726:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1831,"name":"bool","nodeType":"ElementaryTypeName","src":"15726:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15692:48:8"},"returnParameters":{"id":1834,"nodeType":"ParameterList","parameters":[],"src":"15758:0:8"},"scope":1892,"src":"15665:312:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1890,"nodeType":"Block","src":"16284:169:8","statements":[{"assignments":[1871],"declarations":[{"constant":false,"id":1871,"mutability":"mutable","name":"owner","nameLocation":"16302:5:8","nodeType":"VariableDeclaration","scope":1890,"src":"16294:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1870,"name":"address","nodeType":"ElementaryTypeName","src":"16294:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1875,"initialValue":{"arguments":[{"id":1873,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1865,"src":"16319:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1872,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1313,"src":"16310:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16310:17:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"16294:33:8"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1876,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1871,"src":"16341:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16358:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1878,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16350:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1877,"name":"address","nodeType":"ElementaryTypeName","src":"16350:7:8","typeDescriptions":{}}},"id":1880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16350:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16341:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1887,"nodeType":"IfStatement","src":"16337:88:8","trueBody":{"id":1886,"nodeType":"Block","src":"16362:63:8","statements":[{"errorCall":{"arguments":[{"id":1883,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1865,"src":"16406:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1882,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":232,"src":"16383:22:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16383:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1885,"nodeType":"RevertStatement","src":"16376:38:8"}]}},{"expression":{"id":1888,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1871,"src":"16441:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1869,"id":1889,"nodeType":"Return","src":"16434:12:8"}]},"documentation":{"id":1863,"nodeType":"StructuredDocumentation","src":"15983:224:8","text":" @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."},"id":1891,"implemented":true,"kind":"function","modifiers":[],"name":"_requireOwned","nameLocation":"16221:13:8","nodeType":"FunctionDefinition","parameters":{"id":1866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1865,"mutability":"mutable","name":"tokenId","nameLocation":"16243:7:8","nodeType":"VariableDeclaration","scope":1891,"src":"16235:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1864,"name":"uint256","nodeType":"ElementaryTypeName","src":"16235:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16234:17:8"},"returnParameters":{"id":1869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1868,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1891,"src":"16275:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1867,"name":"address","nodeType":"ElementaryTypeName","src":"16275:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16274:9:8"},"scope":1892,"src":"16212:241:8","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1893,"src":"775:15680:8","usedErrors":[227,232,241,246,251,258,263,268],"usedEvents":[1908,1917,1926]}],"src":"107:16349:8"},"id":8},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[3576],"IERC721":[2009]},"id":2010,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1894,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:9"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":1896,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2010,"sourceUnit":3577,"src":"134:62:9","symbolAliases":[{"foreign":{"id":1895,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3576,"src":"142:7:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1898,"name":"IERC165","nameLocations":["288:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":3576,"src":"288:7:9"},"id":1899,"nodeType":"InheritanceSpecifier","src":"288:7:9"}],"canonicalName":"IERC721","contractDependencies":[],"contractKind":"interface","documentation":{"id":1897,"nodeType":"StructuredDocumentation","src":"198:68:9","text":" @dev Required interface of an ERC-721 compliant contract."},"fullyImplemented":false,"id":2009,"linearizedBaseContracts":[2009,3576],"name":"IERC721","nameLocation":"277:7:9","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1900,"nodeType":"StructuredDocumentation","src":"302:88:9","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1908,"name":"Transfer","nameLocation":"401:8:9","nodeType":"EventDefinition","parameters":{"id":1907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1902,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"426:4:9","nodeType":"VariableDeclaration","scope":1908,"src":"410:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1901,"name":"address","nodeType":"ElementaryTypeName","src":"410:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1904,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"448:2:9","nodeType":"VariableDeclaration","scope":1908,"src":"432:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1903,"name":"address","nodeType":"ElementaryTypeName","src":"432:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1906,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"468:7:9","nodeType":"VariableDeclaration","scope":1908,"src":"452:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1905,"name":"uint256","nodeType":"ElementaryTypeName","src":"452:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"409:67:9"},"src":"395:82:9"},{"anonymous":false,"documentation":{"id":1909,"nodeType":"StructuredDocumentation","src":"483:94:9","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1917,"name":"Approval","nameLocation":"588:8:9","nodeType":"EventDefinition","parameters":{"id":1916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1911,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"613:5:9","nodeType":"VariableDeclaration","scope":1917,"src":"597:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1910,"name":"address","nodeType":"ElementaryTypeName","src":"597:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1913,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"636:8:9","nodeType":"VariableDeclaration","scope":1917,"src":"620:24:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1912,"name":"address","nodeType":"ElementaryTypeName","src":"620:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1915,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"662:7:9","nodeType":"VariableDeclaration","scope":1917,"src":"646:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1914,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"596:74:9"},"src":"582:89:9"},{"anonymous":false,"documentation":{"id":1918,"nodeType":"StructuredDocumentation","src":"677:117:9","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":1926,"name":"ApprovalForAll","nameLocation":"805:14:9","nodeType":"EventDefinition","parameters":{"id":1925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1920,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"836:5:9","nodeType":"VariableDeclaration","scope":1926,"src":"820:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1919,"name":"address","nodeType":"ElementaryTypeName","src":"820:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1922,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"859:8:9","nodeType":"VariableDeclaration","scope":1926,"src":"843:24:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1921,"name":"address","nodeType":"ElementaryTypeName","src":"843:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1924,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"874:8:9","nodeType":"VariableDeclaration","scope":1926,"src":"869:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1923,"name":"bool","nodeType":"ElementaryTypeName","src":"869:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"819:64:9"},"src":"799:85:9"},{"documentation":{"id":1927,"nodeType":"StructuredDocumentation","src":"890:76:9","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":1934,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"980:9:9","nodeType":"FunctionDefinition","parameters":{"id":1930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1929,"mutability":"mutable","name":"owner","nameLocation":"998:5:9","nodeType":"VariableDeclaration","scope":1934,"src":"990:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1928,"name":"address","nodeType":"ElementaryTypeName","src":"990:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"989:15:9"},"returnParameters":{"id":1933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1932,"mutability":"mutable","name":"balance","nameLocation":"1036:7:9","nodeType":"VariableDeclaration","scope":1934,"src":"1028:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1931,"name":"uint256","nodeType":"ElementaryTypeName","src":"1028:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1027:17:9"},"scope":2009,"src":"971:74:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1935,"nodeType":"StructuredDocumentation","src":"1051:131:9","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":1942,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1196:7:9","nodeType":"FunctionDefinition","parameters":{"id":1938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1937,"mutability":"mutable","name":"tokenId","nameLocation":"1212:7:9","nodeType":"VariableDeclaration","scope":1942,"src":"1204:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1936,"name":"uint256","nodeType":"ElementaryTypeName","src":"1204:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1203:17:9"},"returnParameters":{"id":1941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1940,"mutability":"mutable","name":"owner","nameLocation":"1252:5:9","nodeType":"VariableDeclaration","scope":1942,"src":"1244:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1939,"name":"address","nodeType":"ElementaryTypeName","src":"1244:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1243:15:9"},"scope":2009,"src":"1187:72:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1943,"nodeType":"StructuredDocumentation","src":"1265:565:9","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":1954,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1844:16:9","nodeType":"FunctionDefinition","parameters":{"id":1952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1945,"mutability":"mutable","name":"from","nameLocation":"1869:4:9","nodeType":"VariableDeclaration","scope":1954,"src":"1861:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1944,"name":"address","nodeType":"ElementaryTypeName","src":"1861:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1947,"mutability":"mutable","name":"to","nameLocation":"1883:2:9","nodeType":"VariableDeclaration","scope":1954,"src":"1875:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1946,"name":"address","nodeType":"ElementaryTypeName","src":"1875:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1949,"mutability":"mutable","name":"tokenId","nameLocation":"1895:7:9","nodeType":"VariableDeclaration","scope":1954,"src":"1887:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1948,"name":"uint256","nodeType":"ElementaryTypeName","src":"1887:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1951,"mutability":"mutable","name":"data","nameLocation":"1919:4:9","nodeType":"VariableDeclaration","scope":1954,"src":"1904:19:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1950,"name":"bytes","nodeType":"ElementaryTypeName","src":"1904:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1860:64:9"},"returnParameters":{"id":1953,"nodeType":"ParameterList","parameters":[],"src":"1933:0:9"},"scope":2009,"src":"1835:99:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1955,"nodeType":"StructuredDocumentation","src":"1940:706:9","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":1964,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2660:16:9","nodeType":"FunctionDefinition","parameters":{"id":1962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1957,"mutability":"mutable","name":"from","nameLocation":"2685:4:9","nodeType":"VariableDeclaration","scope":1964,"src":"2677:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1956,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1959,"mutability":"mutable","name":"to","nameLocation":"2699:2:9","nodeType":"VariableDeclaration","scope":1964,"src":"2691:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1958,"name":"address","nodeType":"ElementaryTypeName","src":"2691:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1961,"mutability":"mutable","name":"tokenId","nameLocation":"2711:7:9","nodeType":"VariableDeclaration","scope":1964,"src":"2703:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1960,"name":"uint256","nodeType":"ElementaryTypeName","src":"2703:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2676:43:9"},"returnParameters":{"id":1963,"nodeType":"ParameterList","parameters":[],"src":"2728:0:9"},"scope":2009,"src":"2651:78:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1965,"nodeType":"StructuredDocumentation","src":"2735:733:9","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1974,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3482:12:9","nodeType":"FunctionDefinition","parameters":{"id":1972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1967,"mutability":"mutable","name":"from","nameLocation":"3503:4:9","nodeType":"VariableDeclaration","scope":1974,"src":"3495:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1966,"name":"address","nodeType":"ElementaryTypeName","src":"3495:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1969,"mutability":"mutable","name":"to","nameLocation":"3517:2:9","nodeType":"VariableDeclaration","scope":1974,"src":"3509:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1968,"name":"address","nodeType":"ElementaryTypeName","src":"3509:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1971,"mutability":"mutable","name":"tokenId","nameLocation":"3529:7:9","nodeType":"VariableDeclaration","scope":1974,"src":"3521:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1970,"name":"uint256","nodeType":"ElementaryTypeName","src":"3521:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3494:43:9"},"returnParameters":{"id":1973,"nodeType":"ParameterList","parameters":[],"src":"3546:0:9"},"scope":2009,"src":"3473:74:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1975,"nodeType":"StructuredDocumentation","src":"3553:452:9","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1982,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4019:7:9","nodeType":"FunctionDefinition","parameters":{"id":1980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1977,"mutability":"mutable","name":"to","nameLocation":"4035:2:9","nodeType":"VariableDeclaration","scope":1982,"src":"4027:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1976,"name":"address","nodeType":"ElementaryTypeName","src":"4027:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1979,"mutability":"mutable","name":"tokenId","nameLocation":"4047:7:9","nodeType":"VariableDeclaration","scope":1982,"src":"4039:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1978,"name":"uint256","nodeType":"ElementaryTypeName","src":"4039:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4026:29:9"},"returnParameters":{"id":1981,"nodeType":"ParameterList","parameters":[],"src":"4064:0:9"},"scope":2009,"src":"4010:55:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1983,"nodeType":"StructuredDocumentation","src":"4071:315:9","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":1990,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4400:17:9","nodeType":"FunctionDefinition","parameters":{"id":1988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1985,"mutability":"mutable","name":"operator","nameLocation":"4426:8:9","nodeType":"VariableDeclaration","scope":1990,"src":"4418:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1984,"name":"address","nodeType":"ElementaryTypeName","src":"4418:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1987,"mutability":"mutable","name":"approved","nameLocation":"4441:8:9","nodeType":"VariableDeclaration","scope":1990,"src":"4436:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1986,"name":"bool","nodeType":"ElementaryTypeName","src":"4436:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4417:33:9"},"returnParameters":{"id":1989,"nodeType":"ParameterList","parameters":[],"src":"4459:0:9"},"scope":2009,"src":"4391:69:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1991,"nodeType":"StructuredDocumentation","src":"4466:139:9","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":1998,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4619:11:9","nodeType":"FunctionDefinition","parameters":{"id":1994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1993,"mutability":"mutable","name":"tokenId","nameLocation":"4639:7:9","nodeType":"VariableDeclaration","scope":1998,"src":"4631:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1992,"name":"uint256","nodeType":"ElementaryTypeName","src":"4631:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4630:17:9"},"returnParameters":{"id":1997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1996,"mutability":"mutable","name":"operator","nameLocation":"4679:8:9","nodeType":"VariableDeclaration","scope":1998,"src":"4671:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1995,"name":"address","nodeType":"ElementaryTypeName","src":"4671:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4670:18:9"},"scope":2009,"src":"4610:79:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1999,"nodeType":"StructuredDocumentation","src":"4695:138:9","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":2008,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4847:16:9","nodeType":"FunctionDefinition","parameters":{"id":2004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2001,"mutability":"mutable","name":"owner","nameLocation":"4872:5:9","nodeType":"VariableDeclaration","scope":2008,"src":"4864:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2000,"name":"address","nodeType":"ElementaryTypeName","src":"4864:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2003,"mutability":"mutable","name":"operator","nameLocation":"4887:8:9","nodeType":"VariableDeclaration","scope":2008,"src":"4879:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2002,"name":"address","nodeType":"ElementaryTypeName","src":"4879:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4863:33:9"},"returnParameters":{"id":2007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2006,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2008,"src":"4920:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2005,"name":"bool","nodeType":"ElementaryTypeName","src":"4920:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4919:6:9"},"scope":2009,"src":"4838:88:9","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2010,"src":"267:4661:9","usedErrors":[],"usedEvents":[1908,1917,1926]}],"src":"108:4821:9"},"id":9},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","exportedSymbols":{"IERC721Receiver":[2027]},"id":2028,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2011,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"116:24:10"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":2012,"nodeType":"StructuredDocumentation","src":"142:154:10","text":" @title ERC-721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC-721 asset contracts."},"fullyImplemented":false,"id":2027,"linearizedBaseContracts":[2027],"name":"IERC721Receiver","nameLocation":"307:15:10","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2013,"nodeType":"StructuredDocumentation","src":"329:500:10","text":" @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."},"functionSelector":"150b7a02","id":2026,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"843:16:10","nodeType":"FunctionDefinition","parameters":{"id":2022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2015,"mutability":"mutable","name":"operator","nameLocation":"877:8:10","nodeType":"VariableDeclaration","scope":2026,"src":"869:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2014,"name":"address","nodeType":"ElementaryTypeName","src":"869:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2017,"mutability":"mutable","name":"from","nameLocation":"903:4:10","nodeType":"VariableDeclaration","scope":2026,"src":"895:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2016,"name":"address","nodeType":"ElementaryTypeName","src":"895:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2019,"mutability":"mutable","name":"tokenId","nameLocation":"925:7:10","nodeType":"VariableDeclaration","scope":2026,"src":"917:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2018,"name":"uint256","nodeType":"ElementaryTypeName","src":"917:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2021,"mutability":"mutable","name":"data","nameLocation":"957:4:10","nodeType":"VariableDeclaration","scope":2026,"src":"942:19:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2020,"name":"bytes","nodeType":"ElementaryTypeName","src":"942:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"859:108:10"},"returnParameters":{"id":2025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2024,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2026,"src":"986:6:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2023,"name":"bytes4","nodeType":"ElementaryTypeName","src":"986:6:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"985:8:10"},"scope":2027,"src":"834:160:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2028,"src":"297:699:10","usedErrors":[],"usedEvents":[]}],"src":"116:881:10"},"id":10},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","exportedSymbols":{"ERC721":[1892],"ERC721URIStorage":[2153],"IERC165":[3576],"IERC4906":[175],"Strings":[3540]},"id":2154,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2029,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"128:24:11"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"../ERC721.sol","id":2031,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2154,"sourceUnit":1893,"src":"154:37:11","symbolAliases":[{"foreign":{"id":2030,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1892,"src":"162:6:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../../../utils/Strings.sol","id":2033,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2154,"sourceUnit":3541,"src":"192:51:11","symbolAliases":[{"foreign":{"id":2032,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3540,"src":"200:7:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC4906.sol","file":"../../../interfaces/IERC4906.sol","id":2035,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2154,"sourceUnit":176,"src":"244:58:11","symbolAliases":[{"foreign":{"id":2034,"name":"IERC4906","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":175,"src":"252:8:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","file":"../../../interfaces/IERC165.sol","id":2037,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2154,"sourceUnit":152,"src":"303:56:11","symbolAliases":[{"foreign":{"id":2036,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3576,"src":"311:7:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2039,"name":"IERC4906","nameLocations":["470:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":175,"src":"470:8:11"},"id":2040,"nodeType":"InheritanceSpecifier","src":"470:8:11"},{"baseName":{"id":2041,"name":"ERC721","nameLocations":["480:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":1892,"src":"480:6:11"},"id":2042,"nodeType":"InheritanceSpecifier","src":"480:6:11"}],"canonicalName":"ERC721URIStorage","contractDependencies":[],"contractKind":"contract","documentation":{"id":2038,"nodeType":"StructuredDocumentation","src":"361:70:11","text":" @dev ERC-721 token with storage based token URI management."},"fullyImplemented":true,"id":2153,"linearizedBaseContracts":[2153,1892,269,2181,175,2009,3564,3576,2288],"name":"ERC721URIStorage","nameLocation":"450:16:11","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2045,"libraryName":{"id":2043,"name":"Strings","nameLocations":["499:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":3540,"src":"499:7:11"},"nodeType":"UsingForDirective","src":"493:26:11","typeName":{"id":2044,"name":"uint256","nodeType":"ElementaryTypeName","src":"511:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":true,"id":2051,"mutability":"constant","name":"ERC4906_INTERFACE_ID","nameLocation":"731:20:11","nodeType":"VariableDeclaration","scope":2153,"src":"707:65:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2046,"name":"bytes4","nodeType":"ElementaryTypeName","src":"707:6:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"arguments":[{"hexValue":"30783439303634393036","id":2049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"761:10:11","typeDescriptions":{"typeIdentifier":"t_rational_1225148678_by_1","typeString":"int_const 1225148678"},"value":"0x49064906"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1225148678_by_1","typeString":"int_const 1225148678"}],"id":2048,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"754:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":2047,"name":"bytes4","nodeType":"ElementaryTypeName","src":"754:6:11","typeDescriptions":{}}},"id":2050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"754:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"private"},{"constant":false,"id":2055,"mutability":"mutable","name":"_tokenURIs","nameLocation":"861:10:11","nodeType":"VariableDeclaration","scope":2153,"src":"818:53:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"typeName":{"id":2054,"keyName":"tokenId","keyNameLocation":"834:7:11","keyType":{"id":2052,"name":"uint256","nodeType":"ElementaryTypeName","src":"826:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"818:34:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2053,"name":"string","nodeType":"ElementaryTypeName","src":"845:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"visibility":"private"},{"baseFunctions":[1036,3575],"body":{"id":2075,"nodeType":"Block","src":"1046:99:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2066,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2058,"src":"1063:11:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2067,"name":"ERC4906_INTERFACE_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"1078:20:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1063:35:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":2071,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2058,"src":"1126:11:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":2069,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1102:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721URIStorage_$2153_$","typeString":"type(contract super ERC721URIStorage)"}},"id":2070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1108:17:11","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":1036,"src":"1102:23:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":2072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1102:36:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1063:75:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2065,"id":2074,"nodeType":"Return","src":"1056:82:11"}]},"documentation":{"id":2056,"nodeType":"StructuredDocumentation","src":"878:55:11","text":" @dev See {IERC165-supportsInterface}"},"functionSelector":"01ffc9a7","id":2076,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"947:17:11","nodeType":"FunctionDefinition","overrides":{"id":2062,"nodeType":"OverrideSpecifier","overrides":[{"id":2060,"name":"ERC721","nameLocations":["1014:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":1892,"src":"1014:6:11"},{"id":2061,"name":"IERC165","nameLocations":["1022:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":3576,"src":"1022:7:11"}],"src":"1005:25:11"},"parameters":{"id":2059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2058,"mutability":"mutable","name":"interfaceId","nameLocation":"972:11:11","nodeType":"VariableDeclaration","scope":2076,"src":"965:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2057,"name":"bytes4","nodeType":"ElementaryTypeName","src":"965:6:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"964:20:11"},"returnParameters":{"id":2065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2064,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2076,"src":"1040:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2063,"name":"bool","nodeType":"ElementaryTypeName","src":"1040:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1039:6:11"},"scope":2153,"src":"938:207:11","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1131],"body":{"id":2132,"nodeType":"Block","src":"1299:505:11","statements":[{"expression":{"arguments":[{"id":2086,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2079,"src":"1323:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2085,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1891,"src":"1309:13:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1309:22:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2088,"nodeType":"ExpressionStatement","src":"1309:22:11"},{"assignments":[2090],"declarations":[{"constant":false,"id":2090,"mutability":"mutable","name":"_tokenURI","nameLocation":"1356:9:11","nodeType":"VariableDeclaration","scope":2132,"src":"1342:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2089,"name":"string","nodeType":"ElementaryTypeName","src":"1342:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2094,"initialValue":{"baseExpression":{"id":2091,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2055,"src":"1368:10:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":2093,"indexExpression":{"id":2092,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2079,"src":"1379:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1368:19:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1342:45:11"},{"assignments":[2096],"declarations":[{"constant":false,"id":2096,"mutability":"mutable","name":"base","nameLocation":"1411:4:11","nodeType":"VariableDeclaration","scope":2132,"src":"1397:18:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2095,"name":"string","nodeType":"ElementaryTypeName","src":"1397:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2099,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2097,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1140,"src":"1418:8:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":2098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1418:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1397:31:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2102,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2096,"src":"1507:4:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2101,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1501:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2100,"name":"bytes","nodeType":"ElementaryTypeName","src":"1501:5:11","typeDescriptions":{}}},"id":2103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1501:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1513:6:11","memberName":"length","nodeType":"MemberAccess","src":"1501:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1523:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1501:23:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2110,"nodeType":"IfStatement","src":"1497:70:11","trueBody":{"id":2109,"nodeType":"Block","src":"1526:41:11","statements":[{"expression":{"id":2107,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2090,"src":"1547:9:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2084,"id":2108,"nodeType":"Return","src":"1540:16:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2113,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2090,"src":"1672:9:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2112,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1666:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2111,"name":"bytes","nodeType":"ElementaryTypeName","src":"1666:5:11","typeDescriptions":{}}},"id":2114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1666:16:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1683:6:11","memberName":"length","nodeType":"MemberAccess","src":"1666:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1692:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1666:27:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2126,"nodeType":"IfStatement","src":"1662:95:11","trueBody":{"id":2125,"nodeType":"Block","src":"1695:62:11","statements":[{"expression":{"arguments":[{"id":2121,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2096,"src":"1730:4:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2122,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2090,"src":"1736:9:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2119,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1716:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2118,"name":"string","nodeType":"ElementaryTypeName","src":"1716:6:11","typeDescriptions":{}}},"id":2120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1723:6:11","memberName":"concat","nodeType":"MemberAccess","src":"1716:13:11","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":2123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1716:30:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2084,"id":2124,"nodeType":"Return","src":"1709:37:11"}]}},{"expression":{"arguments":[{"id":2129,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2079,"src":"1789:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2127,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1774:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721URIStorage_$2153_$","typeString":"type(contract super ERC721URIStorage)"}},"id":2128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1780:8:11","memberName":"tokenURI","nodeType":"MemberAccess","referencedDeclaration":1131,"src":"1774:14:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) view returns (string memory)"}},"id":2130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1774:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2084,"id":2131,"nodeType":"Return","src":"1767:30:11"}]},"documentation":{"id":2077,"nodeType":"StructuredDocumentation","src":"1151:55:11","text":" @dev See {IERC721Metadata-tokenURI}."},"functionSelector":"c87b56dd","id":2133,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"1220:8:11","nodeType":"FunctionDefinition","overrides":{"id":2081,"nodeType":"OverrideSpecifier","overrides":[],"src":"1266:8:11"},"parameters":{"id":2080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2079,"mutability":"mutable","name":"tokenId","nameLocation":"1237:7:11","nodeType":"VariableDeclaration","scope":2133,"src":"1229:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2078,"name":"uint256","nodeType":"ElementaryTypeName","src":"1229:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1228:17:11"},"returnParameters":{"id":2084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2083,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2133,"src":"1284:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2082,"name":"string","nodeType":"ElementaryTypeName","src":"1284:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1283:15:11"},"scope":2153,"src":"1211:593:11","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2151,"nodeType":"Block","src":"2004:86:11","statements":[{"expression":{"id":2145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2141,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2055,"src":"2014:10:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":2143,"indexExpression":{"id":2142,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2136,"src":"2025:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2014:19:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2144,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2138,"src":"2036:9:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2014:31:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2146,"nodeType":"ExpressionStatement","src":"2014:31:11"},{"eventCall":{"arguments":[{"id":2148,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2136,"src":"2075:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2147,"name":"MetadataUpdate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"2060:14:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":2149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2060:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2150,"nodeType":"EmitStatement","src":"2055:28:11"}]},"documentation":{"id":2134,"nodeType":"StructuredDocumentation","src":"1810:108:11","text":" @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n Emits {MetadataUpdate}."},"id":2152,"implemented":true,"kind":"function","modifiers":[],"name":"_setTokenURI","nameLocation":"1932:12:11","nodeType":"FunctionDefinition","parameters":{"id":2139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2136,"mutability":"mutable","name":"tokenId","nameLocation":"1953:7:11","nodeType":"VariableDeclaration","scope":2152,"src":"1945:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2135,"name":"uint256","nodeType":"ElementaryTypeName","src":"1945:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2138,"mutability":"mutable","name":"_tokenURI","nameLocation":"1976:9:11","nodeType":"VariableDeclaration","scope":2152,"src":"1962:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2137,"name":"string","nodeType":"ElementaryTypeName","src":"1962:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1944:42:11"},"returnParameters":{"id":2140,"nodeType":"ParameterList","parameters":[],"src":"2004:0:11"},"scope":2153,"src":"1923:167:11","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":2154,"src":"432:1660:11","usedErrors":[227,232,241,246,251,258,263,268],"usedEvents":[167,174,1908,1917,1926]}],"src":"128:1965:11"},"id":11},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","exportedSymbols":{"IERC721":[2009],"IERC721Metadata":[2181]},"id":2182,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2155,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"127:24:12"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../IERC721.sol","id":2157,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2182,"sourceUnit":2010,"src":"153:39:12","symbolAliases":[{"foreign":{"id":2156,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2009,"src":"161:7:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2159,"name":"IERC721","nameLocations":["357:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":2009,"src":"357:7:12"},"id":2160,"nodeType":"InheritanceSpecifier","src":"357:7:12"}],"canonicalName":"IERC721Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":2158,"nodeType":"StructuredDocumentation","src":"194:133:12","text":" @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":2181,"linearizedBaseContracts":[2181,2009,3576],"name":"IERC721Metadata","nameLocation":"338:15:12","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2161,"nodeType":"StructuredDocumentation","src":"371:58:12","text":" @dev Returns the token collection name."},"functionSelector":"06fdde03","id":2166,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"443:4:12","nodeType":"FunctionDefinition","parameters":{"id":2162,"nodeType":"ParameterList","parameters":[],"src":"447:2:12"},"returnParameters":{"id":2165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2164,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2166,"src":"473:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2163,"name":"string","nodeType":"ElementaryTypeName","src":"473:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"472:15:12"},"scope":2181,"src":"434:54:12","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2167,"nodeType":"StructuredDocumentation","src":"494:60:12","text":" @dev Returns the token collection symbol."},"functionSelector":"95d89b41","id":2172,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"568:6:12","nodeType":"FunctionDefinition","parameters":{"id":2168,"nodeType":"ParameterList","parameters":[],"src":"574:2:12"},"returnParameters":{"id":2171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2170,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2172,"src":"600:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2169,"name":"string","nodeType":"ElementaryTypeName","src":"600:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"599:15:12"},"scope":2181,"src":"559:56:12","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2173,"nodeType":"StructuredDocumentation","src":"621:90:12","text":" @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"functionSelector":"c87b56dd","id":2180,"implemented":false,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"725:8:12","nodeType":"FunctionDefinition","parameters":{"id":2176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2175,"mutability":"mutable","name":"tokenId","nameLocation":"742:7:12","nodeType":"VariableDeclaration","scope":2180,"src":"734:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2174,"name":"uint256","nodeType":"ElementaryTypeName","src":"734:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"733:17:12"},"returnParameters":{"id":2179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2178,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2180,"src":"774:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2177,"name":"string","nodeType":"ElementaryTypeName","src":"774:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"773:15:12"},"scope":2181,"src":"716:73:12","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2182,"src":"328:463:12","usedErrors":[],"usedEvents":[1908,1917,1926]}],"src":"127:665:12"},"id":12},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol","exportedSymbols":{"ERC721Utils":[2258],"IERC721Errors":[269],"IERC721Receiver":[2027]},"id":2259,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2183,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"118:24:13"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","file":"../IERC721Receiver.sol","id":2185,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2259,"sourceUnit":2028,"src":"144:55:13","symbolAliases":[{"foreign":{"id":2184,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"152:15:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../../interfaces/draft-IERC6093.sol","id":2187,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2259,"sourceUnit":317,"src":"200:69:13","symbolAliases":[{"foreign":{"id":2186,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":269,"src":"208:13:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC721Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":2188,"nodeType":"StructuredDocumentation","src":"271:159:13","text":" @dev Library that provide common ERC-721 utility functions.\n See https://eips.ethereum.org/EIPS/eip-721[ERC-721].\n _Available since v5.1._"},"fullyImplemented":true,"id":2258,"linearizedBaseContracts":[2258],"name":"ERC721Utils","nameLocation":"439:11:13","nodeType":"ContractDefinition","nodes":[{"body":{"id":2256,"nodeType":"Block","src":"1151:758:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2202,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2195,"src":"1165:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1168:4:13","memberName":"code","nodeType":"MemberAccess","src":"1165:7:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1173:6:13","memberName":"length","nodeType":"MemberAccess","src":"1165:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1182:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1165:18:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2255,"nodeType":"IfStatement","src":"1161:742:13","trueBody":{"id":2254,"nodeType":"Block","src":"1185:718:13","statements":[{"clauses":[{"block":{"id":2232,"nodeType":"Block","src":"1295:214:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2219,"name":"retval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2217,"src":"1317:6:13","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":2220,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"1327:15:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$2027_$","typeString":"type(contract IERC721Receiver)"}},"id":2221,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1343:16:13","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":2026,"src":"1327:32:13","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"}},"id":2222,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1360:8:13","memberName":"selector","nodeType":"MemberAccess","src":"1327:41:13","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1317:51:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2231,"nodeType":"IfStatement","src":"1313:182:13","trueBody":{"id":2230,"nodeType":"Block","src":"1370:125:13","statements":[{"errorCall":{"arguments":[{"id":2227,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2195,"src":"1473:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2224,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":269,"src":"1437:13:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Errors_$269_$","typeString":"type(contract IERC721Errors)"}},"id":2226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1451:21:13","memberName":"ERC721InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":251,"src":"1437:35:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1437:39:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2229,"nodeType":"RevertStatement","src":"1430:46:13"}]}}]},"errorName":"","id":2233,"nodeType":"TryCatchClause","parameters":{"id":2218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2217,"mutability":"mutable","name":"retval","nameLocation":"1287:6:13","nodeType":"VariableDeclaration","scope":2233,"src":"1280:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2216,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1280:6:13","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1279:15:13"},"src":"1271:238:13"},{"block":{"id":2251,"nodeType":"Block","src":"1538:355:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2237,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"1560:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1567:6:13","memberName":"length","nodeType":"MemberAccess","src":"1560:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1577:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1560:18:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2249,"nodeType":"Block","src":"1728:151:13","statements":[{"AST":{"nodeType":"YulBlock","src":"1775:86:13","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1812:2:13","type":"","value":"32"},{"name":"reason","nodeType":"YulIdentifier","src":"1816:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1808:3:13"},"nodeType":"YulFunctionCall","src":"1808:15:13"},{"arguments":[{"name":"reason","nodeType":"YulIdentifier","src":"1831:6:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1825:5:13"},"nodeType":"YulFunctionCall","src":"1825:13:13"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1801:6:13"},"nodeType":"YulFunctionCall","src":"1801:38:13"},"nodeType":"YulExpressionStatement","src":"1801:38:13"}]},"evmVersion":"paris","externalReferences":[{"declaration":2235,"isOffset":false,"isSlot":false,"src":"1816:6:13","valueSize":1},{"declaration":2235,"isOffset":false,"isSlot":false,"src":"1831:6:13","valueSize":1}],"flags":["memory-safe"],"id":2248,"nodeType":"InlineAssembly","src":"1750:111:13"}]},"id":2250,"nodeType":"IfStatement","src":"1556:323:13","trueBody":{"id":2247,"nodeType":"Block","src":"1580:142:13","statements":[{"errorCall":{"arguments":[{"id":2244,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2195,"src":"1700:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2241,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":269,"src":"1664:13:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Errors_$269_$","typeString":"type(contract IERC721Errors)"}},"id":2243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1678:21:13","memberName":"ERC721InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":251,"src":"1664:35:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1664:39:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2246,"nodeType":"RevertStatement","src":"1657:46:13"}]}}]},"errorName":"","id":2252,"nodeType":"TryCatchClause","parameters":{"id":2236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2235,"mutability":"mutable","name":"reason","nameLocation":"1530:6:13","nodeType":"VariableDeclaration","scope":2252,"src":"1517:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2234,"name":"bytes","nodeType":"ElementaryTypeName","src":"1517:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1516:21:13"},"src":"1510:383:13"}],"externalCall":{"arguments":[{"id":2211,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2191,"src":"1240:8:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2212,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2193,"src":"1250:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2213,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2197,"src":"1256:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2214,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2199,"src":"1265:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":2208,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2195,"src":"1219:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2207,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"1203:15:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$2027_$","typeString":"type(contract IERC721Receiver)"}},"id":2209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1203:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Receiver_$2027","typeString":"contract IERC721Receiver"}},"id":2210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1223:16:13","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":2026,"src":"1203:36:13","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":2215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1203:67:13","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":2253,"nodeType":"TryStatement","src":"1199:694:13"}]}}]},"documentation":{"id":2189,"nodeType":"StructuredDocumentation","src":"457:523:13","text":" @dev Performs an acceptance check for the provided `operator` by calling {IERC721-onERC721Received}\n on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n Otherwise, the recipient must implement {IERC721Receiver-onERC721Received} and return the acceptance magic value to accept\n the transfer."},"id":2257,"implemented":true,"kind":"function","modifiers":[],"name":"checkOnERC721Received","nameLocation":"994:21:13","nodeType":"FunctionDefinition","parameters":{"id":2200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2191,"mutability":"mutable","name":"operator","nameLocation":"1033:8:13","nodeType":"VariableDeclaration","scope":2257,"src":"1025:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2190,"name":"address","nodeType":"ElementaryTypeName","src":"1025:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2193,"mutability":"mutable","name":"from","nameLocation":"1059:4:13","nodeType":"VariableDeclaration","scope":2257,"src":"1051:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2192,"name":"address","nodeType":"ElementaryTypeName","src":"1051:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2195,"mutability":"mutable","name":"to","nameLocation":"1081:2:13","nodeType":"VariableDeclaration","scope":2257,"src":"1073:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2194,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2197,"mutability":"mutable","name":"tokenId","nameLocation":"1101:7:13","nodeType":"VariableDeclaration","scope":2257,"src":"1093:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2196,"name":"uint256","nodeType":"ElementaryTypeName","src":"1093:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2199,"mutability":"mutable","name":"data","nameLocation":"1131:4:13","nodeType":"VariableDeclaration","scope":2257,"src":"1118:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2198,"name":"bytes","nodeType":"ElementaryTypeName","src":"1118:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1015:126:13"},"returnParameters":{"id":2201,"nodeType":"ParameterList","parameters":[],"src":"1151:0:13"},"scope":2258,"src":"985:924:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":2259,"src":"431:1480:13","usedErrors":[],"usedEvents":[]}],"src":"118:1794:13"},"id":13},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[2288]},"id":2289,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2260,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:14"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":2261,"nodeType":"StructuredDocumentation","src":"127:496:14","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":2288,"linearizedBaseContracts":[2288],"name":"Context","nameLocation":"642:7:14","nodeType":"ContractDefinition","nodes":[{"body":{"id":2269,"nodeType":"Block","src":"718:34:14","statements":[{"expression":{"expression":{"id":2266,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:14","memberName":"sender","nodeType":"MemberAccess","src":"735:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2265,"id":2268,"nodeType":"Return","src":"728:17:14"}]},"id":2270,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:14","nodeType":"FunctionDefinition","parameters":{"id":2262,"nodeType":"ParameterList","parameters":[],"src":"675:2:14"},"returnParameters":{"id":2265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2264,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2270,"src":"709:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2263,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:14"},"scope":2288,"src":"656:96:14","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2278,"nodeType":"Block","src":"825:32:14","statements":[{"expression":{"expression":{"id":2275,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:14","memberName":"data","nodeType":"MemberAccess","src":"842:8:14","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":2274,"id":2277,"nodeType":"Return","src":"835:15:14"}]},"id":2279,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:14","nodeType":"FunctionDefinition","parameters":{"id":2271,"nodeType":"ParameterList","parameters":[],"src":"775:2:14"},"returnParameters":{"id":2274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2273,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2279,"src":"809:14:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2272,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:14"},"scope":2288,"src":"758:99:14","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2286,"nodeType":"Block","src":"935:25:14","statements":[{"expression":{"hexValue":"30","id":2284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2283,"id":2285,"nodeType":"Return","src":"945:8:14"}]},"id":2287,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:14","nodeType":"FunctionDefinition","parameters":{"id":2280,"nodeType":"ParameterList","parameters":[],"src":"892:2:14"},"returnParameters":{"id":2283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2282,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2287,"src":"926:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2281,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:14"},"scope":2288,"src":"863:97:14","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":2289,"src":"624:338:14","usedErrors":[],"usedEvents":[]}],"src":"101:862:14"},"id":14},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[2340]},"id":2341,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2290,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:15"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":2291,"nodeType":"StructuredDocumentation","src":"125:489:15","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":2340,"linearizedBaseContracts":[2340],"name":"Panic","nameLocation":"665:5:15","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":2292,"nodeType":"StructuredDocumentation","src":"677:36:15","text":"@dev generic / unspecified error"},"id":2295,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:15","nodeType":"VariableDeclaration","scope":2340,"src":"718:40:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2293,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":2294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":2296,"nodeType":"StructuredDocumentation","src":"764:37:15","text":"@dev used by the assert() builtin"},"id":2299,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:15","nodeType":"VariableDeclaration","scope":2340,"src":"806:39:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2297,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":2298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":2300,"nodeType":"StructuredDocumentation","src":"851:41:15","text":"@dev arithmetic underflow or overflow"},"id":2303,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:15","nodeType":"VariableDeclaration","scope":2340,"src":"897:47:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2301,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":2302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:15","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":2304,"nodeType":"StructuredDocumentation","src":"950:35:15","text":"@dev division or modulo by zero"},"id":2307,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:15","nodeType":"VariableDeclaration","scope":2340,"src":"990:49:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2305,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":2306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:15","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":2308,"nodeType":"StructuredDocumentation","src":"1045:30:15","text":"@dev enum conversion error"},"id":2311,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:15","nodeType":"VariableDeclaration","scope":2340,"src":"1080:54:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2309,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":2310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:15","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":2312,"nodeType":"StructuredDocumentation","src":"1140:36:15","text":"@dev invalid encoding in storage"},"id":2315,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:15","nodeType":"VariableDeclaration","scope":2340,"src":"1181:55:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2313,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":2314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:15","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":2316,"nodeType":"StructuredDocumentation","src":"1242:24:15","text":"@dev empty array pop"},"id":2319,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:15","nodeType":"VariableDeclaration","scope":2340,"src":"1271:48:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2317,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":2318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:15","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":2320,"nodeType":"StructuredDocumentation","src":"1325:35:15","text":"@dev array out of bounds access"},"id":2323,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:15","nodeType":"VariableDeclaration","scope":2340,"src":"1365:52:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2321,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":2322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:15","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":2324,"nodeType":"StructuredDocumentation","src":"1423:65:15","text":"@dev resource error (too large allocation or too large array)"},"id":2327,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:15","nodeType":"VariableDeclaration","scope":2340,"src":"1493:47:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2325,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":2326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:15","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":2328,"nodeType":"StructuredDocumentation","src":"1546:42:15","text":"@dev calling invalid internal function"},"id":2331,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:15","nodeType":"VariableDeclaration","scope":2340,"src":"1593:58:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2329,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":2330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:15","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":2338,"nodeType":"Block","src":"1819:151:15","statements":[{"AST":{"nodeType":"YulBlock","src":"1854:110:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1875:4:15","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1881:10:15","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1868:6:15"},"nodeType":"YulFunctionCall","src":"1868:24:15"},"nodeType":"YulExpressionStatement","src":"1868:24:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1912:4:15","type":"","value":"0x20"},{"name":"code","nodeType":"YulIdentifier","src":"1918:4:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1905:6:15"},"nodeType":"YulFunctionCall","src":"1905:18:15"},"nodeType":"YulExpressionStatement","src":"1905:18:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1943:4:15","type":"","value":"0x1c"},{"kind":"number","nodeType":"YulLiteral","src":"1949:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1936:6:15"},"nodeType":"YulFunctionCall","src":"1936:18:15"},"nodeType":"YulExpressionStatement","src":"1936:18:15"}]},"evmVersion":"paris","externalReferences":[{"declaration":2334,"isOffset":false,"isSlot":false,"src":"1918:4:15","valueSize":1}],"flags":["memory-safe"],"id":2337,"nodeType":"InlineAssembly","src":"1829:135:15"}]},"documentation":{"id":2332,"nodeType":"StructuredDocumentation","src":"1658:113:15","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":2339,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:15","nodeType":"FunctionDefinition","parameters":{"id":2335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2334,"mutability":"mutable","name":"code","nameLocation":"1799:4:15","nodeType":"VariableDeclaration","scope":2339,"src":"1791:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2333,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:15"},"returnParameters":{"id":2336,"nodeType":"ParameterList","parameters":[],"src":"1819:0:15"},"scope":2340,"src":"1776:194:15","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2341,"src":"657:1315:15","usedErrors":[],"usedEvents":[]}],"src":"99:1874:15"},"id":15},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[5182],"SafeCast":[6947],"SignedMath":[7091],"Strings":[3540]},"id":3541,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2342,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:16"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":2344,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3541,"sourceUnit":5183,"src":"127:37:16","symbolAliases":[{"foreign":{"id":2343,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5182,"src":"135:4:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./math/SafeCast.sol","id":2346,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3541,"sourceUnit":6948,"src":"165:45:16","symbolAliases":[{"foreign":{"id":2345,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6947,"src":"173:8:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":2348,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3541,"sourceUnit":7092,"src":"211:49:16","symbolAliases":[{"foreign":{"id":2347,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7091,"src":"219:10:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":2349,"nodeType":"StructuredDocumentation","src":"262:34:16","text":" @dev String operations."},"fullyImplemented":true,"id":3540,"linearizedBaseContracts":[3540],"name":"Strings","nameLocation":"305:7:16","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2351,"libraryName":{"id":2350,"name":"SafeCast","nameLocations":["325:8:16"],"nodeType":"IdentifierPath","referencedDeclaration":6947,"src":"325:8:16"},"nodeType":"UsingForDirective","src":"319:21:16"},{"constant":true,"id":2354,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"371:10:16","nodeType":"VariableDeclaration","scope":3540,"src":"346:56:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":2352,"name":"bytes16","nodeType":"ElementaryTypeName","src":"346:7:16","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":2353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"384:18:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":2357,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"431:14:16","nodeType":"VariableDeclaration","scope":3540,"src":"408:42:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2355,"name":"uint8","nodeType":"ElementaryTypeName","src":"408:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":2356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"448:2:16","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"documentation":{"id":2358,"nodeType":"StructuredDocumentation","src":"457:81:16","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":2364,"name":"StringsInsufficientHexLength","nameLocation":"549:28:16","nodeType":"ErrorDefinition","parameters":{"id":2363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2360,"mutability":"mutable","name":"value","nameLocation":"586:5:16","nodeType":"VariableDeclaration","scope":2364,"src":"578:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2359,"name":"uint256","nodeType":"ElementaryTypeName","src":"578:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2362,"mutability":"mutable","name":"length","nameLocation":"601:6:16","nodeType":"VariableDeclaration","scope":2364,"src":"593:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2361,"name":"uint256","nodeType":"ElementaryTypeName","src":"593:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"577:31:16"},"src":"543:66:16"},{"documentation":{"id":2365,"nodeType":"StructuredDocumentation","src":"615:108:16","text":" @dev The string being parsed contains characters that are not in scope of the given base."},"errorSelector":"94e2737e","id":2367,"name":"StringsInvalidChar","nameLocation":"734:18:16","nodeType":"ErrorDefinition","parameters":{"id":2366,"nodeType":"ParameterList","parameters":[],"src":"752:2:16"},"src":"728:27:16"},{"documentation":{"id":2368,"nodeType":"StructuredDocumentation","src":"761:84:16","text":" @dev The string being parsed is not a properly formatted address."},"errorSelector":"1d15ae44","id":2370,"name":"StringsInvalidAddressFormat","nameLocation":"856:27:16","nodeType":"ErrorDefinition","parameters":{"id":2369,"nodeType":"ParameterList","parameters":[],"src":"883:2:16"},"src":"850:36:16"},{"body":{"id":2417,"nodeType":"Block","src":"1058:561:16","statements":[{"id":2416,"nodeType":"UncheckedBlock","src":"1068:545:16","statements":[{"assignments":[2379],"declarations":[{"constant":false,"id":2379,"mutability":"mutable","name":"length","nameLocation":"1100:6:16","nodeType":"VariableDeclaration","scope":2416,"src":"1092:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2378,"name":"uint256","nodeType":"ElementaryTypeName","src":"1092:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2386,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2382,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2373,"src":"1120:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2380,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5182,"src":"1109:4:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5182_$","typeString":"type(library Math)"}},"id":2381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1114:5:16","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":4954,"src":"1109:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1109:17:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1129:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1109:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1092:38:16"},{"assignments":[2388],"declarations":[{"constant":false,"id":2388,"mutability":"mutable","name":"buffer","nameLocation":"1158:6:16","nodeType":"VariableDeclaration","scope":2416,"src":"1144:20:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2387,"name":"string","nodeType":"ElementaryTypeName","src":"1144:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2393,"initialValue":{"arguments":[{"id":2391,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2379,"src":"1178:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2390,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1167:10:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":2389,"name":"string","nodeType":"ElementaryTypeName","src":"1171:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":2392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1167:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1144:41:16"},{"assignments":[2395],"declarations":[{"constant":false,"id":2395,"mutability":"mutable","name":"ptr","nameLocation":"1207:3:16","nodeType":"VariableDeclaration","scope":2416,"src":"1199:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2394,"name":"uint256","nodeType":"ElementaryTypeName","src":"1199:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2396,"nodeType":"VariableDeclarationStatement","src":"1199:11:16"},{"AST":{"nodeType":"YulBlock","src":"1249:67:16","statements":[{"nodeType":"YulAssignment","src":"1267:35:16","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"1278:6:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1290:2:16","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"1294:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1286:3:16"},"nodeType":"YulFunctionCall","src":"1286:15:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1274:3:16"},"nodeType":"YulFunctionCall","src":"1274:28:16"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"1267:3:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2388,"isOffset":false,"isSlot":false,"src":"1278:6:16","valueSize":1},{"declaration":2379,"isOffset":false,"isSlot":false,"src":"1294:6:16","valueSize":1},{"declaration":2395,"isOffset":false,"isSlot":false,"src":"1267:3:16","valueSize":1}],"flags":["memory-safe"],"id":2397,"nodeType":"InlineAssembly","src":"1224:92:16"},{"body":{"id":2412,"nodeType":"Block","src":"1342:234:16","statements":[{"expression":{"id":2400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1360:5:16","subExpression":{"id":2399,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2395,"src":"1360:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2401,"nodeType":"ExpressionStatement","src":"1360:5:16"},{"AST":{"nodeType":"YulBlock","src":"1408:86:16","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1438:3:16"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1452:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"1459:2:16","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"1448:3:16"},"nodeType":"YulFunctionCall","src":"1448:14:16"},{"name":"HEX_DIGITS","nodeType":"YulIdentifier","src":"1464:10:16"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"1443:4:16"},"nodeType":"YulFunctionCall","src":"1443:32:16"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"1430:7:16"},"nodeType":"YulFunctionCall","src":"1430:46:16"},"nodeType":"YulExpressionStatement","src":"1430:46:16"}]},"evmVersion":"paris","externalReferences":[{"declaration":2354,"isOffset":false,"isSlot":false,"src":"1464:10:16","valueSize":1},{"declaration":2395,"isOffset":false,"isSlot":false,"src":"1438:3:16","valueSize":1},{"declaration":2373,"isOffset":false,"isSlot":false,"src":"1452:5:16","valueSize":1}],"flags":["memory-safe"],"id":2402,"nodeType":"InlineAssembly","src":"1383:111:16"},{"expression":{"id":2405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2403,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2373,"src":"1511:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":2404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1520:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1511:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2406,"nodeType":"ExpressionStatement","src":"1511:11:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2407,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2373,"src":"1544:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1553:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1544:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2411,"nodeType":"IfStatement","src":"1540:21:16","trueBody":{"id":2410,"nodeType":"Break","src":"1556:5:16"}}]},"condition":{"hexValue":"74727565","id":2398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1336:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":2413,"nodeType":"WhileStatement","src":"1329:247:16"},{"expression":{"id":2414,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2388,"src":"1596:6:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2377,"id":2415,"nodeType":"Return","src":"1589:13:16"}]}]},"documentation":{"id":2371,"nodeType":"StructuredDocumentation","src":"892:90:16","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":2418,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"996:8:16","nodeType":"FunctionDefinition","parameters":{"id":2374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2373,"mutability":"mutable","name":"value","nameLocation":"1013:5:16","nodeType":"VariableDeclaration","scope":2418,"src":"1005:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2372,"name":"uint256","nodeType":"ElementaryTypeName","src":"1005:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1004:15:16"},"returnParameters":{"id":2377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2376,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2418,"src":"1043:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2375,"name":"string","nodeType":"ElementaryTypeName","src":"1043:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1042:15:16"},"scope":3540,"src":"987:632:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2443,"nodeType":"Block","src":"1795:92:16","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2429,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2421,"src":"1826:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":2430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1834:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1826:9:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":2433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1844:2:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":2434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1826:20:16","trueExpression":{"hexValue":"2d","id":2432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1838:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":2438,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2421,"src":"1872:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":2436,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7091,"src":"1857:10:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$7091_$","typeString":"type(library SignedMath)"}},"id":2437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1868:3:16","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":7090,"src":"1857:14:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":2439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1857:21:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2435,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"1848:8:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1848:31:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2427,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1812:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2426,"name":"string","nodeType":"ElementaryTypeName","src":"1812:6:16","typeDescriptions":{}}},"id":2428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1819:6:16","memberName":"concat","nodeType":"MemberAccess","src":"1812:13:16","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":2441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1812:68:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2425,"id":2442,"nodeType":"Return","src":"1805:75:16"}]},"documentation":{"id":2419,"nodeType":"StructuredDocumentation","src":"1625:89:16","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":2444,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"1728:14:16","nodeType":"FunctionDefinition","parameters":{"id":2422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2421,"mutability":"mutable","name":"value","nameLocation":"1750:5:16","nodeType":"VariableDeclaration","scope":2444,"src":"1743:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2420,"name":"int256","nodeType":"ElementaryTypeName","src":"1743:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1742:14:16"},"returnParameters":{"id":2425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2424,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2444,"src":"1780:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2423,"name":"string","nodeType":"ElementaryTypeName","src":"1780:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1779:15:16"},"scope":3540,"src":"1719:168:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2463,"nodeType":"Block","src":"2066:100:16","statements":[{"id":2462,"nodeType":"UncheckedBlock","src":"2076:84:16","statements":[{"expression":{"arguments":[{"id":2453,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2447,"src":"2119:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2456,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2447,"src":"2138:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2454,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5182,"src":"2126:4:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5182_$","typeString":"type(library Math)"}},"id":2455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2131:6:16","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":5125,"src":"2126:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2126:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2147:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2126:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2452,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2464,2547,2567],"referencedDeclaration":2547,"src":"2107:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2107:42:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2451,"id":2461,"nodeType":"Return","src":"2100:49:16"}]}]},"documentation":{"id":2445,"nodeType":"StructuredDocumentation","src":"1893:94:16","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":2464,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2001:11:16","nodeType":"FunctionDefinition","parameters":{"id":2448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2447,"mutability":"mutable","name":"value","nameLocation":"2021:5:16","nodeType":"VariableDeclaration","scope":2464,"src":"2013:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2446,"name":"uint256","nodeType":"ElementaryTypeName","src":"2013:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2012:15:16"},"returnParameters":{"id":2451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2450,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2464,"src":"2051:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2449,"name":"string","nodeType":"ElementaryTypeName","src":"2051:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2050:15:16"},"scope":3540,"src":"1992:174:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2546,"nodeType":"Block","src":"2379:435:16","statements":[{"assignments":[2475],"declarations":[{"constant":false,"id":2475,"mutability":"mutable","name":"localValue","nameLocation":"2397:10:16","nodeType":"VariableDeclaration","scope":2546,"src":"2389:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2474,"name":"uint256","nodeType":"ElementaryTypeName","src":"2389:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2477,"initialValue":{"id":2476,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2467,"src":"2410:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2389:26:16"},{"assignments":[2479],"declarations":[{"constant":false,"id":2479,"mutability":"mutable","name":"buffer","nameLocation":"2438:6:16","nodeType":"VariableDeclaration","scope":2546,"src":"2425:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2478,"name":"bytes","nodeType":"ElementaryTypeName","src":"2425:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2488,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2457:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2483,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"2461:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2457:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":2485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2470:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2457:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2481,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2447:9:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2480,"name":"bytes","nodeType":"ElementaryTypeName","src":"2451:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2447:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2425:47:16"},{"expression":{"id":2493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2489,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2479,"src":"2482:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2491,"indexExpression":{"hexValue":"30","id":2490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2489:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2482:9:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2494:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2482:15:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2494,"nodeType":"ExpressionStatement","src":"2482:15:16"},{"expression":{"id":2499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2495,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2479,"src":"2507:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2497,"indexExpression":{"hexValue":"31","id":2496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2514:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2507:9:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":2498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2519:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2507:15:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2500,"nodeType":"ExpressionStatement","src":"2507:15:16"},{"body":{"id":2529,"nodeType":"Block","src":"2577:95:16","statements":[{"expression":{"id":2523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2515,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2479,"src":"2591:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2517,"indexExpression":{"id":2516,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2502,"src":"2598:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2591:9:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2518,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2354,"src":"2603:10:16","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":2522,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2519,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2475,"src":"2614:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2627:3:16","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2614:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2603:28:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2591:40:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2524,"nodeType":"ExpressionStatement","src":"2591:40:16"},{"expression":{"id":2527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2525,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2475,"src":"2645:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2660:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2645:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2528,"nodeType":"ExpressionStatement","src":"2645:16:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2509,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2502,"src":"2565:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2569:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2565:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2530,"initializationExpression":{"assignments":[2502],"declarations":[{"constant":false,"id":2502,"mutability":"mutable","name":"i","nameLocation":"2545:1:16","nodeType":"VariableDeclaration","scope":2530,"src":"2537:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2501,"name":"uint256","nodeType":"ElementaryTypeName","src":"2537:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2508,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2549:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2504,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"2553:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2549:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2562:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2549:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2537:26:16"},"loopExpression":{"expression":{"id":2513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2572:3:16","subExpression":{"id":2512,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2502,"src":"2574:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2514,"nodeType":"ExpressionStatement","src":"2572:3:16"},"nodeType":"ForStatement","src":"2532:140:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2531,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2475,"src":"2685:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2699:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2685:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2540,"nodeType":"IfStatement","src":"2681:96:16","trueBody":{"id":2539,"nodeType":"Block","src":"2702:75:16","statements":[{"errorCall":{"arguments":[{"id":2535,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2467,"src":"2752:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2536,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"2759:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2534,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2364,"src":"2723:28:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":2537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:43:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2538,"nodeType":"RevertStatement","src":"2716:50:16"}]}},{"expression":{"arguments":[{"id":2543,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2479,"src":"2800:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2542,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2793:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2541,"name":"string","nodeType":"ElementaryTypeName","src":"2793:6:16","typeDescriptions":{}}},"id":2544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2793:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2473,"id":2545,"nodeType":"Return","src":"2786:21:16"}]},"documentation":{"id":2465,"nodeType":"StructuredDocumentation","src":"2172:112:16","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":2547,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2298:11:16","nodeType":"FunctionDefinition","parameters":{"id":2470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2467,"mutability":"mutable","name":"value","nameLocation":"2318:5:16","nodeType":"VariableDeclaration","scope":2547,"src":"2310:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2466,"name":"uint256","nodeType":"ElementaryTypeName","src":"2310:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2469,"mutability":"mutable","name":"length","nameLocation":"2333:6:16","nodeType":"VariableDeclaration","scope":2547,"src":"2325:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2468,"name":"uint256","nodeType":"ElementaryTypeName","src":"2325:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2309:31:16"},"returnParameters":{"id":2473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2472,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2547,"src":"2364:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2471,"name":"string","nodeType":"ElementaryTypeName","src":"2364:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2363:15:16"},"scope":3540,"src":"2289:525:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2566,"nodeType":"Block","src":"3046:75:16","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":2560,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2550,"src":"3091:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2559,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3083:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2558,"name":"uint160","nodeType":"ElementaryTypeName","src":"3083:7:16","typeDescriptions":{}}},"id":2561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3083:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2557,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3075:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2556,"name":"uint256","nodeType":"ElementaryTypeName","src":"3075:7:16","typeDescriptions":{}}},"id":2562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3075:22:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2563,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2357,"src":"3099:14:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2555,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2464,2547,2567],"referencedDeclaration":2547,"src":"3063:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3063:51:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2554,"id":2565,"nodeType":"Return","src":"3056:58:16"}]},"documentation":{"id":2548,"nodeType":"StructuredDocumentation","src":"2820:148:16","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":2567,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2982:11:16","nodeType":"FunctionDefinition","parameters":{"id":2551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2550,"mutability":"mutable","name":"addr","nameLocation":"3002:4:16","nodeType":"VariableDeclaration","scope":2567,"src":"2994:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2549,"name":"address","nodeType":"ElementaryTypeName","src":"2994:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2993:14:16"},"returnParameters":{"id":2554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2553,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2567,"src":"3031:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2552,"name":"string","nodeType":"ElementaryTypeName","src":"3031:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3030:15:16"},"scope":3540,"src":"2973:148:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2631,"nodeType":"Block","src":"3378:642:16","statements":[{"assignments":[2576],"declarations":[{"constant":false,"id":2576,"mutability":"mutable","name":"buffer","nameLocation":"3401:6:16","nodeType":"VariableDeclaration","scope":2631,"src":"3388:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2575,"name":"bytes","nodeType":"ElementaryTypeName","src":"3388:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2583,"initialValue":{"arguments":[{"arguments":[{"id":2580,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2570,"src":"3428:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2579,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2464,2547,2567],"referencedDeclaration":2567,"src":"3416:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":2581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3416:17:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2578,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3410:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2577,"name":"bytes","nodeType":"ElementaryTypeName","src":"3410:5:16","typeDescriptions":{}}},"id":2582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3410:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3388:46:16"},{"assignments":[2585],"declarations":[{"constant":false,"id":2585,"mutability":"mutable","name":"hashValue","nameLocation":"3527:9:16","nodeType":"VariableDeclaration","scope":2631,"src":"3519:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2584,"name":"uint256","nodeType":"ElementaryTypeName","src":"3519:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2586,"nodeType":"VariableDeclarationStatement","src":"3519:17:16"},{"AST":{"nodeType":"YulBlock","src":"3571:78:16","statements":[{"nodeType":"YulAssignment","src":"3585:54:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3602:2:16","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"3620:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"3628:4:16","type":"","value":"0x22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3616:3:16"},"nodeType":"YulFunctionCall","src":"3616:17:16"},{"kind":"number","nodeType":"YulLiteral","src":"3635:2:16","type":"","value":"40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3606:9:16"},"nodeType":"YulFunctionCall","src":"3606:32:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3598:3:16"},"nodeType":"YulFunctionCall","src":"3598:41:16"},"variableNames":[{"name":"hashValue","nodeType":"YulIdentifier","src":"3585:9:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2576,"isOffset":false,"isSlot":false,"src":"3620:6:16","valueSize":1},{"declaration":2585,"isOffset":false,"isSlot":false,"src":"3585:9:16","valueSize":1}],"flags":["memory-safe"],"id":2587,"nodeType":"InlineAssembly","src":"3546:103:16"},{"body":{"id":2624,"nodeType":"Block","src":"3692:291:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2598,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2585,"src":"3798:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3810:3:16","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"3798:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":2601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3816:1:16","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"3798:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":2605,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2576,"src":"3827:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2607,"indexExpression":{"id":2606,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2589,"src":"3834:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3827:9:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2604,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3821:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2603,"name":"uint8","nodeType":"ElementaryTypeName","src":"3821:5:16","typeDescriptions":{}}},"id":2608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3821:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":2609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3840:2:16","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"3821:21:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3798:44:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2619,"nodeType":"IfStatement","src":"3794:150:16","trueBody":{"id":2618,"nodeType":"Block","src":"3844:100:16","statements":[{"expression":{"id":2616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2612,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2576,"src":"3912:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2614,"indexExpression":{"id":2613,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2589,"src":"3919:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3912:9:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":2615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3925:4:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"3912:17:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2617,"nodeType":"ExpressionStatement","src":"3912:17:16"}]}},{"expression":{"id":2622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2620,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2585,"src":"3957:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3971:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"3957:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2623,"nodeType":"ExpressionStatement","src":"3957:15:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2592,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2589,"src":"3680:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3684:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3680:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2625,"initializationExpression":{"assignments":[2589],"declarations":[{"constant":false,"id":2589,"mutability":"mutable","name":"i","nameLocation":"3672:1:16","nodeType":"VariableDeclaration","scope":2625,"src":"3664:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2588,"name":"uint256","nodeType":"ElementaryTypeName","src":"3664:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2591,"initialValue":{"hexValue":"3431","id":2590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3676:2:16","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"3664:14:16"},"loopExpression":{"expression":{"id":2596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"3687:3:16","subExpression":{"id":2595,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2589,"src":"3689:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2597,"nodeType":"ExpressionStatement","src":"3687:3:16"},"nodeType":"ForStatement","src":"3659:324:16"},{"expression":{"arguments":[{"id":2628,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2576,"src":"4006:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2627,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3999:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2626,"name":"string","nodeType":"ElementaryTypeName","src":"3999:6:16","typeDescriptions":{}}},"id":2629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3999:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2574,"id":2630,"nodeType":"Return","src":"3992:21:16"}]},"documentation":{"id":2568,"nodeType":"StructuredDocumentation","src":"3127:165:16","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"id":2632,"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"3306:19:16","nodeType":"FunctionDefinition","parameters":{"id":2571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2570,"mutability":"mutable","name":"addr","nameLocation":"3334:4:16","nodeType":"VariableDeclaration","scope":2632,"src":"3326:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2569,"name":"address","nodeType":"ElementaryTypeName","src":"3326:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3325:14:16"},"returnParameters":{"id":2574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2573,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2632,"src":"3363:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2572,"name":"string","nodeType":"ElementaryTypeName","src":"3363:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3362:15:16"},"scope":3540,"src":"3297:723:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2668,"nodeType":"Block","src":"4175:104:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2644,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2635,"src":"4198:1:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2643,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4192:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2642,"name":"bytes","nodeType":"ElementaryTypeName","src":"4192:5:16","typeDescriptions":{}}},"id":2645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4192:8:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4201:6:16","memberName":"length","nodeType":"MemberAccess","src":"4192:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2649,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2637,"src":"4217:1:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2648,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4211:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2647,"name":"bytes","nodeType":"ElementaryTypeName","src":"4211:5:16","typeDescriptions":{}}},"id":2650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4211:8:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4220:6:16","memberName":"length","nodeType":"MemberAccess","src":"4211:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4192:34:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2656,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2635,"src":"4246:1:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2655,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4240:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2654,"name":"bytes","nodeType":"ElementaryTypeName","src":"4240:5:16","typeDescriptions":{}}},"id":2657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4240:8:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2653,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4230:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4230:19:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":2662,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2637,"src":"4269:1:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2661,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4263:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2660,"name":"bytes","nodeType":"ElementaryTypeName","src":"4263:5:16","typeDescriptions":{}}},"id":2663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4263:8:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2659,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4253:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4253:19:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4230:42:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4192:80:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2641,"id":2667,"nodeType":"Return","src":"4185:87:16"}]},"documentation":{"id":2633,"nodeType":"StructuredDocumentation","src":"4026:66:16","text":" @dev Returns true if the two strings are equal."},"id":2669,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"4106:5:16","nodeType":"FunctionDefinition","parameters":{"id":2638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2635,"mutability":"mutable","name":"a","nameLocation":"4126:1:16","nodeType":"VariableDeclaration","scope":2669,"src":"4112:15:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2634,"name":"string","nodeType":"ElementaryTypeName","src":"4112:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2637,"mutability":"mutable","name":"b","nameLocation":"4143:1:16","nodeType":"VariableDeclaration","scope":2669,"src":"4129:15:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2636,"name":"string","nodeType":"ElementaryTypeName","src":"4129:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4111:34:16"},"returnParameters":{"id":2641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2640,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2669,"src":"4169:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2639,"name":"bool","nodeType":"ElementaryTypeName","src":"4169:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4168:6:16"},"scope":3540,"src":"4097:182:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2687,"nodeType":"Block","src":"4576:64:16","statements":[{"expression":{"arguments":[{"id":2678,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2672,"src":"4603:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4610:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2682,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2672,"src":"4619:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2681,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4613:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2680,"name":"bytes","nodeType":"ElementaryTypeName","src":"4613:5:16","typeDescriptions":{}}},"id":2683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4613:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4626:6:16","memberName":"length","nodeType":"MemberAccess","src":"4613:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2677,"name":"parseUint","nodeType":"Identifier","overloadedDeclarations":[2688,2719],"referencedDeclaration":2719,"src":"4593:9:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":2685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4593:40:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2676,"id":2686,"nodeType":"Return","src":"4586:47:16"}]},"documentation":{"id":2670,"nodeType":"StructuredDocumentation","src":"4285:214:16","text":" @dev Parse a decimal string and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":2688,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4513:9:16","nodeType":"FunctionDefinition","parameters":{"id":2673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2672,"mutability":"mutable","name":"input","nameLocation":"4537:5:16","nodeType":"VariableDeclaration","scope":2688,"src":"4523:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2671,"name":"string","nodeType":"ElementaryTypeName","src":"4523:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4522:21:16"},"returnParameters":{"id":2676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2675,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2688,"src":"4567:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2674,"name":"uint256","nodeType":"ElementaryTypeName","src":"4567:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4566:9:16"},"scope":3540,"src":"4504:136:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2718,"nodeType":"Block","src":"5038:153:16","statements":[{"assignments":[2701,2703],"declarations":[{"constant":false,"id":2701,"mutability":"mutable","name":"success","nameLocation":"5054:7:16","nodeType":"VariableDeclaration","scope":2718,"src":"5049:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2700,"name":"bool","nodeType":"ElementaryTypeName","src":"5049:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2703,"mutability":"mutable","name":"value","nameLocation":"5071:5:16","nodeType":"VariableDeclaration","scope":2718,"src":"5063:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2702,"name":"uint256","nodeType":"ElementaryTypeName","src":"5063:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2709,"initialValue":{"arguments":[{"id":2705,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2691,"src":"5093:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2706,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2693,"src":"5100:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2707,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2695,"src":"5107:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2704,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[2740,2777],"referencedDeclaration":2777,"src":"5080:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5080:31:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"5048:63:16"},{"condition":{"id":2711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5125:8:16","subExpression":{"id":2710,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2701,"src":"5126:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2715,"nodeType":"IfStatement","src":"5121:41:16","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2712,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2367,"src":"5142:18:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5142:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2714,"nodeType":"RevertStatement","src":"5135:27:16"}},{"expression":{"id":2716,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2703,"src":"5179:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2699,"id":2717,"nodeType":"Return","src":"5172:12:16"}]},"documentation":{"id":2689,"nodeType":"StructuredDocumentation","src":"4646:287:16","text":" @dev Variant of {parseUint} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":2719,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4947:9:16","nodeType":"FunctionDefinition","parameters":{"id":2696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2691,"mutability":"mutable","name":"input","nameLocation":"4971:5:16","nodeType":"VariableDeclaration","scope":2719,"src":"4957:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2690,"name":"string","nodeType":"ElementaryTypeName","src":"4957:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2693,"mutability":"mutable","name":"begin","nameLocation":"4986:5:16","nodeType":"VariableDeclaration","scope":2719,"src":"4978:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2692,"name":"uint256","nodeType":"ElementaryTypeName","src":"4978:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2695,"mutability":"mutable","name":"end","nameLocation":"5001:3:16","nodeType":"VariableDeclaration","scope":2719,"src":"4993:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2694,"name":"uint256","nodeType":"ElementaryTypeName","src":"4993:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4956:49:16"},"returnParameters":{"id":2699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2698,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2719,"src":"5029:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2697,"name":"uint256","nodeType":"ElementaryTypeName","src":"5029:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5028:9:16"},"scope":3540,"src":"4938:253:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2739,"nodeType":"Block","src":"5512:83:16","statements":[{"expression":{"arguments":[{"id":2730,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2722,"src":"5558:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5565:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2734,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2722,"src":"5574:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2733,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5568:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2732,"name":"bytes","nodeType":"ElementaryTypeName","src":"5568:5:16","typeDescriptions":{}}},"id":2735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5568:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5581:6:16","memberName":"length","nodeType":"MemberAccess","src":"5568:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2729,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2847,"src":"5529:28:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5529:59:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2728,"id":2738,"nodeType":"Return","src":"5522:66:16"}]},"documentation":{"id":2720,"nodeType":"StructuredDocumentation","src":"5197:215:16","text":" @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2740,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5426:12:16","nodeType":"FunctionDefinition","parameters":{"id":2723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2722,"mutability":"mutable","name":"input","nameLocation":"5453:5:16","nodeType":"VariableDeclaration","scope":2740,"src":"5439:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2721,"name":"string","nodeType":"ElementaryTypeName","src":"5439:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5438:21:16"},"returnParameters":{"id":2728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2725,"mutability":"mutable","name":"success","nameLocation":"5488:7:16","nodeType":"VariableDeclaration","scope":2740,"src":"5483:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2724,"name":"bool","nodeType":"ElementaryTypeName","src":"5483:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2727,"mutability":"mutable","name":"value","nameLocation":"5505:5:16","nodeType":"VariableDeclaration","scope":2740,"src":"5497:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2726,"name":"uint256","nodeType":"ElementaryTypeName","src":"5497:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5482:29:16"},"scope":3540,"src":"5417:178:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2776,"nodeType":"Block","src":"5997:144:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2754,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2747,"src":"6011:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2757,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2743,"src":"6023:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2756,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6017:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2755,"name":"bytes","nodeType":"ElementaryTypeName","src":"6017:5:16","typeDescriptions":{}}},"id":2758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6017:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6030:6:16","memberName":"length","nodeType":"MemberAccess","src":"6017:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6011:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2761,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2745,"src":"6040:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2762,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2747,"src":"6048:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6040:11:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6011:40:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2769,"nodeType":"IfStatement","src":"6007:63:16","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6061:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6068:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2767,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6060:10:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2753,"id":2768,"nodeType":"Return","src":"6053:17:16"}},{"expression":{"arguments":[{"id":2771,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2743,"src":"6116:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2772,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2745,"src":"6123:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2773,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2747,"src":"6130:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2770,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2847,"src":"6087:28:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6087:47:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2753,"id":2775,"nodeType":"Return","src":"6080:54:16"}]},"documentation":{"id":2741,"nodeType":"StructuredDocumentation","src":"5601:238:16","text":" @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2777,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5853:12:16","nodeType":"FunctionDefinition","parameters":{"id":2748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2743,"mutability":"mutable","name":"input","nameLocation":"5889:5:16","nodeType":"VariableDeclaration","scope":2777,"src":"5875:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2742,"name":"string","nodeType":"ElementaryTypeName","src":"5875:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2745,"mutability":"mutable","name":"begin","nameLocation":"5912:5:16","nodeType":"VariableDeclaration","scope":2777,"src":"5904:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2744,"name":"uint256","nodeType":"ElementaryTypeName","src":"5904:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2747,"mutability":"mutable","name":"end","nameLocation":"5935:3:16","nodeType":"VariableDeclaration","scope":2777,"src":"5927:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2746,"name":"uint256","nodeType":"ElementaryTypeName","src":"5927:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5865:79:16"},"returnParameters":{"id":2753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2750,"mutability":"mutable","name":"success","nameLocation":"5973:7:16","nodeType":"VariableDeclaration","scope":2777,"src":"5968:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2749,"name":"bool","nodeType":"ElementaryTypeName","src":"5968:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2752,"mutability":"mutable","name":"value","nameLocation":"5990:5:16","nodeType":"VariableDeclaration","scope":2777,"src":"5982:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2751,"name":"uint256","nodeType":"ElementaryTypeName","src":"5982:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5967:29:16"},"scope":3540,"src":"5844:297:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2846,"nodeType":"Block","src":"6521:347:16","statements":[{"assignments":[2792],"declarations":[{"constant":false,"id":2792,"mutability":"mutable","name":"buffer","nameLocation":"6544:6:16","nodeType":"VariableDeclaration","scope":2846,"src":"6531:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2791,"name":"bytes","nodeType":"ElementaryTypeName","src":"6531:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2797,"initialValue":{"arguments":[{"id":2795,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2780,"src":"6559:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2794,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6553:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2793,"name":"bytes","nodeType":"ElementaryTypeName","src":"6553:5:16","typeDescriptions":{}}},"id":2796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6553:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6531:34:16"},{"assignments":[2799],"declarations":[{"constant":false,"id":2799,"mutability":"mutable","name":"result","nameLocation":"6584:6:16","nodeType":"VariableDeclaration","scope":2846,"src":"6576:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2798,"name":"uint256","nodeType":"ElementaryTypeName","src":"6576:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2801,"initialValue":{"hexValue":"30","id":2800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6593:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6576:18:16"},{"body":{"id":2840,"nodeType":"Block","src":"6642:189:16","statements":[{"assignments":[2813],"declarations":[{"constant":false,"id":2813,"mutability":"mutable","name":"chr","nameLocation":"6662:3:16","nodeType":"VariableDeclaration","scope":2840,"src":"6656:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2812,"name":"uint8","nodeType":"ElementaryTypeName","src":"6656:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2823,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":2818,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2792,"src":"6711:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2819,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2803,"src":"6719:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2817,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3539,"src":"6688:22:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6688:33:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2816,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6681:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2815,"name":"bytes1","nodeType":"ElementaryTypeName","src":"6681:6:16","typeDescriptions":{}}},"id":2821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6681:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2814,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3527,"src":"6668:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":2822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6668:55:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"6656:67:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2824,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2813,"src":"6741:3:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"39","id":2825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6747:1:16","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"src":"6741:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2831,"nodeType":"IfStatement","src":"6737:30:16","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6758:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6765:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2829,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6757:10:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2790,"id":2830,"nodeType":"Return","src":"6750:17:16"}},{"expression":{"id":2834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2832,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2799,"src":"6781:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3130","id":2833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6791:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"6781:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2835,"nodeType":"ExpressionStatement","src":"6781:12:16"},{"expression":{"id":2838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2836,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2799,"src":"6807:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2837,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2813,"src":"6817:3:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6807:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2839,"nodeType":"ExpressionStatement","src":"6807:13:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2806,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2803,"src":"6628:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2807,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2784,"src":"6632:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6628:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2841,"initializationExpression":{"assignments":[2803],"declarations":[{"constant":false,"id":2803,"mutability":"mutable","name":"i","nameLocation":"6617:1:16","nodeType":"VariableDeclaration","scope":2841,"src":"6609:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2802,"name":"uint256","nodeType":"ElementaryTypeName","src":"6609:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2805,"initialValue":{"id":2804,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2782,"src":"6621:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6609:17:16"},"loopExpression":{"expression":{"id":2810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6637:3:16","subExpression":{"id":2809,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2803,"src":"6639:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2811,"nodeType":"ExpressionStatement","src":"6637:3:16"},"nodeType":"ForStatement","src":"6604:227:16"},{"expression":{"components":[{"hexValue":"74727565","id":2842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6848:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2843,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2799,"src":"6854:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2844,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6847:14:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2790,"id":2845,"nodeType":"Return","src":"6840:21:16"}]},"documentation":{"id":2778,"nodeType":"StructuredDocumentation","src":"6147:201:16","text":" @dev Implementation of {tryParseUint} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2847,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseUintUncheckedBounds","nameLocation":"6362:28:16","nodeType":"FunctionDefinition","parameters":{"id":2785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2780,"mutability":"mutable","name":"input","nameLocation":"6414:5:16","nodeType":"VariableDeclaration","scope":2847,"src":"6400:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2779,"name":"string","nodeType":"ElementaryTypeName","src":"6400:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2782,"mutability":"mutable","name":"begin","nameLocation":"6437:5:16","nodeType":"VariableDeclaration","scope":2847,"src":"6429:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2781,"name":"uint256","nodeType":"ElementaryTypeName","src":"6429:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2784,"mutability":"mutable","name":"end","nameLocation":"6460:3:16","nodeType":"VariableDeclaration","scope":2847,"src":"6452:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2783,"name":"uint256","nodeType":"ElementaryTypeName","src":"6452:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6390:79:16"},"returnParameters":{"id":2790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2787,"mutability":"mutable","name":"success","nameLocation":"6497:7:16","nodeType":"VariableDeclaration","scope":2847,"src":"6492:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2786,"name":"bool","nodeType":"ElementaryTypeName","src":"6492:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2789,"mutability":"mutable","name":"value","nameLocation":"6514:5:16","nodeType":"VariableDeclaration","scope":2847,"src":"6506:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2788,"name":"uint256","nodeType":"ElementaryTypeName","src":"6506:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6491:29:16"},"scope":3540,"src":"6353:515:16","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2865,"nodeType":"Block","src":"7165:63:16","statements":[{"expression":{"arguments":[{"id":2856,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2850,"src":"7191:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7198:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2860,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2850,"src":"7207:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2859,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7201:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2858,"name":"bytes","nodeType":"ElementaryTypeName","src":"7201:5:16","typeDescriptions":{}}},"id":2861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7201:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7214:6:16","memberName":"length","nodeType":"MemberAccess","src":"7201:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2855,"name":"parseInt","nodeType":"Identifier","overloadedDeclarations":[2866,2897],"referencedDeclaration":2897,"src":"7182:8:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (int256)"}},"id":2863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7182:39:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2854,"id":2864,"nodeType":"Return","src":"7175:46:16"}]},"documentation":{"id":2848,"nodeType":"StructuredDocumentation","src":"6874:216:16","text":" @dev Parse a decimal string and returns the value as a `int256`.\n Requirements:\n - The string must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":2866,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7104:8:16","nodeType":"FunctionDefinition","parameters":{"id":2851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2850,"mutability":"mutable","name":"input","nameLocation":"7127:5:16","nodeType":"VariableDeclaration","scope":2866,"src":"7113:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2849,"name":"string","nodeType":"ElementaryTypeName","src":"7113:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7112:21:16"},"returnParameters":{"id":2854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2853,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2866,"src":"7157:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2852,"name":"int256","nodeType":"ElementaryTypeName","src":"7157:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7156:8:16"},"scope":3540,"src":"7095:133:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2896,"nodeType":"Block","src":"7633:151:16","statements":[{"assignments":[2879,2881],"declarations":[{"constant":false,"id":2879,"mutability":"mutable","name":"success","nameLocation":"7649:7:16","nodeType":"VariableDeclaration","scope":2896,"src":"7644:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2878,"name":"bool","nodeType":"ElementaryTypeName","src":"7644:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2881,"mutability":"mutable","name":"value","nameLocation":"7665:5:16","nodeType":"VariableDeclaration","scope":2896,"src":"7658:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2880,"name":"int256","nodeType":"ElementaryTypeName","src":"7658:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":2887,"initialValue":{"arguments":[{"id":2883,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2869,"src":"7686:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2884,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2871,"src":"7693:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2885,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2873,"src":"7700:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2882,"name":"tryParseInt","nodeType":"Identifier","overloadedDeclarations":[2918,2960],"referencedDeclaration":2960,"src":"7674:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7674:30:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"nodeType":"VariableDeclarationStatement","src":"7643:61:16"},{"condition":{"id":2889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7718:8:16","subExpression":{"id":2888,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2879,"src":"7719:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2893,"nodeType":"IfStatement","src":"7714:41:16","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2890,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2367,"src":"7735:18:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7735:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2892,"nodeType":"RevertStatement","src":"7728:27:16"}},{"expression":{"id":2894,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2881,"src":"7772:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2877,"id":2895,"nodeType":"Return","src":"7765:12:16"}]},"documentation":{"id":2867,"nodeType":"StructuredDocumentation","src":"7234:296:16","text":" @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":2897,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7544:8:16","nodeType":"FunctionDefinition","parameters":{"id":2874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2869,"mutability":"mutable","name":"input","nameLocation":"7567:5:16","nodeType":"VariableDeclaration","scope":2897,"src":"7553:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2868,"name":"string","nodeType":"ElementaryTypeName","src":"7553:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2871,"mutability":"mutable","name":"begin","nameLocation":"7582:5:16","nodeType":"VariableDeclaration","scope":2897,"src":"7574:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2870,"name":"uint256","nodeType":"ElementaryTypeName","src":"7574:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2873,"mutability":"mutable","name":"end","nameLocation":"7597:3:16","nodeType":"VariableDeclaration","scope":2897,"src":"7589:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2872,"name":"uint256","nodeType":"ElementaryTypeName","src":"7589:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7552:49:16"},"returnParameters":{"id":2877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2876,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2897,"src":"7625:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2875,"name":"int256","nodeType":"ElementaryTypeName","src":"7625:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7624:8:16"},"scope":3540,"src":"7535:249:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2917,"nodeType":"Block","src":"8175:82:16","statements":[{"expression":{"arguments":[{"id":2908,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2900,"src":"8220:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8227:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2912,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2900,"src":"8236:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2911,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8230:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2910,"name":"bytes","nodeType":"ElementaryTypeName","src":"8230:5:16","typeDescriptions":{}}},"id":2913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8230:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8243:6:16","memberName":"length","nodeType":"MemberAccess","src":"8230:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2907,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3081,"src":"8192:27:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8192:58:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2906,"id":2916,"nodeType":"Return","src":"8185:65:16"}]},"documentation":{"id":2898,"nodeType":"StructuredDocumentation","src":"7790:287:16","text":" @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":2918,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8091:11:16","nodeType":"FunctionDefinition","parameters":{"id":2901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2900,"mutability":"mutable","name":"input","nameLocation":"8117:5:16","nodeType":"VariableDeclaration","scope":2918,"src":"8103:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2899,"name":"string","nodeType":"ElementaryTypeName","src":"8103:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8102:21:16"},"returnParameters":{"id":2906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2903,"mutability":"mutable","name":"success","nameLocation":"8152:7:16","nodeType":"VariableDeclaration","scope":2918,"src":"8147:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2902,"name":"bool","nodeType":"ElementaryTypeName","src":"8147:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2905,"mutability":"mutable","name":"value","nameLocation":"8168:5:16","nodeType":"VariableDeclaration","scope":2918,"src":"8161:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2904,"name":"int256","nodeType":"ElementaryTypeName","src":"8161:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8146:28:16"},"scope":3540,"src":"8082:175:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"constant":true,"id":2923,"mutability":"constant","name":"ABS_MIN_INT256","nameLocation":"8288:14:16","nodeType":"VariableDeclaration","scope":3540,"src":"8263:50:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2919,"name":"uint256","nodeType":"ElementaryTypeName","src":"8263:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"},"id":2922,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8305:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"323535","id":2921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8310:3:16","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"8305:8:16","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"}},"visibility":"private"},{"body":{"id":2959,"nodeType":"Block","src":"8779:143:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2937,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2930,"src":"8793:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2940,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2926,"src":"8805:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2939,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8799:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2938,"name":"bytes","nodeType":"ElementaryTypeName","src":"8799:5:16","typeDescriptions":{}}},"id":2941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8799:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8812:6:16","memberName":"length","nodeType":"MemberAccess","src":"8799:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8793:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2944,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2928,"src":"8822:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2945,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2930,"src":"8830:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8822:11:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8793:40:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2952,"nodeType":"IfStatement","src":"8789:63:16","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8843:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8850:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2950,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"8842:10:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2936,"id":2951,"nodeType":"Return","src":"8835:17:16"}},{"expression":{"arguments":[{"id":2954,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2926,"src":"8897:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2955,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2928,"src":"8904:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2956,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2930,"src":"8911:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2953,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3081,"src":"8869:27:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8869:46:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2936,"id":2958,"nodeType":"Return","src":"8862:53:16"}]},"documentation":{"id":2924,"nodeType":"StructuredDocumentation","src":"8320:303:16","text":" @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character or if the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":2960,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8637:11:16","nodeType":"FunctionDefinition","parameters":{"id":2931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2926,"mutability":"mutable","name":"input","nameLocation":"8672:5:16","nodeType":"VariableDeclaration","scope":2960,"src":"8658:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2925,"name":"string","nodeType":"ElementaryTypeName","src":"8658:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2928,"mutability":"mutable","name":"begin","nameLocation":"8695:5:16","nodeType":"VariableDeclaration","scope":2960,"src":"8687:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2927,"name":"uint256","nodeType":"ElementaryTypeName","src":"8687:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2930,"mutability":"mutable","name":"end","nameLocation":"8718:3:16","nodeType":"VariableDeclaration","scope":2960,"src":"8710:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2929,"name":"uint256","nodeType":"ElementaryTypeName","src":"8710:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8648:79:16"},"returnParameters":{"id":2936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2933,"mutability":"mutable","name":"success","nameLocation":"8756:7:16","nodeType":"VariableDeclaration","scope":2960,"src":"8751:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2932,"name":"bool","nodeType":"ElementaryTypeName","src":"8751:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2935,"mutability":"mutable","name":"value","nameLocation":"8772:5:16","nodeType":"VariableDeclaration","scope":2960,"src":"8765:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2934,"name":"int256","nodeType":"ElementaryTypeName","src":"8765:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8750:28:16"},"scope":3540,"src":"8628:294:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3080,"nodeType":"Block","src":"9299:812:16","statements":[{"assignments":[2975],"declarations":[{"constant":false,"id":2975,"mutability":"mutable","name":"buffer","nameLocation":"9322:6:16","nodeType":"VariableDeclaration","scope":3080,"src":"9309:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2974,"name":"bytes","nodeType":"ElementaryTypeName","src":"9309:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2980,"initialValue":{"arguments":[{"id":2978,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2963,"src":"9337:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2977,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9331:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2976,"name":"bytes","nodeType":"ElementaryTypeName","src":"9331:5:16","typeDescriptions":{}}},"id":2979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9331:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"9309:34:16"},{"assignments":[2982],"declarations":[{"constant":false,"id":2982,"mutability":"mutable","name":"sign","nameLocation":"9407:4:16","nodeType":"VariableDeclaration","scope":3080,"src":"9400:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2981,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9400:6:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":2998,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2983,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2965,"src":"9414:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2984,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2967,"src":"9423:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9414:12:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"arguments":[{"id":2993,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2975,"src":"9471:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2994,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2965,"src":"9479:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2992,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3539,"src":"9448:22:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9448:37:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2991,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9441:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2990,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9441:6:16","typeDescriptions":{}}},"id":2996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9441:45:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9414:72:16","trueExpression":{"arguments":[{"hexValue":"30","id":2988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9436:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2987,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9429:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2986,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9429:6:16","typeDescriptions":{}}},"id":2989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9429:9:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"9400:86:16"},{"assignments":[3000],"declarations":[{"constant":false,"id":3000,"mutability":"mutable","name":"positiveSign","nameLocation":"9572:12:16","nodeType":"VariableDeclaration","scope":3080,"src":"9567:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2999,"name":"bool","nodeType":"ElementaryTypeName","src":"9567:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3007,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3001,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2982,"src":"9587:4:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2b","id":3004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9602:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""},"value":"+"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""}],"id":3003,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9595:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3002,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9595:6:16","typeDescriptions":{}}},"id":3005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9595:11:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9587:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9567:39:16"},{"assignments":[3009],"declarations":[{"constant":false,"id":3009,"mutability":"mutable","name":"negativeSign","nameLocation":"9621:12:16","nodeType":"VariableDeclaration","scope":3080,"src":"9616:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3008,"name":"bool","nodeType":"ElementaryTypeName","src":"9616:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3016,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3010,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2982,"src":"9636:4:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2d","id":3013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9651:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""}],"id":3012,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9644:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3011,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9644:6:16","typeDescriptions":{}}},"id":3014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9644:11:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9636:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9616:39:16"},{"assignments":[3018],"declarations":[{"constant":false,"id":3018,"mutability":"mutable","name":"offset","nameLocation":"9673:6:16","nodeType":"VariableDeclaration","scope":3080,"src":"9665:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3017,"name":"uint256","nodeType":"ElementaryTypeName","src":"9665:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3025,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3019,"name":"positiveSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3000,"src":"9683:12:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":3020,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3009,"src":"9699:12:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9683:28:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3022,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9682:30:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9713:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6946,"src":"9682:37:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":3024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9682:39:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9665:56:16"},{"assignments":[3027,3029],"declarations":[{"constant":false,"id":3027,"mutability":"mutable","name":"absSuccess","nameLocation":"9738:10:16","nodeType":"VariableDeclaration","scope":3080,"src":"9733:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3026,"name":"bool","nodeType":"ElementaryTypeName","src":"9733:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3029,"mutability":"mutable","name":"absValue","nameLocation":"9758:8:16","nodeType":"VariableDeclaration","scope":3080,"src":"9750:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3028,"name":"uint256","nodeType":"ElementaryTypeName","src":"9750:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3037,"initialValue":{"arguments":[{"id":3031,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2963,"src":"9783:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3032,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2965,"src":"9790:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3033,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3018,"src":"9798:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9790:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3035,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2967,"src":"9806:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3030,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[2740,2777],"referencedDeclaration":2777,"src":"9770:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9770:40:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"9732:78:16"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3038,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"9825:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3039,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3029,"src":"9839:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3040,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2923,"src":"9850:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9839:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9825:39:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3058,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"9967:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":3059,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3009,"src":"9981:12:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9967:26:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3061,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3029,"src":"9997:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3062,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2923,"src":"10009:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9997:26:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9967:56:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10095:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10102:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3076,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10094:10:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2973,"id":3077,"nodeType":"Return","src":"10087:17:16"},"id":3078,"nodeType":"IfStatement","src":"9963:141:16","trueBody":{"id":3073,"nodeType":"Block","src":"10025:56:16","statements":[{"expression":{"components":[{"hexValue":"74727565","id":3065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10047:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"arguments":[{"id":3068,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10058:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3067,"name":"int256","nodeType":"ElementaryTypeName","src":"10058:6:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":3066,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10053:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10053:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":3070,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10066:3:16","memberName":"min","nodeType":"MemberAccess","src":"10053:16:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3071,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10046:24:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2973,"id":3072,"nodeType":"Return","src":"10039:31:16"}]}},"id":3079,"nodeType":"IfStatement","src":"9821:283:16","trueBody":{"id":3057,"nodeType":"Block","src":"9866:91:16","statements":[{"expression":{"components":[{"hexValue":"74727565","id":3043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9888:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"condition":{"id":3044,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3009,"src":"9894:12:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":3052,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3029,"src":"9936:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3051,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9929:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3050,"name":"int256","nodeType":"ElementaryTypeName","src":"9929:6:16","typeDescriptions":{}}},"id":3053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9929:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9894:51:16","trueExpression":{"id":3049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"9909:17:16","subExpression":{"arguments":[{"id":3047,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3029,"src":"9917:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3046,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9910:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3045,"name":"int256","nodeType":"ElementaryTypeName","src":"9910:6:16","typeDescriptions":{}}},"id":3048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9910:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3055,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9887:59:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2973,"id":3056,"nodeType":"Return","src":"9880:66:16"}]}}]},"documentation":{"id":2961,"nodeType":"StructuredDocumentation","src":"8928:200:16","text":" @dev Implementation of {tryParseInt} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":3081,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseIntUncheckedBounds","nameLocation":"9142:27:16","nodeType":"FunctionDefinition","parameters":{"id":2968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2963,"mutability":"mutable","name":"input","nameLocation":"9193:5:16","nodeType":"VariableDeclaration","scope":3081,"src":"9179:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2962,"name":"string","nodeType":"ElementaryTypeName","src":"9179:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2965,"mutability":"mutable","name":"begin","nameLocation":"9216:5:16","nodeType":"VariableDeclaration","scope":3081,"src":"9208:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2964,"name":"uint256","nodeType":"ElementaryTypeName","src":"9208:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2967,"mutability":"mutable","name":"end","nameLocation":"9239:3:16","nodeType":"VariableDeclaration","scope":3081,"src":"9231:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2966,"name":"uint256","nodeType":"ElementaryTypeName","src":"9231:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9169:79:16"},"returnParameters":{"id":2973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2970,"mutability":"mutable","name":"success","nameLocation":"9276:7:16","nodeType":"VariableDeclaration","scope":3081,"src":"9271:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2969,"name":"bool","nodeType":"ElementaryTypeName","src":"9271:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2972,"mutability":"mutable","name":"value","nameLocation":"9292:5:16","nodeType":"VariableDeclaration","scope":3081,"src":"9285:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2971,"name":"int256","nodeType":"ElementaryTypeName","src":"9285:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9270:28:16"},"scope":3540,"src":"9133:978:16","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3099,"nodeType":"Block","src":"10456:67:16","statements":[{"expression":{"arguments":[{"id":3090,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3084,"src":"10486:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10493:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3094,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3084,"src":"10502:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3093,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10496:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3092,"name":"bytes","nodeType":"ElementaryTypeName","src":"10496:5:16","typeDescriptions":{}}},"id":3095,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10496:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10509:6:16","memberName":"length","nodeType":"MemberAccess","src":"10496:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3089,"name":"parseHexUint","nodeType":"Identifier","overloadedDeclarations":[3100,3131],"referencedDeclaration":3131,"src":"10473:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":3097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10473:43:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3088,"id":3098,"nodeType":"Return","src":"10466:50:16"}]},"documentation":{"id":3082,"nodeType":"StructuredDocumentation","src":"10117:259:16","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":3100,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"10390:12:16","nodeType":"FunctionDefinition","parameters":{"id":3085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3084,"mutability":"mutable","name":"input","nameLocation":"10417:5:16","nodeType":"VariableDeclaration","scope":3100,"src":"10403:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3083,"name":"string","nodeType":"ElementaryTypeName","src":"10403:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10402:21:16"},"returnParameters":{"id":3088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3087,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3100,"src":"10447:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3086,"name":"uint256","nodeType":"ElementaryTypeName","src":"10447:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10446:9:16"},"scope":3540,"src":"10381:142:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3130,"nodeType":"Block","src":"10937:156:16","statements":[{"assignments":[3113,3115],"declarations":[{"constant":false,"id":3113,"mutability":"mutable","name":"success","nameLocation":"10953:7:16","nodeType":"VariableDeclaration","scope":3130,"src":"10948:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3112,"name":"bool","nodeType":"ElementaryTypeName","src":"10948:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3115,"mutability":"mutable","name":"value","nameLocation":"10970:5:16","nodeType":"VariableDeclaration","scope":3130,"src":"10962:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3114,"name":"uint256","nodeType":"ElementaryTypeName","src":"10962:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3121,"initialValue":{"arguments":[{"id":3117,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3103,"src":"10995:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3118,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3105,"src":"11002:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3119,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3107,"src":"11009:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3116,"name":"tryParseHexUint","nodeType":"Identifier","overloadedDeclarations":[3152,3189],"referencedDeclaration":3189,"src":"10979:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10979:34:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"10947:66:16"},{"condition":{"id":3123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11027:8:16","subExpression":{"id":3122,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3113,"src":"11028:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3127,"nodeType":"IfStatement","src":"11023:41:16","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3124,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2367,"src":"11044:18:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11044:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3126,"nodeType":"RevertStatement","src":"11037:27:16"}},{"expression":{"id":3128,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3115,"src":"11081:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3111,"id":3129,"nodeType":"Return","src":"11074:12:16"}]},"documentation":{"id":3101,"nodeType":"StructuredDocumentation","src":"10529:300:16","text":" @dev Variant of {parseHexUint} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":3131,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"10843:12:16","nodeType":"FunctionDefinition","parameters":{"id":3108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3103,"mutability":"mutable","name":"input","nameLocation":"10870:5:16","nodeType":"VariableDeclaration","scope":3131,"src":"10856:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3102,"name":"string","nodeType":"ElementaryTypeName","src":"10856:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3105,"mutability":"mutable","name":"begin","nameLocation":"10885:5:16","nodeType":"VariableDeclaration","scope":3131,"src":"10877:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3104,"name":"uint256","nodeType":"ElementaryTypeName","src":"10877:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3107,"mutability":"mutable","name":"end","nameLocation":"10900:3:16","nodeType":"VariableDeclaration","scope":3131,"src":"10892:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3106,"name":"uint256","nodeType":"ElementaryTypeName","src":"10892:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10855:49:16"},"returnParameters":{"id":3111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3110,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3131,"src":"10928:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3109,"name":"uint256","nodeType":"ElementaryTypeName","src":"10928:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10927:9:16"},"scope":3540,"src":"10834:259:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3151,"nodeType":"Block","src":"11420:86:16","statements":[{"expression":{"arguments":[{"id":3142,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3134,"src":"11469:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11476:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3146,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3134,"src":"11485:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3145,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11479:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3144,"name":"bytes","nodeType":"ElementaryTypeName","src":"11479:5:16","typeDescriptions":{}}},"id":3147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11479:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11492:6:16","memberName":"length","nodeType":"MemberAccess","src":"11479:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3141,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3292,"src":"11437:31:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11437:62:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3140,"id":3150,"nodeType":"Return","src":"11430:69:16"}]},"documentation":{"id":3132,"nodeType":"StructuredDocumentation","src":"11099:218:16","text":" @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":3152,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"11331:15:16","nodeType":"FunctionDefinition","parameters":{"id":3135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3134,"mutability":"mutable","name":"input","nameLocation":"11361:5:16","nodeType":"VariableDeclaration","scope":3152,"src":"11347:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3133,"name":"string","nodeType":"ElementaryTypeName","src":"11347:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11346:21:16"},"returnParameters":{"id":3140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3137,"mutability":"mutable","name":"success","nameLocation":"11396:7:16","nodeType":"VariableDeclaration","scope":3152,"src":"11391:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3136,"name":"bool","nodeType":"ElementaryTypeName","src":"11391:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3139,"mutability":"mutable","name":"value","nameLocation":"11413:5:16","nodeType":"VariableDeclaration","scope":3152,"src":"11405:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3138,"name":"uint256","nodeType":"ElementaryTypeName","src":"11405:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11390:29:16"},"scope":3540,"src":"11322:184:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3188,"nodeType":"Block","src":"11914:147:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3166,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3159,"src":"11928:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3169,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3155,"src":"11940:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3168,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11934:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3167,"name":"bytes","nodeType":"ElementaryTypeName","src":"11934:5:16","typeDescriptions":{}}},"id":3170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11934:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11947:6:16","memberName":"length","nodeType":"MemberAccess","src":"11934:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11928:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3173,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3157,"src":"11957:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3174,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3159,"src":"11965:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11957:11:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11928:40:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3181,"nodeType":"IfStatement","src":"11924:63:16","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11978:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11985:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3179,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"11977:10:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3165,"id":3180,"nodeType":"Return","src":"11970:17:16"}},{"expression":{"arguments":[{"id":3183,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3155,"src":"12036:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3184,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3157,"src":"12043:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3185,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3159,"src":"12050:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3182,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3292,"src":"12004:31:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12004:50:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3165,"id":3187,"nodeType":"Return","src":"11997:57:16"}]},"documentation":{"id":3153,"nodeType":"StructuredDocumentation","src":"11512:241:16","text":" @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":3189,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"11767:15:16","nodeType":"FunctionDefinition","parameters":{"id":3160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3155,"mutability":"mutable","name":"input","nameLocation":"11806:5:16","nodeType":"VariableDeclaration","scope":3189,"src":"11792:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3154,"name":"string","nodeType":"ElementaryTypeName","src":"11792:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3157,"mutability":"mutable","name":"begin","nameLocation":"11829:5:16","nodeType":"VariableDeclaration","scope":3189,"src":"11821:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3156,"name":"uint256","nodeType":"ElementaryTypeName","src":"11821:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3159,"mutability":"mutable","name":"end","nameLocation":"11852:3:16","nodeType":"VariableDeclaration","scope":3189,"src":"11844:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3158,"name":"uint256","nodeType":"ElementaryTypeName","src":"11844:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11782:79:16"},"returnParameters":{"id":3165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3162,"mutability":"mutable","name":"success","nameLocation":"11890:7:16","nodeType":"VariableDeclaration","scope":3189,"src":"11885:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3161,"name":"bool","nodeType":"ElementaryTypeName","src":"11885:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3164,"mutability":"mutable","name":"value","nameLocation":"11907:5:16","nodeType":"VariableDeclaration","scope":3189,"src":"11899:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3163,"name":"uint256","nodeType":"ElementaryTypeName","src":"11899:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11884:29:16"},"scope":3540,"src":"11758:303:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3291,"nodeType":"Block","src":"12447:880:16","statements":[{"assignments":[3204],"declarations":[{"constant":false,"id":3204,"mutability":"mutable","name":"buffer","nameLocation":"12470:6:16","nodeType":"VariableDeclaration","scope":3291,"src":"12457:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3203,"name":"bytes","nodeType":"ElementaryTypeName","src":"12457:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3209,"initialValue":{"arguments":[{"id":3207,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"12485:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3206,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12479:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3205,"name":"bytes","nodeType":"ElementaryTypeName","src":"12479:5:16","typeDescriptions":{}}},"id":3208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12479:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"12457:34:16"},{"assignments":[3211],"declarations":[{"constant":false,"id":3211,"mutability":"mutable","name":"hasPrefix","nameLocation":"12544:9:16","nodeType":"VariableDeclaration","scope":3291,"src":"12539:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3210,"name":"bool","nodeType":"ElementaryTypeName","src":"12539:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3231,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3212,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3196,"src":"12557:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3213,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"12563:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12571:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12563:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12557:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3217,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12556:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":3229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":3221,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3204,"src":"12607:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3222,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"12615:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3220,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3539,"src":"12584:22:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12584:37:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3219,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12577:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3218,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12577:6:16","typeDescriptions":{}}},"id":3224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12577:45:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":3227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12633:4:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":3226,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12626:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3225,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12626:6:16","typeDescriptions":{}}},"id":3228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12626:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"12577:61:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12556:82:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"12539:99:16"},{"assignments":[3233],"declarations":[{"constant":false,"id":3233,"mutability":"mutable","name":"offset","nameLocation":"12727:6:16","nodeType":"VariableDeclaration","scope":3291,"src":"12719:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3232,"name":"uint256","nodeType":"ElementaryTypeName","src":"12719:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3239,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3234,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3211,"src":"12736:9:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12746:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6946,"src":"12736:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":3236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12736:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":3237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12757:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12736:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12719:39:16"},{"assignments":[3241],"declarations":[{"constant":false,"id":3241,"mutability":"mutable","name":"result","nameLocation":"12777:6:16","nodeType":"VariableDeclaration","scope":3291,"src":"12769:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3240,"name":"uint256","nodeType":"ElementaryTypeName","src":"12769:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3243,"initialValue":{"hexValue":"30","id":3242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12786:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12769:18:16"},{"body":{"id":3285,"nodeType":"Block","src":"12844:446:16","statements":[{"assignments":[3257],"declarations":[{"constant":false,"id":3257,"mutability":"mutable","name":"chr","nameLocation":"12864:3:16","nodeType":"VariableDeclaration","scope":3285,"src":"12858:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3256,"name":"uint8","nodeType":"ElementaryTypeName","src":"12858:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3267,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":3262,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3204,"src":"12913:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3263,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3245,"src":"12921:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3261,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3539,"src":"12890:22:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12890:33:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3260,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12883:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3259,"name":"bytes1","nodeType":"ElementaryTypeName","src":"12883:6:16","typeDescriptions":{}}},"id":3265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12883:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3258,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3527,"src":"12870:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":3266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12870:55:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"12858:67:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3268,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3257,"src":"12943:3:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3135","id":3269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12949:2:16","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"15"},"src":"12943:8:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3275,"nodeType":"IfStatement","src":"12939:31:16","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12961:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12968:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3273,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"12960:10:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3202,"id":3274,"nodeType":"Return","src":"12953:17:16"}},{"expression":{"id":3278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3276,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3241,"src":"12984:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3136","id":3277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12994:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12984:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3279,"nodeType":"ExpressionStatement","src":"12984:12:16"},{"id":3284,"nodeType":"UncheckedBlock","src":"13010:270:16","statements":[{"expression":{"id":3282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3280,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3241,"src":"13252:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3281,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3257,"src":"13262:3:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13252:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3283,"nodeType":"ExpressionStatement","src":"13252:13:16"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3250,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3245,"src":"12830:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3251,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3196,"src":"12834:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12830:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3286,"initializationExpression":{"assignments":[3245],"declarations":[{"constant":false,"id":3245,"mutability":"mutable","name":"i","nameLocation":"12810:1:16","nodeType":"VariableDeclaration","scope":3286,"src":"12802:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3244,"name":"uint256","nodeType":"ElementaryTypeName","src":"12802:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3249,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3246,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"12814:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3247,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3233,"src":"12822:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12814:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12802:26:16"},"loopExpression":{"expression":{"id":3254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"12839:3:16","subExpression":{"id":3253,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3245,"src":"12841:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3255,"nodeType":"ExpressionStatement","src":"12839:3:16"},"nodeType":"ForStatement","src":"12797:493:16"},{"expression":{"components":[{"hexValue":"74727565","id":3287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13307:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3288,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3241,"src":"13313:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3289,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13306:14:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3202,"id":3290,"nodeType":"Return","src":"13299:21:16"}]},"documentation":{"id":3190,"nodeType":"StructuredDocumentation","src":"12067:204:16","text":" @dev Implementation of {tryParseHexUint} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":3292,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseHexUintUncheckedBounds","nameLocation":"12285:31:16","nodeType":"FunctionDefinition","parameters":{"id":3197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3192,"mutability":"mutable","name":"input","nameLocation":"12340:5:16","nodeType":"VariableDeclaration","scope":3292,"src":"12326:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3191,"name":"string","nodeType":"ElementaryTypeName","src":"12326:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3194,"mutability":"mutable","name":"begin","nameLocation":"12363:5:16","nodeType":"VariableDeclaration","scope":3292,"src":"12355:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3193,"name":"uint256","nodeType":"ElementaryTypeName","src":"12355:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3196,"mutability":"mutable","name":"end","nameLocation":"12386:3:16","nodeType":"VariableDeclaration","scope":3292,"src":"12378:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3195,"name":"uint256","nodeType":"ElementaryTypeName","src":"12378:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12316:79:16"},"returnParameters":{"id":3202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3199,"mutability":"mutable","name":"success","nameLocation":"12423:7:16","nodeType":"VariableDeclaration","scope":3292,"src":"12418:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3198,"name":"bool","nodeType":"ElementaryTypeName","src":"12418:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3201,"mutability":"mutable","name":"value","nameLocation":"12440:5:16","nodeType":"VariableDeclaration","scope":3292,"src":"12432:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3200,"name":"uint256","nodeType":"ElementaryTypeName","src":"12432:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12417:29:16"},"scope":3540,"src":"12276:1051:16","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3310,"nodeType":"Block","src":"13625:67:16","statements":[{"expression":{"arguments":[{"id":3301,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3295,"src":"13655:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13662:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3305,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3295,"src":"13671:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3304,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13665:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3303,"name":"bytes","nodeType":"ElementaryTypeName","src":"13665:5:16","typeDescriptions":{}}},"id":3306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13665:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13678:6:16","memberName":"length","nodeType":"MemberAccess","src":"13665:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3300,"name":"parseAddress","nodeType":"Identifier","overloadedDeclarations":[3311,3342],"referencedDeclaration":3342,"src":"13642:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (address)"}},"id":3308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13642:43:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3299,"id":3309,"nodeType":"Return","src":"13635:50:16"}]},"documentation":{"id":3293,"nodeType":"StructuredDocumentation","src":"13333:212:16","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":3311,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"13559:12:16","nodeType":"FunctionDefinition","parameters":{"id":3296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3295,"mutability":"mutable","name":"input","nameLocation":"13586:5:16","nodeType":"VariableDeclaration","scope":3311,"src":"13572:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3294,"name":"string","nodeType":"ElementaryTypeName","src":"13572:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13571:21:16"},"returnParameters":{"id":3299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3298,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3311,"src":"13616:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3297,"name":"address","nodeType":"ElementaryTypeName","src":"13616:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13615:9:16"},"scope":3540,"src":"13550:142:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3341,"nodeType":"Block","src":"14058:165:16","statements":[{"assignments":[3324,3326],"declarations":[{"constant":false,"id":3324,"mutability":"mutable","name":"success","nameLocation":"14074:7:16","nodeType":"VariableDeclaration","scope":3341,"src":"14069:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3323,"name":"bool","nodeType":"ElementaryTypeName","src":"14069:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3326,"mutability":"mutable","name":"value","nameLocation":"14091:5:16","nodeType":"VariableDeclaration","scope":3341,"src":"14083:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3325,"name":"address","nodeType":"ElementaryTypeName","src":"14083:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3332,"initialValue":{"arguments":[{"id":3328,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3314,"src":"14116:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3329,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3316,"src":"14123:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3330,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3318,"src":"14130:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3327,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[3363,3467],"referencedDeclaration":3467,"src":"14100:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":3331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14100:34:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"nodeType":"VariableDeclarationStatement","src":"14068:66:16"},{"condition":{"id":3334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14148:8:16","subExpression":{"id":3333,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3324,"src":"14149:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3338,"nodeType":"IfStatement","src":"14144:50:16","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3335,"name":"StringsInvalidAddressFormat","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2370,"src":"14165:27:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14165:29:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3337,"nodeType":"RevertStatement","src":"14158:36:16"}},{"expression":{"id":3339,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3326,"src":"14211:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3322,"id":3340,"nodeType":"Return","src":"14204:12:16"}]},"documentation":{"id":3312,"nodeType":"StructuredDocumentation","src":"13698:252:16","text":" @dev Variant of {parseAddress} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":3342,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"13964:12:16","nodeType":"FunctionDefinition","parameters":{"id":3319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3314,"mutability":"mutable","name":"input","nameLocation":"13991:5:16","nodeType":"VariableDeclaration","scope":3342,"src":"13977:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3313,"name":"string","nodeType":"ElementaryTypeName","src":"13977:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3316,"mutability":"mutable","name":"begin","nameLocation":"14006:5:16","nodeType":"VariableDeclaration","scope":3342,"src":"13998:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3315,"name":"uint256","nodeType":"ElementaryTypeName","src":"13998:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3318,"mutability":"mutable","name":"end","nameLocation":"14021:3:16","nodeType":"VariableDeclaration","scope":3342,"src":"14013:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3317,"name":"uint256","nodeType":"ElementaryTypeName","src":"14013:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13976:49:16"},"returnParameters":{"id":3322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3321,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3342,"src":"14049:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3320,"name":"address","nodeType":"ElementaryTypeName","src":"14049:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14048:9:16"},"scope":3540,"src":"13955:268:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3362,"nodeType":"Block","src":"14523:70:16","statements":[{"expression":{"arguments":[{"id":3353,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3345,"src":"14556:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14563:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3357,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3345,"src":"14572:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3356,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14566:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3355,"name":"bytes","nodeType":"ElementaryTypeName","src":"14566:5:16","typeDescriptions":{}}},"id":3358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14566:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14579:6:16","memberName":"length","nodeType":"MemberAccess","src":"14566:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3352,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[3363,3467],"referencedDeclaration":3467,"src":"14540:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":3360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14540:46:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3351,"id":3361,"nodeType":"Return","src":"14533:53:16"}]},"documentation":{"id":3343,"nodeType":"StructuredDocumentation","src":"14229:191:16","text":" @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n formatted address. See {parseAddress} requirements."},"id":3363,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"14434:15:16","nodeType":"FunctionDefinition","parameters":{"id":3346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3345,"mutability":"mutable","name":"input","nameLocation":"14464:5:16","nodeType":"VariableDeclaration","scope":3363,"src":"14450:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3344,"name":"string","nodeType":"ElementaryTypeName","src":"14450:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14449:21:16"},"returnParameters":{"id":3351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3348,"mutability":"mutable","name":"success","nameLocation":"14499:7:16","nodeType":"VariableDeclaration","scope":3363,"src":"14494:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3347,"name":"bool","nodeType":"ElementaryTypeName","src":"14494:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3350,"mutability":"mutable","name":"value","nameLocation":"14516:5:16","nodeType":"VariableDeclaration","scope":3363,"src":"14508:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3349,"name":"address","nodeType":"ElementaryTypeName","src":"14508:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14493:29:16"},"scope":3540,"src":"14425:168:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3466,"nodeType":"Block","src":"14963:733:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3377,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3370,"src":"14977:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3380,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3366,"src":"14989:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3379,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14983:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3378,"name":"bytes","nodeType":"ElementaryTypeName","src":"14983:5:16","typeDescriptions":{}}},"id":3381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14983:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14996:6:16","memberName":"length","nodeType":"MemberAccess","src":"14983:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14977:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3384,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3368,"src":"15006:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3385,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3370,"src":"15014:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15006:11:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14977:40:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3395,"nodeType":"IfStatement","src":"14973:72:16","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15027:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":3391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15042:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3390,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15034:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3389,"name":"address","nodeType":"ElementaryTypeName","src":"15034:7:16","typeDescriptions":{}}},"id":3392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15034:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3393,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15026:19:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3376,"id":3394,"nodeType":"Return","src":"15019:26:16"}},{"assignments":[3397],"declarations":[{"constant":false,"id":3397,"mutability":"mutable","name":"hasPrefix","nameLocation":"15061:9:16","nodeType":"VariableDeclaration","scope":3466,"src":"15056:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3396,"name":"bool","nodeType":"ElementaryTypeName","src":"15056:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3420,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3398,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3370,"src":"15074:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3399,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3368,"src":"15080:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15088:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15080:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15074:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3403,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15073:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":3418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"id":3409,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3366,"src":"15130:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3408,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15124:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3407,"name":"bytes","nodeType":"ElementaryTypeName","src":"15124:5:16","typeDescriptions":{}}},"id":3410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15124:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3411,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3368,"src":"15138:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3406,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3539,"src":"15101:22:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15101:43:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3405,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15094:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3404,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15094:6:16","typeDescriptions":{}}},"id":3413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15094:51:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":3416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15156:4:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":3415,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15149:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3414,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15149:6:16","typeDescriptions":{}}},"id":3417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15149:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"15094:67:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15073:88:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"15056:105:16"},{"assignments":[3422],"declarations":[{"constant":false,"id":3422,"mutability":"mutable","name":"expectedLength","nameLocation":"15250:14:16","nodeType":"VariableDeclaration","scope":3466,"src":"15242:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3421,"name":"uint256","nodeType":"ElementaryTypeName","src":"15242:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3430,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3430","id":3423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15267:2:16","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3424,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3397,"src":"15272:9:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15282:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6946,"src":"15272:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":3426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15272:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":3427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15293:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15272:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15267:27:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15242:52:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3431,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3370,"src":"15359:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3432,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3368,"src":"15365:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15359:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3434,"name":"expectedLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3422,"src":"15374:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15359:29:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3464,"nodeType":"Block","src":"15639:51:16","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":3457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15661:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":3460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15676:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3459,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15668:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3458,"name":"address","nodeType":"ElementaryTypeName","src":"15668:7:16","typeDescriptions":{}}},"id":3461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15668:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3462,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15660:19:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3376,"id":3463,"nodeType":"Return","src":"15653:26:16"}]},"id":3465,"nodeType":"IfStatement","src":"15355:335:16","trueBody":{"id":3456,"nodeType":"Block","src":"15390:243:16","statements":[{"assignments":[3437,3439],"declarations":[{"constant":false,"id":3437,"mutability":"mutable","name":"s","nameLocation":"15511:1:16","nodeType":"VariableDeclaration","scope":3456,"src":"15506:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3436,"name":"bool","nodeType":"ElementaryTypeName","src":"15506:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3439,"mutability":"mutable","name":"v","nameLocation":"15522:1:16","nodeType":"VariableDeclaration","scope":3456,"src":"15514:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3438,"name":"uint256","nodeType":"ElementaryTypeName","src":"15514:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3445,"initialValue":{"arguments":[{"id":3441,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3366,"src":"15559:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3442,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3368,"src":"15566:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3443,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3370,"src":"15573:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3440,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3292,"src":"15527:31:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15527:50:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"15505:72:16"},{"expression":{"components":[{"id":3446,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3437,"src":"15599:1:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"arguments":[{"id":3451,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3439,"src":"15618:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3450,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15610:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3449,"name":"uint160","nodeType":"ElementaryTypeName","src":"15610:7:16","typeDescriptions":{}}},"id":3452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15610:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3448,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15602:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3447,"name":"address","nodeType":"ElementaryTypeName","src":"15602:7:16","typeDescriptions":{}}},"id":3453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15602:19:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3454,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15598:24:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3376,"id":3455,"nodeType":"Return","src":"15591:31:16"}]}}]},"documentation":{"id":3364,"nodeType":"StructuredDocumentation","src":"14599:203:16","text":" @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n formatted address. See {parseAddress} requirements."},"id":3467,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"14816:15:16","nodeType":"FunctionDefinition","parameters":{"id":3371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3366,"mutability":"mutable","name":"input","nameLocation":"14855:5:16","nodeType":"VariableDeclaration","scope":3467,"src":"14841:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3365,"name":"string","nodeType":"ElementaryTypeName","src":"14841:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3368,"mutability":"mutable","name":"begin","nameLocation":"14878:5:16","nodeType":"VariableDeclaration","scope":3467,"src":"14870:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3367,"name":"uint256","nodeType":"ElementaryTypeName","src":"14870:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3370,"mutability":"mutable","name":"end","nameLocation":"14901:3:16","nodeType":"VariableDeclaration","scope":3467,"src":"14893:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3369,"name":"uint256","nodeType":"ElementaryTypeName","src":"14893:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14831:79:16"},"returnParameters":{"id":3376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3373,"mutability":"mutable","name":"success","nameLocation":"14939:7:16","nodeType":"VariableDeclaration","scope":3467,"src":"14934:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3372,"name":"bool","nodeType":"ElementaryTypeName","src":"14934:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3375,"mutability":"mutable","name":"value","nameLocation":"14956:5:16","nodeType":"VariableDeclaration","scope":3467,"src":"14948:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3374,"name":"address","nodeType":"ElementaryTypeName","src":"14948:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14933:29:16"},"scope":3540,"src":"14807:889:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3526,"nodeType":"Block","src":"15765:461:16","statements":[{"assignments":[3475],"declarations":[{"constant":false,"id":3475,"mutability":"mutable","name":"value","nameLocation":"15781:5:16","nodeType":"VariableDeclaration","scope":3526,"src":"15775:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3474,"name":"uint8","nodeType":"ElementaryTypeName","src":"15775:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3480,"initialValue":{"arguments":[{"id":3478,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3469,"src":"15795:3:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3477,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15789:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3476,"name":"uint8","nodeType":"ElementaryTypeName","src":"15789:5:16","typeDescriptions":{}}},"id":3479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15789:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"15775:24:16"},{"id":3523,"nodeType":"UncheckedBlock","src":"15959:238:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3481,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3475,"src":"15987:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3437","id":3482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15995:2:16","typeDescriptions":{"typeIdentifier":"t_rational_47_by_1","typeString":"int_const 47"},"value":"47"},"src":"15987:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3484,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3475,"src":"16001:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3538","id":3485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16009:2:16","typeDescriptions":{"typeIdentifier":"t_rational_58_by_1","typeString":"int_const 58"},"value":"58"},"src":"16001:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15987:24:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3492,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3475,"src":"16047:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":3493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16055:2:16","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"16047:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3495,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3475,"src":"16061:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"313033","id":3496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16069:3:16","typeDescriptions":{"typeIdentifier":"t_rational_103_by_1","typeString":"int_const 103"},"value":"103"},"src":"16061:11:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16047:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3503,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3475,"src":"16108:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3634","id":3504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16116:2:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"16108:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3506,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3475,"src":"16122:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3731","id":3507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16130:2:16","typeDescriptions":{"typeIdentifier":"t_rational_71_by_1","typeString":"int_const 71"},"value":"71"},"src":"16122:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16108:24:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"expression":{"arguments":[{"id":3516,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16176:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3515,"name":"uint8","nodeType":"ElementaryTypeName","src":"16176:5:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":3514,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16171:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16171:11:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":3518,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16183:3:16","memberName":"max","nodeType":"MemberAccess","src":"16171:15:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":3473,"id":3519,"nodeType":"Return","src":"16164:22:16"},"id":3520,"nodeType":"IfStatement","src":"16104:82:16","trueBody":{"expression":{"id":3512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3510,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3475,"src":"16134:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3535","id":3511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16143:2:16","typeDescriptions":{"typeIdentifier":"t_rational_55_by_1","typeString":"int_const 55"},"value":"55"},"src":"16134:11:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3513,"nodeType":"ExpressionStatement","src":"16134:11:16"}},"id":3521,"nodeType":"IfStatement","src":"16043:143:16","trueBody":{"expression":{"id":3501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3499,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3475,"src":"16074:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3837","id":3500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16083:2:16","typeDescriptions":{"typeIdentifier":"t_rational_87_by_1","typeString":"int_const 87"},"value":"87"},"src":"16074:11:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3502,"nodeType":"ExpressionStatement","src":"16074:11:16"}},"id":3522,"nodeType":"IfStatement","src":"15983:203:16","trueBody":{"expression":{"id":3490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3488,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3475,"src":"16013:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3438","id":3489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16022:2:16","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"16013:11:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3491,"nodeType":"ExpressionStatement","src":"16013:11:16"}}]},{"expression":{"id":3524,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3475,"src":"16214:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":3473,"id":3525,"nodeType":"Return","src":"16207:12:16"}]},"id":3527,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseChr","nameLocation":"15711:12:16","nodeType":"FunctionDefinition","parameters":{"id":3470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3469,"mutability":"mutable","name":"chr","nameLocation":"15731:3:16","nodeType":"VariableDeclaration","scope":3527,"src":"15724:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":3468,"name":"bytes1","nodeType":"ElementaryTypeName","src":"15724:6:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"src":"15723:12:16"},"returnParameters":{"id":3473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3472,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3527,"src":"15758:5:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3471,"name":"uint8","nodeType":"ElementaryTypeName","src":"15758:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"15757:7:16"},"scope":3540,"src":"15702:524:16","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3538,"nodeType":"Block","src":"16611:225:16","statements":[{"AST":{"nodeType":"YulBlock","src":"16760:70:16","statements":[{"nodeType":"YulAssignment","src":"16774:46:16","value":{"arguments":[{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"16793:6:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16805:4:16","type":"","value":"0x20"},{"name":"offset","nodeType":"YulIdentifier","src":"16811:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16801:3:16"},"nodeType":"YulFunctionCall","src":"16801:17:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16789:3:16"},"nodeType":"YulFunctionCall","src":"16789:30:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16783:5:16"},"nodeType":"YulFunctionCall","src":"16783:37:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"16774:5:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3530,"isOffset":false,"isSlot":false,"src":"16793:6:16","valueSize":1},{"declaration":3532,"isOffset":false,"isSlot":false,"src":"16811:6:16","valueSize":1},{"declaration":3535,"isOffset":false,"isSlot":false,"src":"16774:5:16","valueSize":1}],"flags":["memory-safe"],"id":3537,"nodeType":"InlineAssembly","src":"16735:95:16"}]},"documentation":{"id":3528,"nodeType":"StructuredDocumentation","src":"16232:268:16","text":" @dev Reads a bytes32 from a bytes array without bounds checking.\n NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n assembly block as such would prevent some optimizations."},"id":3539,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeReadBytesOffset","nameLocation":"16514:22:16","nodeType":"FunctionDefinition","parameters":{"id":3533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3530,"mutability":"mutable","name":"buffer","nameLocation":"16550:6:16","nodeType":"VariableDeclaration","scope":3539,"src":"16537:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3529,"name":"bytes","nodeType":"ElementaryTypeName","src":"16537:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3532,"mutability":"mutable","name":"offset","nameLocation":"16566:6:16","nodeType":"VariableDeclaration","scope":3539,"src":"16558:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3531,"name":"uint256","nodeType":"ElementaryTypeName","src":"16558:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16536:37:16"},"returnParameters":{"id":3536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3535,"mutability":"mutable","name":"value","nameLocation":"16604:5:16","nodeType":"VariableDeclaration","scope":3539,"src":"16596:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3534,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16596:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"16595:15:16"},"scope":3540,"src":"16505:331:16","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":3541,"src":"297:16541:16","usedErrors":[2364,2367,2370],"usedEvents":[]}],"src":"101:16738:16"},"id":16},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[3564],"IERC165":[3576]},"id":3565,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3542,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:17"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":3544,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3565,"sourceUnit":3577,"src":"140:38:17","symbolAliases":[{"foreign":{"id":3543,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3576,"src":"148:7:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3546,"name":"IERC165","nameLocations":["688:7:17"],"nodeType":"IdentifierPath","referencedDeclaration":3576,"src":"688:7:17"},"id":3547,"nodeType":"InheritanceSpecifier","src":"688:7:17"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":3545,"nodeType":"StructuredDocumentation","src":"180:479:17","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":3564,"linearizedBaseContracts":[3564,3576],"name":"ERC165","nameLocation":"678:6:17","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[3575],"body":{"id":3562,"nodeType":"Block","src":"845:64:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":3560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3555,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3550,"src":"862:11:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":3557,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3576,"src":"882:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$3576_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$3576_$","typeString":"type(contract IERC165)"}],"id":3556,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"877:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"877:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$3576","typeString":"type(contract IERC165)"}},"id":3559,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"891:11:17","memberName":"interfaceId","nodeType":"MemberAccess","src":"877:25:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"862:40:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3554,"id":3561,"nodeType":"Return","src":"855:47:17"}]},"documentation":{"id":3548,"nodeType":"StructuredDocumentation","src":"702:56:17","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":3563,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"772:17:17","nodeType":"FunctionDefinition","parameters":{"id":3551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3550,"mutability":"mutable","name":"interfaceId","nameLocation":"797:11:17","nodeType":"VariableDeclaration","scope":3563,"src":"790:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3549,"name":"bytes4","nodeType":"ElementaryTypeName","src":"790:6:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"789:20:17"},"returnParameters":{"id":3554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3553,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3563,"src":"839:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3552,"name":"bool","nodeType":"ElementaryTypeName","src":"839:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"838:6:17"},"scope":3564,"src":"763:146:17","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":3565,"src":"660:251:17","usedErrors":[],"usedEvents":[]}],"src":"114:798:17"},"id":17},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[3576]},"id":3577,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3566,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:18"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":3567,"nodeType":"StructuredDocumentation","src":"141:280:18","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":3576,"linearizedBaseContracts":[3576],"name":"IERC165","nameLocation":"432:7:18","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3568,"nodeType":"StructuredDocumentation","src":"446:340:18","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":3575,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"800:17:18","nodeType":"FunctionDefinition","parameters":{"id":3571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3570,"mutability":"mutable","name":"interfaceId","nameLocation":"825:11:18","nodeType":"VariableDeclaration","scope":3575,"src":"818:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3569,"name":"bytes4","nodeType":"ElementaryTypeName","src":"818:6:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"817:20:18"},"returnParameters":{"id":3574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3573,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3575,"src":"861:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3572,"name":"bool","nodeType":"ElementaryTypeName","src":"861:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"860:6:18"},"scope":3576,"src":"791:76:18","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3577,"src":"422:447:18","usedErrors":[],"usedEvents":[]}],"src":"115:755:18"},"id":18},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[5182],"Panic":[2340],"SafeCast":[6947]},"id":5183,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3578,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:19"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":3580,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5183,"sourceUnit":2341,"src":"129:35:19","symbolAliases":[{"foreign":{"id":3579,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2340,"src":"137:5:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":3582,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5183,"sourceUnit":6948,"src":"165:40:19","symbolAliases":[{"foreign":{"id":3581,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6947,"src":"173:8:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":3583,"nodeType":"StructuredDocumentation","src":"207:73:19","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":5182,"linearizedBaseContracts":[5182],"name":"Math","nameLocation":"289:4:19","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":3588,"members":[{"id":3584,"name":"Floor","nameLocation":"324:5:19","nodeType":"EnumValue","src":"324:5:19"},{"id":3585,"name":"Ceil","nameLocation":"367:4:19","nodeType":"EnumValue","src":"367:4:19"},{"id":3586,"name":"Trunc","nameLocation":"409:5:19","nodeType":"EnumValue","src":"409:5:19"},{"id":3587,"name":"Expand","nameLocation":"439:6:19","nodeType":"EnumValue","src":"439:6:19"}],"name":"Rounding","nameLocation":"305:8:19","nodeType":"EnumDefinition","src":"300:169:19"},{"body":{"id":3619,"nodeType":"Block","src":"677:140:19","statements":[{"id":3618,"nodeType":"UncheckedBlock","src":"687:124:19","statements":[{"assignments":[3601],"declarations":[{"constant":false,"id":3601,"mutability":"mutable","name":"c","nameLocation":"719:1:19","nodeType":"VariableDeclaration","scope":3618,"src":"711:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3600,"name":"uint256","nodeType":"ElementaryTypeName","src":"711:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3605,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3602,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3591,"src":"723:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3603,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3593,"src":"727:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"723:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"711:17:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3606,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3601,"src":"746:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3607,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3591,"src":"750:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"746:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3613,"nodeType":"IfStatement","src":"742:28:19","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"761:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"768:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3611,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"760:10:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3599,"id":3612,"nodeType":"Return","src":"753:17:19"}},{"expression":{"components":[{"hexValue":"74727565","id":3614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"792:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3615,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3601,"src":"798:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3616,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"791:9:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3599,"id":3617,"nodeType":"Return","src":"784:16:19"}]}]},"documentation":{"id":3589,"nodeType":"StructuredDocumentation","src":"475:106:19","text":" @dev Returns the addition of two unsigned integers, with an success flag (no overflow)."},"id":3620,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"595:6:19","nodeType":"FunctionDefinition","parameters":{"id":3594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3591,"mutability":"mutable","name":"a","nameLocation":"610:1:19","nodeType":"VariableDeclaration","scope":3620,"src":"602:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3590,"name":"uint256","nodeType":"ElementaryTypeName","src":"602:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3593,"mutability":"mutable","name":"b","nameLocation":"621:1:19","nodeType":"VariableDeclaration","scope":3620,"src":"613:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3592,"name":"uint256","nodeType":"ElementaryTypeName","src":"613:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"601:22:19"},"returnParameters":{"id":3599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3596,"mutability":"mutable","name":"success","nameLocation":"652:7:19","nodeType":"VariableDeclaration","scope":3620,"src":"647:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3595,"name":"bool","nodeType":"ElementaryTypeName","src":"647:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3598,"mutability":"mutable","name":"result","nameLocation":"669:6:19","nodeType":"VariableDeclaration","scope":3620,"src":"661:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3597,"name":"uint256","nodeType":"ElementaryTypeName","src":"661:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"646:30:19"},"scope":5182,"src":"586:231:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3647,"nodeType":"Block","src":"1028:113:19","statements":[{"id":3646,"nodeType":"UncheckedBlock","src":"1038:97:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3632,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3625,"src":"1066:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3633,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3623,"src":"1070:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1066:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3639,"nodeType":"IfStatement","src":"1062:28:19","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1081:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1088:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3637,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1080:10:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3631,"id":3638,"nodeType":"Return","src":"1073:17:19"}},{"expression":{"components":[{"hexValue":"74727565","id":3640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1112:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3641,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3623,"src":"1118:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3642,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3625,"src":"1122:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1118:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3644,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1111:13:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3631,"id":3645,"nodeType":"Return","src":"1104:20:19"}]}]},"documentation":{"id":3621,"nodeType":"StructuredDocumentation","src":"823:109:19","text":" @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow)."},"id":3648,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"946:6:19","nodeType":"FunctionDefinition","parameters":{"id":3626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3623,"mutability":"mutable","name":"a","nameLocation":"961:1:19","nodeType":"VariableDeclaration","scope":3648,"src":"953:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3622,"name":"uint256","nodeType":"ElementaryTypeName","src":"953:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3625,"mutability":"mutable","name":"b","nameLocation":"972:1:19","nodeType":"VariableDeclaration","scope":3648,"src":"964:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3624,"name":"uint256","nodeType":"ElementaryTypeName","src":"964:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"952:22:19"},"returnParameters":{"id":3631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3628,"mutability":"mutable","name":"success","nameLocation":"1003:7:19","nodeType":"VariableDeclaration","scope":3648,"src":"998:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3627,"name":"bool","nodeType":"ElementaryTypeName","src":"998:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3630,"mutability":"mutable","name":"result","nameLocation":"1020:6:19","nodeType":"VariableDeclaration","scope":3648,"src":"1012:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3629,"name":"uint256","nodeType":"ElementaryTypeName","src":"1012:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"997:30:19"},"scope":5182,"src":"937:204:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3689,"nodeType":"Block","src":"1355:417:19","statements":[{"id":3688,"nodeType":"UncheckedBlock","src":"1365:401:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3660,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3651,"src":"1623:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1628:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1623:6:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3667,"nodeType":"IfStatement","src":"1619:28:19","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":3663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1639:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":3664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1645:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3665,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1638:9:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3659,"id":3666,"nodeType":"Return","src":"1631:16:19"}},{"assignments":[3669],"declarations":[{"constant":false,"id":3669,"mutability":"mutable","name":"c","nameLocation":"1669:1:19","nodeType":"VariableDeclaration","scope":3688,"src":"1661:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3668,"name":"uint256","nodeType":"ElementaryTypeName","src":"1661:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3673,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3670,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3651,"src":"1673:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3671,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3653,"src":"1677:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1673:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1661:17:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3674,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3669,"src":"1696:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3675,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3651,"src":"1700:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1696:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3677,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3653,"src":"1705:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1696:10:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3683,"nodeType":"IfStatement","src":"1692:33:19","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1716:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1723:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3681,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1715:10:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3659,"id":3682,"nodeType":"Return","src":"1708:17:19"}},{"expression":{"components":[{"hexValue":"74727565","id":3684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1747:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3685,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3669,"src":"1753:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3686,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1746:9:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3659,"id":3687,"nodeType":"Return","src":"1739:16:19"}]}]},"documentation":{"id":3649,"nodeType":"StructuredDocumentation","src":"1147:112:19","text":" @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow)."},"id":3690,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1273:6:19","nodeType":"FunctionDefinition","parameters":{"id":3654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3651,"mutability":"mutable","name":"a","nameLocation":"1288:1:19","nodeType":"VariableDeclaration","scope":3690,"src":"1280:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3650,"name":"uint256","nodeType":"ElementaryTypeName","src":"1280:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3653,"mutability":"mutable","name":"b","nameLocation":"1299:1:19","nodeType":"VariableDeclaration","scope":3690,"src":"1291:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3652,"name":"uint256","nodeType":"ElementaryTypeName","src":"1291:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1279:22:19"},"returnParameters":{"id":3659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3656,"mutability":"mutable","name":"success","nameLocation":"1330:7:19","nodeType":"VariableDeclaration","scope":3690,"src":"1325:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3655,"name":"bool","nodeType":"ElementaryTypeName","src":"1325:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3658,"mutability":"mutable","name":"result","nameLocation":"1347:6:19","nodeType":"VariableDeclaration","scope":3690,"src":"1339:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3657,"name":"uint256","nodeType":"ElementaryTypeName","src":"1339:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1324:30:19"},"scope":5182,"src":"1264:508:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3717,"nodeType":"Block","src":"1987:114:19","statements":[{"id":3716,"nodeType":"UncheckedBlock","src":"1997:98:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3702,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3695,"src":"2025:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2030:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2025:6:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3709,"nodeType":"IfStatement","src":"2021:29:19","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2041:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2048:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3707,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2040:10:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3701,"id":3708,"nodeType":"Return","src":"2033:17:19"}},{"expression":{"components":[{"hexValue":"74727565","id":3710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2072:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3711,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3693,"src":"2078:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3712,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3695,"src":"2082:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2078:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3714,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2071:13:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3701,"id":3715,"nodeType":"Return","src":"2064:20:19"}]}]},"documentation":{"id":3691,"nodeType":"StructuredDocumentation","src":"1778:113:19","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":3718,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1905:6:19","nodeType":"FunctionDefinition","parameters":{"id":3696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3693,"mutability":"mutable","name":"a","nameLocation":"1920:1:19","nodeType":"VariableDeclaration","scope":3718,"src":"1912:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3692,"name":"uint256","nodeType":"ElementaryTypeName","src":"1912:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3695,"mutability":"mutable","name":"b","nameLocation":"1931:1:19","nodeType":"VariableDeclaration","scope":3718,"src":"1923:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3694,"name":"uint256","nodeType":"ElementaryTypeName","src":"1923:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1911:22:19"},"returnParameters":{"id":3701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3698,"mutability":"mutable","name":"success","nameLocation":"1962:7:19","nodeType":"VariableDeclaration","scope":3718,"src":"1957:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3697,"name":"bool","nodeType":"ElementaryTypeName","src":"1957:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3700,"mutability":"mutable","name":"result","nameLocation":"1979:6:19","nodeType":"VariableDeclaration","scope":3718,"src":"1971:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3699,"name":"uint256","nodeType":"ElementaryTypeName","src":"1971:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1956:30:19"},"scope":5182,"src":"1896:205:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3745,"nodeType":"Block","src":"2326:114:19","statements":[{"id":3744,"nodeType":"UncheckedBlock","src":"2336:98:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3730,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3723,"src":"2364:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2369:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2364:6:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3737,"nodeType":"IfStatement","src":"2360:29:19","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2380:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2387:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3735,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2379:10:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3729,"id":3736,"nodeType":"Return","src":"2372:17:19"}},{"expression":{"components":[{"hexValue":"74727565","id":3738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2411:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3739,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3721,"src":"2417:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":3740,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3723,"src":"2421:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2417:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3742,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2410:13:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3729,"id":3743,"nodeType":"Return","src":"2403:20:19"}]}]},"documentation":{"id":3719,"nodeType":"StructuredDocumentation","src":"2107:123:19","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":3746,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2244:6:19","nodeType":"FunctionDefinition","parameters":{"id":3724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3721,"mutability":"mutable","name":"a","nameLocation":"2259:1:19","nodeType":"VariableDeclaration","scope":3746,"src":"2251:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3720,"name":"uint256","nodeType":"ElementaryTypeName","src":"2251:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3723,"mutability":"mutable","name":"b","nameLocation":"2270:1:19","nodeType":"VariableDeclaration","scope":3746,"src":"2262:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3722,"name":"uint256","nodeType":"ElementaryTypeName","src":"2262:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2250:22:19"},"returnParameters":{"id":3729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3726,"mutability":"mutable","name":"success","nameLocation":"2301:7:19","nodeType":"VariableDeclaration","scope":3746,"src":"2296:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3725,"name":"bool","nodeType":"ElementaryTypeName","src":"2296:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3728,"mutability":"mutable","name":"result","nameLocation":"2318:6:19","nodeType":"VariableDeclaration","scope":3746,"src":"2310:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3727,"name":"uint256","nodeType":"ElementaryTypeName","src":"2310:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2295:30:19"},"scope":5182,"src":"2235:205:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3772,"nodeType":"Block","src":"2912:207:19","statements":[{"id":3771,"nodeType":"UncheckedBlock","src":"2922:191:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3758,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3753,"src":"3060:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3759,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3751,"src":"3066:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3760,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3753,"src":"3070:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3066:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3762,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3065:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3765,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3749,"src":"3091:9:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3763,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6947,"src":"3075:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6947_$","typeString":"type(library SafeCast)"}},"id":3764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3084:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6946,"src":"3075:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3075:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3065:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3768,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3064:38:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3060:42:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3757,"id":3770,"nodeType":"Return","src":"3053:49:19"}]}]},"documentation":{"id":3747,"nodeType":"StructuredDocumentation","src":"2446:374:19","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":3773,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"2834:7:19","nodeType":"FunctionDefinition","parameters":{"id":3754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3749,"mutability":"mutable","name":"condition","nameLocation":"2847:9:19","nodeType":"VariableDeclaration","scope":3773,"src":"2842:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3748,"name":"bool","nodeType":"ElementaryTypeName","src":"2842:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3751,"mutability":"mutable","name":"a","nameLocation":"2866:1:19","nodeType":"VariableDeclaration","scope":3773,"src":"2858:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3750,"name":"uint256","nodeType":"ElementaryTypeName","src":"2858:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3753,"mutability":"mutable","name":"b","nameLocation":"2877:1:19","nodeType":"VariableDeclaration","scope":3773,"src":"2869:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3752,"name":"uint256","nodeType":"ElementaryTypeName","src":"2869:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2841:38:19"},"returnParameters":{"id":3757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3756,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3773,"src":"2903:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3755,"name":"uint256","nodeType":"ElementaryTypeName","src":"2903:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2902:9:19"},"scope":5182,"src":"2825:294:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3791,"nodeType":"Block","src":"3256:44:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3784,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3776,"src":"3281:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3785,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3778,"src":"3285:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3281:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3787,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3776,"src":"3288:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3788,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3778,"src":"3291:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3783,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3773,"src":"3273:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3273:20:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3782,"id":3790,"nodeType":"Return","src":"3266:27:19"}]},"documentation":{"id":3774,"nodeType":"StructuredDocumentation","src":"3125:59:19","text":" @dev Returns the largest of two numbers."},"id":3792,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"3198:3:19","nodeType":"FunctionDefinition","parameters":{"id":3779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3776,"mutability":"mutable","name":"a","nameLocation":"3210:1:19","nodeType":"VariableDeclaration","scope":3792,"src":"3202:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3775,"name":"uint256","nodeType":"ElementaryTypeName","src":"3202:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3778,"mutability":"mutable","name":"b","nameLocation":"3221:1:19","nodeType":"VariableDeclaration","scope":3792,"src":"3213:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3777,"name":"uint256","nodeType":"ElementaryTypeName","src":"3213:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3201:22:19"},"returnParameters":{"id":3782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3781,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3792,"src":"3247:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3780,"name":"uint256","nodeType":"ElementaryTypeName","src":"3247:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3246:9:19"},"scope":5182,"src":"3189:111:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3810,"nodeType":"Block","src":"3438:44:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3803,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3795,"src":"3463:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3804,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3797,"src":"3467:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3463:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3806,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3795,"src":"3470:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3807,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3797,"src":"3473:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3802,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3773,"src":"3455:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3455:20:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3801,"id":3809,"nodeType":"Return","src":"3448:27:19"}]},"documentation":{"id":3793,"nodeType":"StructuredDocumentation","src":"3306:60:19","text":" @dev Returns the smallest of two numbers."},"id":3811,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"3380:3:19","nodeType":"FunctionDefinition","parameters":{"id":3798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3795,"mutability":"mutable","name":"a","nameLocation":"3392:1:19","nodeType":"VariableDeclaration","scope":3811,"src":"3384:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3794,"name":"uint256","nodeType":"ElementaryTypeName","src":"3384:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3797,"mutability":"mutable","name":"b","nameLocation":"3403:1:19","nodeType":"VariableDeclaration","scope":3811,"src":"3395:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3796,"name":"uint256","nodeType":"ElementaryTypeName","src":"3395:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3383:22:19"},"returnParameters":{"id":3801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3800,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3811,"src":"3429:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3799,"name":"uint256","nodeType":"ElementaryTypeName","src":"3429:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3428:9:19"},"scope":5182,"src":"3371:111:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3833,"nodeType":"Block","src":"3666:82:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3821,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3814,"src":"3721:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3822,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3816,"src":"3725:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3721:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3824,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3720:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3825,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3814,"src":"3731:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3826,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3816,"src":"3735:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3731:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3828,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3730:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":3829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3740:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"3730:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3720:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3820,"id":3832,"nodeType":"Return","src":"3713:28:19"}]},"documentation":{"id":3812,"nodeType":"StructuredDocumentation","src":"3488:102:19","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":3834,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"3604:7:19","nodeType":"FunctionDefinition","parameters":{"id":3817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3814,"mutability":"mutable","name":"a","nameLocation":"3620:1:19","nodeType":"VariableDeclaration","scope":3834,"src":"3612:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3813,"name":"uint256","nodeType":"ElementaryTypeName","src":"3612:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3816,"mutability":"mutable","name":"b","nameLocation":"3631:1:19","nodeType":"VariableDeclaration","scope":3834,"src":"3623:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3815,"name":"uint256","nodeType":"ElementaryTypeName","src":"3623:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3611:22:19"},"returnParameters":{"id":3820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3819,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3834,"src":"3657:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3818,"name":"uint256","nodeType":"ElementaryTypeName","src":"3657:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3656:9:19"},"scope":5182,"src":"3595:153:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3874,"nodeType":"Block","src":"4040:633:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3844,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3839,"src":"4054:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4059:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4054:6:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3855,"nodeType":"IfStatement","src":"4050:150:19","trueBody":{"id":3854,"nodeType":"Block","src":"4062:138:19","statements":[{"expression":{"arguments":[{"expression":{"id":3850,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2340,"src":"4166:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2340_$","typeString":"type(library Panic)"}},"id":3851,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4172:16:19","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2307,"src":"4166:22:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3847,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2340,"src":"4154:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2340_$","typeString":"type(library Panic)"}},"id":3849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4160:5:19","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2339,"src":"4154:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4154:35:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3853,"nodeType":"ExpressionStatement","src":"4154:35:19"}]}},{"id":3873,"nodeType":"UncheckedBlock","src":"4583:84:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3858,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3837,"src":"4630:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4634:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4630:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3856,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6947,"src":"4614:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6947_$","typeString":"type(library SafeCast)"}},"id":3857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4623:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6946,"src":"4614:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4614:22:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3862,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3837,"src":"4641:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4645:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4641:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3865,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4640:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3866,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3839,"src":"4650:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4640:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4654:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4640:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3870,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4639:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4614:42:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3843,"id":3872,"nodeType":"Return","src":"4607:49:19"}]}]},"documentation":{"id":3835,"nodeType":"StructuredDocumentation","src":"3754:210:19","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":3875,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"3978:7:19","nodeType":"FunctionDefinition","parameters":{"id":3840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3837,"mutability":"mutable","name":"a","nameLocation":"3994:1:19","nodeType":"VariableDeclaration","scope":3875,"src":"3986:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3836,"name":"uint256","nodeType":"ElementaryTypeName","src":"3986:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3839,"mutability":"mutable","name":"b","nameLocation":"4005:1:19","nodeType":"VariableDeclaration","scope":3875,"src":"3997:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3838,"name":"uint256","nodeType":"ElementaryTypeName","src":"3997:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3985:22:19"},"returnParameters":{"id":3843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3842,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3875,"src":"4031:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3841,"name":"uint256","nodeType":"ElementaryTypeName","src":"4031:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4030:9:19"},"scope":5182,"src":"3969:704:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4011,"nodeType":"Block","src":"5094:4128:19","statements":[{"id":4010,"nodeType":"UncheckedBlock","src":"5104:4112:19","statements":[{"assignments":[3888],"declarations":[{"constant":false,"id":3888,"mutability":"mutable","name":"prod0","nameLocation":"5441:5:19","nodeType":"VariableDeclaration","scope":4010,"src":"5433:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3887,"name":"uint256","nodeType":"ElementaryTypeName","src":"5433:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3892,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3889,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3878,"src":"5449:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3890,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3880,"src":"5453:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5449:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5433:21:19"},{"assignments":[3894],"declarations":[{"constant":false,"id":3894,"mutability":"mutable","name":"prod1","nameLocation":"5521:5:19","nodeType":"VariableDeclaration","scope":4010,"src":"5513:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3893,"name":"uint256","nodeType":"ElementaryTypeName","src":"5513:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3895,"nodeType":"VariableDeclarationStatement","src":"5513:13:19"},{"AST":{"nodeType":"YulBlock","src":"5593:122:19","statements":[{"nodeType":"YulVariableDeclaration","src":"5611:30:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5628:1:19"},{"name":"y","nodeType":"YulIdentifier","src":"5631:1:19"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5638:1:19","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5634:3:19"},"nodeType":"YulFunctionCall","src":"5634:6:19"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"5621:6:19"},"nodeType":"YulFunctionCall","src":"5621:20:19"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"5615:2:19","type":""}]},{"nodeType":"YulAssignment","src":"5658:43:19","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"5675:2:19"},{"name":"prod0","nodeType":"YulIdentifier","src":"5679:5:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5671:3:19"},"nodeType":"YulFunctionCall","src":"5671:14:19"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"5690:2:19"},{"name":"prod0","nodeType":"YulIdentifier","src":"5694:5:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5687:2:19"},"nodeType":"YulFunctionCall","src":"5687:13:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5667:3:19"},"nodeType":"YulFunctionCall","src":"5667:34:19"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"5658:5:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3888,"isOffset":false,"isSlot":false,"src":"5679:5:19","valueSize":1},{"declaration":3888,"isOffset":false,"isSlot":false,"src":"5694:5:19","valueSize":1},{"declaration":3894,"isOffset":false,"isSlot":false,"src":"5658:5:19","valueSize":1},{"declaration":3878,"isOffset":false,"isSlot":false,"src":"5628:1:19","valueSize":1},{"declaration":3880,"isOffset":false,"isSlot":false,"src":"5631:1:19","valueSize":1}],"id":3896,"nodeType":"InlineAssembly","src":"5584:131:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3897,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3894,"src":"5796:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5805:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5796:10:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3905,"nodeType":"IfStatement","src":"5792:368:19","trueBody":{"id":3904,"nodeType":"Block","src":"5808:352:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3900,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3888,"src":"6126:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3901,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3882,"src":"6134:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6126:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3886,"id":3903,"nodeType":"Return","src":"6119:26:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3906,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3882,"src":"6270:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3907,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3894,"src":"6285:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6270:20:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3924,"nodeType":"IfStatement","src":"6266:143:19","trueBody":{"id":3923,"nodeType":"Block","src":"6292:117:19","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3913,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3882,"src":"6330:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6345:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6330:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":3916,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2340,"src":"6348:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2340_$","typeString":"type(library Panic)"}},"id":3917,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6354:16:19","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2307,"src":"6348:22:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3918,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2340,"src":"6372:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2340_$","typeString":"type(library Panic)"}},"id":3919,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6378:14:19","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":2303,"src":"6372:20:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3912,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3773,"src":"6322:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6322:71:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3909,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2340,"src":"6310:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2340_$","typeString":"type(library Panic)"}},"id":3911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6316:5:19","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2339,"src":"6310:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6310:84:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3922,"nodeType":"ExpressionStatement","src":"6310:84:19"}]}},{"assignments":[3926],"declarations":[{"constant":false,"id":3926,"mutability":"mutable","name":"remainder","nameLocation":"6672:9:19","nodeType":"VariableDeclaration","scope":4010,"src":"6664:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3925,"name":"uint256","nodeType":"ElementaryTypeName","src":"6664:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3927,"nodeType":"VariableDeclarationStatement","src":"6664:17:19"},{"AST":{"nodeType":"YulBlock","src":"6704:291:19","statements":[{"nodeType":"YulAssignment","src":"6773:38:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6793:1:19"},{"name":"y","nodeType":"YulIdentifier","src":"6796:1:19"},{"name":"denominator","nodeType":"YulIdentifier","src":"6799:11:19"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"6786:6:19"},"nodeType":"YulFunctionCall","src":"6786:25:19"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"6773:9:19"}]},{"nodeType":"YulAssignment","src":"6893:41:19","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"6906:5:19"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"6916:9:19"},{"name":"prod0","nodeType":"YulIdentifier","src":"6927:5:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6913:2:19"},"nodeType":"YulFunctionCall","src":"6913:20:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6902:3:19"},"nodeType":"YulFunctionCall","src":"6902:32:19"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"6893:5:19"}]},{"nodeType":"YulAssignment","src":"6951:30:19","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"6964:5:19"},{"name":"remainder","nodeType":"YulIdentifier","src":"6971:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6960:3:19"},"nodeType":"YulFunctionCall","src":"6960:21:19"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"6951:5:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3882,"isOffset":false,"isSlot":false,"src":"6799:11:19","valueSize":1},{"declaration":3888,"isOffset":false,"isSlot":false,"src":"6927:5:19","valueSize":1},{"declaration":3888,"isOffset":false,"isSlot":false,"src":"6951:5:19","valueSize":1},{"declaration":3888,"isOffset":false,"isSlot":false,"src":"6964:5:19","valueSize":1},{"declaration":3894,"isOffset":false,"isSlot":false,"src":"6893:5:19","valueSize":1},{"declaration":3894,"isOffset":false,"isSlot":false,"src":"6906:5:19","valueSize":1},{"declaration":3926,"isOffset":false,"isSlot":false,"src":"6773:9:19","valueSize":1},{"declaration":3926,"isOffset":false,"isSlot":false,"src":"6916:9:19","valueSize":1},{"declaration":3926,"isOffset":false,"isSlot":false,"src":"6971:9:19","valueSize":1},{"declaration":3878,"isOffset":false,"isSlot":false,"src":"6793:1:19","valueSize":1},{"declaration":3880,"isOffset":false,"isSlot":false,"src":"6796:1:19","valueSize":1}],"id":3928,"nodeType":"InlineAssembly","src":"6695:300:19"},{"assignments":[3930],"declarations":[{"constant":false,"id":3930,"mutability":"mutable","name":"twos","nameLocation":"7207:4:19","nodeType":"VariableDeclaration","scope":4010,"src":"7199:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3929,"name":"uint256","nodeType":"ElementaryTypeName","src":"7199:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3937,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3931,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3882,"src":"7214:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":3932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7229:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3933,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3882,"src":"7233:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7229:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3935,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7228:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7214:31:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7199:46:19"},{"AST":{"nodeType":"YulBlock","src":"7268:366:19","statements":[{"nodeType":"YulAssignment","src":"7333:37:19","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"7352:11:19"},{"name":"twos","nodeType":"YulIdentifier","src":"7365:4:19"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7348:3:19"},"nodeType":"YulFunctionCall","src":"7348:22:19"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"7333:11:19"}]},{"nodeType":"YulAssignment","src":"7437:25:19","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"7450:5:19"},{"name":"twos","nodeType":"YulIdentifier","src":"7457:4:19"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7446:3:19"},"nodeType":"YulFunctionCall","src":"7446:16:19"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"7437:5:19"}]},{"nodeType":"YulAssignment","src":"7581:39:19","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7601:1:19","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"7604:4:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7597:3:19"},"nodeType":"YulFunctionCall","src":"7597:12:19"},{"name":"twos","nodeType":"YulIdentifier","src":"7611:4:19"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7593:3:19"},"nodeType":"YulFunctionCall","src":"7593:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"7618:1:19","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7589:3:19"},"nodeType":"YulFunctionCall","src":"7589:31:19"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"7581:4:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3882,"isOffset":false,"isSlot":false,"src":"7333:11:19","valueSize":1},{"declaration":3882,"isOffset":false,"isSlot":false,"src":"7352:11:19","valueSize":1},{"declaration":3888,"isOffset":false,"isSlot":false,"src":"7437:5:19","valueSize":1},{"declaration":3888,"isOffset":false,"isSlot":false,"src":"7450:5:19","valueSize":1},{"declaration":3930,"isOffset":false,"isSlot":false,"src":"7365:4:19","valueSize":1},{"declaration":3930,"isOffset":false,"isSlot":false,"src":"7457:4:19","valueSize":1},{"declaration":3930,"isOffset":false,"isSlot":false,"src":"7581:4:19","valueSize":1},{"declaration":3930,"isOffset":false,"isSlot":false,"src":"7604:4:19","valueSize":1},{"declaration":3930,"isOffset":false,"isSlot":false,"src":"7611:4:19","valueSize":1}],"id":3938,"nodeType":"InlineAssembly","src":"7259:375:19"},{"expression":{"id":3943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3939,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3888,"src":"7700:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3940,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3894,"src":"7709:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3941,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3930,"src":"7717:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7709:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7700:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3944,"nodeType":"ExpressionStatement","src":"7700:21:19"},{"assignments":[3946],"declarations":[{"constant":false,"id":3946,"mutability":"mutable","name":"inverse","nameLocation":"8064:7:19","nodeType":"VariableDeclaration","scope":4010,"src":"8056:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3945,"name":"uint256","nodeType":"ElementaryTypeName","src":"8056:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3953,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":3947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8075:1:19","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3948,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3882,"src":"8079:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8075:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3950,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8074:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":3951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8094:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"8074:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8056:39:19"},{"expression":{"id":3960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3954,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3946,"src":"8312:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8323:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3956,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3882,"src":"8327:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3957,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3946,"src":"8341:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8327:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8323:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8312:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3961,"nodeType":"ExpressionStatement","src":"8312:36:19"},{"expression":{"id":3968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3962,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3946,"src":"8382:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8393:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3964,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3882,"src":"8397:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3965,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3946,"src":"8411:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8397:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8393:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8382:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3969,"nodeType":"ExpressionStatement","src":"8382:36:19"},{"expression":{"id":3976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3970,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3946,"src":"8454:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8465:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3972,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3882,"src":"8469:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3973,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3946,"src":"8483:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8469:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8465:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8454:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3977,"nodeType":"ExpressionStatement","src":"8454:36:19"},{"expression":{"id":3984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3978,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3946,"src":"8525:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8536:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3980,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3882,"src":"8540:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3981,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3946,"src":"8554:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8540:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8536:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8525:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3985,"nodeType":"ExpressionStatement","src":"8525:36:19"},{"expression":{"id":3992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3986,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3946,"src":"8598:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8609:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3988,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3882,"src":"8613:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3989,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3946,"src":"8627:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8613:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8609:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8598:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3993,"nodeType":"ExpressionStatement","src":"8598:36:19"},{"expression":{"id":4000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3994,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3946,"src":"8672:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8683:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3996,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3882,"src":"8687:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3997,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3946,"src":"8701:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8687:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8683:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8672:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4001,"nodeType":"ExpressionStatement","src":"8672:36:19"},{"expression":{"id":4006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4002,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3885,"src":"9154:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4003,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3888,"src":"9163:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4004,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3946,"src":"9171:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9163:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9154:24:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4007,"nodeType":"ExpressionStatement","src":"9154:24:19"},{"expression":{"id":4008,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3885,"src":"9199:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3886,"id":4009,"nodeType":"Return","src":"9192:13:19"}]}]},"documentation":{"id":3876,"nodeType":"StructuredDocumentation","src":"4679:312:19","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":4012,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"5005:6:19","nodeType":"FunctionDefinition","parameters":{"id":3883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3878,"mutability":"mutable","name":"x","nameLocation":"5020:1:19","nodeType":"VariableDeclaration","scope":4012,"src":"5012:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3877,"name":"uint256","nodeType":"ElementaryTypeName","src":"5012:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3880,"mutability":"mutable","name":"y","nameLocation":"5031:1:19","nodeType":"VariableDeclaration","scope":4012,"src":"5023:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3879,"name":"uint256","nodeType":"ElementaryTypeName","src":"5023:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3882,"mutability":"mutable","name":"denominator","nameLocation":"5042:11:19","nodeType":"VariableDeclaration","scope":4012,"src":"5034:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3881,"name":"uint256","nodeType":"ElementaryTypeName","src":"5034:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5011:43:19"},"returnParameters":{"id":3886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3885,"mutability":"mutable","name":"result","nameLocation":"5086:6:19","nodeType":"VariableDeclaration","scope":4012,"src":"5078:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3884,"name":"uint256","nodeType":"ElementaryTypeName","src":"5078:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5077:16:19"},"scope":5182,"src":"4996:4226:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4048,"nodeType":"Block","src":"9461:128:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4028,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4015,"src":"9485:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4029,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4017,"src":"9488:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4030,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4019,"src":"9491:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4027,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[4012,4049],"referencedDeclaration":4012,"src":"9478:6:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9478:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4035,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4022,"src":"9539:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3588","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3588","typeString":"enum Math.Rounding"}],"id":4034,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5181,"src":"9522:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3588_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9522:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4038,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4015,"src":"9559:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4039,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4017,"src":"9562:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4040,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4019,"src":"9565:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4037,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"9552:6:19","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9552:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9580:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9552:29:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9522:59:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4032,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6947,"src":"9506:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6947_$","typeString":"type(library SafeCast)"}},"id":4033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9515:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6946,"src":"9506:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9506:76:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9478:104:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4026,"id":4047,"nodeType":"Return","src":"9471:111:19"}]},"documentation":{"id":4013,"nodeType":"StructuredDocumentation","src":"9228:118:19","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":4049,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"9360:6:19","nodeType":"FunctionDefinition","parameters":{"id":4023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4015,"mutability":"mutable","name":"x","nameLocation":"9375:1:19","nodeType":"VariableDeclaration","scope":4049,"src":"9367:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4014,"name":"uint256","nodeType":"ElementaryTypeName","src":"9367:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4017,"mutability":"mutable","name":"y","nameLocation":"9386:1:19","nodeType":"VariableDeclaration","scope":4049,"src":"9378:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4016,"name":"uint256","nodeType":"ElementaryTypeName","src":"9378:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4019,"mutability":"mutable","name":"denominator","nameLocation":"9397:11:19","nodeType":"VariableDeclaration","scope":4049,"src":"9389:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4018,"name":"uint256","nodeType":"ElementaryTypeName","src":"9389:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4022,"mutability":"mutable","name":"rounding","nameLocation":"9419:8:19","nodeType":"VariableDeclaration","scope":4049,"src":"9410:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3588","typeString":"enum Math.Rounding"},"typeName":{"id":4021,"nodeType":"UserDefinedTypeName","pathNode":{"id":4020,"name":"Rounding","nameLocations":["9410:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":3588,"src":"9410:8:19"},"referencedDeclaration":3588,"src":"9410:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3588","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9366:62:19"},"returnParameters":{"id":4026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4025,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4049,"src":"9452:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4024,"name":"uint256","nodeType":"ElementaryTypeName","src":"9452:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9451:9:19"},"scope":5182,"src":"9351:238:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4145,"nodeType":"Block","src":"10223:1849:19","statements":[{"id":4144,"nodeType":"UncheckedBlock","src":"10233:1833:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4059,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4054,"src":"10261:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10266:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10261:6:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4064,"nodeType":"IfStatement","src":"10257:20:19","trueBody":{"expression":{"hexValue":"30","id":4062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10276:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4058,"id":4063,"nodeType":"Return","src":"10269:8:19"}},{"assignments":[4066],"declarations":[{"constant":false,"id":4066,"mutability":"mutable","name":"remainder","nameLocation":"10756:9:19","nodeType":"VariableDeclaration","scope":4144,"src":"10748:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4065,"name":"uint256","nodeType":"ElementaryTypeName","src":"10748:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4070,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4067,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4052,"src":"10768:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":4068,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4054,"src":"10772:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10768:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10748:25:19"},{"assignments":[4072],"declarations":[{"constant":false,"id":4072,"mutability":"mutable","name":"gcd","nameLocation":"10795:3:19","nodeType":"VariableDeclaration","scope":4144,"src":"10787:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4071,"name":"uint256","nodeType":"ElementaryTypeName","src":"10787:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4074,"initialValue":{"id":4073,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4054,"src":"10801:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10787:15:19"},{"assignments":[4076],"declarations":[{"constant":false,"id":4076,"mutability":"mutable","name":"x","nameLocation":"10945:1:19","nodeType":"VariableDeclaration","scope":4144,"src":"10938:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4075,"name":"int256","nodeType":"ElementaryTypeName","src":"10938:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4078,"initialValue":{"hexValue":"30","id":4077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10949:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10938:12:19"},{"assignments":[4080],"declarations":[{"constant":false,"id":4080,"mutability":"mutable","name":"y","nameLocation":"10971:1:19","nodeType":"VariableDeclaration","scope":4144,"src":"10964:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4079,"name":"int256","nodeType":"ElementaryTypeName","src":"10964:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4082,"initialValue":{"hexValue":"31","id":4081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10975:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"10964:12:19"},{"body":{"id":4119,"nodeType":"Block","src":"11014:882:19","statements":[{"assignments":[4087],"declarations":[{"constant":false,"id":4087,"mutability":"mutable","name":"quotient","nameLocation":"11040:8:19","nodeType":"VariableDeclaration","scope":4119,"src":"11032:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4086,"name":"uint256","nodeType":"ElementaryTypeName","src":"11032:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4091,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4088,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4072,"src":"11051:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4089,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4066,"src":"11057:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11051:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11032:34:19"},{"expression":{"id":4102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4092,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4072,"src":"11086:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4093,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4066,"src":"11091:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4094,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"11085:16:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":4095,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4066,"src":"11191:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4096,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4072,"src":"11436:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4097,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4066,"src":"11442:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4098,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4087,"src":"11454:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11442:20:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11436:26:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4101,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11104:376:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"11085:395:19","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4103,"nodeType":"ExpressionStatement","src":"11085:395:19"},{"expression":{"id":4117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4104,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4076,"src":"11500:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":4105,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4080,"src":"11503:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4106,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"11499:6:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":4107,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4080,"src":"11585:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4108,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4076,"src":"11839:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4109,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4080,"src":"11843:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4112,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4087,"src":"11854:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4111,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11847:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4110,"name":"int256","nodeType":"ElementaryTypeName","src":"11847:6:19","typeDescriptions":{}}},"id":4113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11847:16:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11843:20:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11839:24:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4116,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11508:373:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"11499:382:19","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4118,"nodeType":"ExpressionStatement","src":"11499:382:19"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4083,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4066,"src":"10998:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11011:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10998:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4120,"nodeType":"WhileStatement","src":"10991:905:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4121,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4072,"src":"11914:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":4122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11921:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11914:8:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4126,"nodeType":"IfStatement","src":"11910:22:19","trueBody":{"expression":{"hexValue":"30","id":4124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11931:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4058,"id":4125,"nodeType":"Return","src":"11924:8:19"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4128,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4076,"src":"11983:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":4129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11987:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11983:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4131,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4054,"src":"11990:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":4135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"12002:2:19","subExpression":{"id":4134,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4076,"src":"12003:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4133,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11994:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4132,"name":"uint256","nodeType":"ElementaryTypeName","src":"11994:7:19","typeDescriptions":{}}},"id":4136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11994:11:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11990:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":4140,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4076,"src":"12015:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4139,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12007:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4138,"name":"uint256","nodeType":"ElementaryTypeName","src":"12007:7:19","typeDescriptions":{}}},"id":4141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12007:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4127,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3773,"src":"11975:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11975:43:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4058,"id":4143,"nodeType":"Return","src":"11968:50:19"}]}]},"documentation":{"id":4050,"nodeType":"StructuredDocumentation","src":"9595:553:19","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":4146,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"10162:6:19","nodeType":"FunctionDefinition","parameters":{"id":4055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4052,"mutability":"mutable","name":"a","nameLocation":"10177:1:19","nodeType":"VariableDeclaration","scope":4146,"src":"10169:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4051,"name":"uint256","nodeType":"ElementaryTypeName","src":"10169:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4054,"mutability":"mutable","name":"n","nameLocation":"10188:1:19","nodeType":"VariableDeclaration","scope":4146,"src":"10180:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4053,"name":"uint256","nodeType":"ElementaryTypeName","src":"10180:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10168:22:19"},"returnParameters":{"id":4058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4057,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4146,"src":"10214:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4056,"name":"uint256","nodeType":"ElementaryTypeName","src":"10214:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10213:9:19"},"scope":5182,"src":"10153:1919:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4166,"nodeType":"Block","src":"12672:82:19","statements":[{"id":4165,"nodeType":"UncheckedBlock","src":"12682:66:19","statements":[{"expression":{"arguments":[{"id":4158,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4149,"src":"12725:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4159,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4151,"src":"12728:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":4160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12732:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12728:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4162,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4151,"src":"12735:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4156,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5182,"src":"12713:4:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5182_$","typeString":"type(library Math)"}},"id":4157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12718:6:19","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":4203,"src":"12713:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":4163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12713:24:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4155,"id":4164,"nodeType":"Return","src":"12706:31:19"}]}]},"documentation":{"id":4147,"nodeType":"StructuredDocumentation","src":"12078:514:19","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":4167,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"12606:11:19","nodeType":"FunctionDefinition","parameters":{"id":4152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4149,"mutability":"mutable","name":"a","nameLocation":"12626:1:19","nodeType":"VariableDeclaration","scope":4167,"src":"12618:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4148,"name":"uint256","nodeType":"ElementaryTypeName","src":"12618:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4151,"mutability":"mutable","name":"p","nameLocation":"12637:1:19","nodeType":"VariableDeclaration","scope":4167,"src":"12629:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4150,"name":"uint256","nodeType":"ElementaryTypeName","src":"12629:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12617:22:19"},"returnParameters":{"id":4155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4154,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4167,"src":"12663:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4153,"name":"uint256","nodeType":"ElementaryTypeName","src":"12663:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12662:9:19"},"scope":5182,"src":"12597:157:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4202,"nodeType":"Block","src":"13524:174:19","statements":[{"assignments":[4180,4182],"declarations":[{"constant":false,"id":4180,"mutability":"mutable","name":"success","nameLocation":"13540:7:19","nodeType":"VariableDeclaration","scope":4202,"src":"13535:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4179,"name":"bool","nodeType":"ElementaryTypeName","src":"13535:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4182,"mutability":"mutable","name":"result","nameLocation":"13557:6:19","nodeType":"VariableDeclaration","scope":4202,"src":"13549:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4181,"name":"uint256","nodeType":"ElementaryTypeName","src":"13549:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4188,"initialValue":{"arguments":[{"id":4184,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4170,"src":"13577:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4185,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4172,"src":"13580:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4186,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4174,"src":"13583:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4183,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[4227,4309],"referencedDeclaration":4227,"src":"13567:9:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":4187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13567:18:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"13534:51:19"},{"condition":{"id":4190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"13599:8:19","subExpression":{"id":4189,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4180,"src":"13600:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4199,"nodeType":"IfStatement","src":"13595:74:19","trueBody":{"id":4198,"nodeType":"Block","src":"13609:60:19","statements":[{"expression":{"arguments":[{"expression":{"id":4194,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2340,"src":"13635:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2340_$","typeString":"type(library Panic)"}},"id":4195,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13641:16:19","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2307,"src":"13635:22:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4191,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2340,"src":"13623:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2340_$","typeString":"type(library Panic)"}},"id":4193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13629:5:19","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2339,"src":"13623:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13623:35:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4197,"nodeType":"ExpressionStatement","src":"13623:35:19"}]}},{"expression":{"id":4200,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4182,"src":"13685:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4178,"id":4201,"nodeType":"Return","src":"13678:13:19"}]},"documentation":{"id":4168,"nodeType":"StructuredDocumentation","src":"12760:678:19","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":4203,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"13452:6:19","nodeType":"FunctionDefinition","parameters":{"id":4175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4170,"mutability":"mutable","name":"b","nameLocation":"13467:1:19","nodeType":"VariableDeclaration","scope":4203,"src":"13459:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4169,"name":"uint256","nodeType":"ElementaryTypeName","src":"13459:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4172,"mutability":"mutable","name":"e","nameLocation":"13478:1:19","nodeType":"VariableDeclaration","scope":4203,"src":"13470:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4171,"name":"uint256","nodeType":"ElementaryTypeName","src":"13470:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4174,"mutability":"mutable","name":"m","nameLocation":"13489:1:19","nodeType":"VariableDeclaration","scope":4203,"src":"13481:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4173,"name":"uint256","nodeType":"ElementaryTypeName","src":"13481:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13458:33:19"},"returnParameters":{"id":4178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4177,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4203,"src":"13515:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4176,"name":"uint256","nodeType":"ElementaryTypeName","src":"13515:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13514:9:19"},"scope":5182,"src":"13443:255:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4226,"nodeType":"Block","src":"14552:1493:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4217,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4210,"src":"14566:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14571:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14566:6:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4224,"nodeType":"IfStatement","src":"14562:29:19","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14582:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14589:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4222,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"14581:10:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4216,"id":4223,"nodeType":"Return","src":"14574:17:19"}},{"AST":{"nodeType":"YulBlock","src":"14626:1413:19","statements":[{"nodeType":"YulVariableDeclaration","src":"14640:22:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14657:4:19","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14651:5:19"},"nodeType":"YulFunctionCall","src":"14651:11:19"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"14644:3:19","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15570:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"15575:4:19","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15563:6:19"},"nodeType":"YulFunctionCall","src":"15563:17:19"},"nodeType":"YulExpressionStatement","src":"15563:17:19"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15604:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"15609:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15600:3:19"},"nodeType":"YulFunctionCall","src":"15600:14:19"},{"kind":"number","nodeType":"YulLiteral","src":"15616:4:19","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15593:6:19"},"nodeType":"YulFunctionCall","src":"15593:28:19"},"nodeType":"YulExpressionStatement","src":"15593:28:19"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15645:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"15650:4:19","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15641:3:19"},"nodeType":"YulFunctionCall","src":"15641:14:19"},{"kind":"number","nodeType":"YulLiteral","src":"15657:4:19","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15634:6:19"},"nodeType":"YulFunctionCall","src":"15634:28:19"},"nodeType":"YulExpressionStatement","src":"15634:28:19"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15686:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"15691:4:19","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15682:3:19"},"nodeType":"YulFunctionCall","src":"15682:14:19"},{"name":"b","nodeType":"YulIdentifier","src":"15698:1:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15675:6:19"},"nodeType":"YulFunctionCall","src":"15675:25:19"},"nodeType":"YulExpressionStatement","src":"15675:25:19"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15724:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"15729:4:19","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15720:3:19"},"nodeType":"YulFunctionCall","src":"15720:14:19"},{"name":"e","nodeType":"YulIdentifier","src":"15736:1:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15713:6:19"},"nodeType":"YulFunctionCall","src":"15713:25:19"},"nodeType":"YulExpressionStatement","src":"15713:25:19"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15762:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"15767:4:19","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15758:3:19"},"nodeType":"YulFunctionCall","src":"15758:14:19"},{"name":"m","nodeType":"YulIdentifier","src":"15774:1:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15751:6:19"},"nodeType":"YulFunctionCall","src":"15751:25:19"},"nodeType":"YulExpressionStatement","src":"15751:25:19"},{"nodeType":"YulAssignment","src":"15938:57:19","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"15960:3:19"},"nodeType":"YulFunctionCall","src":"15960:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"15967:4:19","type":"","value":"0x05"},{"name":"ptr","nodeType":"YulIdentifier","src":"15973:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"15978:4:19","type":"","value":"0xc0"},{"kind":"number","nodeType":"YulLiteral","src":"15984:4:19","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"15990:4:19","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"15949:10:19"},"nodeType":"YulFunctionCall","src":"15949:46:19"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"15938:7:19"}]},{"nodeType":"YulAssignment","src":"16008:21:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16024:4:19","type":"","value":"0x00"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16018:5:19"},"nodeType":"YulFunctionCall","src":"16018:11:19"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"16008:6:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4206,"isOffset":false,"isSlot":false,"src":"15698:1:19","valueSize":1},{"declaration":4208,"isOffset":false,"isSlot":false,"src":"15736:1:19","valueSize":1},{"declaration":4210,"isOffset":false,"isSlot":false,"src":"15774:1:19","valueSize":1},{"declaration":4215,"isOffset":false,"isSlot":false,"src":"16008:6:19","valueSize":1},{"declaration":4213,"isOffset":false,"isSlot":false,"src":"15938:7:19","valueSize":1}],"flags":["memory-safe"],"id":4225,"nodeType":"InlineAssembly","src":"14601:1438:19"}]},"documentation":{"id":4204,"nodeType":"StructuredDocumentation","src":"13704:738:19","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":4227,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"14456:9:19","nodeType":"FunctionDefinition","parameters":{"id":4211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4206,"mutability":"mutable","name":"b","nameLocation":"14474:1:19","nodeType":"VariableDeclaration","scope":4227,"src":"14466:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4205,"name":"uint256","nodeType":"ElementaryTypeName","src":"14466:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4208,"mutability":"mutable","name":"e","nameLocation":"14485:1:19","nodeType":"VariableDeclaration","scope":4227,"src":"14477:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4207,"name":"uint256","nodeType":"ElementaryTypeName","src":"14477:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4210,"mutability":"mutable","name":"m","nameLocation":"14496:1:19","nodeType":"VariableDeclaration","scope":4227,"src":"14488:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4209,"name":"uint256","nodeType":"ElementaryTypeName","src":"14488:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14465:33:19"},"returnParameters":{"id":4216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4213,"mutability":"mutable","name":"success","nameLocation":"14527:7:19","nodeType":"VariableDeclaration","scope":4227,"src":"14522:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4212,"name":"bool","nodeType":"ElementaryTypeName","src":"14522:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4215,"mutability":"mutable","name":"result","nameLocation":"14544:6:19","nodeType":"VariableDeclaration","scope":4227,"src":"14536:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4214,"name":"uint256","nodeType":"ElementaryTypeName","src":"14536:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14521:30:19"},"scope":5182,"src":"14447:1598:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4262,"nodeType":"Block","src":"16242:179:19","statements":[{"assignments":[4240,4242],"declarations":[{"constant":false,"id":4240,"mutability":"mutable","name":"success","nameLocation":"16258:7:19","nodeType":"VariableDeclaration","scope":4262,"src":"16253:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4239,"name":"bool","nodeType":"ElementaryTypeName","src":"16253:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4242,"mutability":"mutable","name":"result","nameLocation":"16280:6:19","nodeType":"VariableDeclaration","scope":4262,"src":"16267:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4241,"name":"bytes","nodeType":"ElementaryTypeName","src":"16267:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4248,"initialValue":{"arguments":[{"id":4244,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4230,"src":"16300:1:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4245,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4232,"src":"16303:1:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4246,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4234,"src":"16306:1:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4243,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[4227,4309],"referencedDeclaration":4309,"src":"16290:9:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":4247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16290:18:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"16252:56:19"},{"condition":{"id":4250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16322:8:19","subExpression":{"id":4249,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4240,"src":"16323:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4259,"nodeType":"IfStatement","src":"16318:74:19","trueBody":{"id":4258,"nodeType":"Block","src":"16332:60:19","statements":[{"expression":{"arguments":[{"expression":{"id":4254,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2340,"src":"16358:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2340_$","typeString":"type(library Panic)"}},"id":4255,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16364:16:19","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2307,"src":"16358:22:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4251,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2340,"src":"16346:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2340_$","typeString":"type(library Panic)"}},"id":4253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16352:5:19","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2339,"src":"16346:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16346:35:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4257,"nodeType":"ExpressionStatement","src":"16346:35:19"}]}},{"expression":{"id":4260,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4242,"src":"16408:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4238,"id":4261,"nodeType":"Return","src":"16401:13:19"}]},"documentation":{"id":4228,"nodeType":"StructuredDocumentation","src":"16051:85:19","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":4263,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"16150:6:19","nodeType":"FunctionDefinition","parameters":{"id":4235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4230,"mutability":"mutable","name":"b","nameLocation":"16170:1:19","nodeType":"VariableDeclaration","scope":4263,"src":"16157:14:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4229,"name":"bytes","nodeType":"ElementaryTypeName","src":"16157:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4232,"mutability":"mutable","name":"e","nameLocation":"16186:1:19","nodeType":"VariableDeclaration","scope":4263,"src":"16173:14:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4231,"name":"bytes","nodeType":"ElementaryTypeName","src":"16173:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4234,"mutability":"mutable","name":"m","nameLocation":"16202:1:19","nodeType":"VariableDeclaration","scope":4263,"src":"16189:14:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4233,"name":"bytes","nodeType":"ElementaryTypeName","src":"16189:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16156:48:19"},"returnParameters":{"id":4238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4237,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4263,"src":"16228:12:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4236,"name":"bytes","nodeType":"ElementaryTypeName","src":"16228:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16227:14:19"},"scope":5182,"src":"16141:280:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4308,"nodeType":"Block","src":"16675:771:19","statements":[{"condition":{"arguments":[{"id":4278,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4270,"src":"16700:1:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4277,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4342,"src":"16689:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":4279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16689:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4287,"nodeType":"IfStatement","src":"16685:47:19","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16712:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":4283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16729:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4282,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"16719:9:19","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":4281,"name":"bytes","nodeType":"ElementaryTypeName","src":"16723:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":4284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16719:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":4285,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16711:21:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":4276,"id":4286,"nodeType":"Return","src":"16704:28:19"}},{"assignments":[4289],"declarations":[{"constant":false,"id":4289,"mutability":"mutable","name":"mLen","nameLocation":"16751:4:19","nodeType":"VariableDeclaration","scope":4308,"src":"16743:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4288,"name":"uint256","nodeType":"ElementaryTypeName","src":"16743:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4292,"initialValue":{"expression":{"id":4290,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4270,"src":"16758:1:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16760:6:19","memberName":"length","nodeType":"MemberAccess","src":"16758:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16743:23:19"},{"expression":{"id":4305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4293,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4275,"src":"16848:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":4296,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4266,"src":"16874:1:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16876:6:19","memberName":"length","nodeType":"MemberAccess","src":"16874:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4298,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4268,"src":"16884:1:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16886:6:19","memberName":"length","nodeType":"MemberAccess","src":"16884:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4300,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4289,"src":"16894:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4301,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4266,"src":"16900:1:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4302,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4268,"src":"16903:1:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4303,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4270,"src":"16906:1:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4294,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"16857:3:19","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4295,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16861:12:19","memberName":"encodePacked","nodeType":"MemberAccess","src":"16857:16:19","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16857:51:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"16848:60:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4306,"nodeType":"ExpressionStatement","src":"16848:60:19"},{"AST":{"nodeType":"YulBlock","src":"16944:496:19","statements":[{"nodeType":"YulVariableDeclaration","src":"16958:32:19","value":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"16977:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"16985:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16973:3:19"},"nodeType":"YulFunctionCall","src":"16973:17:19"},"variables":[{"name":"dataPtr","nodeType":"YulTypedName","src":"16962:7:19","type":""}]},{"nodeType":"YulAssignment","src":"17080:73:19","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"17102:3:19"},"nodeType":"YulFunctionCall","src":"17102:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"17109:4:19","type":"","value":"0x05"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"17115:7:19"},{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"17130:6:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17124:5:19"},"nodeType":"YulFunctionCall","src":"17124:13:19"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"17139:7:19"},{"name":"mLen","nodeType":"YulIdentifier","src":"17148:4:19"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"17091:10:19"},"nodeType":"YulFunctionCall","src":"17091:62:19"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"17080:7:19"}]},{"expression":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"17309:6:19"},{"name":"mLen","nodeType":"YulIdentifier","src":"17317:4:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17302:6:19"},"nodeType":"YulFunctionCall","src":"17302:20:19"},"nodeType":"YulExpressionStatement","src":"17302:20:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17405:4:19","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"17415:7:19"},{"name":"mLen","nodeType":"YulIdentifier","src":"17424:4:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17411:3:19"},"nodeType":"YulFunctionCall","src":"17411:18:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17398:6:19"},"nodeType":"YulFunctionCall","src":"17398:32:19"},"nodeType":"YulExpressionStatement","src":"17398:32:19"}]},"evmVersion":"paris","externalReferences":[{"declaration":4289,"isOffset":false,"isSlot":false,"src":"17148:4:19","valueSize":1},{"declaration":4289,"isOffset":false,"isSlot":false,"src":"17317:4:19","valueSize":1},{"declaration":4289,"isOffset":false,"isSlot":false,"src":"17424:4:19","valueSize":1},{"declaration":4275,"isOffset":false,"isSlot":false,"src":"16977:6:19","valueSize":1},{"declaration":4275,"isOffset":false,"isSlot":false,"src":"17130:6:19","valueSize":1},{"declaration":4275,"isOffset":false,"isSlot":false,"src":"17309:6:19","valueSize":1},{"declaration":4273,"isOffset":false,"isSlot":false,"src":"17080:7:19","valueSize":1}],"flags":["memory-safe"],"id":4307,"nodeType":"InlineAssembly","src":"16919:521:19"}]},"documentation":{"id":4264,"nodeType":"StructuredDocumentation","src":"16427:88:19","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":4309,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16529:9:19","nodeType":"FunctionDefinition","parameters":{"id":4271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4266,"mutability":"mutable","name":"b","nameLocation":"16561:1:19","nodeType":"VariableDeclaration","scope":4309,"src":"16548:14:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4265,"name":"bytes","nodeType":"ElementaryTypeName","src":"16548:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4268,"mutability":"mutable","name":"e","nameLocation":"16585:1:19","nodeType":"VariableDeclaration","scope":4309,"src":"16572:14:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4267,"name":"bytes","nodeType":"ElementaryTypeName","src":"16572:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4270,"mutability":"mutable","name":"m","nameLocation":"16609:1:19","nodeType":"VariableDeclaration","scope":4309,"src":"16596:14:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4269,"name":"bytes","nodeType":"ElementaryTypeName","src":"16596:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16538:78:19"},"returnParameters":{"id":4276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4273,"mutability":"mutable","name":"success","nameLocation":"16645:7:19","nodeType":"VariableDeclaration","scope":4309,"src":"16640:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4272,"name":"bool","nodeType":"ElementaryTypeName","src":"16640:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4275,"mutability":"mutable","name":"result","nameLocation":"16667:6:19","nodeType":"VariableDeclaration","scope":4309,"src":"16654:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4274,"name":"bytes","nodeType":"ElementaryTypeName","src":"16654:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16639:35:19"},"scope":5182,"src":"16520:926:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4341,"nodeType":"Block","src":"17601:176:19","statements":[{"body":{"id":4337,"nodeType":"Block","src":"17658:92:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4328,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4312,"src":"17676:9:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4330,"indexExpression":{"id":4329,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4318,"src":"17686:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17676:12:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17692:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17676:17:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4336,"nodeType":"IfStatement","src":"17672:68:19","trueBody":{"id":4335,"nodeType":"Block","src":"17695:45:19","statements":[{"expression":{"hexValue":"66616c7365","id":4333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17720:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":4316,"id":4334,"nodeType":"Return","src":"17713:12:19"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4321,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4318,"src":"17631:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4322,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4312,"src":"17635:9:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17645:6:19","memberName":"length","nodeType":"MemberAccess","src":"17635:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17631:20:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4338,"initializationExpression":{"assignments":[4318],"declarations":[{"constant":false,"id":4318,"mutability":"mutable","name":"i","nameLocation":"17624:1:19","nodeType":"VariableDeclaration","scope":4338,"src":"17616:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4317,"name":"uint256","nodeType":"ElementaryTypeName","src":"17616:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4320,"initialValue":{"hexValue":"30","id":4319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17628:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17616:13:19"},"loopExpression":{"expression":{"id":4326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17653:3:19","subExpression":{"id":4325,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4318,"src":"17655:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4327,"nodeType":"ExpressionStatement","src":"17653:3:19"},"nodeType":"ForStatement","src":"17611:139:19"},{"expression":{"hexValue":"74727565","id":4339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17766:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":4316,"id":4340,"nodeType":"Return","src":"17759:11:19"}]},"documentation":{"id":4310,"nodeType":"StructuredDocumentation","src":"17452:72:19","text":" @dev Returns whether the provided byte array is zero."},"id":4342,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"17538:10:19","nodeType":"FunctionDefinition","parameters":{"id":4313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4312,"mutability":"mutable","name":"byteArray","nameLocation":"17562:9:19","nodeType":"VariableDeclaration","scope":4342,"src":"17549:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4311,"name":"bytes","nodeType":"ElementaryTypeName","src":"17549:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"17548:24:19"},"returnParameters":{"id":4316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4315,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4342,"src":"17595:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4314,"name":"bool","nodeType":"ElementaryTypeName","src":"17595:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"17594:6:19"},"scope":5182,"src":"17529:248:19","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4560,"nodeType":"Block","src":"18137:5124:19","statements":[{"id":4559,"nodeType":"UncheckedBlock","src":"18147:5108:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4350,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4345,"src":"18241:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":4351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18246:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"18241:6:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4356,"nodeType":"IfStatement","src":"18237:53:19","trueBody":{"id":4355,"nodeType":"Block","src":"18249:41:19","statements":[{"expression":{"id":4353,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4345,"src":"18274:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4349,"id":4354,"nodeType":"Return","src":"18267:8:19"}]}},{"assignments":[4358],"declarations":[{"constant":false,"id":4358,"mutability":"mutable","name":"aa","nameLocation":"19225:2:19","nodeType":"VariableDeclaration","scope":4559,"src":"19217:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4357,"name":"uint256","nodeType":"ElementaryTypeName","src":"19217:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4360,"initialValue":{"id":4359,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4345,"src":"19230:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19217:14:19"},{"assignments":[4362],"declarations":[{"constant":false,"id":4362,"mutability":"mutable","name":"xn","nameLocation":"19253:2:19","nodeType":"VariableDeclaration","scope":4559,"src":"19245:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4361,"name":"uint256","nodeType":"ElementaryTypeName","src":"19245:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4364,"initialValue":{"hexValue":"31","id":4363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19258:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"19245:14:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4365,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4358,"src":"19278:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":4368,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19285:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":4367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19290:3:19","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"19285:8:19","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":4369,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19284:10:19","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"19278:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4380,"nodeType":"IfStatement","src":"19274:92:19","trueBody":{"id":4379,"nodeType":"Block","src":"19296:70:19","statements":[{"expression":{"id":4373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4371,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4358,"src":"19314:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":4372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19321:3:19","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"19314:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4374,"nodeType":"ExpressionStatement","src":"19314:10:19"},{"expression":{"id":4377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4375,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"19342:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":4376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19349:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19342:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4378,"nodeType":"ExpressionStatement","src":"19342:9:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4381,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4358,"src":"19383:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":4384,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19390:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":4383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19395:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19390:7:19","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":4385,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19389:9:19","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"19383:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4396,"nodeType":"IfStatement","src":"19379:90:19","trueBody":{"id":4395,"nodeType":"Block","src":"19400:69:19","statements":[{"expression":{"id":4389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4387,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4358,"src":"19418:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":4388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19425:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19418:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4390,"nodeType":"ExpressionStatement","src":"19418:9:19"},{"expression":{"id":4393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4391,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"19445:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":4392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19452:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19445:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4394,"nodeType":"ExpressionStatement","src":"19445:9:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4397,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4358,"src":"19486:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":4400,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19493:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":4399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19498:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19493:7:19","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":4401,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19492:9:19","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"19486:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4412,"nodeType":"IfStatement","src":"19482:90:19","trueBody":{"id":4411,"nodeType":"Block","src":"19503:69:19","statements":[{"expression":{"id":4405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4403,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4358,"src":"19521:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":4404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19528:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19521:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4406,"nodeType":"ExpressionStatement","src":"19521:9:19"},{"expression":{"id":4409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4407,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"19548:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":4408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19555:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19548:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4410,"nodeType":"ExpressionStatement","src":"19548:9:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4413,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4358,"src":"19589:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":4416,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19596:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":4415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19601:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19596:7:19","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":4417,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19595:9:19","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"19589:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4428,"nodeType":"IfStatement","src":"19585:89:19","trueBody":{"id":4427,"nodeType":"Block","src":"19606:68:19","statements":[{"expression":{"id":4421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4419,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4358,"src":"19624:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":4420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19631:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19624:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4422,"nodeType":"ExpressionStatement","src":"19624:9:19"},{"expression":{"id":4425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4423,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"19651:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":4424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19658:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19651:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4426,"nodeType":"ExpressionStatement","src":"19651:8:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4429,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4358,"src":"19691:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":4432,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19698:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":4431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19703:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19698:6:19","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":4433,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19697:8:19","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"19691:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4444,"nodeType":"IfStatement","src":"19687:87:19","trueBody":{"id":4443,"nodeType":"Block","src":"19707:67:19","statements":[{"expression":{"id":4437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4435,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4358,"src":"19725:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":4436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19732:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19725:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4438,"nodeType":"ExpressionStatement","src":"19725:8:19"},{"expression":{"id":4441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4439,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"19751:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":4440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19758:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19751:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4442,"nodeType":"ExpressionStatement","src":"19751:8:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4445,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4358,"src":"19791:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":4448,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19798:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":4447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19803:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19798:6:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":4449,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19797:8:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"19791:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4460,"nodeType":"IfStatement","src":"19787:87:19","trueBody":{"id":4459,"nodeType":"Block","src":"19807:67:19","statements":[{"expression":{"id":4453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4451,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4358,"src":"19825:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":4452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19832:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19825:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4454,"nodeType":"ExpressionStatement","src":"19825:8:19"},{"expression":{"id":4457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4455,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"19851:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":4456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19858:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"19851:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4458,"nodeType":"ExpressionStatement","src":"19851:8:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4461,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4358,"src":"19891:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":4464,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19898:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":4463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19903:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"19898:6:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":4465,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19897:8:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"19891:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4472,"nodeType":"IfStatement","src":"19887:61:19","trueBody":{"id":4471,"nodeType":"Block","src":"19907:41:19","statements":[{"expression":{"id":4469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4467,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"19925:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":4468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19932:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"19925:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4470,"nodeType":"ExpressionStatement","src":"19925:8:19"}]}},{"expression":{"id":4480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4473,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"20368:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":4474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20374:1:19","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4475,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"20378:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20374:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4477,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20373:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20385:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20373:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20368:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4481,"nodeType":"ExpressionStatement","src":"20368:18:19"},{"expression":{"id":4491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4482,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"22273:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4483,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"22279:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4484,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4345,"src":"22284:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4485,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"22288:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22284:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22279:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4488,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22278:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22295:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22278:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22273:23:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4492,"nodeType":"ExpressionStatement","src":"22273:23:19"},{"expression":{"id":4502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4493,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"22382:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4494,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"22388:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4495,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4345,"src":"22393:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4496,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"22397:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22393:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22388:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4499,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22387:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22404:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22387:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22382:23:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4503,"nodeType":"ExpressionStatement","src":"22382:23:19"},{"expression":{"id":4513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4504,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"22493:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4505,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"22499:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4506,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4345,"src":"22504:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4507,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"22508:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22504:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22499:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4510,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22498:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22515:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22498:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22493:23:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4514,"nodeType":"ExpressionStatement","src":"22493:23:19"},{"expression":{"id":4524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4515,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"22602:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4516,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"22608:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4517,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4345,"src":"22613:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4518,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"22617:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22613:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22608:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4521,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22607:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22624:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22607:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22602:23:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4525,"nodeType":"ExpressionStatement","src":"22602:23:19"},{"expression":{"id":4535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4526,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"22712:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4527,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"22718:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4528,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4345,"src":"22723:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4529,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"22727:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22723:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22718:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4532,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22717:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22734:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22717:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22712:23:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4536,"nodeType":"ExpressionStatement","src":"22712:23:19"},{"expression":{"id":4546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4537,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"22822:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4538,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"22828:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4539,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4345,"src":"22833:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4540,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"22837:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22833:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22828:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4543,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22827:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22844:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22827:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22822:23:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4547,"nodeType":"ExpressionStatement","src":"22822:23:19"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4548,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"23211:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4551,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"23232:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4552,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4345,"src":"23237:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4553,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"23241:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23237:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23232:11:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4549,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6947,"src":"23216:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6947_$","typeString":"type(library SafeCast)"}},"id":4550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23225:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6946,"src":"23216:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23216:28:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23211:33:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4349,"id":4558,"nodeType":"Return","src":"23204:40:19"}]}]},"documentation":{"id":4343,"nodeType":"StructuredDocumentation","src":"17783:292:19","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":4561,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"18089:4:19","nodeType":"FunctionDefinition","parameters":{"id":4346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4345,"mutability":"mutable","name":"a","nameLocation":"18102:1:19","nodeType":"VariableDeclaration","scope":4561,"src":"18094:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4344,"name":"uint256","nodeType":"ElementaryTypeName","src":"18094:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18093:11:19"},"returnParameters":{"id":4349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4348,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4561,"src":"18128:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4347,"name":"uint256","nodeType":"ElementaryTypeName","src":"18128:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18127:9:19"},"scope":5182,"src":"18080:5181:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4594,"nodeType":"Block","src":"23434:171:19","statements":[{"id":4593,"nodeType":"UncheckedBlock","src":"23444:155:19","statements":[{"assignments":[4573],"declarations":[{"constant":false,"id":4573,"mutability":"mutable","name":"result","nameLocation":"23476:6:19","nodeType":"VariableDeclaration","scope":4593,"src":"23468:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4572,"name":"uint256","nodeType":"ElementaryTypeName","src":"23468:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4577,"initialValue":{"arguments":[{"id":4575,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4564,"src":"23490:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4574,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[4561,4595],"referencedDeclaration":4561,"src":"23485:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23485:7:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"23468:24:19"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4578,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4573,"src":"23513:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4582,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4567,"src":"23555:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3588","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3588","typeString":"enum Math.Rounding"}],"id":4581,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5181,"src":"23538:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3588_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23538:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4584,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4573,"src":"23568:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4585,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4573,"src":"23577:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23568:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4587,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4564,"src":"23586:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23568:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"23538:49:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4579,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6947,"src":"23522:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6947_$","typeString":"type(library SafeCast)"}},"id":4580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23531:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6946,"src":"23522:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23522:66:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23513:75:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4571,"id":4592,"nodeType":"Return","src":"23506:82:19"}]}]},"documentation":{"id":4562,"nodeType":"StructuredDocumentation","src":"23267:86:19","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":4595,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"23367:4:19","nodeType":"FunctionDefinition","parameters":{"id":4568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4564,"mutability":"mutable","name":"a","nameLocation":"23380:1:19","nodeType":"VariableDeclaration","scope":4595,"src":"23372:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4563,"name":"uint256","nodeType":"ElementaryTypeName","src":"23372:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4567,"mutability":"mutable","name":"rounding","nameLocation":"23392:8:19","nodeType":"VariableDeclaration","scope":4595,"src":"23383:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3588","typeString":"enum Math.Rounding"},"typeName":{"id":4566,"nodeType":"UserDefinedTypeName","pathNode":{"id":4565,"name":"Rounding","nameLocations":["23383:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":3588,"src":"23383:8:19"},"referencedDeclaration":3588,"src":"23383:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3588","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"23371:30:19"},"returnParameters":{"id":4571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4570,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4595,"src":"23425:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4569,"name":"uint256","nodeType":"ElementaryTypeName","src":"23425:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23424:9:19"},"scope":5182,"src":"23358:247:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4790,"nodeType":"Block","src":"23796:981:19","statements":[{"assignments":[4604],"declarations":[{"constant":false,"id":4604,"mutability":"mutable","name":"result","nameLocation":"23814:6:19","nodeType":"VariableDeclaration","scope":4790,"src":"23806:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4603,"name":"uint256","nodeType":"ElementaryTypeName","src":"23806:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4606,"initialValue":{"hexValue":"30","id":4605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23823:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"23806:18:19"},{"assignments":[4608],"declarations":[{"constant":false,"id":4608,"mutability":"mutable","name":"exp","nameLocation":"23842:3:19","nodeType":"VariableDeclaration","scope":4790,"src":"23834:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4607,"name":"uint256","nodeType":"ElementaryTypeName","src":"23834:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4609,"nodeType":"VariableDeclarationStatement","src":"23834:11:19"},{"id":4787,"nodeType":"UncheckedBlock","src":"23855:893:19","statements":[{"expression":{"id":4624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4610,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4608,"src":"23879:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"313238","id":4611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23885:3:19","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4614,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4598,"src":"23907:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"id":4620,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":4617,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23916:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":4616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23921:3:19","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"23916:8:19","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":4618,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"23915:10:19","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23928:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"23915:14:19","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"}},"src":"23907:22:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4612,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6947,"src":"23891:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6947_$","typeString":"type(library SafeCast)"}},"id":4613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23900:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6946,"src":"23891:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23891:39:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23885:45:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23879:51:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4625,"nodeType":"ExpressionStatement","src":"23879:51:19"},{"expression":{"id":4628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4626,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4598,"src":"23944:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4627,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4608,"src":"23954:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23944:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4629,"nodeType":"ExpressionStatement","src":"23944:13:19"},{"expression":{"id":4632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4630,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4604,"src":"23971:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4631,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4608,"src":"23981:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23971:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4633,"nodeType":"ExpressionStatement","src":"23971:13:19"},{"expression":{"id":4648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4634,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4608,"src":"23999:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3634","id":4635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24005:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4638,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4598,"src":"24026:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"id":4644,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":4641,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24035:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":4640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24040:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"24035:7:19","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":4642,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24034:9:19","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24046:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24034:13:19","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"}},"src":"24026:21:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4636,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6947,"src":"24010:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6947_$","typeString":"type(library SafeCast)"}},"id":4637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24019:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6946,"src":"24010:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24010:38:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24005:43:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23999:49:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4649,"nodeType":"ExpressionStatement","src":"23999:49:19"},{"expression":{"id":4652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4650,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4598,"src":"24062:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4651,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4608,"src":"24072:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24062:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4653,"nodeType":"ExpressionStatement","src":"24062:13:19"},{"expression":{"id":4656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4654,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4604,"src":"24089:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4655,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4608,"src":"24099:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24089:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4657,"nodeType":"ExpressionStatement","src":"24089:13:19"},{"expression":{"id":4672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4658,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4608,"src":"24117:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3332","id":4659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24123:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4662,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4598,"src":"24144:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"id":4668,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":4665,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24153:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":4664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24158:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"24153:7:19","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":4666,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24152:9:19","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24164:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24152:13:19","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"}},"src":"24144:21:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4660,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6947,"src":"24128:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6947_$","typeString":"type(library SafeCast)"}},"id":4661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24137:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6946,"src":"24128:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24128:38:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24123:43:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24117:49:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4673,"nodeType":"ExpressionStatement","src":"24117:49:19"},{"expression":{"id":4676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4674,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4598,"src":"24180:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4675,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4608,"src":"24190:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24180:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4677,"nodeType":"ExpressionStatement","src":"24180:13:19"},{"expression":{"id":4680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4678,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4604,"src":"24207:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4679,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4608,"src":"24217:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24207:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4681,"nodeType":"ExpressionStatement","src":"24207:13:19"},{"expression":{"id":4696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4682,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4608,"src":"24235:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3136","id":4683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24241:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4686,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4598,"src":"24262:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"id":4692,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":4689,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24271:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":4688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24276:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"24271:7:19","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":4690,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24270:9:19","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24282:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24270:13:19","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"}},"src":"24262:21:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4684,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6947,"src":"24246:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6947_$","typeString":"type(library SafeCast)"}},"id":4685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24255:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6946,"src":"24246:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24246:38:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24241:43:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24235:49:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4697,"nodeType":"ExpressionStatement","src":"24235:49:19"},{"expression":{"id":4700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4698,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4598,"src":"24298:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4699,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4608,"src":"24308:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24298:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4701,"nodeType":"ExpressionStatement","src":"24298:13:19"},{"expression":{"id":4704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4702,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4604,"src":"24325:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4703,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4608,"src":"24335:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24325:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4705,"nodeType":"ExpressionStatement","src":"24325:13:19"},{"expression":{"id":4720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4706,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4608,"src":"24353:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"38","id":4707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24359:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4710,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4598,"src":"24379:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"id":4716,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":4713,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24388:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":4712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24393:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"24388:6:19","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":4714,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24387:8:19","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24398:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24387:12:19","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}},"src":"24379:20:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4708,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6947,"src":"24363:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6947_$","typeString":"type(library SafeCast)"}},"id":4709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24372:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6946,"src":"24363:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24363:37:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24359:41:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24353:47:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4721,"nodeType":"ExpressionStatement","src":"24353:47:19"},{"expression":{"id":4724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4722,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4598,"src":"24414:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4723,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4608,"src":"24424:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24414:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4725,"nodeType":"ExpressionStatement","src":"24414:13:19"},{"expression":{"id":4728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4726,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4604,"src":"24441:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4727,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4608,"src":"24451:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24441:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4729,"nodeType":"ExpressionStatement","src":"24441:13:19"},{"expression":{"id":4744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4730,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4608,"src":"24469:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"34","id":4731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24475:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4734,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4598,"src":"24495:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"id":4740,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":4737,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24504:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":4736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24509:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"24504:6:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":4738,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24503:8:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24514:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24503:12:19","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"}},"src":"24495:20:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4732,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6947,"src":"24479:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6947_$","typeString":"type(library SafeCast)"}},"id":4733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24488:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6946,"src":"24479:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24479:37:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24475:41:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24469:47:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4745,"nodeType":"ExpressionStatement","src":"24469:47:19"},{"expression":{"id":4748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4746,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4598,"src":"24530:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4747,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4608,"src":"24540:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24530:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4749,"nodeType":"ExpressionStatement","src":"24530:13:19"},{"expression":{"id":4752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4750,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4604,"src":"24557:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4751,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4608,"src":"24567:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24557:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4753,"nodeType":"ExpressionStatement","src":"24557:13:19"},{"expression":{"id":4768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4754,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4608,"src":"24585:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24591:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4758,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4598,"src":"24611:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"id":4764,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":4761,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24620:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":4760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24625:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"24620:6:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":4762,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24619:8:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24630:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24619:12:19","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"}},"src":"24611:20:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4756,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6947,"src":"24595:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6947_$","typeString":"type(library SafeCast)"}},"id":4757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24604:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6946,"src":"24595:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24595:37:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24591:41:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24585:47:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4769,"nodeType":"ExpressionStatement","src":"24585:47:19"},{"expression":{"id":4772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4770,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4598,"src":"24646:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4771,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4608,"src":"24656:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24646:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4773,"nodeType":"ExpressionStatement","src":"24646:13:19"},{"expression":{"id":4776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4774,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4604,"src":"24673:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4775,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4608,"src":"24683:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24673:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4777,"nodeType":"ExpressionStatement","src":"24673:13:19"},{"expression":{"id":4785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4778,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4604,"src":"24701:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4781,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4598,"src":"24727:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":4782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24735:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24727:9:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4779,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6947,"src":"24711:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6947_$","typeString":"type(library SafeCast)"}},"id":4780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24720:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6946,"src":"24711:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24711:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24701:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4786,"nodeType":"ExpressionStatement","src":"24701:36:19"}]},{"expression":{"id":4788,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4604,"src":"24764:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4602,"id":4789,"nodeType":"Return","src":"24757:13:19"}]},"documentation":{"id":4596,"nodeType":"StructuredDocumentation","src":"23611:119:19","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":4791,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"23744:4:19","nodeType":"FunctionDefinition","parameters":{"id":4599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4598,"mutability":"mutable","name":"value","nameLocation":"23757:5:19","nodeType":"VariableDeclaration","scope":4791,"src":"23749:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4597,"name":"uint256","nodeType":"ElementaryTypeName","src":"23749:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23748:15:19"},"returnParameters":{"id":4602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4601,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4791,"src":"23787:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4600,"name":"uint256","nodeType":"ElementaryTypeName","src":"23787:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23786:9:19"},"scope":5182,"src":"23735:1042:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4824,"nodeType":"Block","src":"25010:175:19","statements":[{"id":4823,"nodeType":"UncheckedBlock","src":"25020:159:19","statements":[{"assignments":[4803],"declarations":[{"constant":false,"id":4803,"mutability":"mutable","name":"result","nameLocation":"25052:6:19","nodeType":"VariableDeclaration","scope":4823,"src":"25044:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4802,"name":"uint256","nodeType":"ElementaryTypeName","src":"25044:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4807,"initialValue":{"arguments":[{"id":4805,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4794,"src":"25066:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4804,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[4791,4825],"referencedDeclaration":4791,"src":"25061:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25061:11:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25044:28:19"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4808,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4803,"src":"25093:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4812,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4797,"src":"25135:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3588","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3588","typeString":"enum Math.Rounding"}],"id":4811,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5181,"src":"25118:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3588_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25118:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25148:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4815,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4803,"src":"25153:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25148:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4817,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4794,"src":"25162:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25148:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"25118:49:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4809,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6947,"src":"25102:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6947_$","typeString":"type(library SafeCast)"}},"id":4810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25111:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6946,"src":"25102:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25102:66:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25093:75:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4801,"id":4822,"nodeType":"Return","src":"25086:82:19"}]}]},"documentation":{"id":4792,"nodeType":"StructuredDocumentation","src":"24783:142:19","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4825,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"24939:4:19","nodeType":"FunctionDefinition","parameters":{"id":4798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4794,"mutability":"mutable","name":"value","nameLocation":"24952:5:19","nodeType":"VariableDeclaration","scope":4825,"src":"24944:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4793,"name":"uint256","nodeType":"ElementaryTypeName","src":"24944:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4797,"mutability":"mutable","name":"rounding","nameLocation":"24968:8:19","nodeType":"VariableDeclaration","scope":4825,"src":"24959:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3588","typeString":"enum Math.Rounding"},"typeName":{"id":4796,"nodeType":"UserDefinedTypeName","pathNode":{"id":4795,"name":"Rounding","nameLocations":["24959:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":3588,"src":"24959:8:19"},"referencedDeclaration":3588,"src":"24959:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3588","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"24943:34:19"},"returnParameters":{"id":4801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4800,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4825,"src":"25001:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4799,"name":"uint256","nodeType":"ElementaryTypeName","src":"25001:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25000:9:19"},"scope":5182,"src":"24930:255:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4953,"nodeType":"Block","src":"25378:854:19","statements":[{"assignments":[4834],"declarations":[{"constant":false,"id":4834,"mutability":"mutable","name":"result","nameLocation":"25396:6:19","nodeType":"VariableDeclaration","scope":4953,"src":"25388:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4833,"name":"uint256","nodeType":"ElementaryTypeName","src":"25388:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4836,"initialValue":{"hexValue":"30","id":4835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25405:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"25388:18:19"},{"id":4950,"nodeType":"UncheckedBlock","src":"25416:787:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4837,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4828,"src":"25444:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4840,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25453:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25459:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25453:8:19","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"25444:17:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4853,"nodeType":"IfStatement","src":"25440:103:19","trueBody":{"id":4852,"nodeType":"Block","src":"25463:80:19","statements":[{"expression":{"id":4846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4842,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4828,"src":"25481:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4845,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25490:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25496:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25490:8:19","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"25481:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4847,"nodeType":"ExpressionStatement","src":"25481:17:19"},{"expression":{"id":4850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4848,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4834,"src":"25516:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":4849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25526:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25516:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4851,"nodeType":"ExpressionStatement","src":"25516:12:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4854,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4828,"src":"25560:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4857,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25569:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25575:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25569:8:19","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"25560:17:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4870,"nodeType":"IfStatement","src":"25556:103:19","trueBody":{"id":4869,"nodeType":"Block","src":"25579:80:19","statements":[{"expression":{"id":4863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4859,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4828,"src":"25597:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4862,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25606:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25612:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25606:8:19","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"25597:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4864,"nodeType":"ExpressionStatement","src":"25597:17:19"},{"expression":{"id":4867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4865,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4834,"src":"25632:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":4866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25642:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25632:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4868,"nodeType":"ExpressionStatement","src":"25632:12:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4871,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4828,"src":"25676:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4874,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25685:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25691:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25685:8:19","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"25676:17:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4887,"nodeType":"IfStatement","src":"25672:103:19","trueBody":{"id":4886,"nodeType":"Block","src":"25695:80:19","statements":[{"expression":{"id":4880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4876,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4828,"src":"25713:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4879,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25722:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25728:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25722:8:19","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"25713:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4881,"nodeType":"ExpressionStatement","src":"25713:17:19"},{"expression":{"id":4884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4882,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4834,"src":"25748:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":4883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25758:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25748:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4885,"nodeType":"ExpressionStatement","src":"25748:12:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4888,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4828,"src":"25792:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4891,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25801:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25807:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25801:7:19","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"25792:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4904,"nodeType":"IfStatement","src":"25788:100:19","trueBody":{"id":4903,"nodeType":"Block","src":"25810:78:19","statements":[{"expression":{"id":4897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4893,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4828,"src":"25828:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4896,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25837:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25843:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25837:7:19","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"25828:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4898,"nodeType":"ExpressionStatement","src":"25828:16:19"},{"expression":{"id":4901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4899,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4834,"src":"25862:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":4900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25872:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25862:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4902,"nodeType":"ExpressionStatement","src":"25862:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4905,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4828,"src":"25905:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4908,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25914:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25920:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25914:7:19","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"25905:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4921,"nodeType":"IfStatement","src":"25901:100:19","trueBody":{"id":4920,"nodeType":"Block","src":"25923:78:19","statements":[{"expression":{"id":4914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4910,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4828,"src":"25941:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4913,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25950:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25956:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25950:7:19","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"25941:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4915,"nodeType":"ExpressionStatement","src":"25941:16:19"},{"expression":{"id":4918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4916,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4834,"src":"25975:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":4917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25985:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25975:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4919,"nodeType":"ExpressionStatement","src":"25975:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4922,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4828,"src":"26018:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4925,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26027:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26033:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26027:7:19","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"26018:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4938,"nodeType":"IfStatement","src":"26014:100:19","trueBody":{"id":4937,"nodeType":"Block","src":"26036:78:19","statements":[{"expression":{"id":4931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4927,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4828,"src":"26054:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4930,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26063:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26069:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26063:7:19","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"26054:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4932,"nodeType":"ExpressionStatement","src":"26054:16:19"},{"expression":{"id":4935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4933,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4834,"src":"26088:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":4934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26098:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26088:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4936,"nodeType":"ExpressionStatement","src":"26088:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4939,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4828,"src":"26131:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":4942,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26140:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":4941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26146:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"26140:7:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"26131:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4949,"nodeType":"IfStatement","src":"26127:66:19","trueBody":{"id":4948,"nodeType":"Block","src":"26149:44:19","statements":[{"expression":{"id":4946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4944,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4834,"src":"26167:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26177:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"26167:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4947,"nodeType":"ExpressionStatement","src":"26167:11:19"}]}}]},{"expression":{"id":4951,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4834,"src":"26219:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4832,"id":4952,"nodeType":"Return","src":"26212:13:19"}]},"documentation":{"id":4826,"nodeType":"StructuredDocumentation","src":"25191:120:19","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":4954,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"25325:5:19","nodeType":"FunctionDefinition","parameters":{"id":4829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4828,"mutability":"mutable","name":"value","nameLocation":"25339:5:19","nodeType":"VariableDeclaration","scope":4954,"src":"25331:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4827,"name":"uint256","nodeType":"ElementaryTypeName","src":"25331:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25330:15:19"},"returnParameters":{"id":4832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4831,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4954,"src":"25369:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4830,"name":"uint256","nodeType":"ElementaryTypeName","src":"25369:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25368:9:19"},"scope":5182,"src":"25316:916:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4987,"nodeType":"Block","src":"26467:177:19","statements":[{"id":4986,"nodeType":"UncheckedBlock","src":"26477:161:19","statements":[{"assignments":[4966],"declarations":[{"constant":false,"id":4966,"mutability":"mutable","name":"result","nameLocation":"26509:6:19","nodeType":"VariableDeclaration","scope":4986,"src":"26501:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4965,"name":"uint256","nodeType":"ElementaryTypeName","src":"26501:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4970,"initialValue":{"arguments":[{"id":4968,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4957,"src":"26524:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4967,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[4954,4988],"referencedDeclaration":4954,"src":"26518:5:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26518:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"26501:29:19"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4971,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4966,"src":"26551:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4975,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4960,"src":"26593:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3588","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3588","typeString":"enum Math.Rounding"}],"id":4974,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5181,"src":"26576:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3588_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26576:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26606:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":4978,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4966,"src":"26612:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26606:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4980,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4957,"src":"26621:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26606:20:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26576:50:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4972,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6947,"src":"26560:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6947_$","typeString":"type(library SafeCast)"}},"id":4973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26569:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6946,"src":"26560:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26560:67:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26551:76:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4964,"id":4985,"nodeType":"Return","src":"26544:83:19"}]}]},"documentation":{"id":4955,"nodeType":"StructuredDocumentation","src":"26238:143:19","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4988,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"26395:5:19","nodeType":"FunctionDefinition","parameters":{"id":4961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4957,"mutability":"mutable","name":"value","nameLocation":"26409:5:19","nodeType":"VariableDeclaration","scope":4988,"src":"26401:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4956,"name":"uint256","nodeType":"ElementaryTypeName","src":"26401:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4960,"mutability":"mutable","name":"rounding","nameLocation":"26425:8:19","nodeType":"VariableDeclaration","scope":4988,"src":"26416:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3588","typeString":"enum Math.Rounding"},"typeName":{"id":4959,"nodeType":"UserDefinedTypeName","pathNode":{"id":4958,"name":"Rounding","nameLocations":["26416:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":3588,"src":"26416:8:19"},"referencedDeclaration":3588,"src":"26416:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3588","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"26400:34:19"},"returnParameters":{"id":4964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4963,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4988,"src":"26458:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4962,"name":"uint256","nodeType":"ElementaryTypeName","src":"26458:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26457:9:19"},"scope":5182,"src":"26386:258:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5124,"nodeType":"Block","src":"26964:674:19","statements":[{"assignments":[4997],"declarations":[{"constant":false,"id":4997,"mutability":"mutable","name":"result","nameLocation":"26982:6:19","nodeType":"VariableDeclaration","scope":5124,"src":"26974:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4996,"name":"uint256","nodeType":"ElementaryTypeName","src":"26974:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4999,"initialValue":{"hexValue":"30","id":4998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26991:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"26974:18:19"},{"assignments":[5001],"declarations":[{"constant":false,"id":5001,"mutability":"mutable","name":"isGt","nameLocation":"27010:4:19","nodeType":"VariableDeclaration","scope":5124,"src":"27002:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5000,"name":"uint256","nodeType":"ElementaryTypeName","src":"27002:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5002,"nodeType":"VariableDeclarationStatement","src":"27002:12:19"},{"id":5121,"nodeType":"UncheckedBlock","src":"27024:585:19","statements":[{"expression":{"id":5015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5003,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5001,"src":"27048:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5006,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4991,"src":"27071:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"id":5012,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":5009,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27080:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":5008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27085:3:19","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"27080:8:19","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":5010,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27079:10:19","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27092:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27079:14:19","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"}},"src":"27071:22:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5004,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6947,"src":"27055:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6947_$","typeString":"type(library SafeCast)"}},"id":5005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27064:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6946,"src":"27055:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27055:39:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27048:46:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5016,"nodeType":"ExpressionStatement","src":"27048:46:19"},{"expression":{"id":5021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5017,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4991,"src":"27108:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5018,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5001,"src":"27118:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"313238","id":5019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27125:3:19","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"27118:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27108:20:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5022,"nodeType":"ExpressionStatement","src":"27108:20:19"},{"expression":{"id":5027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5023,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4997,"src":"27142:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5024,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5001,"src":"27152:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3136","id":5025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27159:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27152:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27142:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5028,"nodeType":"ExpressionStatement","src":"27142:19:19"},{"expression":{"id":5041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5029,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5001,"src":"27176:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5032,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4991,"src":"27199:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"id":5038,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":5035,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27208:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":5034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27213:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"27208:7:19","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":5036,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27207:9:19","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27219:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27207:13:19","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"}},"src":"27199:21:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5030,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6947,"src":"27183:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6947_$","typeString":"type(library SafeCast)"}},"id":5031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27192:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6946,"src":"27183:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27183:38:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27176:45:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5042,"nodeType":"ExpressionStatement","src":"27176:45:19"},{"expression":{"id":5047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5043,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4991,"src":"27235:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5044,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5001,"src":"27245:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3634","id":5045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27252:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"27245:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27235:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5048,"nodeType":"ExpressionStatement","src":"27235:19:19"},{"expression":{"id":5053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5049,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4997,"src":"27268:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5050,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5001,"src":"27278:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"38","id":5051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27285:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"27278:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27268:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5054,"nodeType":"ExpressionStatement","src":"27268:18:19"},{"expression":{"id":5067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5055,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5001,"src":"27301:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5058,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4991,"src":"27324:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"id":5064,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":5061,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27333:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":5060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27338:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"27333:7:19","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":5062,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27332:9:19","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27344:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27332:13:19","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"}},"src":"27324:21:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5056,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6947,"src":"27308:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6947_$","typeString":"type(library SafeCast)"}},"id":5057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27317:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6946,"src":"27308:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27308:38:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27301:45:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5068,"nodeType":"ExpressionStatement","src":"27301:45:19"},{"expression":{"id":5073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5069,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4991,"src":"27360:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5070,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5001,"src":"27370:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3332","id":5071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27377:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"27370:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27360:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5074,"nodeType":"ExpressionStatement","src":"27360:19:19"},{"expression":{"id":5079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5075,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4997,"src":"27393:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5076,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5001,"src":"27403:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"34","id":5077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27410:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"27403:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27393:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5080,"nodeType":"ExpressionStatement","src":"27393:18:19"},{"expression":{"id":5093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5081,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5001,"src":"27426:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5084,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4991,"src":"27449:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"id":5090,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":5087,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27458:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":5086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27463:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27458:7:19","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":5088,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27457:9:19","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27469:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27457:13:19","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"}},"src":"27449:21:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5082,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6947,"src":"27433:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6947_$","typeString":"type(library SafeCast)"}},"id":5083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27442:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6946,"src":"27433:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27433:38:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27426:45:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5094,"nodeType":"ExpressionStatement","src":"27426:45:19"},{"expression":{"id":5099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5095,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4991,"src":"27485:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5096,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5001,"src":"27495:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3136","id":5097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27502:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27495:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27485:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5100,"nodeType":"ExpressionStatement","src":"27485:19:19"},{"expression":{"id":5105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5101,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4997,"src":"27518:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5102,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5001,"src":"27528:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":5103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27535:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"27528:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27518:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5106,"nodeType":"ExpressionStatement","src":"27518:18:19"},{"expression":{"id":5119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5107,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4997,"src":"27551:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5110,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4991,"src":"27577:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"id":5116,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":5113,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27586:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":5112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27591:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"27586:6:19","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":5114,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27585:8:19","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27596:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27585:12:19","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}},"src":"27577:20:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5108,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6947,"src":"27561:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6947_$","typeString":"type(library SafeCast)"}},"id":5109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27570:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6946,"src":"27561:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27561:37:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27551:47:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5120,"nodeType":"ExpressionStatement","src":"27551:47:19"}]},{"expression":{"id":5122,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4997,"src":"27625:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4995,"id":5123,"nodeType":"Return","src":"27618:13:19"}]},"documentation":{"id":4989,"nodeType":"StructuredDocumentation","src":"26650:246:19","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":5125,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"26910:6:19","nodeType":"FunctionDefinition","parameters":{"id":4992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4991,"mutability":"mutable","name":"value","nameLocation":"26925:5:19","nodeType":"VariableDeclaration","scope":5125,"src":"26917:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4990,"name":"uint256","nodeType":"ElementaryTypeName","src":"26917:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26916:15:19"},"returnParameters":{"id":4995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4994,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5125,"src":"26955:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4993,"name":"uint256","nodeType":"ElementaryTypeName","src":"26955:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26954:9:19"},"scope":5182,"src":"26901:737:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5161,"nodeType":"Block","src":"27875:184:19","statements":[{"id":5160,"nodeType":"UncheckedBlock","src":"27885:168:19","statements":[{"assignments":[5137],"declarations":[{"constant":false,"id":5137,"mutability":"mutable","name":"result","nameLocation":"27917:6:19","nodeType":"VariableDeclaration","scope":5160,"src":"27909:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5136,"name":"uint256","nodeType":"ElementaryTypeName","src":"27909:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5141,"initialValue":{"arguments":[{"id":5139,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5128,"src":"27933:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5138,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[5125,5162],"referencedDeclaration":5125,"src":"27926:6:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27926:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"27909:30:19"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5142,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5137,"src":"27960:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5146,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5131,"src":"28002:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3588","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3588","typeString":"enum Math.Rounding"}],"id":5145,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5181,"src":"27985:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3588_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27985:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28015:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5149,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5137,"src":"28021:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":5150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28031:1:19","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"28021:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5152,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"28020:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28015:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5154,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5128,"src":"28036:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28015:26:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"27985:56:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5143,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6947,"src":"27969:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6947_$","typeString":"type(library SafeCast)"}},"id":5144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27978:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6946,"src":"27969:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27969:73:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27960:82:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5135,"id":5159,"nodeType":"Return","src":"27953:89:19"}]}]},"documentation":{"id":5126,"nodeType":"StructuredDocumentation","src":"27644:144:19","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5162,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"27802:6:19","nodeType":"FunctionDefinition","parameters":{"id":5132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5128,"mutability":"mutable","name":"value","nameLocation":"27817:5:19","nodeType":"VariableDeclaration","scope":5162,"src":"27809:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5127,"name":"uint256","nodeType":"ElementaryTypeName","src":"27809:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5131,"mutability":"mutable","name":"rounding","nameLocation":"27833:8:19","nodeType":"VariableDeclaration","scope":5162,"src":"27824:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3588","typeString":"enum Math.Rounding"},"typeName":{"id":5130,"nodeType":"UserDefinedTypeName","pathNode":{"id":5129,"name":"Rounding","nameLocations":["27824:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":3588,"src":"27824:8:19"},"referencedDeclaration":3588,"src":"27824:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3588","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"27808:34:19"},"returnParameters":{"id":5135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5134,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5162,"src":"27866:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5133,"name":"uint256","nodeType":"ElementaryTypeName","src":"27866:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"27865:9:19"},"scope":5182,"src":"27793:266:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5180,"nodeType":"Block","src":"28257:48:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5173,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5166,"src":"28280:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3588","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3588","typeString":"enum Math.Rounding"}],"id":5172,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28274:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5171,"name":"uint8","nodeType":"ElementaryTypeName","src":"28274:5:19","typeDescriptions":{}}},"id":5174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28274:15:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":5175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28292:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"28274:19:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":5177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28297:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"28274:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5170,"id":5179,"nodeType":"Return","src":"28267:31:19"}]},"documentation":{"id":5163,"nodeType":"StructuredDocumentation","src":"28065:113:19","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":5181,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"28192:16:19","nodeType":"FunctionDefinition","parameters":{"id":5167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5166,"mutability":"mutable","name":"rounding","nameLocation":"28218:8:19","nodeType":"VariableDeclaration","scope":5181,"src":"28209:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3588","typeString":"enum Math.Rounding"},"typeName":{"id":5165,"nodeType":"UserDefinedTypeName","pathNode":{"id":5164,"name":"Rounding","nameLocations":["28209:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":3588,"src":"28209:8:19"},"referencedDeclaration":3588,"src":"28209:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3588","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28208:19:19"},"returnParameters":{"id":5170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5169,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5181,"src":"28251:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5168,"name":"bool","nodeType":"ElementaryTypeName","src":"28251:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"28250:6:19"},"scope":5182,"src":"28183:122:19","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5183,"src":"281:28026:19","usedErrors":[],"usedEvents":[]}],"src":"103:28205:19"},"id":19},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[6947]},"id":6948,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5184,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:20"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":5185,"nodeType":"StructuredDocumentation","src":"218:550:20","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":6947,"linearizedBaseContracts":[6947],"name":"SafeCast","nameLocation":"777:8:20","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":5186,"nodeType":"StructuredDocumentation","src":"792:68:20","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":5192,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:20","nodeType":"ErrorDefinition","parameters":{"id":5191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5188,"mutability":"mutable","name":"bits","nameLocation":"908:4:20","nodeType":"VariableDeclaration","scope":5192,"src":"902:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5187,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5190,"mutability":"mutable","name":"value","nameLocation":"922:5:20","nodeType":"VariableDeclaration","scope":5192,"src":"914:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5189,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:20"},"src":"865:64:20"},{"documentation":{"id":5193,"nodeType":"StructuredDocumentation","src":"935:75:20","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":5197,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:20","nodeType":"ErrorDefinition","parameters":{"id":5196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5195,"mutability":"mutable","name":"value","nameLocation":"1056:5:20","nodeType":"VariableDeclaration","scope":5197,"src":"1049:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5194,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:20"},"src":"1015:48:20"},{"documentation":{"id":5198,"nodeType":"StructuredDocumentation","src":"1069:67:20","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":5204,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:20","nodeType":"ErrorDefinition","parameters":{"id":5203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5200,"mutability":"mutable","name":"bits","nameLocation":"1183:4:20","nodeType":"VariableDeclaration","scope":5204,"src":"1177:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5199,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5202,"mutability":"mutable","name":"value","nameLocation":"1196:5:20","nodeType":"VariableDeclaration","scope":5204,"src":"1189:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5201,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:20"},"src":"1141:62:20"},{"documentation":{"id":5205,"nodeType":"StructuredDocumentation","src":"1209:75:20","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":5209,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:20","nodeType":"ErrorDefinition","parameters":{"id":5208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5207,"mutability":"mutable","name":"value","nameLocation":"1331:5:20","nodeType":"VariableDeclaration","scope":5209,"src":"1323:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5206,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:20"},"src":"1289:49:20"},{"body":{"id":5236,"nodeType":"Block","src":"1695:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5217,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5212,"src":"1709:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5220,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":5219,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":5218,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":5222,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:20","memberName":"max","nodeType":"MemberAccess","src":"1717:17:20","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5230,"nodeType":"IfStatement","src":"1705:105:20","trueBody":{"id":5229,"nodeType":"Block","src":"1736:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":5225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:20","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":5226,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5212,"src":"1793:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5224,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"1757:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5228,"nodeType":"RevertStatement","src":"1750:49:20"}]}},{"expression":{"arguments":[{"id":5233,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5212,"src":"1834:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5232,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":5231,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:20","typeDescriptions":{}}},"id":5234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":5216,"id":5235,"nodeType":"Return","src":"1819:21:20"}]},"documentation":{"id":5210,"nodeType":"StructuredDocumentation","src":"1344:280:20","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":5237,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:20","nodeType":"FunctionDefinition","parameters":{"id":5213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5212,"mutability":"mutable","name":"value","nameLocation":"1656:5:20","nodeType":"VariableDeclaration","scope":5237,"src":"1648:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5211,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:20"},"returnParameters":{"id":5216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5215,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5237,"src":"1686:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":5214,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:20","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:20"},"scope":6947,"src":"1629:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5264,"nodeType":"Block","src":"2204:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5245,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5240,"src":"2218:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5248,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":5247,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":5246,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":5250,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:20","memberName":"max","nodeType":"MemberAccess","src":"2226:17:20","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5258,"nodeType":"IfStatement","src":"2214:105:20","trueBody":{"id":5257,"nodeType":"Block","src":"2245:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":5253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:20","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":5254,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5240,"src":"2302:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5252,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"2266:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5256,"nodeType":"RevertStatement","src":"2259:49:20"}]}},{"expression":{"arguments":[{"id":5261,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5240,"src":"2343:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5260,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":5259,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:20","typeDescriptions":{}}},"id":5262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":5244,"id":5263,"nodeType":"Return","src":"2328:21:20"}]},"documentation":{"id":5238,"nodeType":"StructuredDocumentation","src":"1853:280:20","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":5265,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:20","nodeType":"FunctionDefinition","parameters":{"id":5241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5240,"mutability":"mutable","name":"value","nameLocation":"2165:5:20","nodeType":"VariableDeclaration","scope":5265,"src":"2157:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5239,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:20"},"returnParameters":{"id":5244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5243,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5265,"src":"2195:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":5242,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:20","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:20"},"scope":6947,"src":"2138:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5292,"nodeType":"Block","src":"2713:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5273,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5268,"src":"2727:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5276,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":5275,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":5274,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":5278,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:20","memberName":"max","nodeType":"MemberAccess","src":"2735:17:20","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5286,"nodeType":"IfStatement","src":"2723:105:20","trueBody":{"id":5285,"nodeType":"Block","src":"2754:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":5281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:20","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":5282,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5268,"src":"2811:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5280,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"2775:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5284,"nodeType":"RevertStatement","src":"2768:49:20"}]}},{"expression":{"arguments":[{"id":5289,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5268,"src":"2852:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5288,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":5287,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:20","typeDescriptions":{}}},"id":5290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":5272,"id":5291,"nodeType":"Return","src":"2837:21:20"}]},"documentation":{"id":5266,"nodeType":"StructuredDocumentation","src":"2362:280:20","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":5293,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:20","nodeType":"FunctionDefinition","parameters":{"id":5269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5268,"mutability":"mutable","name":"value","nameLocation":"2674:5:20","nodeType":"VariableDeclaration","scope":5293,"src":"2666:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5267,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:20"},"returnParameters":{"id":5272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5271,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5293,"src":"2704:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":5270,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:20","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:20"},"scope":6947,"src":"2647:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5320,"nodeType":"Block","src":"3222:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5301,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5296,"src":"3236:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5304,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":5303,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":5302,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":5306,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:20","memberName":"max","nodeType":"MemberAccess","src":"3244:17:20","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5314,"nodeType":"IfStatement","src":"3232:105:20","trueBody":{"id":5313,"nodeType":"Block","src":"3263:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":5309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:20","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":5310,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5296,"src":"3320:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5308,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"3284:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5312,"nodeType":"RevertStatement","src":"3277:49:20"}]}},{"expression":{"arguments":[{"id":5317,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5296,"src":"3361:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5316,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":5315,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:20","typeDescriptions":{}}},"id":5318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":5300,"id":5319,"nodeType":"Return","src":"3346:21:20"}]},"documentation":{"id":5294,"nodeType":"StructuredDocumentation","src":"2871:280:20","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":5321,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:20","nodeType":"FunctionDefinition","parameters":{"id":5297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5296,"mutability":"mutable","name":"value","nameLocation":"3183:5:20","nodeType":"VariableDeclaration","scope":5321,"src":"3175:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5295,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:20"},"returnParameters":{"id":5300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5299,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5321,"src":"3213:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":5298,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:20","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:20"},"scope":6947,"src":"3156:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5348,"nodeType":"Block","src":"3731:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5329,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5324,"src":"3745:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5332,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":5331,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":5330,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":5334,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:20","memberName":"max","nodeType":"MemberAccess","src":"3753:17:20","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5342,"nodeType":"IfStatement","src":"3741:105:20","trueBody":{"id":5341,"nodeType":"Block","src":"3772:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":5337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:20","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":5338,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5324,"src":"3829:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5336,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"3793:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5340,"nodeType":"RevertStatement","src":"3786:49:20"}]}},{"expression":{"arguments":[{"id":5345,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5324,"src":"3870:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5344,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":5343,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:20","typeDescriptions":{}}},"id":5346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":5328,"id":5347,"nodeType":"Return","src":"3855:21:20"}]},"documentation":{"id":5322,"nodeType":"StructuredDocumentation","src":"3380:280:20","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":5349,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:20","nodeType":"FunctionDefinition","parameters":{"id":5325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5324,"mutability":"mutable","name":"value","nameLocation":"3692:5:20","nodeType":"VariableDeclaration","scope":5349,"src":"3684:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5323,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:20"},"returnParameters":{"id":5328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5327,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5349,"src":"3722:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":5326,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:20","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:20"},"scope":6947,"src":"3665:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5376,"nodeType":"Block","src":"4240:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5357,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5352,"src":"4254:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5360,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":5359,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":5358,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":5362,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:20","memberName":"max","nodeType":"MemberAccess","src":"4262:17:20","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5370,"nodeType":"IfStatement","src":"4250:105:20","trueBody":{"id":5369,"nodeType":"Block","src":"4281:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":5365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:20","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":5366,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5352,"src":"4338:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5364,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"4302:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5368,"nodeType":"RevertStatement","src":"4295:49:20"}]}},{"expression":{"arguments":[{"id":5373,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5352,"src":"4379:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5372,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":5371,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:20","typeDescriptions":{}}},"id":5374,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":5356,"id":5375,"nodeType":"Return","src":"4364:21:20"}]},"documentation":{"id":5350,"nodeType":"StructuredDocumentation","src":"3889:280:20","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":5377,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:20","nodeType":"FunctionDefinition","parameters":{"id":5353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5352,"mutability":"mutable","name":"value","nameLocation":"4201:5:20","nodeType":"VariableDeclaration","scope":5377,"src":"4193:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5351,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:20"},"returnParameters":{"id":5356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5355,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5377,"src":"4231:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":5354,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:20","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:20"},"scope":6947,"src":"4174:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5404,"nodeType":"Block","src":"4749:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5385,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5380,"src":"4763:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5388,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":5387,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":5386,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":5390,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:20","memberName":"max","nodeType":"MemberAccess","src":"4771:17:20","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5398,"nodeType":"IfStatement","src":"4759:105:20","trueBody":{"id":5397,"nodeType":"Block","src":"4790:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":5393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:20","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":5394,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5380,"src":"4847:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5392,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"4811:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5396,"nodeType":"RevertStatement","src":"4804:49:20"}]}},{"expression":{"arguments":[{"id":5401,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5380,"src":"4888:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5400,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":5399,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:20","typeDescriptions":{}}},"id":5402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":5384,"id":5403,"nodeType":"Return","src":"4873:21:20"}]},"documentation":{"id":5378,"nodeType":"StructuredDocumentation","src":"4398:280:20","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":5405,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:20","nodeType":"FunctionDefinition","parameters":{"id":5381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5380,"mutability":"mutable","name":"value","nameLocation":"4710:5:20","nodeType":"VariableDeclaration","scope":5405,"src":"4702:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5379,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:20"},"returnParameters":{"id":5384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5383,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5405,"src":"4740:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":5382,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:20","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:20"},"scope":6947,"src":"4683:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5432,"nodeType":"Block","src":"5258:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5413,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5408,"src":"5272:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5416,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":5415,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":5414,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":5418,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:20","memberName":"max","nodeType":"MemberAccess","src":"5280:17:20","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5426,"nodeType":"IfStatement","src":"5268:105:20","trueBody":{"id":5425,"nodeType":"Block","src":"5299:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":5421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:20","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":5422,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5408,"src":"5356:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5420,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"5320:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5424,"nodeType":"RevertStatement","src":"5313:49:20"}]}},{"expression":{"arguments":[{"id":5429,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5408,"src":"5397:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5428,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":5427,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:20","typeDescriptions":{}}},"id":5430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":5412,"id":5431,"nodeType":"Return","src":"5382:21:20"}]},"documentation":{"id":5406,"nodeType":"StructuredDocumentation","src":"4907:280:20","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":5433,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:20","nodeType":"FunctionDefinition","parameters":{"id":5409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5408,"mutability":"mutable","name":"value","nameLocation":"5219:5:20","nodeType":"VariableDeclaration","scope":5433,"src":"5211:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5407,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:20"},"returnParameters":{"id":5412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5411,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5433,"src":"5249:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":5410,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:20","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:20"},"scope":6947,"src":"5192:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5460,"nodeType":"Block","src":"5767:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5441,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5436,"src":"5781:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5444,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":5443,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":5442,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":5446,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:20","memberName":"max","nodeType":"MemberAccess","src":"5789:17:20","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5454,"nodeType":"IfStatement","src":"5777:105:20","trueBody":{"id":5453,"nodeType":"Block","src":"5808:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":5449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:20","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":5450,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5436,"src":"5865:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5448,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"5829:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5452,"nodeType":"RevertStatement","src":"5822:49:20"}]}},{"expression":{"arguments":[{"id":5457,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5436,"src":"5906:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5456,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":5455,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:20","typeDescriptions":{}}},"id":5458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":5440,"id":5459,"nodeType":"Return","src":"5891:21:20"}]},"documentation":{"id":5434,"nodeType":"StructuredDocumentation","src":"5416:280:20","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":5461,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:20","nodeType":"FunctionDefinition","parameters":{"id":5437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5436,"mutability":"mutable","name":"value","nameLocation":"5728:5:20","nodeType":"VariableDeclaration","scope":5461,"src":"5720:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5435,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:20"},"returnParameters":{"id":5440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5439,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5461,"src":"5758:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":5438,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:20","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:20"},"scope":6947,"src":"5701:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5488,"nodeType":"Block","src":"6276:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5469,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5464,"src":"6290:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5472,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":5471,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":5470,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":5474,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:20","memberName":"max","nodeType":"MemberAccess","src":"6298:17:20","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5482,"nodeType":"IfStatement","src":"6286:105:20","trueBody":{"id":5481,"nodeType":"Block","src":"6317:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":5477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:20","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":5478,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5464,"src":"6374:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5476,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"6338:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5480,"nodeType":"RevertStatement","src":"6331:49:20"}]}},{"expression":{"arguments":[{"id":5485,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5464,"src":"6415:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5484,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":5483,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:20","typeDescriptions":{}}},"id":5486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":5468,"id":5487,"nodeType":"Return","src":"6400:21:20"}]},"documentation":{"id":5462,"nodeType":"StructuredDocumentation","src":"5925:280:20","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":5489,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:20","nodeType":"FunctionDefinition","parameters":{"id":5465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5464,"mutability":"mutable","name":"value","nameLocation":"6237:5:20","nodeType":"VariableDeclaration","scope":5489,"src":"6229:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5463,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:20"},"returnParameters":{"id":5468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5467,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5489,"src":"6267:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":5466,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:20","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:20"},"scope":6947,"src":"6210:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5516,"nodeType":"Block","src":"6785:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5497,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5492,"src":"6799:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5500,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":5499,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":5498,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":5502,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:20","memberName":"max","nodeType":"MemberAccess","src":"6807:17:20","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5510,"nodeType":"IfStatement","src":"6795:105:20","trueBody":{"id":5509,"nodeType":"Block","src":"6826:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":5505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:20","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":5506,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5492,"src":"6883:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5504,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"6847:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5508,"nodeType":"RevertStatement","src":"6840:49:20"}]}},{"expression":{"arguments":[{"id":5513,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5492,"src":"6924:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5512,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":5511,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:20","typeDescriptions":{}}},"id":5514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":5496,"id":5515,"nodeType":"Return","src":"6909:21:20"}]},"documentation":{"id":5490,"nodeType":"StructuredDocumentation","src":"6434:280:20","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":5517,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:20","nodeType":"FunctionDefinition","parameters":{"id":5493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5492,"mutability":"mutable","name":"value","nameLocation":"6746:5:20","nodeType":"VariableDeclaration","scope":5517,"src":"6738:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5491,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:20"},"returnParameters":{"id":5496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5495,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5517,"src":"6776:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":5494,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:20","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:20"},"scope":6947,"src":"6719:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5544,"nodeType":"Block","src":"7294:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5525,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5520,"src":"7308:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5528,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5527,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":5526,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":5530,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:20","memberName":"max","nodeType":"MemberAccess","src":"7316:17:20","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5538,"nodeType":"IfStatement","src":"7304:105:20","trueBody":{"id":5537,"nodeType":"Block","src":"7335:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":5533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:20","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":5534,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5520,"src":"7392:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5532,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"7356:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5536,"nodeType":"RevertStatement","src":"7349:49:20"}]}},{"expression":{"arguments":[{"id":5541,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5520,"src":"7433:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5540,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5539,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:20","typeDescriptions":{}}},"id":5542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":5524,"id":5543,"nodeType":"Return","src":"7418:21:20"}]},"documentation":{"id":5518,"nodeType":"StructuredDocumentation","src":"6943:280:20","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":5545,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:20","nodeType":"FunctionDefinition","parameters":{"id":5521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5520,"mutability":"mutable","name":"value","nameLocation":"7255:5:20","nodeType":"VariableDeclaration","scope":5545,"src":"7247:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5519,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:20"},"returnParameters":{"id":5524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5523,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5545,"src":"7285:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":5522,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:20","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:20"},"scope":6947,"src":"7228:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5572,"nodeType":"Block","src":"7803:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5553,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5548,"src":"7817:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5556,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":5555,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":5554,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":5558,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:20","memberName":"max","nodeType":"MemberAccess","src":"7825:17:20","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5566,"nodeType":"IfStatement","src":"7813:105:20","trueBody":{"id":5565,"nodeType":"Block","src":"7844:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":5561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:20","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":5562,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5548,"src":"7901:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5560,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"7865:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5564,"nodeType":"RevertStatement","src":"7858:49:20"}]}},{"expression":{"arguments":[{"id":5569,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5548,"src":"7942:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5568,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":5567,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:20","typeDescriptions":{}}},"id":5570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":5552,"id":5571,"nodeType":"Return","src":"7927:21:20"}]},"documentation":{"id":5546,"nodeType":"StructuredDocumentation","src":"7452:280:20","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":5573,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:20","nodeType":"FunctionDefinition","parameters":{"id":5549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5548,"mutability":"mutable","name":"value","nameLocation":"7764:5:20","nodeType":"VariableDeclaration","scope":5573,"src":"7756:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5547,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:20"},"returnParameters":{"id":5552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5551,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5573,"src":"7794:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":5550,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:20","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:20"},"scope":6947,"src":"7737:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5600,"nodeType":"Block","src":"8312:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5581,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5576,"src":"8326:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5584,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":5583,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":5582,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":5586,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:20","memberName":"max","nodeType":"MemberAccess","src":"8334:17:20","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5594,"nodeType":"IfStatement","src":"8322:105:20","trueBody":{"id":5593,"nodeType":"Block","src":"8353:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":5589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:20","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":5590,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5576,"src":"8410:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5588,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"8374:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5592,"nodeType":"RevertStatement","src":"8367:49:20"}]}},{"expression":{"arguments":[{"id":5597,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5576,"src":"8451:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5596,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":5595,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:20","typeDescriptions":{}}},"id":5598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":5580,"id":5599,"nodeType":"Return","src":"8436:21:20"}]},"documentation":{"id":5574,"nodeType":"StructuredDocumentation","src":"7961:280:20","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":5601,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:20","nodeType":"FunctionDefinition","parameters":{"id":5577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5576,"mutability":"mutable","name":"value","nameLocation":"8273:5:20","nodeType":"VariableDeclaration","scope":5601,"src":"8265:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5575,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:20"},"returnParameters":{"id":5580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5579,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5601,"src":"8303:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":5578,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:20","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:20"},"scope":6947,"src":"8246:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5628,"nodeType":"Block","src":"8821:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5609,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5604,"src":"8835:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5612,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":5611,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":5610,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":5614,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:20","memberName":"max","nodeType":"MemberAccess","src":"8843:17:20","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5622,"nodeType":"IfStatement","src":"8831:105:20","trueBody":{"id":5621,"nodeType":"Block","src":"8862:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":5617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:20","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":5618,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5604,"src":"8919:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5616,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"8883:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5620,"nodeType":"RevertStatement","src":"8876:49:20"}]}},{"expression":{"arguments":[{"id":5625,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5604,"src":"8960:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5624,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":5623,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:20","typeDescriptions":{}}},"id":5626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":5608,"id":5627,"nodeType":"Return","src":"8945:21:20"}]},"documentation":{"id":5602,"nodeType":"StructuredDocumentation","src":"8470:280:20","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":5629,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:20","nodeType":"FunctionDefinition","parameters":{"id":5605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5604,"mutability":"mutable","name":"value","nameLocation":"8782:5:20","nodeType":"VariableDeclaration","scope":5629,"src":"8774:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5603,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:20"},"returnParameters":{"id":5608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5607,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5629,"src":"8812:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":5606,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:20","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:20"},"scope":6947,"src":"8755:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5656,"nodeType":"Block","src":"9330:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5637,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5632,"src":"9344:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5640,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5639,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":5638,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":5642,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:20","memberName":"max","nodeType":"MemberAccess","src":"9352:17:20","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5650,"nodeType":"IfStatement","src":"9340:105:20","trueBody":{"id":5649,"nodeType":"Block","src":"9371:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":5645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:20","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":5646,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5632,"src":"9428:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5644,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"9392:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5648,"nodeType":"RevertStatement","src":"9385:49:20"}]}},{"expression":{"arguments":[{"id":5653,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5632,"src":"9469:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5652,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5651,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:20","typeDescriptions":{}}},"id":5654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":5636,"id":5655,"nodeType":"Return","src":"9454:21:20"}]},"documentation":{"id":5630,"nodeType":"StructuredDocumentation","src":"8979:280:20","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":5657,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:20","nodeType":"FunctionDefinition","parameters":{"id":5633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5632,"mutability":"mutable","name":"value","nameLocation":"9291:5:20","nodeType":"VariableDeclaration","scope":5657,"src":"9283:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5631,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:20"},"returnParameters":{"id":5636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5635,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5657,"src":"9321:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":5634,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:20","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:20"},"scope":6947,"src":"9264:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5684,"nodeType":"Block","src":"9839:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5665,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5660,"src":"9853:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5668,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":5667,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":5666,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":5670,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:20","memberName":"max","nodeType":"MemberAccess","src":"9861:17:20","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5678,"nodeType":"IfStatement","src":"9849:105:20","trueBody":{"id":5677,"nodeType":"Block","src":"9880:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":5673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:20","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":5674,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5660,"src":"9937:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5672,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"9901:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5676,"nodeType":"RevertStatement","src":"9894:49:20"}]}},{"expression":{"arguments":[{"id":5681,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5660,"src":"9978:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5680,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":5679,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:20","typeDescriptions":{}}},"id":5682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":5664,"id":5683,"nodeType":"Return","src":"9963:21:20"}]},"documentation":{"id":5658,"nodeType":"StructuredDocumentation","src":"9488:280:20","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":5685,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:20","nodeType":"FunctionDefinition","parameters":{"id":5661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5660,"mutability":"mutable","name":"value","nameLocation":"9800:5:20","nodeType":"VariableDeclaration","scope":5685,"src":"9792:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5659,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:20"},"returnParameters":{"id":5664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5663,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5685,"src":"9830:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":5662,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:20","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:20"},"scope":6947,"src":"9773:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5712,"nodeType":"Block","src":"10348:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5693,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5688,"src":"10362:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5696,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":5695,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":5694,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":5698,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:20","memberName":"max","nodeType":"MemberAccess","src":"10370:17:20","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5706,"nodeType":"IfStatement","src":"10358:105:20","trueBody":{"id":5705,"nodeType":"Block","src":"10389:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":5701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:20","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":5702,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5688,"src":"10446:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5700,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"10410:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5704,"nodeType":"RevertStatement","src":"10403:49:20"}]}},{"expression":{"arguments":[{"id":5709,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5688,"src":"10487:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5708,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":5707,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:20","typeDescriptions":{}}},"id":5710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":5692,"id":5711,"nodeType":"Return","src":"10472:21:20"}]},"documentation":{"id":5686,"nodeType":"StructuredDocumentation","src":"9997:280:20","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":5713,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:20","nodeType":"FunctionDefinition","parameters":{"id":5689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5688,"mutability":"mutable","name":"value","nameLocation":"10309:5:20","nodeType":"VariableDeclaration","scope":5713,"src":"10301:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5687,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:20"},"returnParameters":{"id":5692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5691,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5713,"src":"10339:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":5690,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:20","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:20"},"scope":6947,"src":"10282:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5740,"nodeType":"Block","src":"10857:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5721,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5716,"src":"10871:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5724,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":5723,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":5722,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":5726,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:20","memberName":"max","nodeType":"MemberAccess","src":"10879:17:20","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5734,"nodeType":"IfStatement","src":"10867:105:20","trueBody":{"id":5733,"nodeType":"Block","src":"10898:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":5729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:20","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":5730,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5716,"src":"10955:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5728,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"10919:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5732,"nodeType":"RevertStatement","src":"10912:49:20"}]}},{"expression":{"arguments":[{"id":5737,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5716,"src":"10996:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5736,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":5735,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:20","typeDescriptions":{}}},"id":5738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":5720,"id":5739,"nodeType":"Return","src":"10981:21:20"}]},"documentation":{"id":5714,"nodeType":"StructuredDocumentation","src":"10506:280:20","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":5741,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:20","nodeType":"FunctionDefinition","parameters":{"id":5717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5716,"mutability":"mutable","name":"value","nameLocation":"10818:5:20","nodeType":"VariableDeclaration","scope":5741,"src":"10810:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5715,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:20"},"returnParameters":{"id":5720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5719,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5741,"src":"10848:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":5718,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:20","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:20"},"scope":6947,"src":"10791:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5768,"nodeType":"Block","src":"11360:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5749,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5744,"src":"11374:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5752,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":5751,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":5750,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":5754,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:20","memberName":"max","nodeType":"MemberAccess","src":"11382:16:20","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5762,"nodeType":"IfStatement","src":"11370:103:20","trueBody":{"id":5761,"nodeType":"Block","src":"11400:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":5757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:20","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":5758,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5744,"src":"11456:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5756,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"11421:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5760,"nodeType":"RevertStatement","src":"11414:48:20"}]}},{"expression":{"arguments":[{"id":5765,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5744,"src":"11496:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5764,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":5763,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:20","typeDescriptions":{}}},"id":5766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":5748,"id":5767,"nodeType":"Return","src":"11482:20:20"}]},"documentation":{"id":5742,"nodeType":"StructuredDocumentation","src":"11015:276:20","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":5769,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:20","nodeType":"FunctionDefinition","parameters":{"id":5745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5744,"mutability":"mutable","name":"value","nameLocation":"11322:5:20","nodeType":"VariableDeclaration","scope":5769,"src":"11314:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5743,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:20"},"returnParameters":{"id":5748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5747,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5769,"src":"11352:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":5746,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:20","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:20"},"scope":6947,"src":"11296:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5796,"nodeType":"Block","src":"11860:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5777,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5772,"src":"11874:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5780,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":5779,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":5778,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":5782,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:20","memberName":"max","nodeType":"MemberAccess","src":"11882:16:20","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5790,"nodeType":"IfStatement","src":"11870:103:20","trueBody":{"id":5789,"nodeType":"Block","src":"11900:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":5785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:20","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":5786,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5772,"src":"11956:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5784,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"11921:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5788,"nodeType":"RevertStatement","src":"11914:48:20"}]}},{"expression":{"arguments":[{"id":5793,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5772,"src":"11996:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5792,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":5791,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:20","typeDescriptions":{}}},"id":5794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":5776,"id":5795,"nodeType":"Return","src":"11982:20:20"}]},"documentation":{"id":5770,"nodeType":"StructuredDocumentation","src":"11515:276:20","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":5797,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:20","nodeType":"FunctionDefinition","parameters":{"id":5773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5772,"mutability":"mutable","name":"value","nameLocation":"11822:5:20","nodeType":"VariableDeclaration","scope":5797,"src":"11814:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5771,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:20"},"returnParameters":{"id":5776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5775,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5797,"src":"11852:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":5774,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:20","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:20"},"scope":6947,"src":"11796:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5824,"nodeType":"Block","src":"12360:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5805,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5800,"src":"12374:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5808,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":5807,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":5806,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":5810,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:20","memberName":"max","nodeType":"MemberAccess","src":"12382:16:20","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5818,"nodeType":"IfStatement","src":"12370:103:20","trueBody":{"id":5817,"nodeType":"Block","src":"12400:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":5813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:20","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":5814,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5800,"src":"12456:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5812,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"12421:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5816,"nodeType":"RevertStatement","src":"12414:48:20"}]}},{"expression":{"arguments":[{"id":5821,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5800,"src":"12496:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5820,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":5819,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:20","typeDescriptions":{}}},"id":5822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":5804,"id":5823,"nodeType":"Return","src":"12482:20:20"}]},"documentation":{"id":5798,"nodeType":"StructuredDocumentation","src":"12015:276:20","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":5825,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:20","nodeType":"FunctionDefinition","parameters":{"id":5801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5800,"mutability":"mutable","name":"value","nameLocation":"12322:5:20","nodeType":"VariableDeclaration","scope":5825,"src":"12314:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5799,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:20"},"returnParameters":{"id":5804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5803,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5825,"src":"12352:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":5802,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:20","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:20"},"scope":6947,"src":"12296:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5852,"nodeType":"Block","src":"12860:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5833,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5828,"src":"12874:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5836,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":5835,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":5834,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":5838,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:20","memberName":"max","nodeType":"MemberAccess","src":"12882:16:20","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5846,"nodeType":"IfStatement","src":"12870:103:20","trueBody":{"id":5845,"nodeType":"Block","src":"12900:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":5841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:20","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":5842,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5828,"src":"12956:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5840,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"12921:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5844,"nodeType":"RevertStatement","src":"12914:48:20"}]}},{"expression":{"arguments":[{"id":5849,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5828,"src":"12996:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5848,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":5847,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:20","typeDescriptions":{}}},"id":5850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":5832,"id":5851,"nodeType":"Return","src":"12982:20:20"}]},"documentation":{"id":5826,"nodeType":"StructuredDocumentation","src":"12515:276:20","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":5853,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:20","nodeType":"FunctionDefinition","parameters":{"id":5829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5828,"mutability":"mutable","name":"value","nameLocation":"12822:5:20","nodeType":"VariableDeclaration","scope":5853,"src":"12814:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5827,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:20"},"returnParameters":{"id":5832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5831,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5853,"src":"12852:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":5830,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:20","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:20"},"scope":6947,"src":"12796:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5880,"nodeType":"Block","src":"13360:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5861,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5856,"src":"13374:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5864,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5863,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":5862,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":5866,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:20","memberName":"max","nodeType":"MemberAccess","src":"13382:16:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5874,"nodeType":"IfStatement","src":"13370:103:20","trueBody":{"id":5873,"nodeType":"Block","src":"13400:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":5869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:20","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":5870,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5856,"src":"13456:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5868,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"13421:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5872,"nodeType":"RevertStatement","src":"13414:48:20"}]}},{"expression":{"arguments":[{"id":5877,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5856,"src":"13496:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5876,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5875,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:20","typeDescriptions":{}}},"id":5878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":5860,"id":5879,"nodeType":"Return","src":"13482:20:20"}]},"documentation":{"id":5854,"nodeType":"StructuredDocumentation","src":"13015:276:20","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":5881,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:20","nodeType":"FunctionDefinition","parameters":{"id":5857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5856,"mutability":"mutable","name":"value","nameLocation":"13322:5:20","nodeType":"VariableDeclaration","scope":5881,"src":"13314:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5855,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:20"},"returnParameters":{"id":5860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5859,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5881,"src":"13352:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5858,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:20"},"scope":6947,"src":"13296:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5908,"nodeType":"Block","src":"13860:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5889,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5884,"src":"13874:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5892,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":5891,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":5890,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":5894,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:20","memberName":"max","nodeType":"MemberAccess","src":"13882:16:20","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5902,"nodeType":"IfStatement","src":"13870:103:20","trueBody":{"id":5901,"nodeType":"Block","src":"13900:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":5897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:20","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":5898,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5884,"src":"13956:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5896,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"13921:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5900,"nodeType":"RevertStatement","src":"13914:48:20"}]}},{"expression":{"arguments":[{"id":5905,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5884,"src":"13996:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5904,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":5903,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:20","typeDescriptions":{}}},"id":5906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":5888,"id":5907,"nodeType":"Return","src":"13982:20:20"}]},"documentation":{"id":5882,"nodeType":"StructuredDocumentation","src":"13515:276:20","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":5909,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:20","nodeType":"FunctionDefinition","parameters":{"id":5885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5884,"mutability":"mutable","name":"value","nameLocation":"13822:5:20","nodeType":"VariableDeclaration","scope":5909,"src":"13814:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5883,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:20"},"returnParameters":{"id":5888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5887,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5909,"src":"13852:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":5886,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:20","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:20"},"scope":6947,"src":"13796:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5936,"nodeType":"Block","src":"14360:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5917,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5912,"src":"14374:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5920,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5919,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":5918,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":5922,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:20","memberName":"max","nodeType":"MemberAccess","src":"14382:16:20","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5930,"nodeType":"IfStatement","src":"14370:103:20","trueBody":{"id":5929,"nodeType":"Block","src":"14400:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":5925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:20","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":5926,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5912,"src":"14456:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5924,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"14421:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5928,"nodeType":"RevertStatement","src":"14414:48:20"}]}},{"expression":{"arguments":[{"id":5933,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5912,"src":"14496:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5932,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5931,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:20","typeDescriptions":{}}},"id":5934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":5916,"id":5935,"nodeType":"Return","src":"14482:20:20"}]},"documentation":{"id":5910,"nodeType":"StructuredDocumentation","src":"14015:276:20","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":5937,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:20","nodeType":"FunctionDefinition","parameters":{"id":5913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5912,"mutability":"mutable","name":"value","nameLocation":"14322:5:20","nodeType":"VariableDeclaration","scope":5937,"src":"14314:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5911,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:20"},"returnParameters":{"id":5916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5915,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5937,"src":"14352:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":5914,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:20","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:20"},"scope":6947,"src":"14296:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5964,"nodeType":"Block","src":"14860:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5945,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5940,"src":"14874:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5948,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":5947,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":5946,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":5950,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:20","memberName":"max","nodeType":"MemberAccess","src":"14882:16:20","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5958,"nodeType":"IfStatement","src":"14870:103:20","trueBody":{"id":5957,"nodeType":"Block","src":"14900:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":5953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:20","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":5954,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5940,"src":"14956:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5952,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"14921:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5956,"nodeType":"RevertStatement","src":"14914:48:20"}]}},{"expression":{"arguments":[{"id":5961,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5940,"src":"14996:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5960,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":5959,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:20","typeDescriptions":{}}},"id":5962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":5944,"id":5963,"nodeType":"Return","src":"14982:20:20"}]},"documentation":{"id":5938,"nodeType":"StructuredDocumentation","src":"14515:276:20","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":5965,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:20","nodeType":"FunctionDefinition","parameters":{"id":5941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5940,"mutability":"mutable","name":"value","nameLocation":"14822:5:20","nodeType":"VariableDeclaration","scope":5965,"src":"14814:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5939,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:20"},"returnParameters":{"id":5944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5943,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5965,"src":"14852:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":5942,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:20","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:20"},"scope":6947,"src":"14796:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5992,"nodeType":"Block","src":"15360:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5973,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5968,"src":"15374:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5976,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":5975,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":5974,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":5978,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:20","memberName":"max","nodeType":"MemberAccess","src":"15382:16:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5986,"nodeType":"IfStatement","src":"15370:103:20","trueBody":{"id":5985,"nodeType":"Block","src":"15400:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":5981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":5982,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5968,"src":"15456:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5980,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"15421:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5984,"nodeType":"RevertStatement","src":"15414:48:20"}]}},{"expression":{"arguments":[{"id":5989,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5968,"src":"15496:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5988,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":5987,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:20","typeDescriptions":{}}},"id":5990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":5972,"id":5991,"nodeType":"Return","src":"15482:20:20"}]},"documentation":{"id":5966,"nodeType":"StructuredDocumentation","src":"15015:276:20","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":5993,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:20","nodeType":"FunctionDefinition","parameters":{"id":5969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5968,"mutability":"mutable","name":"value","nameLocation":"15322:5:20","nodeType":"VariableDeclaration","scope":5993,"src":"15314:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5967,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:20"},"returnParameters":{"id":5972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5971,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5993,"src":"15352:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":5970,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:20"},"scope":6947,"src":"15296:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6020,"nodeType":"Block","src":"15860:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6001,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5996,"src":"15874:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6004,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":6003,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":6002,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":6006,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:20","memberName":"max","nodeType":"MemberAccess","src":"15882:16:20","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6014,"nodeType":"IfStatement","src":"15870:103:20","trueBody":{"id":6013,"nodeType":"Block","src":"15900:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":6009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:20","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":6010,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5996,"src":"15956:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6008,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"15921:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6012,"nodeType":"RevertStatement","src":"15914:48:20"}]}},{"expression":{"arguments":[{"id":6017,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5996,"src":"15996:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6016,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":6015,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:20","typeDescriptions":{}}},"id":6018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":6000,"id":6019,"nodeType":"Return","src":"15982:20:20"}]},"documentation":{"id":5994,"nodeType":"StructuredDocumentation","src":"15515:276:20","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":6021,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:20","nodeType":"FunctionDefinition","parameters":{"id":5997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5996,"mutability":"mutable","name":"value","nameLocation":"15822:5:20","nodeType":"VariableDeclaration","scope":6021,"src":"15814:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5995,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:20"},"returnParameters":{"id":6000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5999,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6021,"src":"15852:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":5998,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:20","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:20"},"scope":6947,"src":"15796:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6048,"nodeType":"Block","src":"16360:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6029,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6024,"src":"16374:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6032,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":6031,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":6030,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":6034,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:20","memberName":"max","nodeType":"MemberAccess","src":"16382:16:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6042,"nodeType":"IfStatement","src":"16370:103:20","trueBody":{"id":6041,"nodeType":"Block","src":"16400:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":6037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":6038,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6024,"src":"16456:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6036,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"16421:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6040,"nodeType":"RevertStatement","src":"16414:48:20"}]}},{"expression":{"arguments":[{"id":6045,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6024,"src":"16496:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6044,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":6043,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:20","typeDescriptions":{}}},"id":6046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":6028,"id":6047,"nodeType":"Return","src":"16482:20:20"}]},"documentation":{"id":6022,"nodeType":"StructuredDocumentation","src":"16015:276:20","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":6049,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:20","nodeType":"FunctionDefinition","parameters":{"id":6025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6024,"mutability":"mutable","name":"value","nameLocation":"16322:5:20","nodeType":"VariableDeclaration","scope":6049,"src":"16314:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6023,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:20"},"returnParameters":{"id":6028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6027,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6049,"src":"16352:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":6026,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:20"},"scope":6947,"src":"16296:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6076,"nodeType":"Block","src":"16854:146:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6057,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6052,"src":"16868:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6060,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6059,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":6058,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":6062,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:20","memberName":"max","nodeType":"MemberAccess","src":"16876:15:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6070,"nodeType":"IfStatement","src":"16864:101:20","trueBody":{"id":6069,"nodeType":"Block","src":"16893:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":6065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:20","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":6066,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6052,"src":"16948:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6064,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"16914:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6068,"nodeType":"RevertStatement","src":"16907:47:20"}]}},{"expression":{"arguments":[{"id":6073,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6052,"src":"16987:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6072,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6071,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:20","typeDescriptions":{}}},"id":6074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":6056,"id":6075,"nodeType":"Return","src":"16974:19:20"}]},"documentation":{"id":6050,"nodeType":"StructuredDocumentation","src":"16515:272:20","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":6077,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:20","nodeType":"FunctionDefinition","parameters":{"id":6053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6052,"mutability":"mutable","name":"value","nameLocation":"16817:5:20","nodeType":"VariableDeclaration","scope":6077,"src":"16809:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6051,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:20"},"returnParameters":{"id":6056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6055,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6077,"src":"16847:5:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6054,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:20"},"scope":6947,"src":"16792:208:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6099,"nodeType":"Block","src":"17236:128:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6085,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6080,"src":"17250:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":6086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6093,"nodeType":"IfStatement","src":"17246:81:20","trueBody":{"id":6092,"nodeType":"Block","src":"17261:66:20","statements":[{"errorCall":{"arguments":[{"id":6089,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6080,"src":"17310:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6088,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5197,"src":"17282:27:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$__$","typeString":"function (int256) pure"}},"id":6090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6091,"nodeType":"RevertStatement","src":"17275:41:20"}]}},{"expression":{"arguments":[{"id":6096,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6080,"src":"17351:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6095,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6094,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:20","typeDescriptions":{}}},"id":6097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6084,"id":6098,"nodeType":"Return","src":"17336:21:20"}]},"documentation":{"id":6078,"nodeType":"StructuredDocumentation","src":"17006:160:20","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":6100,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:20","nodeType":"FunctionDefinition","parameters":{"id":6081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6080,"mutability":"mutable","name":"value","nameLocation":"17197:5:20","nodeType":"VariableDeclaration","scope":6100,"src":"17190:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6079,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:20"},"returnParameters":{"id":6084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6083,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6100,"src":"17227:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6082,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:20"},"scope":6947,"src":"17171:193:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6125,"nodeType":"Block","src":"17761:150:20","statements":[{"expression":{"id":6113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6108,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6106,"src":"17771:10:20","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6111,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6103,"src":"17791:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6110,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":6109,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:20","typeDescriptions":{}}},"id":6112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:20","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":6114,"nodeType":"ExpressionStatement","src":"17771:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6115,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6106,"src":"17811:10:20","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6116,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6103,"src":"17825:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6124,"nodeType":"IfStatement","src":"17807:98:20","trueBody":{"id":6123,"nodeType":"Block","src":"17832:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":6119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:20","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":6120,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6103,"src":"17888:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6118,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"17853:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6122,"nodeType":"RevertStatement","src":"17846:48:20"}]}}]},"documentation":{"id":6101,"nodeType":"StructuredDocumentation","src":"17370:312:20","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":6126,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:20","nodeType":"FunctionDefinition","parameters":{"id":6104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6103,"mutability":"mutable","name":"value","nameLocation":"17712:5:20","nodeType":"VariableDeclaration","scope":6126,"src":"17705:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6102,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:20"},"returnParameters":{"id":6107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6106,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:20","nodeType":"VariableDeclaration","scope":6126,"src":"17742:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":6105,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:20","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:20"},"scope":6947,"src":"17687:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6151,"nodeType":"Block","src":"18308:150:20","statements":[{"expression":{"id":6139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6134,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6132,"src":"18318:10:20","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6137,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6129,"src":"18338:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6136,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":6135,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:20","typeDescriptions":{}}},"id":6138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:20","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":6140,"nodeType":"ExpressionStatement","src":"18318:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6141,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6132,"src":"18358:10:20","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6142,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6129,"src":"18372:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6150,"nodeType":"IfStatement","src":"18354:98:20","trueBody":{"id":6149,"nodeType":"Block","src":"18379:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":6145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:20","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":6146,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6129,"src":"18435:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6144,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"18400:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6148,"nodeType":"RevertStatement","src":"18393:48:20"}]}}]},"documentation":{"id":6127,"nodeType":"StructuredDocumentation","src":"17917:312:20","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":6152,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:20","nodeType":"FunctionDefinition","parameters":{"id":6130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6129,"mutability":"mutable","name":"value","nameLocation":"18259:5:20","nodeType":"VariableDeclaration","scope":6152,"src":"18252:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6128,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:20"},"returnParameters":{"id":6133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6132,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:20","nodeType":"VariableDeclaration","scope":6152,"src":"18289:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":6131,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:20","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:20"},"scope":6947,"src":"18234:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6177,"nodeType":"Block","src":"18855:150:20","statements":[{"expression":{"id":6165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6160,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6158,"src":"18865:10:20","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6163,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6155,"src":"18885:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6162,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":6161,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:20","typeDescriptions":{}}},"id":6164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:20","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":6166,"nodeType":"ExpressionStatement","src":"18865:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6167,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6158,"src":"18905:10:20","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6168,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6155,"src":"18919:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6176,"nodeType":"IfStatement","src":"18901:98:20","trueBody":{"id":6175,"nodeType":"Block","src":"18926:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":6171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:20","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":6172,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6155,"src":"18982:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6170,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"18947:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6174,"nodeType":"RevertStatement","src":"18940:48:20"}]}}]},"documentation":{"id":6153,"nodeType":"StructuredDocumentation","src":"18464:312:20","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":6178,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:20","nodeType":"FunctionDefinition","parameters":{"id":6156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6155,"mutability":"mutable","name":"value","nameLocation":"18806:5:20","nodeType":"VariableDeclaration","scope":6178,"src":"18799:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6154,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:20"},"returnParameters":{"id":6159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6158,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:20","nodeType":"VariableDeclaration","scope":6178,"src":"18836:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":6157,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:20","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:20"},"scope":6947,"src":"18781:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6203,"nodeType":"Block","src":"19402:150:20","statements":[{"expression":{"id":6191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6186,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6184,"src":"19412:10:20","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6189,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6181,"src":"19432:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6188,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":6187,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:20","typeDescriptions":{}}},"id":6190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:20","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":6192,"nodeType":"ExpressionStatement","src":"19412:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6193,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6184,"src":"19452:10:20","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6194,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6181,"src":"19466:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6202,"nodeType":"IfStatement","src":"19448:98:20","trueBody":{"id":6201,"nodeType":"Block","src":"19473:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":6197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:20","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":6198,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6181,"src":"19529:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6196,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"19494:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6200,"nodeType":"RevertStatement","src":"19487:48:20"}]}}]},"documentation":{"id":6179,"nodeType":"StructuredDocumentation","src":"19011:312:20","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":6204,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:20","nodeType":"FunctionDefinition","parameters":{"id":6182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6181,"mutability":"mutable","name":"value","nameLocation":"19353:5:20","nodeType":"VariableDeclaration","scope":6204,"src":"19346:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6180,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:20"},"returnParameters":{"id":6185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6184,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:20","nodeType":"VariableDeclaration","scope":6204,"src":"19383:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":6183,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:20","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:20"},"scope":6947,"src":"19328:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6229,"nodeType":"Block","src":"19949:150:20","statements":[{"expression":{"id":6217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6212,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6210,"src":"19959:10:20","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6215,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6207,"src":"19979:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6214,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":6213,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:20","typeDescriptions":{}}},"id":6216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:20","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":6218,"nodeType":"ExpressionStatement","src":"19959:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6219,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6210,"src":"19999:10:20","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6220,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6207,"src":"20013:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6228,"nodeType":"IfStatement","src":"19995:98:20","trueBody":{"id":6227,"nodeType":"Block","src":"20020:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":6223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:20","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":6224,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6207,"src":"20076:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6222,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"20041:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6226,"nodeType":"RevertStatement","src":"20034:48:20"}]}}]},"documentation":{"id":6205,"nodeType":"StructuredDocumentation","src":"19558:312:20","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":6230,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:20","nodeType":"FunctionDefinition","parameters":{"id":6208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6207,"mutability":"mutable","name":"value","nameLocation":"19900:5:20","nodeType":"VariableDeclaration","scope":6230,"src":"19893:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6206,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:20"},"returnParameters":{"id":6211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6210,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:20","nodeType":"VariableDeclaration","scope":6230,"src":"19930:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":6209,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:20","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:20"},"scope":6947,"src":"19875:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6255,"nodeType":"Block","src":"20496:150:20","statements":[{"expression":{"id":6243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6238,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6236,"src":"20506:10:20","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6241,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6233,"src":"20526:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6240,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":6239,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:20","typeDescriptions":{}}},"id":6242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:20","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":6244,"nodeType":"ExpressionStatement","src":"20506:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6245,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6236,"src":"20546:10:20","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6246,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6233,"src":"20560:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6254,"nodeType":"IfStatement","src":"20542:98:20","trueBody":{"id":6253,"nodeType":"Block","src":"20567:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":6249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:20","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":6250,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6233,"src":"20623:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6248,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"20588:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6252,"nodeType":"RevertStatement","src":"20581:48:20"}]}}]},"documentation":{"id":6231,"nodeType":"StructuredDocumentation","src":"20105:312:20","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":6256,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:20","nodeType":"FunctionDefinition","parameters":{"id":6234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6233,"mutability":"mutable","name":"value","nameLocation":"20447:5:20","nodeType":"VariableDeclaration","scope":6256,"src":"20440:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6232,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:20"},"returnParameters":{"id":6237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6236,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:20","nodeType":"VariableDeclaration","scope":6256,"src":"20477:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":6235,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:20","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:20"},"scope":6947,"src":"20422:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6281,"nodeType":"Block","src":"21043:150:20","statements":[{"expression":{"id":6269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6264,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6262,"src":"21053:10:20","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6267,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6259,"src":"21073:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6266,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":6265,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:20","typeDescriptions":{}}},"id":6268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:20","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":6270,"nodeType":"ExpressionStatement","src":"21053:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6271,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6262,"src":"21093:10:20","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6272,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6259,"src":"21107:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6280,"nodeType":"IfStatement","src":"21089:98:20","trueBody":{"id":6279,"nodeType":"Block","src":"21114:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":6275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:20","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":6276,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6259,"src":"21170:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6274,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"21135:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6278,"nodeType":"RevertStatement","src":"21128:48:20"}]}}]},"documentation":{"id":6257,"nodeType":"StructuredDocumentation","src":"20652:312:20","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":6282,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:20","nodeType":"FunctionDefinition","parameters":{"id":6260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6259,"mutability":"mutable","name":"value","nameLocation":"20994:5:20","nodeType":"VariableDeclaration","scope":6282,"src":"20987:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6258,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:20"},"returnParameters":{"id":6263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6262,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:20","nodeType":"VariableDeclaration","scope":6282,"src":"21024:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":6261,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:20","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:20"},"scope":6947,"src":"20969:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6307,"nodeType":"Block","src":"21590:150:20","statements":[{"expression":{"id":6295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6290,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6288,"src":"21600:10:20","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6293,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6285,"src":"21620:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6292,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":6291,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:20","typeDescriptions":{}}},"id":6294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:20","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":6296,"nodeType":"ExpressionStatement","src":"21600:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6297,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6288,"src":"21640:10:20","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6298,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6285,"src":"21654:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6306,"nodeType":"IfStatement","src":"21636:98:20","trueBody":{"id":6305,"nodeType":"Block","src":"21661:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":6301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:20","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":6302,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6285,"src":"21717:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6300,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"21682:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6304,"nodeType":"RevertStatement","src":"21675:48:20"}]}}]},"documentation":{"id":6283,"nodeType":"StructuredDocumentation","src":"21199:312:20","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":6308,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:20","nodeType":"FunctionDefinition","parameters":{"id":6286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6285,"mutability":"mutable","name":"value","nameLocation":"21541:5:20","nodeType":"VariableDeclaration","scope":6308,"src":"21534:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6284,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:20"},"returnParameters":{"id":6289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6288,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:20","nodeType":"VariableDeclaration","scope":6308,"src":"21571:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":6287,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:20","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:20"},"scope":6947,"src":"21516:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6333,"nodeType":"Block","src":"22137:150:20","statements":[{"expression":{"id":6321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6316,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6314,"src":"22147:10:20","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6319,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6311,"src":"22167:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6318,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":6317,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:20","typeDescriptions":{}}},"id":6320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:20","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":6322,"nodeType":"ExpressionStatement","src":"22147:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6323,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6314,"src":"22187:10:20","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6324,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6311,"src":"22201:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6332,"nodeType":"IfStatement","src":"22183:98:20","trueBody":{"id":6331,"nodeType":"Block","src":"22208:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":6327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:20","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":6328,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6311,"src":"22264:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6326,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"22229:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6330,"nodeType":"RevertStatement","src":"22222:48:20"}]}}]},"documentation":{"id":6309,"nodeType":"StructuredDocumentation","src":"21746:312:20","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":6334,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:20","nodeType":"FunctionDefinition","parameters":{"id":6312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6311,"mutability":"mutable","name":"value","nameLocation":"22088:5:20","nodeType":"VariableDeclaration","scope":6334,"src":"22081:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6310,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:20"},"returnParameters":{"id":6315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6314,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:20","nodeType":"VariableDeclaration","scope":6334,"src":"22118:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":6313,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:20","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:20"},"scope":6947,"src":"22063:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6359,"nodeType":"Block","src":"22684:150:20","statements":[{"expression":{"id":6347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6342,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6340,"src":"22694:10:20","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6345,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6337,"src":"22714:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6344,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":6343,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:20","typeDescriptions":{}}},"id":6346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:20","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":6348,"nodeType":"ExpressionStatement","src":"22694:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6349,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6340,"src":"22734:10:20","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6350,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6337,"src":"22748:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6358,"nodeType":"IfStatement","src":"22730:98:20","trueBody":{"id":6357,"nodeType":"Block","src":"22755:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":6353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:20","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":6354,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6337,"src":"22811:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6352,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"22776:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6356,"nodeType":"RevertStatement","src":"22769:48:20"}]}}]},"documentation":{"id":6335,"nodeType":"StructuredDocumentation","src":"22293:312:20","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":6360,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:20","nodeType":"FunctionDefinition","parameters":{"id":6338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6337,"mutability":"mutable","name":"value","nameLocation":"22635:5:20","nodeType":"VariableDeclaration","scope":6360,"src":"22628:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6336,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:20"},"returnParameters":{"id":6341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6340,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:20","nodeType":"VariableDeclaration","scope":6360,"src":"22665:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":6339,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:20","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:20"},"scope":6947,"src":"22610:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6385,"nodeType":"Block","src":"23231:150:20","statements":[{"expression":{"id":6373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6368,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6366,"src":"23241:10:20","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6371,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6363,"src":"23261:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6370,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":6369,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:20","typeDescriptions":{}}},"id":6372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:20","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":6374,"nodeType":"ExpressionStatement","src":"23241:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6375,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6366,"src":"23281:10:20","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6376,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6363,"src":"23295:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6384,"nodeType":"IfStatement","src":"23277:98:20","trueBody":{"id":6383,"nodeType":"Block","src":"23302:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":6379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:20","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":6380,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6363,"src":"23358:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6378,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"23323:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6382,"nodeType":"RevertStatement","src":"23316:48:20"}]}}]},"documentation":{"id":6361,"nodeType":"StructuredDocumentation","src":"22840:312:20","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":6386,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:20","nodeType":"FunctionDefinition","parameters":{"id":6364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6363,"mutability":"mutable","name":"value","nameLocation":"23182:5:20","nodeType":"VariableDeclaration","scope":6386,"src":"23175:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6362,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:20"},"returnParameters":{"id":6367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6366,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:20","nodeType":"VariableDeclaration","scope":6386,"src":"23212:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":6365,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:20","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:20"},"scope":6947,"src":"23157:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6411,"nodeType":"Block","src":"23778:150:20","statements":[{"expression":{"id":6399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6394,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6392,"src":"23788:10:20","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6397,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6389,"src":"23808:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6396,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":6395,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:20","typeDescriptions":{}}},"id":6398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:20","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":6400,"nodeType":"ExpressionStatement","src":"23788:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6401,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6392,"src":"23828:10:20","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6402,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6389,"src":"23842:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6410,"nodeType":"IfStatement","src":"23824:98:20","trueBody":{"id":6409,"nodeType":"Block","src":"23849:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":6405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:20","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":6406,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6389,"src":"23905:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6404,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"23870:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6408,"nodeType":"RevertStatement","src":"23863:48:20"}]}}]},"documentation":{"id":6387,"nodeType":"StructuredDocumentation","src":"23387:312:20","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":6412,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:20","nodeType":"FunctionDefinition","parameters":{"id":6390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6389,"mutability":"mutable","name":"value","nameLocation":"23729:5:20","nodeType":"VariableDeclaration","scope":6412,"src":"23722:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6388,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:20"},"returnParameters":{"id":6393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6392,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:20","nodeType":"VariableDeclaration","scope":6412,"src":"23759:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":6391,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:20","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:20"},"scope":6947,"src":"23704:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6437,"nodeType":"Block","src":"24325:150:20","statements":[{"expression":{"id":6425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6420,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6418,"src":"24335:10:20","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6423,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6415,"src":"24355:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6422,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":6421,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:20","typeDescriptions":{}}},"id":6424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:20","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":6426,"nodeType":"ExpressionStatement","src":"24335:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6427,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6418,"src":"24375:10:20","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6428,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6415,"src":"24389:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6436,"nodeType":"IfStatement","src":"24371:98:20","trueBody":{"id":6435,"nodeType":"Block","src":"24396:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":6431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:20","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":6432,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6415,"src":"24452:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6430,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"24417:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6434,"nodeType":"RevertStatement","src":"24410:48:20"}]}}]},"documentation":{"id":6413,"nodeType":"StructuredDocumentation","src":"23934:312:20","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":6438,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:20","nodeType":"FunctionDefinition","parameters":{"id":6416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6415,"mutability":"mutable","name":"value","nameLocation":"24276:5:20","nodeType":"VariableDeclaration","scope":6438,"src":"24269:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6414,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:20"},"returnParameters":{"id":6419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6418,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:20","nodeType":"VariableDeclaration","scope":6438,"src":"24306:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":6417,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:20","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:20"},"scope":6947,"src":"24251:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6463,"nodeType":"Block","src":"24872:150:20","statements":[{"expression":{"id":6451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6446,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6444,"src":"24882:10:20","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6449,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6441,"src":"24902:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6448,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":6447,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:20","typeDescriptions":{}}},"id":6450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:20","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":6452,"nodeType":"ExpressionStatement","src":"24882:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6453,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6444,"src":"24922:10:20","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6454,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6441,"src":"24936:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6462,"nodeType":"IfStatement","src":"24918:98:20","trueBody":{"id":6461,"nodeType":"Block","src":"24943:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":6457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:20","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":6458,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6441,"src":"24999:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6456,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"24964:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6460,"nodeType":"RevertStatement","src":"24957:48:20"}]}}]},"documentation":{"id":6439,"nodeType":"StructuredDocumentation","src":"24481:312:20","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":6464,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:20","nodeType":"FunctionDefinition","parameters":{"id":6442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6441,"mutability":"mutable","name":"value","nameLocation":"24823:5:20","nodeType":"VariableDeclaration","scope":6464,"src":"24816:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6440,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:20"},"returnParameters":{"id":6445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6444,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:20","nodeType":"VariableDeclaration","scope":6464,"src":"24853:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":6443,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:20","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:20"},"scope":6947,"src":"24798:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6489,"nodeType":"Block","src":"25419:150:20","statements":[{"expression":{"id":6477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6472,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6470,"src":"25429:10:20","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6475,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6467,"src":"25449:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6474,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":6473,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:20","typeDescriptions":{}}},"id":6476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:20","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":6478,"nodeType":"ExpressionStatement","src":"25429:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6479,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6470,"src":"25469:10:20","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6480,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6467,"src":"25483:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6488,"nodeType":"IfStatement","src":"25465:98:20","trueBody":{"id":6487,"nodeType":"Block","src":"25490:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":6483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:20","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":6484,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6467,"src":"25546:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6482,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"25511:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6486,"nodeType":"RevertStatement","src":"25504:48:20"}]}}]},"documentation":{"id":6465,"nodeType":"StructuredDocumentation","src":"25028:312:20","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":6490,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:20","nodeType":"FunctionDefinition","parameters":{"id":6468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6467,"mutability":"mutable","name":"value","nameLocation":"25370:5:20","nodeType":"VariableDeclaration","scope":6490,"src":"25363:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6466,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:20"},"returnParameters":{"id":6471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6470,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:20","nodeType":"VariableDeclaration","scope":6490,"src":"25400:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":6469,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:20","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:20"},"scope":6947,"src":"25345:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6515,"nodeType":"Block","src":"25966:150:20","statements":[{"expression":{"id":6503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6498,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6496,"src":"25976:10:20","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6501,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6493,"src":"25996:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6500,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":6499,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:20","typeDescriptions":{}}},"id":6502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:20","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":6504,"nodeType":"ExpressionStatement","src":"25976:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6505,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6496,"src":"26016:10:20","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6506,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6493,"src":"26030:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6514,"nodeType":"IfStatement","src":"26012:98:20","trueBody":{"id":6513,"nodeType":"Block","src":"26037:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":6509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:20","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":6510,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6493,"src":"26093:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6508,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"26058:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6512,"nodeType":"RevertStatement","src":"26051:48:20"}]}}]},"documentation":{"id":6491,"nodeType":"StructuredDocumentation","src":"25575:312:20","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":6516,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:20","nodeType":"FunctionDefinition","parameters":{"id":6494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6493,"mutability":"mutable","name":"value","nameLocation":"25917:5:20","nodeType":"VariableDeclaration","scope":6516,"src":"25910:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6492,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:20"},"returnParameters":{"id":6497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6496,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:20","nodeType":"VariableDeclaration","scope":6516,"src":"25947:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":6495,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:20","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:20"},"scope":6947,"src":"25892:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6541,"nodeType":"Block","src":"26513:150:20","statements":[{"expression":{"id":6529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6524,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6522,"src":"26523:10:20","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6527,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6519,"src":"26543:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6526,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":6525,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:20","typeDescriptions":{}}},"id":6528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:20","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":6530,"nodeType":"ExpressionStatement","src":"26523:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6531,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6522,"src":"26563:10:20","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6532,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6519,"src":"26577:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6540,"nodeType":"IfStatement","src":"26559:98:20","trueBody":{"id":6539,"nodeType":"Block","src":"26584:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":6535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:20","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":6536,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6519,"src":"26640:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6534,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"26605:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6538,"nodeType":"RevertStatement","src":"26598:48:20"}]}}]},"documentation":{"id":6517,"nodeType":"StructuredDocumentation","src":"26122:312:20","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":6542,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:20","nodeType":"FunctionDefinition","parameters":{"id":6520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6519,"mutability":"mutable","name":"value","nameLocation":"26464:5:20","nodeType":"VariableDeclaration","scope":6542,"src":"26457:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6518,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:20"},"returnParameters":{"id":6523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6522,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:20","nodeType":"VariableDeclaration","scope":6542,"src":"26494:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":6521,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:20","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:20"},"scope":6947,"src":"26439:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6567,"nodeType":"Block","src":"27060:150:20","statements":[{"expression":{"id":6555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6550,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6548,"src":"27070:10:20","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6553,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6545,"src":"27090:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6552,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":6551,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:20","typeDescriptions":{}}},"id":6554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:20","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":6556,"nodeType":"ExpressionStatement","src":"27070:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6557,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6548,"src":"27110:10:20","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6558,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6545,"src":"27124:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6566,"nodeType":"IfStatement","src":"27106:98:20","trueBody":{"id":6565,"nodeType":"Block","src":"27131:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":6561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:20","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":6562,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6545,"src":"27187:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6560,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"27152:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6564,"nodeType":"RevertStatement","src":"27145:48:20"}]}}]},"documentation":{"id":6543,"nodeType":"StructuredDocumentation","src":"26669:312:20","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":6568,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:20","nodeType":"FunctionDefinition","parameters":{"id":6546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6545,"mutability":"mutable","name":"value","nameLocation":"27011:5:20","nodeType":"VariableDeclaration","scope":6568,"src":"27004:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6544,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:20"},"returnParameters":{"id":6549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6548,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:20","nodeType":"VariableDeclaration","scope":6568,"src":"27041:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":6547,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:20","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:20"},"scope":6947,"src":"26986:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6593,"nodeType":"Block","src":"27607:150:20","statements":[{"expression":{"id":6581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6576,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6574,"src":"27617:10:20","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6579,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6571,"src":"27637:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6578,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":6577,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:20","typeDescriptions":{}}},"id":6580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:20","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":6582,"nodeType":"ExpressionStatement","src":"27617:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6583,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6574,"src":"27657:10:20","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6584,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6571,"src":"27671:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6592,"nodeType":"IfStatement","src":"27653:98:20","trueBody":{"id":6591,"nodeType":"Block","src":"27678:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":6587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:20","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":6588,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6571,"src":"27734:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6586,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"27699:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6590,"nodeType":"RevertStatement","src":"27692:48:20"}]}}]},"documentation":{"id":6569,"nodeType":"StructuredDocumentation","src":"27216:312:20","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":6594,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:20","nodeType":"FunctionDefinition","parameters":{"id":6572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6571,"mutability":"mutable","name":"value","nameLocation":"27558:5:20","nodeType":"VariableDeclaration","scope":6594,"src":"27551:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6570,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:20"},"returnParameters":{"id":6575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6574,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:20","nodeType":"VariableDeclaration","scope":6594,"src":"27588:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":6573,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:20","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:20"},"scope":6947,"src":"27533:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6619,"nodeType":"Block","src":"28147:148:20","statements":[{"expression":{"id":6607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6602,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6600,"src":"28157:10:20","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6605,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6597,"src":"28176:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6604,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":6603,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:20","typeDescriptions":{}}},"id":6606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:20","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":6608,"nodeType":"ExpressionStatement","src":"28157:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6609,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6600,"src":"28196:10:20","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6610,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6597,"src":"28210:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6618,"nodeType":"IfStatement","src":"28192:97:20","trueBody":{"id":6617,"nodeType":"Block","src":"28217:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":6613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:20","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":6614,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6597,"src":"28272:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6612,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"28238:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6616,"nodeType":"RevertStatement","src":"28231:47:20"}]}}]},"documentation":{"id":6595,"nodeType":"StructuredDocumentation","src":"27763:307:20","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":6620,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:20","nodeType":"FunctionDefinition","parameters":{"id":6598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6597,"mutability":"mutable","name":"value","nameLocation":"28099:5:20","nodeType":"VariableDeclaration","scope":6620,"src":"28092:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6596,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:20"},"returnParameters":{"id":6601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6600,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:20","nodeType":"VariableDeclaration","scope":6620,"src":"28129:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":6599,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:20","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:20"},"scope":6947,"src":"28075:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6645,"nodeType":"Block","src":"28685:148:20","statements":[{"expression":{"id":6633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6628,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6626,"src":"28695:10:20","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6631,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6623,"src":"28714:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6630,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":6629,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:20","typeDescriptions":{}}},"id":6632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:20","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":6634,"nodeType":"ExpressionStatement","src":"28695:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6635,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6626,"src":"28734:10:20","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6636,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6623,"src":"28748:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6644,"nodeType":"IfStatement","src":"28730:97:20","trueBody":{"id":6643,"nodeType":"Block","src":"28755:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":6639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:20","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":6640,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6623,"src":"28810:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6638,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"28776:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6642,"nodeType":"RevertStatement","src":"28769:47:20"}]}}]},"documentation":{"id":6621,"nodeType":"StructuredDocumentation","src":"28301:307:20","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":6646,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:20","nodeType":"FunctionDefinition","parameters":{"id":6624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6623,"mutability":"mutable","name":"value","nameLocation":"28637:5:20","nodeType":"VariableDeclaration","scope":6646,"src":"28630:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6622,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:20"},"returnParameters":{"id":6627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6626,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:20","nodeType":"VariableDeclaration","scope":6646,"src":"28667:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":6625,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:20","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:20"},"scope":6947,"src":"28613:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6671,"nodeType":"Block","src":"29223:148:20","statements":[{"expression":{"id":6659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6654,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6652,"src":"29233:10:20","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6657,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6649,"src":"29252:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6656,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":6655,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:20","typeDescriptions":{}}},"id":6658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:20","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":6660,"nodeType":"ExpressionStatement","src":"29233:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6661,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6652,"src":"29272:10:20","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6662,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6649,"src":"29286:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6670,"nodeType":"IfStatement","src":"29268:97:20","trueBody":{"id":6669,"nodeType":"Block","src":"29293:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":6665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:20","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":6666,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6649,"src":"29348:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6664,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"29314:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6668,"nodeType":"RevertStatement","src":"29307:47:20"}]}}]},"documentation":{"id":6647,"nodeType":"StructuredDocumentation","src":"28839:307:20","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":6672,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:20","nodeType":"FunctionDefinition","parameters":{"id":6650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6649,"mutability":"mutable","name":"value","nameLocation":"29175:5:20","nodeType":"VariableDeclaration","scope":6672,"src":"29168:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6648,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:20"},"returnParameters":{"id":6653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6652,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:20","nodeType":"VariableDeclaration","scope":6672,"src":"29205:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":6651,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:20","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:20"},"scope":6947,"src":"29151:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6697,"nodeType":"Block","src":"29761:148:20","statements":[{"expression":{"id":6685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6680,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6678,"src":"29771:10:20","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6683,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6675,"src":"29790:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6682,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":6681,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:20","typeDescriptions":{}}},"id":6684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:20","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":6686,"nodeType":"ExpressionStatement","src":"29771:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6687,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6678,"src":"29810:10:20","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6688,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6675,"src":"29824:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6696,"nodeType":"IfStatement","src":"29806:97:20","trueBody":{"id":6695,"nodeType":"Block","src":"29831:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":6691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:20","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":6692,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6675,"src":"29886:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6690,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"29852:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6694,"nodeType":"RevertStatement","src":"29845:47:20"}]}}]},"documentation":{"id":6673,"nodeType":"StructuredDocumentation","src":"29377:307:20","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":6698,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:20","nodeType":"FunctionDefinition","parameters":{"id":6676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6675,"mutability":"mutable","name":"value","nameLocation":"29713:5:20","nodeType":"VariableDeclaration","scope":6698,"src":"29706:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6674,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:20"},"returnParameters":{"id":6679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6678,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:20","nodeType":"VariableDeclaration","scope":6698,"src":"29743:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":6677,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:20","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:20"},"scope":6947,"src":"29689:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6723,"nodeType":"Block","src":"30299:148:20","statements":[{"expression":{"id":6711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6706,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6704,"src":"30309:10:20","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6709,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6701,"src":"30328:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6708,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":6707,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:20","typeDescriptions":{}}},"id":6710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:20","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":6712,"nodeType":"ExpressionStatement","src":"30309:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6713,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6704,"src":"30348:10:20","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6714,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6701,"src":"30362:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6722,"nodeType":"IfStatement","src":"30344:97:20","trueBody":{"id":6721,"nodeType":"Block","src":"30369:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":6717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:20","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":6718,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6701,"src":"30424:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6716,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"30390:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6720,"nodeType":"RevertStatement","src":"30383:47:20"}]}}]},"documentation":{"id":6699,"nodeType":"StructuredDocumentation","src":"29915:307:20","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":6724,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:20","nodeType":"FunctionDefinition","parameters":{"id":6702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6701,"mutability":"mutable","name":"value","nameLocation":"30251:5:20","nodeType":"VariableDeclaration","scope":6724,"src":"30244:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6700,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:20"},"returnParameters":{"id":6705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6704,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:20","nodeType":"VariableDeclaration","scope":6724,"src":"30281:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":6703,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:20","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:20"},"scope":6947,"src":"30227:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6749,"nodeType":"Block","src":"30837:148:20","statements":[{"expression":{"id":6737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6732,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6730,"src":"30847:10:20","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6735,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6727,"src":"30866:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6734,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":6733,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:20","typeDescriptions":{}}},"id":6736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:20","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":6738,"nodeType":"ExpressionStatement","src":"30847:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6739,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6730,"src":"30886:10:20","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6740,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6727,"src":"30900:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6748,"nodeType":"IfStatement","src":"30882:97:20","trueBody":{"id":6747,"nodeType":"Block","src":"30907:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":6743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:20","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":6744,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6727,"src":"30962:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6742,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"30928:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6746,"nodeType":"RevertStatement","src":"30921:47:20"}]}}]},"documentation":{"id":6725,"nodeType":"StructuredDocumentation","src":"30453:307:20","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":6750,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:20","nodeType":"FunctionDefinition","parameters":{"id":6728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6727,"mutability":"mutable","name":"value","nameLocation":"30789:5:20","nodeType":"VariableDeclaration","scope":6750,"src":"30782:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6726,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:20"},"returnParameters":{"id":6731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6730,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:20","nodeType":"VariableDeclaration","scope":6750,"src":"30819:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":6729,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:20","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:20"},"scope":6947,"src":"30765:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6775,"nodeType":"Block","src":"31375:148:20","statements":[{"expression":{"id":6763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6758,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6756,"src":"31385:10:20","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6761,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6753,"src":"31404:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6760,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":6759,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:20","typeDescriptions":{}}},"id":6762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:20","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":6764,"nodeType":"ExpressionStatement","src":"31385:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6765,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6756,"src":"31424:10:20","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6766,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6753,"src":"31438:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6774,"nodeType":"IfStatement","src":"31420:97:20","trueBody":{"id":6773,"nodeType":"Block","src":"31445:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":6769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:20","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":6770,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6753,"src":"31500:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6768,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"31466:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6772,"nodeType":"RevertStatement","src":"31459:47:20"}]}}]},"documentation":{"id":6751,"nodeType":"StructuredDocumentation","src":"30991:307:20","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":6776,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:20","nodeType":"FunctionDefinition","parameters":{"id":6754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6753,"mutability":"mutable","name":"value","nameLocation":"31327:5:20","nodeType":"VariableDeclaration","scope":6776,"src":"31320:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6752,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:20"},"returnParameters":{"id":6757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6756,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:20","nodeType":"VariableDeclaration","scope":6776,"src":"31357:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":6755,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:20","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:20"},"scope":6947,"src":"31303:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6801,"nodeType":"Block","src":"31913:148:20","statements":[{"expression":{"id":6789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6784,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6782,"src":"31923:10:20","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6787,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6779,"src":"31942:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6786,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":6785,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:20","typeDescriptions":{}}},"id":6788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:20","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":6790,"nodeType":"ExpressionStatement","src":"31923:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6791,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6782,"src":"31962:10:20","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6792,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6779,"src":"31976:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6800,"nodeType":"IfStatement","src":"31958:97:20","trueBody":{"id":6799,"nodeType":"Block","src":"31983:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":6795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:20","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":6796,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6779,"src":"32038:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6794,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"32004:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6798,"nodeType":"RevertStatement","src":"31997:47:20"}]}}]},"documentation":{"id":6777,"nodeType":"StructuredDocumentation","src":"31529:307:20","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":6802,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:20","nodeType":"FunctionDefinition","parameters":{"id":6780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6779,"mutability":"mutable","name":"value","nameLocation":"31865:5:20","nodeType":"VariableDeclaration","scope":6802,"src":"31858:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6778,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:20"},"returnParameters":{"id":6783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6782,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:20","nodeType":"VariableDeclaration","scope":6802,"src":"31895:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":6781,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:20","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:20"},"scope":6947,"src":"31841:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6827,"nodeType":"Block","src":"32451:148:20","statements":[{"expression":{"id":6815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6810,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6808,"src":"32461:10:20","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6813,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6805,"src":"32480:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6812,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":6811,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:20","typeDescriptions":{}}},"id":6814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:20","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":6816,"nodeType":"ExpressionStatement","src":"32461:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6817,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6808,"src":"32500:10:20","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6818,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6805,"src":"32514:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6826,"nodeType":"IfStatement","src":"32496:97:20","trueBody":{"id":6825,"nodeType":"Block","src":"32521:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":6821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":6822,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6805,"src":"32576:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6820,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"32542:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6824,"nodeType":"RevertStatement","src":"32535:47:20"}]}}]},"documentation":{"id":6803,"nodeType":"StructuredDocumentation","src":"32067:307:20","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":6828,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:20","nodeType":"FunctionDefinition","parameters":{"id":6806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6805,"mutability":"mutable","name":"value","nameLocation":"32403:5:20","nodeType":"VariableDeclaration","scope":6828,"src":"32396:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6804,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:20"},"returnParameters":{"id":6809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6808,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:20","nodeType":"VariableDeclaration","scope":6828,"src":"32433:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":6807,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:20","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:20"},"scope":6947,"src":"32379:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6853,"nodeType":"Block","src":"32989:148:20","statements":[{"expression":{"id":6841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6836,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6834,"src":"32999:10:20","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6839,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6831,"src":"33018:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6838,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":6837,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:20","typeDescriptions":{}}},"id":6840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:20","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":6842,"nodeType":"ExpressionStatement","src":"32999:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6843,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6834,"src":"33038:10:20","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6844,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6831,"src":"33052:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6852,"nodeType":"IfStatement","src":"33034:97:20","trueBody":{"id":6851,"nodeType":"Block","src":"33059:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":6847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:20","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":6848,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6831,"src":"33114:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6846,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"33080:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6850,"nodeType":"RevertStatement","src":"33073:47:20"}]}}]},"documentation":{"id":6829,"nodeType":"StructuredDocumentation","src":"32605:307:20","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":6854,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:20","nodeType":"FunctionDefinition","parameters":{"id":6832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6831,"mutability":"mutable","name":"value","nameLocation":"32941:5:20","nodeType":"VariableDeclaration","scope":6854,"src":"32934:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6830,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:20"},"returnParameters":{"id":6835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6834,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:20","nodeType":"VariableDeclaration","scope":6854,"src":"32971:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":6833,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:20","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:20"},"scope":6947,"src":"32917:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6879,"nodeType":"Block","src":"33527:148:20","statements":[{"expression":{"id":6867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6862,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6860,"src":"33537:10:20","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6865,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6857,"src":"33556:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6864,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":6863,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:20","typeDescriptions":{}}},"id":6866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:20","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":6868,"nodeType":"ExpressionStatement","src":"33537:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6869,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6860,"src":"33576:10:20","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6870,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6857,"src":"33590:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6878,"nodeType":"IfStatement","src":"33572:97:20","trueBody":{"id":6877,"nodeType":"Block","src":"33597:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":6873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":6874,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6857,"src":"33652:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6872,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"33618:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6876,"nodeType":"RevertStatement","src":"33611:47:20"}]}}]},"documentation":{"id":6855,"nodeType":"StructuredDocumentation","src":"33143:307:20","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":6880,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:20","nodeType":"FunctionDefinition","parameters":{"id":6858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6857,"mutability":"mutable","name":"value","nameLocation":"33479:5:20","nodeType":"VariableDeclaration","scope":6880,"src":"33472:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6856,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:20"},"returnParameters":{"id":6861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6860,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:20","nodeType":"VariableDeclaration","scope":6880,"src":"33509:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":6859,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:20","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:20"},"scope":6947,"src":"33455:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6905,"nodeType":"Block","src":"34058:146:20","statements":[{"expression":{"id":6893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6888,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6886,"src":"34068:10:20","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6891,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6883,"src":"34086:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6890,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":6889,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:20","typeDescriptions":{}}},"id":6892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:20","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":6894,"nodeType":"ExpressionStatement","src":"34068:24:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6895,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6886,"src":"34106:10:20","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6896,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6883,"src":"34120:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6904,"nodeType":"IfStatement","src":"34102:96:20","trueBody":{"id":6903,"nodeType":"Block","src":"34127:71:20","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":6899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:20","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":6900,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6883,"src":"34181:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6898,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"34148:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6902,"nodeType":"RevertStatement","src":"34141:46:20"}]}}]},"documentation":{"id":6881,"nodeType":"StructuredDocumentation","src":"33681:302:20","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":6906,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:20","nodeType":"FunctionDefinition","parameters":{"id":6884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6883,"mutability":"mutable","name":"value","nameLocation":"34011:5:20","nodeType":"VariableDeclaration","scope":6906,"src":"34004:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6882,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:20"},"returnParameters":{"id":6887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6886,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:20","nodeType":"VariableDeclaration","scope":6906,"src":"34041:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":6885,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:20","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:20"},"scope":6947,"src":"33988:216:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6935,"nodeType":"Block","src":"34444:250:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6914,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6909,"src":"34557:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":6919,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6918,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":6917,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":6921,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:20","memberName":"max","nodeType":"MemberAccess","src":"34573:16:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6916,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6915,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:20","typeDescriptions":{}}},"id":6922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6929,"nodeType":"IfStatement","src":"34553:105:20","trueBody":{"id":6928,"nodeType":"Block","src":"34592:66:20","statements":[{"errorCall":{"arguments":[{"id":6925,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6909,"src":"34641:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6924,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5209,"src":"34613:27:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":6926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6927,"nodeType":"RevertStatement","src":"34606:41:20"}]}},{"expression":{"arguments":[{"id":6932,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6909,"src":"34681:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6931,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6930,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:20","typeDescriptions":{}}},"id":6933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6913,"id":6934,"nodeType":"Return","src":"34667:20:20"}]},"documentation":{"id":6907,"nodeType":"StructuredDocumentation","src":"34210:165:20","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":6936,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:20","nodeType":"FunctionDefinition","parameters":{"id":6910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6909,"mutability":"mutable","name":"value","nameLocation":"34406:5:20","nodeType":"VariableDeclaration","scope":6936,"src":"34398:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6908,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:20"},"returnParameters":{"id":6913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6912,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6936,"src":"34436:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6911,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:20"},"scope":6947,"src":"34380:314:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6945,"nodeType":"Block","src":"34853:87:20","statements":[{"AST":{"nodeType":"YulBlock","src":"34888:46:20","statements":[{"nodeType":"YulAssignment","src":"34902:22:20","value":{"arguments":[{"arguments":[{"name":"b","nodeType":"YulIdentifier","src":"34921:1:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34914:6:20"},"nodeType":"YulFunctionCall","src":"34914:9:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34907:6:20"},"nodeType":"YulFunctionCall","src":"34907:17:20"},"variableNames":[{"name":"u","nodeType":"YulIdentifier","src":"34902:1:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6939,"isOffset":false,"isSlot":false,"src":"34921:1:20","valueSize":1},{"declaration":6942,"isOffset":false,"isSlot":false,"src":"34902:1:20","valueSize":1}],"flags":["memory-safe"],"id":6944,"nodeType":"InlineAssembly","src":"34863:71:20"}]},"documentation":{"id":6937,"nodeType":"StructuredDocumentation","src":"34700:90:20","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":6946,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:20","nodeType":"FunctionDefinition","parameters":{"id":6940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6939,"mutability":"mutable","name":"b","nameLocation":"34816:1:20","nodeType":"VariableDeclaration","scope":6946,"src":"34811:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6938,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:20"},"returnParameters":{"id":6943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6942,"mutability":"mutable","name":"u","nameLocation":"34850:1:20","nodeType":"VariableDeclaration","scope":6946,"src":"34842:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6941,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:20"},"scope":6947,"src":"34795:145:20","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6948,"src":"769:34173:20","usedErrors":[5192,5197,5204,5209],"usedEvents":[]}],"src":"192:34751:20"},"id":20},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SafeCast":[6947],"SignedMath":[7091]},"id":7092,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6949,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:21"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":6951,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7092,"sourceUnit":6948,"src":"135:40:21","symbolAliases":[{"foreign":{"id":6950,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6947,"src":"143:8:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":6952,"nodeType":"StructuredDocumentation","src":"177:80:21","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":7091,"linearizedBaseContracts":[7091],"name":"SignedMath","nameLocation":"266:10:21","nodeType":"ContractDefinition","nodes":[{"body":{"id":6981,"nodeType":"Block","src":"746:215:21","statements":[{"id":6980,"nodeType":"UncheckedBlock","src":"756:199:21","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6964,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6959,"src":"894:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6965,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6957,"src":"900:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6966,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6959,"src":"904:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"900:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6968,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"899:7:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":6973,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6955,"src":"932:9:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6971,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6947,"src":"916:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6947_$","typeString":"type(library SafeCast)"}},"id":6972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6946,"src":"916:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:26:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6970,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"909:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6969,"name":"int256","nodeType":"ElementaryTypeName","src":"909:6:21","typeDescriptions":{}}},"id":6975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"909:34:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"899:44:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6977,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"898:46:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"894:50:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6963,"id":6979,"nodeType":"Return","src":"887:57:21"}]}]},"documentation":{"id":6953,"nodeType":"StructuredDocumentation","src":"283:374:21","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":6982,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"671:7:21","nodeType":"FunctionDefinition","parameters":{"id":6960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6955,"mutability":"mutable","name":"condition","nameLocation":"684:9:21","nodeType":"VariableDeclaration","scope":6982,"src":"679:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6954,"name":"bool","nodeType":"ElementaryTypeName","src":"679:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6957,"mutability":"mutable","name":"a","nameLocation":"702:1:21","nodeType":"VariableDeclaration","scope":6982,"src":"695:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6956,"name":"int256","nodeType":"ElementaryTypeName","src":"695:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6959,"mutability":"mutable","name":"b","nameLocation":"712:1:21","nodeType":"VariableDeclaration","scope":6982,"src":"705:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6958,"name":"int256","nodeType":"ElementaryTypeName","src":"705:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"678:36:21"},"returnParameters":{"id":6963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6962,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6982,"src":"738:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6961,"name":"int256","nodeType":"ElementaryTypeName","src":"738:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"737:8:21"},"scope":7091,"src":"662:299:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7000,"nodeType":"Block","src":"1102:44:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6993,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6985,"src":"1127:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":6994,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6987,"src":"1131:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1127:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6996,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6985,"src":"1134:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":6997,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6987,"src":"1137:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6992,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6982,"src":"1119:7:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":6998,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1119:20:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6991,"id":6999,"nodeType":"Return","src":"1112:27:21"}]},"documentation":{"id":6983,"nodeType":"StructuredDocumentation","src":"967:66:21","text":" @dev Returns the largest of two signed numbers."},"id":7001,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1047:3:21","nodeType":"FunctionDefinition","parameters":{"id":6988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6985,"mutability":"mutable","name":"a","nameLocation":"1058:1:21","nodeType":"VariableDeclaration","scope":7001,"src":"1051:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6984,"name":"int256","nodeType":"ElementaryTypeName","src":"1051:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6987,"mutability":"mutable","name":"b","nameLocation":"1068:1:21","nodeType":"VariableDeclaration","scope":7001,"src":"1061:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6986,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1050:20:21"},"returnParameters":{"id":6991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6990,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7001,"src":"1094:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6989,"name":"int256","nodeType":"ElementaryTypeName","src":"1094:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1093:8:21"},"scope":7091,"src":"1038:108:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7019,"nodeType":"Block","src":"1288:44:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7012,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7004,"src":"1313:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7013,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7006,"src":"1317:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1313:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":7015,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7004,"src":"1320:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":7016,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7006,"src":"1323:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7011,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6982,"src":"1305:7:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":7017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1305:20:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7010,"id":7018,"nodeType":"Return","src":"1298:27:21"}]},"documentation":{"id":7002,"nodeType":"StructuredDocumentation","src":"1152:67:21","text":" @dev Returns the smallest of two signed numbers."},"id":7020,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1233:3:21","nodeType":"FunctionDefinition","parameters":{"id":7007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7004,"mutability":"mutable","name":"a","nameLocation":"1244:1:21","nodeType":"VariableDeclaration","scope":7020,"src":"1237:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7003,"name":"int256","nodeType":"ElementaryTypeName","src":"1237:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7006,"mutability":"mutable","name":"b","nameLocation":"1254:1:21","nodeType":"VariableDeclaration","scope":7020,"src":"1247:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7005,"name":"int256","nodeType":"ElementaryTypeName","src":"1247:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1236:20:21"},"returnParameters":{"id":7010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7009,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7020,"src":"1280:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7008,"name":"int256","nodeType":"ElementaryTypeName","src":"1280:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1279:8:21"},"scope":7091,"src":"1224:108:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7063,"nodeType":"Block","src":"1537:162:21","statements":[{"assignments":[7031],"declarations":[{"constant":false,"id":7031,"mutability":"mutable","name":"x","nameLocation":"1606:1:21","nodeType":"VariableDeclaration","scope":7063,"src":"1599:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7030,"name":"int256","nodeType":"ElementaryTypeName","src":"1599:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":7044,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7032,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7023,"src":"1611:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":7033,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7025,"src":"1615:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1611:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7035,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1610:7:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7036,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7023,"src":"1622:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7037,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7025,"src":"1626:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1622:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7039,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1621:7:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":7040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1632:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1621:12:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7042,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1620:14:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1610:24:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1599:35:21"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7045,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7031,"src":"1651:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7050,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7031,"src":"1671:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7049,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1663:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7048,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:21","typeDescriptions":{}}},"id":7051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1663:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":7052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:3:21","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1663:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7047,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1656:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7046,"name":"int256","nodeType":"ElementaryTypeName","src":"1656:6:21","typeDescriptions":{}}},"id":7054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:25:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7055,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7023,"src":"1685:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7056,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7025,"src":"1689:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1685:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7058,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1684:7:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1656:35:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7060,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1655:37:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1651:41:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7029,"id":7062,"nodeType":"Return","src":"1644:48:21"}]},"documentation":{"id":7021,"nodeType":"StructuredDocumentation","src":"1338:126:21","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":7064,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1478:7:21","nodeType":"FunctionDefinition","parameters":{"id":7026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7023,"mutability":"mutable","name":"a","nameLocation":"1493:1:21","nodeType":"VariableDeclaration","scope":7064,"src":"1486:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7022,"name":"int256","nodeType":"ElementaryTypeName","src":"1486:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7025,"mutability":"mutable","name":"b","nameLocation":"1503:1:21","nodeType":"VariableDeclaration","scope":7064,"src":"1496:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7024,"name":"int256","nodeType":"ElementaryTypeName","src":"1496:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1485:20:21"},"returnParameters":{"id":7029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7028,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7064,"src":"1529:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7027,"name":"int256","nodeType":"ElementaryTypeName","src":"1529:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1528:8:21"},"scope":7091,"src":"1469:230:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7089,"nodeType":"Block","src":"1843:767:21","statements":[{"id":7088,"nodeType":"UncheckedBlock","src":"1853:751:21","statements":[{"assignments":[7073],"declarations":[{"constant":false,"id":7073,"mutability":"mutable","name":"mask","nameLocation":"2424:4:21","nodeType":"VariableDeclaration","scope":7088,"src":"2417:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7072,"name":"int256","nodeType":"ElementaryTypeName","src":"2417:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":7077,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7074,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7067,"src":"2431:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":7075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2436:3:21","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2431:8:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2417:22:21"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7080,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7067,"src":"2576:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":7081,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7073,"src":"2580:4:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2576:8:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7083,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2575:10:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7084,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7073,"src":"2588:4:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2575:17:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7079,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2567:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7078,"name":"uint256","nodeType":"ElementaryTypeName","src":"2567:7:21","typeDescriptions":{}}},"id":7086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:26:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7071,"id":7087,"nodeType":"Return","src":"2560:33:21"}]}]},"documentation":{"id":7065,"nodeType":"StructuredDocumentation","src":"1705:78:21","text":" @dev Returns the absolute unsigned value of a signed value."},"id":7090,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1797:3:21","nodeType":"FunctionDefinition","parameters":{"id":7068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7067,"mutability":"mutable","name":"n","nameLocation":"1808:1:21","nodeType":"VariableDeclaration","scope":7090,"src":"1801:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7066,"name":"int256","nodeType":"ElementaryTypeName","src":"1801:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1800:10:21"},"returnParameters":{"id":7071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7070,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7090,"src":"1834:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7069,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:9:21"},"scope":7091,"src":"1788:822:21","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":7092,"src":"258:2354:21","usedErrors":[],"usedEvents":[]}],"src":"109:2504:21"},"id":21},"contracts/MasterContract.sol":{"ast":{"absolutePath":"contracts/MasterContract.sol","exportedSymbols":{"Context":[2288],"ERC165":[3564],"ERC20":[831],"ERC721":[1892],"ERC721URIStorage":[2153],"ERC721Utils":[2258],"GoatNft":[8112],"IERC165":[3576],"IERC20":[909],"IERC20Errors":[221],"IERC20Metadata":[935],"IERC4906":[175],"IERC721":[2009],"IERC721Errors":[269],"IERC721Metadata":[2181],"MasterContract":[7962],"Ownable":[147],"PongToken":[8254],"Strings":[3540],"TournamentNft":[8198]},"id":7963,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7093,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"33:24:22"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":7094,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7963,"sourceUnit":148,"src":"59:52:22","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/nfts/GoatNft.sol","file":"./nfts/GoatNft.sol","id":7095,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7963,"sourceUnit":8113,"src":"112:28:22","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/nfts/TournamentNft.sol","file":"./nfts/TournamentNft.sol","id":7096,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7963,"sourceUnit":8199,"src":"141:34:22","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/tokens/PongToken.sol","file":"./tokens/PongToken.sol","id":7097,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7963,"sourceUnit":8255,"src":"176:32:22","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":7099,"name":"Ownable","nameLocations":["322:7:22"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"322:7:22"},"id":7100,"nodeType":"InheritanceSpecifier","src":"322:7:22"}],"canonicalName":"MasterContract","contractDependencies":[],"contractKind":"contract","documentation":{"id":7098,"nodeType":"StructuredDocumentation","src":"210:83:22","text":" @title MasterContract\n @dev MasterContract to manage all the contracts"},"fullyImplemented":true,"id":7962,"linearizedBaseContracts":[7962,147,2288],"name":"MasterContract","nameLocation":"304:14:22","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":7101,"nodeType":"StructuredDocumentation","src":"336:61:22","text":" @dev Variables to store contract addresses"},"functionSelector":"149249da","id":7104,"mutability":"mutable","name":"goatNft","nameLocation":"418:7:22","nodeType":"VariableDeclaration","scope":7962,"src":"403:22:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_GoatNft_$8112","typeString":"contract GoatNft"},"typeName":{"id":7103,"nodeType":"UserDefinedTypeName","pathNode":{"id":7102,"name":"GoatNft","nameLocations":["403:7:22"],"nodeType":"IdentifierPath","referencedDeclaration":8112,"src":"403:7:22"},"referencedDeclaration":8112,"src":"403:7:22","typeDescriptions":{"typeIdentifier":"t_contract$_GoatNft_$8112","typeString":"contract GoatNft"}},"visibility":"public"},{"constant":false,"functionSelector":"8cecb84d","id":7107,"mutability":"mutable","name":"tournamentNft","nameLocation":"452:13:22","nodeType":"VariableDeclaration","scope":7962,"src":"431:34:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_TournamentNft_$8198","typeString":"contract TournamentNft"},"typeName":{"id":7106,"nodeType":"UserDefinedTypeName","pathNode":{"id":7105,"name":"TournamentNft","nameLocations":["431:13:22"],"nodeType":"IdentifierPath","referencedDeclaration":8198,"src":"431:13:22"},"referencedDeclaration":8198,"src":"431:13:22","typeDescriptions":{"typeIdentifier":"t_contract$_TournamentNft_$8198","typeString":"contract TournamentNft"}},"visibility":"public"},{"constant":false,"functionSelector":"64518cdd","id":7110,"mutability":"mutable","name":"pongToken","nameLocation":"488:9:22","nodeType":"VariableDeclaration","scope":7962,"src":"471:26:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_PongToken_$8254","typeString":"contract PongToken"},"typeName":{"id":7109,"nodeType":"UserDefinedTypeName","pathNode":{"id":7108,"name":"PongToken","nameLocations":["471:9:22"],"nodeType":"IdentifierPath","referencedDeclaration":8254,"src":"471:9:22"},"referencedDeclaration":8254,"src":"471:9:22","typeDescriptions":{"typeIdentifier":"t_contract$_PongToken_$8254","typeString":"contract PongToken"}},"visibility":"public"},{"canonicalName":"MasterContract.Match","documentation":{"id":7111,"nodeType":"StructuredDocumentation","src":"504:242:22","text":" @dev Struct to store match details\n player1: player1 address\n player2: player2 address\n winner: winner address\n player1Score: player1 score\n player2Score: player2 score\n matchId: match id"},"id":7124,"members":[{"constant":false,"id":7113,"mutability":"mutable","name":"player1","nameLocation":"783:7:22","nodeType":"VariableDeclaration","scope":7124,"src":"775:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7112,"name":"address","nodeType":"ElementaryTypeName","src":"775:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7115,"mutability":"mutable","name":"player2","nameLocation":"808:7:22","nodeType":"VariableDeclaration","scope":7124,"src":"800:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7114,"name":"address","nodeType":"ElementaryTypeName","src":"800:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7117,"mutability":"mutable","name":"winner","nameLocation":"833:6:22","nodeType":"VariableDeclaration","scope":7124,"src":"825:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7116,"name":"address","nodeType":"ElementaryTypeName","src":"825:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7119,"mutability":"mutable","name":"player1Score","nameLocation":"855:12:22","nodeType":"VariableDeclaration","scope":7124,"src":"849:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7118,"name":"uint8","nodeType":"ElementaryTypeName","src":"849:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":7121,"mutability":"mutable","name":"player2Score","nameLocation":"883:12:22","nodeType":"VariableDeclaration","scope":7124,"src":"877:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7120,"name":"uint8","nodeType":"ElementaryTypeName","src":"877:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":7123,"mutability":"mutable","name":"matchId","nameLocation":"912:7:22","nodeType":"VariableDeclaration","scope":7124,"src":"905:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":7122,"name":"uint16","nodeType":"ElementaryTypeName","src":"905:6:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"name":"Match","nameLocation":"759:5:22","nodeType":"StructDefinition","scope":7962,"src":"752:174:22","visibility":"public"},{"canonicalName":"MasterContract.Tournament","documentation":{"id":7125,"nodeType":"StructuredDocumentation","src":"932:212:22","text":" @dev Struct to store tournament details\n endTimestamp: end timestamp of the tournament\n matchIds: array of match ids\n winner: winner address\n tournamentId: tournament id"},"id":7135,"members":[{"constant":false,"id":7127,"mutability":"mutable","name":"endTimestamp","nameLocation":"1185:12:22","nodeType":"VariableDeclaration","scope":7135,"src":"1178:19:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7126,"name":"uint32","nodeType":"ElementaryTypeName","src":"1178:6:22","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":7130,"mutability":"mutable","name":"matchIds","nameLocation":"1216:8:22","nodeType":"VariableDeclaration","scope":7135,"src":"1207:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint16_$dyn_storage_ptr","typeString":"uint16[]"},"typeName":{"baseType":{"id":7128,"name":"uint16","nodeType":"ElementaryTypeName","src":"1207:6:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"id":7129,"nodeType":"ArrayTypeName","src":"1207:8:22","typeDescriptions":{"typeIdentifier":"t_array$_t_uint16_$dyn_storage_ptr","typeString":"uint16[]"}},"visibility":"internal"},{"constant":false,"id":7132,"mutability":"mutable","name":"tournamentId","nameLocation":"1241:12:22","nodeType":"VariableDeclaration","scope":7135,"src":"1234:19:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":7131,"name":"uint16","nodeType":"ElementaryTypeName","src":"1234:6:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":7134,"mutability":"mutable","name":"winner","nameLocation":"1271:6:22","nodeType":"VariableDeclaration","scope":7135,"src":"1263:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7133,"name":"address","nodeType":"ElementaryTypeName","src":"1263:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"Tournament","nameLocation":"1157:10:22","nodeType":"StructDefinition","scope":7962,"src":"1150:134:22","visibility":"public"},{"constant":false,"documentation":{"id":7136,"nodeType":"StructuredDocumentation","src":"1290:102:22","text":" @dev Array to store all matches\n uint16: match id\n Match: match details"},"functionSelector":"e5425060","id":7140,"mutability":"mutable","name":"globalMatchesArray","nameLocation":"1413:18:22","nodeType":"VariableDeclaration","scope":7962,"src":"1398:33:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Match_$7124_storage_$dyn_storage","typeString":"struct MasterContract.Match[]"},"typeName":{"baseType":{"id":7138,"nodeType":"UserDefinedTypeName","pathNode":{"id":7137,"name":"Match","nameLocations":["1398:5:22"],"nodeType":"IdentifierPath","referencedDeclaration":7124,"src":"1398:5:22"},"referencedDeclaration":7124,"src":"1398:5:22","typeDescriptions":{"typeIdentifier":"t_struct$_Match_$7124_storage_ptr","typeString":"struct MasterContract.Match"}},"id":7139,"nodeType":"ArrayTypeName","src":"1398:7:22","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Match_$7124_storage_$dyn_storage_ptr","typeString":"struct MasterContract.Match[]"}},"visibility":"public"},{"constant":false,"documentation":{"id":7141,"nodeType":"StructuredDocumentation","src":"1438:122:22","text":" @dev Array to store all tournaments\n uint256: tournament id\n Tournament: tournament details"},"functionSelector":"592f7253","id":7145,"mutability":"mutable","name":"globalTournamentsArray","nameLocation":"1586:22:22","nodeType":"VariableDeclaration","scope":7962,"src":"1566:42:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Tournament_$7135_storage_$dyn_storage","typeString":"struct MasterContract.Tournament[]"},"typeName":{"baseType":{"id":7143,"nodeType":"UserDefinedTypeName","pathNode":{"id":7142,"name":"Tournament","nameLocations":["1566:10:22"],"nodeType":"IdentifierPath","referencedDeclaration":7135,"src":"1566:10:22"},"referencedDeclaration":7135,"src":"1566:10:22","typeDescriptions":{"typeIdentifier":"t_struct$_Tournament_$7135_storage_ptr","typeString":"struct MasterContract.Tournament"}},"id":7144,"nodeType":"ArrayTypeName","src":"1566:12:22","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Tournament_$7135_storage_$dyn_storage_ptr","typeString":"struct MasterContract.Tournament[]"}},"visibility":"public"},{"constant":false,"documentation":{"id":7146,"nodeType":"StructuredDocumentation","src":"1615:124:22","text":" @dev Mapping to store player\n string: player name to address mapping\n address: player address"},"id":7150,"mutability":"mutable","name":"players","nameLocation":"1780:7:22","nodeType":"VariableDeclaration","scope":7962,"src":"1745:42:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_address_$","typeString":"mapping(string => address)"},"typeName":{"id":7149,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7147,"name":"string","nodeType":"ElementaryTypeName","src":"1753:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"nodeType":"Mapping","src":"1745:26:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_address_$","typeString":"mapping(string => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7148,"name":"address","nodeType":"ElementaryTypeName","src":"1763:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"anonymous":false,"documentation":{"id":7151,"nodeType":"StructuredDocumentation","src":"1794:276:22","text":" @dev Event to log match reported\n @param player1: player1 name\n @param player2: player2 name\n @param winner: winner address\n @param player1Score: player1 score\n @param player2Score: player2 score\n @param matchId: match id"},"eventSelector":"5169cf6c9c65452203b100125a7144f1f8fa3c59d527a84551a88fcee99df6ff","id":7165,"name":"MatchReported","nameLocation":"2082:13:22","nodeType":"EventDefinition","parameters":{"id":7164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7153,"indexed":true,"mutability":"mutable","name":"player1","nameLocation":"2121:7:22","nodeType":"VariableDeclaration","scope":7165,"src":"2105:23:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7152,"name":"address","nodeType":"ElementaryTypeName","src":"2105:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7155,"indexed":true,"mutability":"mutable","name":"player2","nameLocation":"2154:7:22","nodeType":"VariableDeclaration","scope":7165,"src":"2138:23:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7154,"name":"address","nodeType":"ElementaryTypeName","src":"2138:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7157,"indexed":true,"mutability":"mutable","name":"winner","nameLocation":"2187:6:22","nodeType":"VariableDeclaration","scope":7165,"src":"2171:22:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7156,"name":"address","nodeType":"ElementaryTypeName","src":"2171:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7159,"indexed":false,"mutability":"mutable","name":"player1Score","nameLocation":"2209:12:22","nodeType":"VariableDeclaration","scope":7165,"src":"2203:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7158,"name":"uint8","nodeType":"ElementaryTypeName","src":"2203:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":7161,"indexed":false,"mutability":"mutable","name":"player2Score","nameLocation":"2237:12:22","nodeType":"VariableDeclaration","scope":7165,"src":"2231:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7160,"name":"uint8","nodeType":"ElementaryTypeName","src":"2231:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":7163,"indexed":false,"mutability":"mutable","name":"matchId","nameLocation":"2266:7:22","nodeType":"VariableDeclaration","scope":7165,"src":"2259:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":7162,"name":"uint16","nodeType":"ElementaryTypeName","src":"2259:6:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"2095:184:22"},"src":"2076:204:22"},{"anonymous":false,"documentation":{"id":7166,"nodeType":"StructuredDocumentation","src":"2286:135:22","text":" @dev Event to log tournament reported\n @param tournamentId: tournament id\n @param winner: winner address"},"eventSelector":"20cccded3274d61ae21772e24555a8219991777fcbfa43e8c3587f5d1c17b681","id":7177,"name":"TournamentReported","nameLocation":"2433:18:22","nodeType":"EventDefinition","parameters":{"id":7176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7168,"indexed":true,"mutability":"mutable","name":"tournamentId","nameLocation":"2476:12:22","nodeType":"VariableDeclaration","scope":7177,"src":"2461:27:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":7167,"name":"uint16","nodeType":"ElementaryTypeName","src":"2461:6:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":7170,"indexed":false,"mutability":"mutable","name":"endTimestamp","nameLocation":"2505:12:22","nodeType":"VariableDeclaration","scope":7177,"src":"2498:19:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7169,"name":"uint32","nodeType":"ElementaryTypeName","src":"2498:6:22","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":7173,"indexed":false,"mutability":"mutable","name":"matchIds","nameLocation":"2536:8:22","nodeType":"VariableDeclaration","scope":7177,"src":"2527:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint16_$dyn_memory_ptr","typeString":"uint16[]"},"typeName":{"baseType":{"id":7171,"name":"uint16","nodeType":"ElementaryTypeName","src":"2527:6:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"id":7172,"nodeType":"ArrayTypeName","src":"2527:8:22","typeDescriptions":{"typeIdentifier":"t_array$_t_uint16_$dyn_storage_ptr","typeString":"uint16[]"}},"visibility":"internal"},{"constant":false,"id":7175,"indexed":true,"mutability":"mutable","name":"winner","nameLocation":"2570:6:22","nodeType":"VariableDeclaration","scope":7177,"src":"2554:22:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7174,"name":"address","nodeType":"ElementaryTypeName","src":"2554:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2451:131:22"},"src":"2427:156:22"},{"anonymous":false,"documentation":{"id":7178,"nodeType":"StructuredDocumentation","src":"2589:125:22","text":" @dev Event to log player added\n @param name: player name\n @param playerAddress: player address"},"eventSelector":"746dea5d185825c2cafa76d92ad583ff3a306508c3b038f5aa772d0318df5332","id":7184,"name":"PlayerAdded","nameLocation":"2726:11:22","nodeType":"EventDefinition","parameters":{"id":7183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7180,"indexed":false,"mutability":"mutable","name":"name","nameLocation":"2745:4:22","nodeType":"VariableDeclaration","scope":7184,"src":"2738:11:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7179,"name":"string","nodeType":"ElementaryTypeName","src":"2738:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7182,"indexed":false,"mutability":"mutable","name":"playerAddress","nameLocation":"2759:13:22","nodeType":"VariableDeclaration","scope":7184,"src":"2751:21:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7181,"name":"address","nodeType":"ElementaryTypeName","src":"2751:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2737:36:22"},"src":"2720:54:22"},{"constant":false,"documentation":{"id":7185,"nodeType":"StructuredDocumentation","src":"2780:72:22","text":" @dev tournamentTokenIds to store tournament token ids"},"functionSelector":"40f55f91","id":7187,"mutability":"mutable","name":"tournamentTokenIds","nameLocation":"2872:18:22","nodeType":"VariableDeclaration","scope":7962,"src":"2858:32:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":7186,"name":"uint16","nodeType":"ElementaryTypeName","src":"2858:6:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"public"},{"body":{"id":7223,"nodeType":"Block","src":"3261:174:22","statements":[{"expression":{"id":7205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7201,"name":"goatNft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7104,"src":"3271:7:22","typeDescriptions":{"typeIdentifier":"t_contract$_GoatNft_$8112","typeString":"contract GoatNft"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7203,"name":"_goatNft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7190,"src":"3289:8:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7202,"name":"GoatNft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8112,"src":"3281:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_GoatNft_$8112_$","typeString":"type(contract GoatNft)"}},"id":7204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3281:17:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_GoatNft_$8112","typeString":"contract GoatNft"}},"src":"3271:27:22","typeDescriptions":{"typeIdentifier":"t_contract$_GoatNft_$8112","typeString":"contract GoatNft"}},"id":7206,"nodeType":"ExpressionStatement","src":"3271:27:22"},{"expression":{"id":7211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7207,"name":"pongToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7110,"src":"3308:9:22","typeDescriptions":{"typeIdentifier":"t_contract$_PongToken_$8254","typeString":"contract PongToken"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7209,"name":"_pongToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7192,"src":"3330:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7208,"name":"PongToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8254,"src":"3320:9:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PongToken_$8254_$","typeString":"type(contract PongToken)"}},"id":7210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3320:21:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_PongToken_$8254","typeString":"contract PongToken"}},"src":"3308:33:22","typeDescriptions":{"typeIdentifier":"t_contract$_PongToken_$8254","typeString":"contract PongToken"}},"id":7212,"nodeType":"ExpressionStatement","src":"3308:33:22"},{"expression":{"id":7217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7213,"name":"tournamentNft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7107,"src":"3351:13:22","typeDescriptions":{"typeIdentifier":"t_contract$_TournamentNft_$8198","typeString":"contract TournamentNft"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7215,"name":"_tournamentNft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7194,"src":"3381:14:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7214,"name":"TournamentNft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8198,"src":"3367:13:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TournamentNft_$8198_$","typeString":"type(contract TournamentNft)"}},"id":7216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3367:29:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_TournamentNft_$8198","typeString":"contract TournamentNft"}},"src":"3351:45:22","typeDescriptions":{"typeIdentifier":"t_contract$_TournamentNft_$8198","typeString":"contract TournamentNft"}},"id":7218,"nodeType":"ExpressionStatement","src":"3351:45:22"},{"expression":{"id":7221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7219,"name":"tournamentTokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7187,"src":"3406:18:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":7220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3427:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3406:22:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"id":7222,"nodeType":"ExpressionStatement","src":"3406:22:22"}]},"documentation":{"id":7188,"nodeType":"StructuredDocumentation","src":"2897:234:22","text":" @dev Constructor to initialize the contract\n @param _goatNft: address of GoatNft contract\n @param _pongToken: address of PongToken contract\n @param _tournamentNft: address of TournamentNft contract"},"id":7224,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"expression":{"id":7197,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3249:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3253:6:22","memberName":"sender","nodeType":"MemberAccess","src":"3249:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":7199,"kind":"baseConstructorSpecifier","modifierName":{"id":7196,"name":"Ownable","nameLocations":["3241:7:22"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"3241:7:22"},"nodeType":"ModifierInvocation","src":"3241:19:22"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":7195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7190,"mutability":"mutable","name":"_goatNft","nameLocation":"3166:8:22","nodeType":"VariableDeclaration","scope":7224,"src":"3158:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7189,"name":"address","nodeType":"ElementaryTypeName","src":"3158:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7192,"mutability":"mutable","name":"_pongToken","nameLocation":"3192:10:22","nodeType":"VariableDeclaration","scope":7224,"src":"3184:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7191,"name":"address","nodeType":"ElementaryTypeName","src":"3184:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7194,"mutability":"mutable","name":"_tournamentNft","nameLocation":"3220:14:22","nodeType":"VariableDeclaration","scope":7224,"src":"3212:22:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7193,"name":"address","nodeType":"ElementaryTypeName","src":"3212:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3148:92:22"},"returnParameters":{"id":7200,"nodeType":"ParameterList","parameters":[],"src":"3261:0:22"},"scope":7962,"src":"3137:298:22","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7264,"nodeType":"Block","src":"3638:193:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":7235,"name":"players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7150,"src":"3656:7:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_address_$","typeString":"mapping(string memory => address)"}},"id":7237,"indexExpression":{"id":7236,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7227,"src":"3664:5:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3656:14:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":7240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3682:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7239,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3674:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7238,"name":"address","nodeType":"ElementaryTypeName","src":"3674:7:22","typeDescriptions":{}}},"id":7241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3674:10:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3656:28:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506c6179657220616c726561647920657869737473","id":7243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3686:23:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_e62d5747e47bcd18d9ddf74b7bcef9f67e80418a4c933197d321fea58848ef3f","typeString":"literal_string \"Player already exists\""},"value":"Player already exists"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e62d5747e47bcd18d9ddf74b7bcef9f67e80418a4c933197d321fea58848ef3f","typeString":"literal_string \"Player already exists\""}],"id":7234,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3648:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3648:62:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7245,"nodeType":"ExpressionStatement","src":"3648:62:22"},{"expression":{"id":7250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7246,"name":"players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7150,"src":"3720:7:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_address_$","typeString":"mapping(string memory => address)"}},"id":7248,"indexExpression":{"id":7247,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7227,"src":"3728:5:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3720:14:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7249,"name":"_player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7229,"src":"3737:7:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3720:24:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7251,"nodeType":"ExpressionStatement","src":"3720:24:22"},{"expression":{"arguments":[{"id":7255,"name":"_player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7229,"src":"3769:7:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"313030","id":7256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3778:3:22","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}],"expression":{"id":7252,"name":"pongToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7110,"src":"3754:9:22","typeDescriptions":{"typeIdentifier":"t_contract$_PongToken_$8254","typeString":"contract PongToken"}},"id":7254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3764:4:22","memberName":"mint","nodeType":"MemberAccess","referencedDeclaration":8237,"src":"3754:14:22","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) external"}},"id":7257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3754:28:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7258,"nodeType":"ExpressionStatement","src":"3754:28:22"},{"eventCall":{"arguments":[{"id":7260,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7227,"src":"3809:5:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":7261,"name":"_player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7229,"src":"3816:7:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7259,"name":"PlayerAdded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7184,"src":"3797:11:22","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$","typeString":"function (string memory,address)"}},"id":7262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3797:27:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7263,"nodeType":"EmitStatement","src":"3792:32:22"}]},"documentation":{"id":7225,"nodeType":"StructuredDocumentation","src":"3441:117:22","text":" @dev Function to add player\n @param _name: player name\n @param _player: player address"},"functionSelector":"ec203f6b","id":7265,"implemented":true,"kind":"function","modifiers":[{"id":7232,"kind":"modifierInvocation","modifierName":{"id":7231,"name":"onlyOwner","nameLocations":["3628:9:22"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"3628:9:22"},"nodeType":"ModifierInvocation","src":"3628:9:22"}],"name":"addPlayer","nameLocation":"3573:9:22","nodeType":"FunctionDefinition","parameters":{"id":7230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7227,"mutability":"mutable","name":"_name","nameLocation":"3597:5:22","nodeType":"VariableDeclaration","scope":7265,"src":"3583:19:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7226,"name":"string","nodeType":"ElementaryTypeName","src":"3583:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7229,"mutability":"mutable","name":"_player","nameLocation":"3612:7:22","nodeType":"VariableDeclaration","scope":7265,"src":"3604:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7228,"name":"address","nodeType":"ElementaryTypeName","src":"3604:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3582:38:22"},"returnParameters":{"id":7233,"nodeType":"ParameterList","parameters":[],"src":"3638:0:22"},"scope":7962,"src":"3564:267:22","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7279,"nodeType":"Block","src":"4061:38:22","statements":[{"expression":{"baseExpression":{"id":7275,"name":"players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7150,"src":"4078:7:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_address_$","typeString":"mapping(string memory => address)"}},"id":7277,"indexExpression":{"id":7276,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7268,"src":"4086:5:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4078:14:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":7274,"id":7278,"nodeType":"Return","src":"4071:21:22"}]},"documentation":{"id":7266,"nodeType":"StructuredDocumentation","src":"3837:117:22","text":" @dev Function to get player address\n @param _name: player name\n @return player address"},"functionSelector":"661c37fd","id":7280,"implemented":true,"kind":"function","modifiers":[{"id":7271,"kind":"modifierInvocation","modifierName":{"id":7270,"name":"onlyOwner","nameLocations":["4033:9:22"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"4033:9:22"},"nodeType":"ModifierInvocation","src":"4033:9:22"}],"name":"getPlayerAddress","nameLocation":"3969:16:22","nodeType":"FunctionDefinition","parameters":{"id":7269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7268,"mutability":"mutable","name":"_name","nameLocation":"4009:5:22","nodeType":"VariableDeclaration","scope":7280,"src":"3995:19:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7267,"name":"string","nodeType":"ElementaryTypeName","src":"3995:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3985:35:22"},"returnParameters":{"id":7274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7273,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7280,"src":"4052:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7272,"name":"address","nodeType":"ElementaryTypeName","src":"4052:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4051:9:22"},"scope":7962,"src":"3960:139:22","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":7424,"nodeType":"Block","src":"4594:1265:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7300,"name":"player1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7283,"src":"4642:7:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7299,"name":"getPlayerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7280,"src":"4625:16:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_string_memory_ptr_$returns$_t_address_$","typeString":"function (string memory) view returns (address)"}},"id":7301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4625:25:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4662:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7303,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4654:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7302,"name":"address","nodeType":"ElementaryTypeName","src":"4654:7:22","typeDescriptions":{}}},"id":7305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4654:10:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4625:39:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506c6179657231206e6f742072656769737465726564","id":7307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4678:24:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_8ae9f25dd7148543b8715f8f5912a2b61497a4b06739d3b9ade261c33ae7b70d","typeString":"literal_string \"Player1 not registered\""},"value":"Player1 not registered"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8ae9f25dd7148543b8715f8f5912a2b61497a4b06739d3b9ade261c33ae7b70d","typeString":"literal_string \"Player1 not registered\""}],"id":7298,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4604:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4604:108:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7309,"nodeType":"ExpressionStatement","src":"4604:108:22"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7312,"name":"player2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7285,"src":"4760:7:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7311,"name":"getPlayerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7280,"src":"4743:16:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_string_memory_ptr_$returns$_t_address_$","typeString":"function (string memory) view returns (address)"}},"id":7313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4743:25:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4780:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7315,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4772:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7314,"name":"address","nodeType":"ElementaryTypeName","src":"4772:7:22","typeDescriptions":{}}},"id":7317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4772:10:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4743:39:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506c6179657232206e6f742072656769737465726564","id":7319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4796:24:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_ffc207f67b7ae6032b4314a089795ca325f65bfd399e4ba03a8b2ad7f3abc206","typeString":"literal_string \"Player2 not registered\""},"value":"Player2 not registered"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ffc207f67b7ae6032b4314a089795ca325f65bfd399e4ba03a8b2ad7f3abc206","typeString":"literal_string \"Player2 not registered\""}],"id":7310,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4722:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4722:108:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7321,"nodeType":"ExpressionStatement","src":"4722:108:22"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7323,"name":"winner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7293,"src":"4848:6:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4866:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7325,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4858:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7324,"name":"address","nodeType":"ElementaryTypeName","src":"4858:7:22","typeDescriptions":{}}},"id":7327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4858:10:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4848:20:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"57696e6e6572206164647265737320697320696e76616c6964","id":7329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4870:27:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_e075ac6d8fa43b0d2071c35dbf7312ba4f3cecda52a6171c83e7b0b7d1d8c44c","typeString":"literal_string \"Winner address is invalid\""},"value":"Winner address is invalid"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e075ac6d8fa43b0d2071c35dbf7312ba4f3cecda52a6171c83e7b0b7d1d8c44c","typeString":"literal_string \"Winner address is invalid\""}],"id":7322,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4840:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4840:58:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7331,"nodeType":"ExpressionStatement","src":"4840:58:22"},{"expression":{"arguments":[{"id":7335,"name":"winner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7293,"src":"4923:6:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"3130","id":7336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4931:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}],"expression":{"id":7332,"name":"pongToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7110,"src":"4908:9:22","typeDescriptions":{"typeIdentifier":"t_contract$_PongToken_$8254","typeString":"contract PongToken"}},"id":7334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4918:4:22","memberName":"mint","nodeType":"MemberAccess","referencedDeclaration":8237,"src":"4908:14:22","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) external"}},"id":7337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4908:26:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7338,"nodeType":"ExpressionStatement","src":"4908:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":7341,"name":"goatNft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7104,"src":"4981:7:22","typeDescriptions":{"typeIdentifier":"t_contract$_GoatNft_$8112","typeString":"contract GoatNft"}},"id":7342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4989:14:22","memberName":"getGoatAddress","nodeType":"MemberAccess","referencedDeclaration":8054,"src":"4981:22:22","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":7343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4981:24:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":7339,"name":"pongToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7110,"src":"4961:9:22","typeDescriptions":{"typeIdentifier":"t_contract$_PongToken_$8254","typeString":"contract PongToken"}},"id":7340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4971:9:22","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":417,"src":"4961:19:22","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":7344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4961:45:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"arguments":[{"id":7347,"name":"winner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7293,"src":"5041:6:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":7345,"name":"pongToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7110,"src":"5021:9:22","typeDescriptions":{"typeIdentifier":"t_contract$_PongToken_$8254","typeString":"contract PongToken"}},"id":7346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5031:9:22","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":417,"src":"5021:19:22","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":7348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5021:27:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4961:87:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7360,"nodeType":"IfStatement","src":"4944:193:22","trueBody":{"id":7359,"nodeType":"Block","src":"5059:78:22","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":7353,"name":"goatNft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7104,"src":"5093:7:22","typeDescriptions":{"typeIdentifier":"t_contract$_GoatNft_$8112","typeString":"contract GoatNft"}},"id":7354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5101:14:22","memberName":"getGoatAddress","nodeType":"MemberAccess","referencedDeclaration":8054,"src":"5093:22:22","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":7355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5093:24:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7356,"name":"winner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7293,"src":"5119:6:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":7350,"name":"goatNft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7104,"src":"5073:7:22","typeDescriptions":{"typeIdentifier":"t_contract$_GoatNft_$8112","typeString":"contract GoatNft"}},"id":7352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5081:11:22","memberName":"transferNft","nodeType":"MemberAccess","referencedDeclaration":8045,"src":"5073:19:22","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) external"}},"id":7357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5073:53:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7358,"nodeType":"ExpressionStatement","src":"5073:53:22"}]}},{"assignments":[7362],"declarations":[{"constant":false,"id":7362,"mutability":"mutable","name":"loser","nameLocation":"5154:5:22","nodeType":"VariableDeclaration","scope":7424,"src":"5146:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7361,"name":"address","nodeType":"ElementaryTypeName","src":"5146:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":7376,"initialValue":{"condition":{"components":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7364,"name":"player1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7283,"src":"5180:7:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7363,"name":"getPlayerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7280,"src":"5163:16:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_string_memory_ptr_$returns$_t_address_$","typeString":"function (string memory) view returns (address)"}},"id":7365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5163:25:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7366,"name":"winner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7293,"src":"5192:6:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5163:35:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":7368,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5162:37:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":7373,"name":"player2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7285,"src":"5271:7:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7372,"name":"getPlayerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7280,"src":"5254:16:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_string_memory_ptr_$returns$_t_address_$","typeString":"function (string memory) view returns (address)"}},"id":7374,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5254:25:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"5162:117:22","trueExpression":{"arguments":[{"id":7370,"name":"player1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7283,"src":"5231:7:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7369,"name":"getPlayerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7280,"src":"5214:16:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_string_memory_ptr_$returns$_t_address_$","typeString":"function (string memory) view returns (address)"}},"id":7371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5214:25:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5146:133:22"},{"assignments":[7378],"declarations":[{"constant":false,"id":7378,"mutability":"mutable","name":"amountToBurn","nameLocation":"5297:12:22","nodeType":"VariableDeclaration","scope":7424,"src":"5289:20:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7377,"name":"uint256","nodeType":"ElementaryTypeName","src":"5289:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7385,"initialValue":{"arguments":[{"arguments":[{"id":7382,"name":"loser","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7362,"src":"5352:5:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":7380,"name":"pongToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7110,"src":"5332:9:22","typeDescriptions":{"typeIdentifier":"t_contract$_PongToken_$8254","typeString":"contract PongToken"}},"id":7381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5342:9:22","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":417,"src":"5332:19:22","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":7383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5332:26:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7379,"name":"calculateBurnAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7748,"src":"5312:19:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":7384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5312:47:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5289:70:22"},{"expression":{"arguments":[{"id":7389,"name":"loser","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7362,"src":"5384:5:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7390,"name":"amountToBurn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7378,"src":"5391:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7386,"name":"pongToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7110,"src":"5369:9:22","typeDescriptions":{"typeIdentifier":"t_contract$_PongToken_$8254","typeString":"contract PongToken"}},"id":7388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5379:4:22","memberName":"burn","nodeType":"MemberAccess","referencedDeclaration":8253,"src":"5369:14:22","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) external"}},"id":7391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5369:35:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7392,"nodeType":"ExpressionStatement","src":"5369:35:22"},{"assignments":[7395],"declarations":[{"constant":false,"id":7395,"mutability":"mutable","name":"tempMatch","nameLocation":"5427:9:22","nodeType":"VariableDeclaration","scope":7424,"src":"5414:22:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Match_$7124_memory_ptr","typeString":"struct MasterContract.Match"},"typeName":{"id":7394,"nodeType":"UserDefinedTypeName","pathNode":{"id":7393,"name":"Match","nameLocations":["5414:5:22"],"nodeType":"IdentifierPath","referencedDeclaration":7124,"src":"5414:5:22"},"referencedDeclaration":7124,"src":"5414:5:22","typeDescriptions":{"typeIdentifier":"t_struct$_Match_$7124_storage_ptr","typeString":"struct MasterContract.Match"}},"visibility":"internal"}],"id":7404,"initialValue":{"arguments":[{"id":7397,"name":"player1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7283,"src":"5468:7:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":7398,"name":"player2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7285,"src":"5489:7:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":7399,"name":"winner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7293,"src":"5510:6:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7400,"name":"player1Score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7289,"src":"5530:12:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":7401,"name":"player2Score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7291,"src":"5556:12:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":7402,"name":"matchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7287,"src":"5582:7:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint16","typeString":"uint16"}],"id":7396,"name":"fillMatchStruct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7463,"src":"5439:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$_t_uint8_$_t_uint8_$_t_uint16_$returns$_t_struct$_Match_$7124_memory_ptr_$","typeString":"function (string memory,string memory,address,uint8,uint8,uint16) view returns (struct MasterContract.Match memory)"}},"id":7403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5439:160:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Match_$7124_memory_ptr","typeString":"struct MasterContract.Match memory"}},"nodeType":"VariableDeclarationStatement","src":"5414:185:22"},{"expression":{"arguments":[{"id":7408,"name":"tempMatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7395,"src":"5633:9:22","typeDescriptions":{"typeIdentifier":"t_struct$_Match_$7124_memory_ptr","typeString":"struct MasterContract.Match memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Match_$7124_memory_ptr","typeString":"struct MasterContract.Match memory"}],"expression":{"id":7405,"name":"globalMatchesArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7140,"src":"5609:18:22","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Match_$7124_storage_$dyn_storage","typeString":"struct MasterContract.Match storage ref[] storage ref"}},"id":7407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5628:4:22","memberName":"push","nodeType":"MemberAccess","src":"5609:23:22","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Match_$7124_storage_$dyn_storage_ptr_$_t_struct$_Match_$7124_storage_$returns$__$attached_to$_t_array$_t_struct$_Match_$7124_storage_$dyn_storage_ptr_$","typeString":"function (struct MasterContract.Match storage ref[] storage pointer,struct MasterContract.Match storage ref)"}},"id":7409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5609:34:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7410,"nodeType":"ExpressionStatement","src":"5609:34:22"},{"eventCall":{"arguments":[{"arguments":[{"id":7413,"name":"player1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7283,"src":"5702:7:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7412,"name":"getPlayerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7280,"src":"5685:16:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_string_memory_ptr_$returns$_t_address_$","typeString":"function (string memory) view returns (address)"}},"id":7414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5685:25:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":7416,"name":"player2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7285,"src":"5741:7:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7415,"name":"getPlayerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7280,"src":"5724:16:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_string_memory_ptr_$returns$_t_address_$","typeString":"function (string memory) view returns (address)"}},"id":7417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5724:25:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7418,"name":"winner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7293,"src":"5763:6:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7419,"name":"player1Score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7289,"src":"5783:12:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":7420,"name":"player2Score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7291,"src":"5809:12:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":7421,"name":"matchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7287,"src":"5835:7:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint16","typeString":"uint16"}],"id":7411,"name":"MatchReported","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7165,"src":"5658:13:22","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint8_$_t_uint8_$_t_uint16_$returns$__$","typeString":"function (address,address,address,uint8,uint8,uint16)"}},"id":7422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5658:194:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7423,"nodeType":"EmitStatement","src":"5653:199:22"}]},"documentation":{"id":7281,"nodeType":"StructuredDocumentation","src":"4105:273:22","text":" @dev Function to report match\n @param matchId: match id\n @param player1: player1 name\n @param player2: player2 name\n @param player1Score: player1 score\n @param player2Score: player2 score\n @param winner: winner address"},"functionSelector":"1750094a","id":7425,"implemented":true,"kind":"function","modifiers":[{"id":7296,"kind":"modifierInvocation","modifierName":{"id":7295,"name":"onlyOwner","nameLocations":["4584:9:22"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"4584:9:22"},"nodeType":"ModifierInvocation","src":"4584:9:22"}],"name":"reportMatch","nameLocation":"4393:11:22","nodeType":"FunctionDefinition","parameters":{"id":7294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7283,"mutability":"mutable","name":"player1","nameLocation":"4428:7:22","nodeType":"VariableDeclaration","scope":7425,"src":"4414:21:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7282,"name":"string","nodeType":"ElementaryTypeName","src":"4414:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7285,"mutability":"mutable","name":"player2","nameLocation":"4459:7:22","nodeType":"VariableDeclaration","scope":7425,"src":"4445:21:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7284,"name":"string","nodeType":"ElementaryTypeName","src":"4445:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7287,"mutability":"mutable","name":"matchId","nameLocation":"4483:7:22","nodeType":"VariableDeclaration","scope":7425,"src":"4476:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":7286,"name":"uint16","nodeType":"ElementaryTypeName","src":"4476:6:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":7289,"mutability":"mutable","name":"player1Score","nameLocation":"4506:12:22","nodeType":"VariableDeclaration","scope":7425,"src":"4500:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7288,"name":"uint8","nodeType":"ElementaryTypeName","src":"4500:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":7291,"mutability":"mutable","name":"player2Score","nameLocation":"4534:12:22","nodeType":"VariableDeclaration","scope":7425,"src":"4528:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7290,"name":"uint8","nodeType":"ElementaryTypeName","src":"4528:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":7293,"mutability":"mutable","name":"winner","nameLocation":"4564:6:22","nodeType":"VariableDeclaration","scope":7425,"src":"4556:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7292,"name":"address","nodeType":"ElementaryTypeName","src":"4556:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4404:172:22"},"returnParameters":{"id":7297,"nodeType":"ParameterList","parameters":[],"src":"4594:0:22"},"scope":7962,"src":"4384:1475:22","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7462,"nodeType":"Block","src":"6411:319:22","statements":[{"assignments":[7446],"declarations":[{"constant":false,"id":7446,"mutability":"mutable","name":"tempMatch","nameLocation":"6434:9:22","nodeType":"VariableDeclaration","scope":7462,"src":"6421:22:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Match_$7124_memory_ptr","typeString":"struct MasterContract.Match"},"typeName":{"id":7445,"nodeType":"UserDefinedTypeName","pathNode":{"id":7444,"name":"Match","nameLocations":["6421:5:22"],"nodeType":"IdentifierPath","referencedDeclaration":7124,"src":"6421:5:22"},"referencedDeclaration":7124,"src":"6421:5:22","typeDescriptions":{"typeIdentifier":"t_struct$_Match_$7124_storage_ptr","typeString":"struct MasterContract.Match"}},"visibility":"internal"}],"id":7459,"initialValue":{"arguments":[{"arguments":[{"id":7449,"name":"player1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7428,"src":"6492:7:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7448,"name":"getPlayerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7280,"src":"6475:16:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_string_memory_ptr_$returns$_t_address_$","typeString":"function (string memory) view returns (address)"}},"id":7450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6475:25:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":7452,"name":"player2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7430,"src":"6540:7:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7451,"name":"getPlayerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7280,"src":"6523:16:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_string_memory_ptr_$returns$_t_address_$","typeString":"function (string memory) view returns (address)"}},"id":7453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6523:25:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7454,"name":"winner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7432,"src":"6570:6:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7455,"name":"player1Score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7434,"src":"6604:12:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":7456,"name":"player2Score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7436,"src":"6644:12:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":7457,"name":"matchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7438,"src":"6679:7:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint16","typeString":"uint16"}],"id":7447,"name":"Match","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7124,"src":"6446:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Match_$7124_storage_ptr_$","typeString":"type(struct MasterContract.Match storage pointer)"}},"id":7458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["6466:7:22","6514:7:22","6562:6:22","6590:12:22","6630:12:22","6670:7:22"],"names":["player1","player2","winner","player1Score","player2Score","matchId"],"nodeType":"FunctionCall","src":"6446:251:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Match_$7124_memory_ptr","typeString":"struct MasterContract.Match memory"}},"nodeType":"VariableDeclarationStatement","src":"6421:276:22"},{"expression":{"id":7460,"name":"tempMatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7446,"src":"6714:9:22","typeDescriptions":{"typeIdentifier":"t_struct$_Match_$7124_memory_ptr","typeString":"struct MasterContract.Match memory"}},"functionReturnParameters":7443,"id":7461,"nodeType":"Return","src":"6707:16:22"}]},"documentation":{"id":7426,"nodeType":"StructuredDocumentation","src":"5865:306:22","text":" @dev Function to fill match struct\n @param player1: player1 name\n @param player2: player2 name\n @param winner: winner address\n @param player1Score: player1 score\n @param player2Score: player2 score\n @param matchId: match id\n @return Match struct"},"id":7463,"implemented":true,"kind":"function","modifiers":[],"name":"fillMatchStruct","nameLocation":"6186:15:22","nodeType":"FunctionDefinition","parameters":{"id":7439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7428,"mutability":"mutable","name":"player1","nameLocation":"6225:7:22","nodeType":"VariableDeclaration","scope":7463,"src":"6211:21:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7427,"name":"string","nodeType":"ElementaryTypeName","src":"6211:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7430,"mutability":"mutable","name":"player2","nameLocation":"6256:7:22","nodeType":"VariableDeclaration","scope":7463,"src":"6242:21:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7429,"name":"string","nodeType":"ElementaryTypeName","src":"6242:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7432,"mutability":"mutable","name":"winner","nameLocation":"6281:6:22","nodeType":"VariableDeclaration","scope":7463,"src":"6273:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7431,"name":"address","nodeType":"ElementaryTypeName","src":"6273:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7434,"mutability":"mutable","name":"player1Score","nameLocation":"6303:12:22","nodeType":"VariableDeclaration","scope":7463,"src":"6297:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7433,"name":"uint8","nodeType":"ElementaryTypeName","src":"6297:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":7436,"mutability":"mutable","name":"player2Score","nameLocation":"6331:12:22","nodeType":"VariableDeclaration","scope":7463,"src":"6325:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7435,"name":"uint8","nodeType":"ElementaryTypeName","src":"6325:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":7438,"mutability":"mutable","name":"matchId","nameLocation":"6360:7:22","nodeType":"VariableDeclaration","scope":7463,"src":"6353:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":7437,"name":"uint16","nodeType":"ElementaryTypeName","src":"6353:6:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"6201:172:22"},"returnParameters":{"id":7443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7442,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7463,"src":"6397:12:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Match_$7124_memory_ptr","typeString":"struct MasterContract.Match"},"typeName":{"id":7441,"nodeType":"UserDefinedTypeName","pathNode":{"id":7440,"name":"Match","nameLocations":["6397:5:22"],"nodeType":"IdentifierPath","referencedDeclaration":7124,"src":"6397:5:22"},"referencedDeclaration":7124,"src":"6397:5:22","typeDescriptions":{"typeIdentifier":"t_struct$_Match_$7124_storage_ptr","typeString":"struct MasterContract.Match"}},"visibility":"internal"}],"src":"6396:14:22"},"scope":7962,"src":"6177:553:22","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7582,"nodeType":"Block","src":"6999:891:22","statements":[{"assignments":[7474],"declarations":[{"constant":false,"id":7474,"mutability":"mutable","name":"size","nameLocation":"7017:4:22","nodeType":"VariableDeclaration","scope":7582,"src":"7009:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7473,"name":"uint256","nodeType":"ElementaryTypeName","src":"7009:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7476,"initialValue":{"hexValue":"30","id":7475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7024:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7009:16:22"},{"body":{"id":7510,"nodeType":"Block","src":"7088:233:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":7488,"name":"globalMatchesArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7140,"src":"7123:18:22","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Match_$7124_storage_$dyn_storage","typeString":"struct MasterContract.Match storage ref[] storage ref"}},"id":7490,"indexExpression":{"id":7489,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7478,"src":"7142:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7123:21:22","typeDescriptions":{"typeIdentifier":"t_struct$_Match_$7124_storage","typeString":"struct MasterContract.Match storage ref"}},"id":7491,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7145:7:22","memberName":"player1","nodeType":"MemberAccess","referencedDeclaration":7113,"src":"7123:29:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":7493,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7466,"src":"7173:6:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7492,"name":"getPlayerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7280,"src":"7156:16:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_string_memory_ptr_$returns$_t_address_$","typeString":"function (string memory) view returns (address)"}},"id":7494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7156:24:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7123:57:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":7496,"name":"globalMatchesArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7140,"src":"7200:18:22","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Match_$7124_storage_$dyn_storage","typeString":"struct MasterContract.Match storage ref[] storage ref"}},"id":7498,"indexExpression":{"id":7497,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7478,"src":"7219:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7200:21:22","typeDescriptions":{"typeIdentifier":"t_struct$_Match_$7124_storage","typeString":"struct MasterContract.Match storage ref"}},"id":7499,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7222:7:22","memberName":"player2","nodeType":"MemberAccess","referencedDeclaration":7115,"src":"7200:29:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":7501,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7466,"src":"7250:6:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7500,"name":"getPlayerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7280,"src":"7233:16:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_string_memory_ptr_$returns$_t_address_$","typeString":"function (string memory) view returns (address)"}},"id":7502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7233:24:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7200:57:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7123:134:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7509,"nodeType":"IfStatement","src":"7102:209:22","trueBody":{"id":7508,"nodeType":"Block","src":"7272:39:22","statements":[{"expression":{"id":7506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7290:6:22","subExpression":{"id":7505,"name":"size","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7474,"src":"7290:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7507,"nodeType":"ExpressionStatement","src":"7290:6:22"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7481,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7478,"src":"7052:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":7482,"name":"globalMatchesArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7140,"src":"7056:18:22","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Match_$7124_storage_$dyn_storage","typeString":"struct MasterContract.Match storage ref[] storage ref"}},"id":7483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7075:6:22","memberName":"length","nodeType":"MemberAccess","src":"7056:25:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7052:29:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7511,"initializationExpression":{"assignments":[7478],"declarations":[{"constant":false,"id":7478,"mutability":"mutable","name":"i","nameLocation":"7045:1:22","nodeType":"VariableDeclaration","scope":7511,"src":"7040:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7477,"name":"uint","nodeType":"ElementaryTypeName","src":"7040:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7480,"initialValue":{"hexValue":"30","id":7479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7049:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7040:10:22"},"loopExpression":{"expression":{"id":7486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7083:3:22","subExpression":{"id":7485,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7478,"src":"7083:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7487,"nodeType":"ExpressionStatement","src":"7083:3:22"},"nodeType":"ForStatement","src":"7035:286:22"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7512,"name":"size","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7474,"src":"7334:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7342:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7334:9:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7520,"nodeType":"IfStatement","src":"7330:81:22","trueBody":{"id":7519,"nodeType":"Block","src":"7345:66:22","statements":[{"expression":{"arguments":[{"hexValue":"4e6f206d61746368657320666f756e6420666f722074686520706c61796572","id":7516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7366:33:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_48a88b95e8c6943c3c5543ee0c6ad8f7d009a48ab4b8ecd53ced3aa366e8f172","typeString":"literal_string \"No matches found for the player\""},"value":"No matches found for the player"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_48a88b95e8c6943c3c5543ee0c6ad8f7d009a48ab4b8ecd53ced3aa366e8f172","typeString":"literal_string \"No matches found for the player\""}],"id":7515,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"7359:6:22","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":7517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7359:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7518,"nodeType":"ExpressionStatement","src":"7359:41:22"}]}},{"assignments":[7525],"declarations":[{"constant":false,"id":7525,"mutability":"mutable","name":"playerMatches","nameLocation":"7435:13:22","nodeType":"VariableDeclaration","scope":7582,"src":"7420:28:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Match_$7124_memory_ptr_$dyn_memory_ptr","typeString":"struct MasterContract.Match[]"},"typeName":{"baseType":{"id":7523,"nodeType":"UserDefinedTypeName","pathNode":{"id":7522,"name":"Match","nameLocations":["7420:5:22"],"nodeType":"IdentifierPath","referencedDeclaration":7124,"src":"7420:5:22"},"referencedDeclaration":7124,"src":"7420:5:22","typeDescriptions":{"typeIdentifier":"t_struct$_Match_$7124_storage_ptr","typeString":"struct MasterContract.Match"}},"id":7524,"nodeType":"ArrayTypeName","src":"7420:7:22","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Match_$7124_storage_$dyn_storage_ptr","typeString":"struct MasterContract.Match[]"}},"visibility":"internal"}],"id":7532,"initialValue":{"arguments":[{"id":7530,"name":"size","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7474,"src":"7463:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7529,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"7451:11:22","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Match_$7124_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (struct MasterContract.Match memory[] memory)"},"typeName":{"baseType":{"id":7527,"nodeType":"UserDefinedTypeName","pathNode":{"id":7526,"name":"Match","nameLocations":["7455:5:22"],"nodeType":"IdentifierPath","referencedDeclaration":7124,"src":"7455:5:22"},"referencedDeclaration":7124,"src":"7455:5:22","typeDescriptions":{"typeIdentifier":"t_struct$_Match_$7124_storage_ptr","typeString":"struct MasterContract.Match"}},"id":7528,"nodeType":"ArrayTypeName","src":"7455:7:22","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Match_$7124_storage_$dyn_storage_ptr","typeString":"struct MasterContract.Match[]"}}},"id":7531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7451:17:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Match_$7124_memory_ptr_$dyn_memory_ptr","typeString":"struct MasterContract.Match memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"7420:48:22"},{"assignments":[7534],"declarations":[{"constant":false,"id":7534,"mutability":"mutable","name":"index","nameLocation":"7486:5:22","nodeType":"VariableDeclaration","scope":7582,"src":"7478:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7533,"name":"uint256","nodeType":"ElementaryTypeName","src":"7478:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7536,"initialValue":{"hexValue":"30","id":7535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7494:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7478:17:22"},{"body":{"id":7578,"nodeType":"Block","src":"7558:296:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":7548,"name":"globalMatchesArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7140,"src":"7593:18:22","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Match_$7124_storage_$dyn_storage","typeString":"struct MasterContract.Match storage ref[] storage ref"}},"id":7550,"indexExpression":{"id":7549,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7538,"src":"7612:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7593:21:22","typeDescriptions":{"typeIdentifier":"t_struct$_Match_$7124_storage","typeString":"struct MasterContract.Match storage ref"}},"id":7551,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7615:7:22","memberName":"player1","nodeType":"MemberAccess","referencedDeclaration":7113,"src":"7593:29:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":7553,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7466,"src":"7643:6:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7552,"name":"getPlayerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7280,"src":"7626:16:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_string_memory_ptr_$returns$_t_address_$","typeString":"function (string memory) view returns (address)"}},"id":7554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7626:24:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7593:57:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":7556,"name":"globalMatchesArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7140,"src":"7670:18:22","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Match_$7124_storage_$dyn_storage","typeString":"struct MasterContract.Match storage ref[] storage ref"}},"id":7558,"indexExpression":{"id":7557,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7538,"src":"7689:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7670:21:22","typeDescriptions":{"typeIdentifier":"t_struct$_Match_$7124_storage","typeString":"struct MasterContract.Match storage ref"}},"id":7559,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7692:7:22","memberName":"player2","nodeType":"MemberAccess","referencedDeclaration":7115,"src":"7670:29:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":7561,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7466,"src":"7720:6:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7560,"name":"getPlayerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7280,"src":"7703:16:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_string_memory_ptr_$returns$_t_address_$","typeString":"function (string memory) view returns (address)"}},"id":7562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7703:24:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7670:57:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7593:134:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7577,"nodeType":"IfStatement","src":"7572:272:22","trueBody":{"id":7576,"nodeType":"Block","src":"7742:102:22","statements":[{"expression":{"id":7571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7565,"name":"playerMatches","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7525,"src":"7760:13:22","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Match_$7124_memory_ptr_$dyn_memory_ptr","typeString":"struct MasterContract.Match memory[] memory"}},"id":7567,"indexExpression":{"id":7566,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7534,"src":"7774:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7760:20:22","typeDescriptions":{"typeIdentifier":"t_struct$_Match_$7124_memory_ptr","typeString":"struct MasterContract.Match memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":7568,"name":"globalMatchesArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7140,"src":"7783:18:22","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Match_$7124_storage_$dyn_storage","typeString":"struct MasterContract.Match storage ref[] storage ref"}},"id":7570,"indexExpression":{"id":7569,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7538,"src":"7802:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7783:21:22","typeDescriptions":{"typeIdentifier":"t_struct$_Match_$7124_storage","typeString":"struct MasterContract.Match storage ref"}},"src":"7760:44:22","typeDescriptions":{"typeIdentifier":"t_struct$_Match_$7124_memory_ptr","typeString":"struct MasterContract.Match memory"}},"id":7572,"nodeType":"ExpressionStatement","src":"7760:44:22"},{"expression":{"id":7574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7822:7:22","subExpression":{"id":7573,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7534,"src":"7822:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7575,"nodeType":"ExpressionStatement","src":"7822:7:22"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7541,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7538,"src":"7522:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":7542,"name":"globalMatchesArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7140,"src":"7526:18:22","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Match_$7124_storage_$dyn_storage","typeString":"struct MasterContract.Match storage ref[] storage ref"}},"id":7543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7545:6:22","memberName":"length","nodeType":"MemberAccess","src":"7526:25:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7522:29:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7579,"initializationExpression":{"assignments":[7538],"declarations":[{"constant":false,"id":7538,"mutability":"mutable","name":"i","nameLocation":"7515:1:22","nodeType":"VariableDeclaration","scope":7579,"src":"7510:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7537,"name":"uint","nodeType":"ElementaryTypeName","src":"7510:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7540,"initialValue":{"hexValue":"30","id":7539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7519:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7510:10:22"},"loopExpression":{"expression":{"id":7546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7553:3:22","subExpression":{"id":7545,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7538,"src":"7553:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7547,"nodeType":"ExpressionStatement","src":"7553:3:22"},"nodeType":"ForStatement","src":"7505:349:22"},{"expression":{"id":7580,"name":"playerMatches","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7525,"src":"7870:13:22","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Match_$7124_memory_ptr_$dyn_memory_ptr","typeString":"struct MasterContract.Match memory[] memory"}},"functionReturnParameters":7472,"id":7581,"nodeType":"Return","src":"7863:20:22"}]},"documentation":{"id":7464,"nodeType":"StructuredDocumentation","src":"6736:157:22","text":" @dev Function to get all matches played by a player\n @param player: player name\n @return array of matches played by the player"},"functionSelector":"bb5aa495","id":7583,"implemented":true,"kind":"function","modifiers":[],"name":"getMatchsByPlayer","nameLocation":"6908:17:22","nodeType":"FunctionDefinition","parameters":{"id":7467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7466,"mutability":"mutable","name":"player","nameLocation":"6949:6:22","nodeType":"VariableDeclaration","scope":7583,"src":"6935:20:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7465,"name":"string","nodeType":"ElementaryTypeName","src":"6935:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6925:36:22"},"returnParameters":{"id":7472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7471,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7583,"src":"6983:14:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Match_$7124_memory_ptr_$dyn_memory_ptr","typeString":"struct MasterContract.Match[]"},"typeName":{"baseType":{"id":7469,"nodeType":"UserDefinedTypeName","pathNode":{"id":7468,"name":"Match","nameLocations":["6983:5:22"],"nodeType":"IdentifierPath","referencedDeclaration":7124,"src":"6983:5:22"},"referencedDeclaration":7124,"src":"6983:5:22","typeDescriptions":{"typeIdentifier":"t_struct$_Match_$7124_storage_ptr","typeString":"struct MasterContract.Match"}},"id":7470,"nodeType":"ArrayTypeName","src":"6983:7:22","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Match_$7124_storage_$dyn_storage_ptr","typeString":"struct MasterContract.Match[]"}},"visibility":"internal"}],"src":"6982:16:22"},"scope":7962,"src":"6899:991:22","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":7680,"nodeType":"Block","src":"8150:639:22","statements":[{"assignments":[7594],"declarations":[{"constant":false,"id":7594,"mutability":"mutable","name":"size","nameLocation":"8168:4:22","nodeType":"VariableDeclaration","scope":7680,"src":"8160:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7593,"name":"uint256","nodeType":"ElementaryTypeName","src":"8160:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7596,"initialValue":{"hexValue":"30","id":7595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8175:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8160:16:22"},{"body":{"id":7619,"nodeType":"Block","src":"8239:107:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":7608,"name":"globalMatchesArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7140,"src":"8257:18:22","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Match_$7124_storage_$dyn_storage","typeString":"struct MasterContract.Match storage ref[] storage ref"}},"id":7610,"indexExpression":{"id":7609,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7598,"src":"8276:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8257:21:22","typeDescriptions":{"typeIdentifier":"t_struct$_Match_$7124_storage","typeString":"struct MasterContract.Match storage ref"}},"id":7611,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8279:6:22","memberName":"winner","nodeType":"MemberAccess","referencedDeclaration":7117,"src":"8257:28:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7612,"name":"winner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7586,"src":"8289:6:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8257:38:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7618,"nodeType":"IfStatement","src":"8253:83:22","trueBody":{"id":7617,"nodeType":"Block","src":"8297:39:22","statements":[{"expression":{"id":7615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8315:6:22","subExpression":{"id":7614,"name":"size","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7594,"src":"8315:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7616,"nodeType":"ExpressionStatement","src":"8315:6:22"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7601,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7598,"src":"8203:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":7602,"name":"globalMatchesArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7140,"src":"8207:18:22","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Match_$7124_storage_$dyn_storage","typeString":"struct MasterContract.Match storage ref[] storage ref"}},"id":7603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8226:6:22","memberName":"length","nodeType":"MemberAccess","src":"8207:25:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8203:29:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7620,"initializationExpression":{"assignments":[7598],"declarations":[{"constant":false,"id":7598,"mutability":"mutable","name":"i","nameLocation":"8196:1:22","nodeType":"VariableDeclaration","scope":7620,"src":"8191:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7597,"name":"uint","nodeType":"ElementaryTypeName","src":"8191:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7600,"initialValue":{"hexValue":"30","id":7599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8200:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8191:10:22"},"loopExpression":{"expression":{"id":7606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8234:3:22","subExpression":{"id":7605,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7598,"src":"8234:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7607,"nodeType":"ExpressionStatement","src":"8234:3:22"},"nodeType":"ForStatement","src":"8186:160:22"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7621,"name":"size","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7594,"src":"8359:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8367:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8359:9:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7629,"nodeType":"IfStatement","src":"8355:81:22","trueBody":{"id":7628,"nodeType":"Block","src":"8370:66:22","statements":[{"expression":{"arguments":[{"hexValue":"4e6f206d61746368657320666f756e6420666f72207468652077696e6e6572","id":7625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8391:33:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_cfbd3297e5ce3c0189d5ce0fe901e81167648760a96bf142a59985fc6d3fcaa4","typeString":"literal_string \"No matches found for the winner\""},"value":"No matches found for the winner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_cfbd3297e5ce3c0189d5ce0fe901e81167648760a96bf142a59985fc6d3fcaa4","typeString":"literal_string \"No matches found for the winner\""}],"id":7624,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"8384:6:22","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":7626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8384:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7627,"nodeType":"ExpressionStatement","src":"8384:41:22"}]}},{"assignments":[7634],"declarations":[{"constant":false,"id":7634,"mutability":"mutable","name":"playerMatches","nameLocation":"8460:13:22","nodeType":"VariableDeclaration","scope":7680,"src":"8445:28:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Match_$7124_memory_ptr_$dyn_memory_ptr","typeString":"struct MasterContract.Match[]"},"typeName":{"baseType":{"id":7632,"nodeType":"UserDefinedTypeName","pathNode":{"id":7631,"name":"Match","nameLocations":["8445:5:22"],"nodeType":"IdentifierPath","referencedDeclaration":7124,"src":"8445:5:22"},"referencedDeclaration":7124,"src":"8445:5:22","typeDescriptions":{"typeIdentifier":"t_struct$_Match_$7124_storage_ptr","typeString":"struct MasterContract.Match"}},"id":7633,"nodeType":"ArrayTypeName","src":"8445:7:22","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Match_$7124_storage_$dyn_storage_ptr","typeString":"struct MasterContract.Match[]"}},"visibility":"internal"}],"id":7641,"initialValue":{"arguments":[{"id":7639,"name":"size","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7594,"src":"8488:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7638,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"8476:11:22","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Match_$7124_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (struct MasterContract.Match memory[] memory)"},"typeName":{"baseType":{"id":7636,"nodeType":"UserDefinedTypeName","pathNode":{"id":7635,"name":"Match","nameLocations":["8480:5:22"],"nodeType":"IdentifierPath","referencedDeclaration":7124,"src":"8480:5:22"},"referencedDeclaration":7124,"src":"8480:5:22","typeDescriptions":{"typeIdentifier":"t_struct$_Match_$7124_storage_ptr","typeString":"struct MasterContract.Match"}},"id":7637,"nodeType":"ArrayTypeName","src":"8480:7:22","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Match_$7124_storage_$dyn_storage_ptr","typeString":"struct MasterContract.Match[]"}}},"id":7640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8476:17:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Match_$7124_memory_ptr_$dyn_memory_ptr","typeString":"struct MasterContract.Match memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"8445:48:22"},{"assignments":[7643],"declarations":[{"constant":false,"id":7643,"mutability":"mutable","name":"index","nameLocation":"8511:5:22","nodeType":"VariableDeclaration","scope":7680,"src":"8503:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7642,"name":"uint256","nodeType":"ElementaryTypeName","src":"8503:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7645,"initialValue":{"hexValue":"30","id":7644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8519:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8503:17:22"},{"body":{"id":7676,"nodeType":"Block","src":"8583:170:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":7657,"name":"globalMatchesArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7140,"src":"8601:18:22","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Match_$7124_storage_$dyn_storage","typeString":"struct MasterContract.Match storage ref[] storage ref"}},"id":7659,"indexExpression":{"id":7658,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7647,"src":"8620:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8601:21:22","typeDescriptions":{"typeIdentifier":"t_struct$_Match_$7124_storage","typeString":"struct MasterContract.Match storage ref"}},"id":7660,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8623:6:22","memberName":"winner","nodeType":"MemberAccess","referencedDeclaration":7117,"src":"8601:28:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7661,"name":"winner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7586,"src":"8633:6:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8601:38:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7675,"nodeType":"IfStatement","src":"8597:146:22","trueBody":{"id":7674,"nodeType":"Block","src":"8641:102:22","statements":[{"expression":{"id":7669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7663,"name":"playerMatches","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7634,"src":"8659:13:22","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Match_$7124_memory_ptr_$dyn_memory_ptr","typeString":"struct MasterContract.Match memory[] memory"}},"id":7665,"indexExpression":{"id":7664,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7643,"src":"8673:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8659:20:22","typeDescriptions":{"typeIdentifier":"t_struct$_Match_$7124_memory_ptr","typeString":"struct MasterContract.Match memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":7666,"name":"globalMatchesArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7140,"src":"8682:18:22","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Match_$7124_storage_$dyn_storage","typeString":"struct MasterContract.Match storage ref[] storage ref"}},"id":7668,"indexExpression":{"id":7667,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7647,"src":"8701:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8682:21:22","typeDescriptions":{"typeIdentifier":"t_struct$_Match_$7124_storage","typeString":"struct MasterContract.Match storage ref"}},"src":"8659:44:22","typeDescriptions":{"typeIdentifier":"t_struct$_Match_$7124_memory_ptr","typeString":"struct MasterContract.Match memory"}},"id":7670,"nodeType":"ExpressionStatement","src":"8659:44:22"},{"expression":{"id":7672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8721:7:22","subExpression":{"id":7671,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7643,"src":"8721:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7673,"nodeType":"ExpressionStatement","src":"8721:7:22"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7650,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7647,"src":"8547:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":7651,"name":"globalMatchesArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7140,"src":"8551:18:22","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Match_$7124_storage_$dyn_storage","typeString":"struct MasterContract.Match storage ref[] storage ref"}},"id":7652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8570:6:22","memberName":"length","nodeType":"MemberAccess","src":"8551:25:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8547:29:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7677,"initializationExpression":{"assignments":[7647],"declarations":[{"constant":false,"id":7647,"mutability":"mutable","name":"i","nameLocation":"8540:1:22","nodeType":"VariableDeclaration","scope":7677,"src":"8535:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7646,"name":"uint","nodeType":"ElementaryTypeName","src":"8535:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7649,"initialValue":{"hexValue":"30","id":7648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8544:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8535:10:22"},"loopExpression":{"expression":{"id":7655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8578:3:22","subExpression":{"id":7654,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7647,"src":"8578:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7656,"nodeType":"ExpressionStatement","src":"8578:3:22"},"nodeType":"ForStatement","src":"8530:223:22"},{"expression":{"id":7678,"name":"playerMatches","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7634,"src":"8769:13:22","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Match_$7124_memory_ptr_$dyn_memory_ptr","typeString":"struct MasterContract.Match memory[] memory"}},"functionReturnParameters":7592,"id":7679,"nodeType":"Return","src":"8762:20:22"}]},"documentation":{"id":7584,"nodeType":"StructuredDocumentation","src":"7896:154:22","text":" @dev Function to get all matches won by a player\n @param winner: winner address\n @return array of matches won by the player"},"functionSelector":"0c954fd7","id":7681,"implemented":true,"kind":"function","modifiers":[],"name":"getMatchsByWinner","nameLocation":"8065:17:22","nodeType":"FunctionDefinition","parameters":{"id":7587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7586,"mutability":"mutable","name":"winner","nameLocation":"8100:6:22","nodeType":"VariableDeclaration","scope":7681,"src":"8092:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7585,"name":"address","nodeType":"ElementaryTypeName","src":"8092:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8082:30:22"},"returnParameters":{"id":7592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7591,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7681,"src":"8134:14:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Match_$7124_memory_ptr_$dyn_memory_ptr","typeString":"struct MasterContract.Match[]"},"typeName":{"baseType":{"id":7589,"nodeType":"UserDefinedTypeName","pathNode":{"id":7588,"name":"Match","nameLocations":["8134:5:22"],"nodeType":"IdentifierPath","referencedDeclaration":7124,"src":"8134:5:22"},"referencedDeclaration":7124,"src":"8134:5:22","typeDescriptions":{"typeIdentifier":"t_struct$_Match_$7124_storage_ptr","typeString":"struct MasterContract.Match"}},"id":7590,"nodeType":"ArrayTypeName","src":"8134:7:22","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Match_$7124_storage_$dyn_storage_ptr","typeString":"struct MasterContract.Match[]"}},"visibility":"internal"}],"src":"8133:16:22"},"scope":7962,"src":"8056:733:22","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":7719,"nodeType":"Block","src":"9012:235:22","statements":[{"body":{"id":7713,"nodeType":"Block","src":"9075:131:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":7706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":7701,"name":"globalMatchesArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7140,"src":"9093:18:22","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Match_$7124_storage_$dyn_storage","typeString":"struct MasterContract.Match storage ref[] storage ref"}},"id":7703,"indexExpression":{"id":7702,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7691,"src":"9112:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9093:21:22","typeDescriptions":{"typeIdentifier":"t_struct$_Match_$7124_storage","typeString":"struct MasterContract.Match storage ref"}},"id":7704,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9115:7:22","memberName":"matchId","nodeType":"MemberAccess","referencedDeclaration":7123,"src":"9093:29:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7705,"name":"matchId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7684,"src":"9126:7:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"9093:40:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7712,"nodeType":"IfStatement","src":"9089:107:22","trueBody":{"id":7711,"nodeType":"Block","src":"9135:61:22","statements":[{"expression":{"baseExpression":{"id":7707,"name":"globalMatchesArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7140,"src":"9160:18:22","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Match_$7124_storage_$dyn_storage","typeString":"struct MasterContract.Match storage ref[] storage ref"}},"id":7709,"indexExpression":{"id":7708,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7691,"src":"9179:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9160:21:22","typeDescriptions":{"typeIdentifier":"t_struct$_Match_$7124_storage","typeString":"struct MasterContract.Match storage ref"}},"functionReturnParameters":7689,"id":7710,"nodeType":"Return","src":"9153:28:22"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7694,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7691,"src":"9039:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":7695,"name":"globalMatchesArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7140,"src":"9043:18:22","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Match_$7124_storage_$dyn_storage","typeString":"struct MasterContract.Match storage ref[] storage ref"}},"id":7696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9062:6:22","memberName":"length","nodeType":"MemberAccess","src":"9043:25:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9039:29:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7714,"initializationExpression":{"assignments":[7691],"declarations":[{"constant":false,"id":7691,"mutability":"mutable","name":"i","nameLocation":"9032:1:22","nodeType":"VariableDeclaration","scope":7714,"src":"9027:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7690,"name":"uint","nodeType":"ElementaryTypeName","src":"9027:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7693,"initialValue":{"hexValue":"30","id":7692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9036:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9027:10:22"},"loopExpression":{"expression":{"id":7699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9070:3:22","subExpression":{"id":7698,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7691,"src":"9070:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7700,"nodeType":"ExpressionStatement","src":"9070:3:22"},"nodeType":"ForStatement","src":"9022:184:22"},{"expression":{"arguments":[{"hexValue":"4d61746368206e6f7420666f756e64","id":7716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9222:17:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_623b141a8c668802eee97798d04dd23a05d99e520a3bb8abbffe39a955154d9f","typeString":"literal_string \"Match not found\""},"value":"Match not found"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_623b141a8c668802eee97798d04dd23a05d99e520a3bb8abbffe39a955154d9f","typeString":"literal_string \"Match not found\""}],"id":7715,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9215:6:22","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":7717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9215:25:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7718,"nodeType":"ExpressionStatement","src":"9215:25:22"}]},"documentation":{"id":7682,"nodeType":"StructuredDocumentation","src":"8795:118:22","text":" @dev Function to get match by match id\n @param matchId: match id\n @return match details"},"functionSelector":"80192760","id":7720,"implemented":true,"kind":"function","modifiers":[],"name":"getMatchsByMatchId","nameLocation":"8928:18:22","nodeType":"FunctionDefinition","parameters":{"id":7685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7684,"mutability":"mutable","name":"matchId","nameLocation":"8963:7:22","nodeType":"VariableDeclaration","scope":7720,"src":"8956:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":7683,"name":"uint16","nodeType":"ElementaryTypeName","src":"8956:6:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"8946:30:22"},"returnParameters":{"id":7689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7688,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7720,"src":"8998:12:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Match_$7124_memory_ptr","typeString":"struct MasterContract.Match"},"typeName":{"id":7687,"nodeType":"UserDefinedTypeName","pathNode":{"id":7686,"name":"Match","nameLocations":["8998:5:22"],"nodeType":"IdentifierPath","referencedDeclaration":7124,"src":"8998:5:22"},"referencedDeclaration":7124,"src":"8998:5:22","typeDescriptions":{"typeIdentifier":"t_struct$_Match_$7124_storage_ptr","typeString":"struct MasterContract.Match"}},"visibility":"internal"}],"src":"8997:14:22"},"scope":7962,"src":"8919:328:22","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":7747,"nodeType":"Block","src":"9486:176:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7728,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7723,"src":"9500:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"3130","id":7729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9511:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"9500:13:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7734,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7723,"src":"9558:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3230","id":7735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9568:2:22","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"src":"9558:12:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7744,"nodeType":"Block","src":"9622:34:22","statements":[{"expression":{"hexValue":"3130","id":7742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9643:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"functionReturnParameters":7727,"id":7743,"nodeType":"Return","src":"9636:9:22"}]},"id":7745,"nodeType":"IfStatement","src":"9554:102:22","trueBody":{"id":7741,"nodeType":"Block","src":"9572:44:22","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7737,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7723,"src":"9593:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"3130","id":7738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9603:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"9593:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7727,"id":7740,"nodeType":"Return","src":"9586:19:22"}]}},"id":7746,"nodeType":"IfStatement","src":"9496:160:22","trueBody":{"id":7733,"nodeType":"Block","src":"9515:33:22","statements":[{"expression":{"hexValue":"30","id":7731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9536:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":7727,"id":7732,"nodeType":"Return","src":"9529:8:22"}]}}]},"documentation":{"id":7721,"nodeType":"StructuredDocumentation","src":"9253:135:22","text":" @dev Function to calculate amount to burn\n @param balance: balance of the player\n @return amount to burn"},"id":7748,"implemented":true,"kind":"function","modifiers":[],"name":"calculateBurnAmount","nameLocation":"9403:19:22","nodeType":"FunctionDefinition","parameters":{"id":7724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7723,"mutability":"mutable","name":"balance","nameLocation":"9440:7:22","nodeType":"VariableDeclaration","scope":7748,"src":"9432:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7722,"name":"uint256","nodeType":"ElementaryTypeName","src":"9432:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9422:31:22"},"returnParameters":{"id":7727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7726,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7748,"src":"9477:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7725,"name":"uint256","nodeType":"ElementaryTypeName","src":"9477:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9476:9:22"},"scope":7962,"src":"9394:268:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7794,"nodeType":"Block","src":"10102:467:22","statements":[{"expression":{"arguments":[{"id":7764,"name":"winner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7756,"src":"10134:6:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7765,"name":"tournamentTokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7187,"src":"10142:18:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint16","typeString":"uint16"}],"expression":{"id":7761,"name":"tournamentNft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7107,"src":"10112:13:22","typeDescriptions":{"typeIdentifier":"t_contract$_TournamentNft_$8198","typeString":"contract TournamentNft"}},"id":7763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10126:7:22","memberName":"mintTnt","nodeType":"MemberAccess","referencedDeclaration":8161,"src":"10112:21:22","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) external"}},"id":7766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10112:49:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7767,"nodeType":"ExpressionStatement","src":"10112:49:22"},{"assignments":[7770],"declarations":[{"constant":false,"id":7770,"mutability":"mutable","name":"tempTournament","nameLocation":"10189:14:22","nodeType":"VariableDeclaration","scope":7794,"src":"10171:32:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Tournament_$7135_memory_ptr","typeString":"struct MasterContract.Tournament"},"typeName":{"id":7769,"nodeType":"UserDefinedTypeName","pathNode":{"id":7768,"name":"Tournament","nameLocations":["10171:10:22"],"nodeType":"IdentifierPath","referencedDeclaration":7135,"src":"10171:10:22"},"referencedDeclaration":7135,"src":"10171:10:22","typeDescriptions":{"typeIdentifier":"t_struct$_Tournament_$7135_storage_ptr","typeString":"struct MasterContract.Tournament"}},"visibility":"internal"}],"id":7777,"initialValue":{"arguments":[{"id":7772,"name":"endTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7751,"src":"10240:12:22","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":7773,"name":"matchIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7754,"src":"10266:8:22","typeDescriptions":{"typeIdentifier":"t_array$_t_uint16_$dyn_memory_ptr","typeString":"uint16[] memory"}},{"id":7774,"name":"tournamentTokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7187,"src":"10288:18:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":7775,"name":"winner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7756,"src":"10320:6:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_array$_t_uint16_$dyn_memory_ptr","typeString":"uint16[] memory"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7771,"name":"fillTournamentStruct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7824,"src":"10206:20:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint32_$_t_array$_t_uint16_$dyn_memory_ptr_$_t_uint16_$_t_address_$returns$_t_struct$_Tournament_$7135_memory_ptr_$","typeString":"function (uint32,uint16[] memory,uint16,address) pure returns (struct MasterContract.Tournament memory)"}},"id":7776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10206:130:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Tournament_$7135_memory_ptr","typeString":"struct MasterContract.Tournament memory"}},"nodeType":"VariableDeclarationStatement","src":"10171:165:22"},{"expression":{"arguments":[{"id":7781,"name":"tempTournament","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7770,"src":"10374:14:22","typeDescriptions":{"typeIdentifier":"t_struct$_Tournament_$7135_memory_ptr","typeString":"struct MasterContract.Tournament memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Tournament_$7135_memory_ptr","typeString":"struct MasterContract.Tournament memory"}],"expression":{"id":7778,"name":"globalTournamentsArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7145,"src":"10346:22:22","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Tournament_$7135_storage_$dyn_storage","typeString":"struct MasterContract.Tournament storage ref[] storage ref"}},"id":7780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10369:4:22","memberName":"push","nodeType":"MemberAccess","src":"10346:27:22","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Tournament_$7135_storage_$dyn_storage_ptr_$_t_struct$_Tournament_$7135_storage_$returns$__$attached_to$_t_array$_t_struct$_Tournament_$7135_storage_$dyn_storage_ptr_$","typeString":"function (struct MasterContract.Tournament storage ref[] storage pointer,struct MasterContract.Tournament storage ref)"}},"id":7782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10346:43:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7783,"nodeType":"ExpressionStatement","src":"10346:43:22"},{"eventCall":{"arguments":[{"id":7785,"name":"tournamentTokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7187,"src":"10436:18:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":7786,"name":"endTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7751,"src":"10468:12:22","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":7787,"name":"matchIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7754,"src":"10494:8:22","typeDescriptions":{"typeIdentifier":"t_array$_t_uint16_$dyn_memory_ptr","typeString":"uint16[] memory"}},{"id":7788,"name":"winner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7756,"src":"10516:6:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_array$_t_uint16_$dyn_memory_ptr","typeString":"uint16[] memory"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7784,"name":"TournamentReported","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7177,"src":"10404:18:22","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint16_$_t_uint32_$_t_array$_t_uint16_$dyn_memory_ptr_$_t_address_$returns$__$","typeString":"function (uint16,uint32,uint16[] memory,address)"}},"id":7789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10404:128:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7790,"nodeType":"EmitStatement","src":"10399:133:22"},{"expression":{"id":7792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10542:20:22","subExpression":{"id":7791,"name":"tournamentTokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7187,"src":"10542:18:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"id":7793,"nodeType":"ExpressionStatement","src":"10542:20:22"}]},"documentation":{"id":7749,"nodeType":"StructuredDocumentation","src":"9668:292:22","text":" @dev Function to report tournament\n @param endTimestamp: end timestamp of the tournament\n @param matchIds: array of match ids (match have to be already\n reported and this function called once all the matches are ended)\n @param winner: winner address"},"functionSelector":"65612077","id":7795,"implemented":true,"kind":"function","modifiers":[{"id":7759,"kind":"modifierInvocation","modifierName":{"id":7758,"name":"onlyOwner","nameLocations":["10092:9:22"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"10092:9:22"},"nodeType":"ModifierInvocation","src":"10092:9:22"}],"name":"reportTournament","nameLocation":"9975:16:22","nodeType":"FunctionDefinition","parameters":{"id":7757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7751,"mutability":"mutable","name":"endTimestamp","nameLocation":"10008:12:22","nodeType":"VariableDeclaration","scope":7795,"src":"10001:19:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7750,"name":"uint32","nodeType":"ElementaryTypeName","src":"10001:6:22","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":7754,"mutability":"mutable","name":"matchIds","nameLocation":"10046:8:22","nodeType":"VariableDeclaration","scope":7795,"src":"10030:24:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint16_$dyn_memory_ptr","typeString":"uint16[]"},"typeName":{"baseType":{"id":7752,"name":"uint16","nodeType":"ElementaryTypeName","src":"10030:6:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"id":7753,"nodeType":"ArrayTypeName","src":"10030:8:22","typeDescriptions":{"typeIdentifier":"t_array$_t_uint16_$dyn_storage_ptr","typeString":"uint16[]"}},"visibility":"internal"},{"constant":false,"id":7756,"mutability":"mutable","name":"winner","nameLocation":"10072:6:22","nodeType":"VariableDeclaration","scope":7795,"src":"10064:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7755,"name":"address","nodeType":"ElementaryTypeName","src":"10064:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9991:93:22"},"returnParameters":{"id":7760,"nodeType":"ParameterList","parameters":[],"src":"10102:0:22"},"scope":7962,"src":"9966:603:22","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7823,"nodeType":"Block","src":"11048:245:22","statements":[{"assignments":[7813],"declarations":[{"constant":false,"id":7813,"mutability":"mutable","name":"tempTournament","nameLocation":"11076:14:22","nodeType":"VariableDeclaration","scope":7823,"src":"11058:32:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Tournament_$7135_memory_ptr","typeString":"struct MasterContract.Tournament"},"typeName":{"id":7812,"nodeType":"UserDefinedTypeName","pathNode":{"id":7811,"name":"Tournament","nameLocations":["11058:10:22"],"nodeType":"IdentifierPath","referencedDeclaration":7135,"src":"11058:10:22"},"referencedDeclaration":7135,"src":"11058:10:22","typeDescriptions":{"typeIdentifier":"t_struct$_Tournament_$7135_storage_ptr","typeString":"struct MasterContract.Tournament"}},"visibility":"internal"}],"id":7820,"initialValue":{"arguments":[{"id":7815,"name":"endTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7798,"src":"11132:12:22","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":7816,"name":"matchIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7801,"src":"11168:8:22","typeDescriptions":{"typeIdentifier":"t_array$_t_uint16_$dyn_memory_ptr","typeString":"uint16[] memory"}},{"id":7817,"name":"tournamentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7803,"src":"11204:12:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":7818,"name":"winner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7805,"src":"11238:6:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_array$_t_uint16_$dyn_memory_ptr","typeString":"uint16[] memory"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7814,"name":"Tournament","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7135,"src":"11093:10:22","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Tournament_$7135_storage_ptr_$","typeString":"type(struct MasterContract.Tournament storage pointer)"}},"id":7819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["11118:12:22","11158:8:22","11190:12:22","11230:6:22"],"names":["endTimestamp","matchIds","tournamentId","winner"],"nodeType":"FunctionCall","src":"11093:162:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Tournament_$7135_memory_ptr","typeString":"struct MasterContract.Tournament memory"}},"nodeType":"VariableDeclarationStatement","src":"11058:197:22"},{"expression":{"id":7821,"name":"tempTournament","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7813,"src":"11272:14:22","typeDescriptions":{"typeIdentifier":"t_struct$_Tournament_$7135_memory_ptr","typeString":"struct MasterContract.Tournament memory"}},"functionReturnParameters":7810,"id":7822,"nodeType":"Return","src":"11265:21:22"}]},"documentation":{"id":7796,"nodeType":"StructuredDocumentation","src":"10575:273:22","text":" @dev Function to fill tournament struct\n @param endTimestamp: end timestamp of the tournament\n @param matchIds: array of match ids\n @param winner: winner address\n @param tournamentId: tournament id\n @return Tournament struct"},"id":7824,"implemented":true,"kind":"function","modifiers":[],"name":"fillTournamentStruct","nameLocation":"10863:20:22","nodeType":"FunctionDefinition","parameters":{"id":7806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7798,"mutability":"mutable","name":"endTimestamp","nameLocation":"10900:12:22","nodeType":"VariableDeclaration","scope":7824,"src":"10893:19:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7797,"name":"uint32","nodeType":"ElementaryTypeName","src":"10893:6:22","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":7801,"mutability":"mutable","name":"matchIds","nameLocation":"10938:8:22","nodeType":"VariableDeclaration","scope":7824,"src":"10922:24:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint16_$dyn_memory_ptr","typeString":"uint16[]"},"typeName":{"baseType":{"id":7799,"name":"uint16","nodeType":"ElementaryTypeName","src":"10922:6:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"id":7800,"nodeType":"ArrayTypeName","src":"10922:8:22","typeDescriptions":{"typeIdentifier":"t_array$_t_uint16_$dyn_storage_ptr","typeString":"uint16[]"}},"visibility":"internal"},{"constant":false,"id":7803,"mutability":"mutable","name":"tournamentId","nameLocation":"10963:12:22","nodeType":"VariableDeclaration","scope":7824,"src":"10956:19:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":7802,"name":"uint16","nodeType":"ElementaryTypeName","src":"10956:6:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":7805,"mutability":"mutable","name":"winner","nameLocation":"10993:6:22","nodeType":"VariableDeclaration","scope":7824,"src":"10985:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7804,"name":"address","nodeType":"ElementaryTypeName","src":"10985:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10883:122:22"},"returnParameters":{"id":7810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7809,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7824,"src":"11029:17:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Tournament_$7135_memory_ptr","typeString":"struct MasterContract.Tournament"},"typeName":{"id":7808,"nodeType":"UserDefinedTypeName","pathNode":{"id":7807,"name":"Tournament","nameLocations":["11029:10:22"],"nodeType":"IdentifierPath","referencedDeclaration":7135,"src":"11029:10:22"},"referencedDeclaration":7135,"src":"11029:10:22","typeDescriptions":{"typeIdentifier":"t_struct$_Tournament_$7135_storage_ptr","typeString":"struct MasterContract.Tournament"}},"visibility":"internal"}],"src":"11028:19:22"},"scope":7962,"src":"10854:439:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7862,"nodeType":"Block","src":"11541:262:22","statements":[{"body":{"id":7856,"nodeType":"Block","src":"11608:149:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":7849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":7844,"name":"globalTournamentsArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7145,"src":"11626:22:22","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Tournament_$7135_storage_$dyn_storage","typeString":"struct MasterContract.Tournament storage ref[] storage ref"}},"id":7846,"indexExpression":{"id":7845,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7834,"src":"11649:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11626:25:22","typeDescriptions":{"typeIdentifier":"t_struct$_Tournament_$7135_storage","typeString":"struct MasterContract.Tournament storage ref"}},"id":7847,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11652:12:22","memberName":"tournamentId","nodeType":"MemberAccess","referencedDeclaration":7132,"src":"11626:38:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7848,"name":"tournamentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7827,"src":"11668:12:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"11626:54:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7855,"nodeType":"IfStatement","src":"11622:125:22","trueBody":{"id":7854,"nodeType":"Block","src":"11682:65:22","statements":[{"expression":{"baseExpression":{"id":7850,"name":"globalTournamentsArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7145,"src":"11707:22:22","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Tournament_$7135_storage_$dyn_storage","typeString":"struct MasterContract.Tournament storage ref[] storage ref"}},"id":7852,"indexExpression":{"id":7851,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7834,"src":"11730:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11707:25:22","typeDescriptions":{"typeIdentifier":"t_struct$_Tournament_$7135_storage","typeString":"struct MasterContract.Tournament storage ref"}},"functionReturnParameters":7832,"id":7853,"nodeType":"Return","src":"11700:32:22"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7837,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7834,"src":"11568:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":7838,"name":"globalTournamentsArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7145,"src":"11572:22:22","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Tournament_$7135_storage_$dyn_storage","typeString":"struct MasterContract.Tournament storage ref[] storage ref"}},"id":7839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11595:6:22","memberName":"length","nodeType":"MemberAccess","src":"11572:29:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11568:33:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7857,"initializationExpression":{"assignments":[7834],"declarations":[{"constant":false,"id":7834,"mutability":"mutable","name":"i","nameLocation":"11561:1:22","nodeType":"VariableDeclaration","scope":7857,"src":"11556:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7833,"name":"uint","nodeType":"ElementaryTypeName","src":"11556:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7836,"initialValue":{"hexValue":"30","id":7835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11565:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11556:10:22"},"loopExpression":{"expression":{"id":7842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"11603:3:22","subExpression":{"id":7841,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7834,"src":"11603:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7843,"nodeType":"ExpressionStatement","src":"11603:3:22"},"nodeType":"ForStatement","src":"11551:206:22"},{"expression":{"arguments":[{"hexValue":"546f75726e616d656e74206e6f7420666f756e64","id":7859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11773:22:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_81004fe6ac4a02932b2eae4209edcfc6d4a21d20ea50616048d119ea0921c6dc","typeString":"literal_string \"Tournament not found\""},"value":"Tournament not found"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_81004fe6ac4a02932b2eae4209edcfc6d4a21d20ea50616048d119ea0921c6dc","typeString":"literal_string \"Tournament not found\""}],"id":7858,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"11766:6:22","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":7860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11766:30:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7861,"nodeType":"ExpressionStatement","src":"11766:30:22"}]},"documentation":{"id":7825,"nodeType":"StructuredDocumentation","src":"11299:134:22","text":" @dev Function to get tournament by id\n @param tournamentId: tournament id\n @return array of tournaments"},"functionSelector":"7a080fd1","id":7863,"implemented":true,"kind":"function","modifiers":[],"name":"getTournamentById","nameLocation":"11448:17:22","nodeType":"FunctionDefinition","parameters":{"id":7828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7827,"mutability":"mutable","name":"tournamentId","nameLocation":"11482:12:22","nodeType":"VariableDeclaration","scope":7863,"src":"11475:19:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":7826,"name":"uint16","nodeType":"ElementaryTypeName","src":"11475:6:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"11465:35:22"},"returnParameters":{"id":7832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7831,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7863,"src":"11522:17:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Tournament_$7135_memory_ptr","typeString":"struct MasterContract.Tournament"},"typeName":{"id":7830,"nodeType":"UserDefinedTypeName","pathNode":{"id":7829,"name":"Tournament","nameLocations":["11522:10:22"],"nodeType":"IdentifierPath","referencedDeclaration":7135,"src":"11522:10:22"},"referencedDeclaration":7135,"src":"11522:10:22","typeDescriptions":{"typeIdentifier":"t_struct$_Tournament_$7135_storage_ptr","typeString":"struct MasterContract.Tournament"}},"visibility":"internal"}],"src":"11521:19:22"},"scope":7962,"src":"11439:364:22","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":7960,"nodeType":"Block","src":"12051:685:22","statements":[{"assignments":[7874],"declarations":[{"constant":false,"id":7874,"mutability":"mutable","name":"size","nameLocation":"12069:4:22","nodeType":"VariableDeclaration","scope":7960,"src":"12061:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7873,"name":"uint256","nodeType":"ElementaryTypeName","src":"12061:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7876,"initialValue":{"hexValue":"30","id":7875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12076:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12061:16:22"},{"body":{"id":7899,"nodeType":"Block","src":"12144:111:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":7888,"name":"globalTournamentsArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7145,"src":"12162:22:22","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Tournament_$7135_storage_$dyn_storage","typeString":"struct MasterContract.Tournament storage ref[] storage ref"}},"id":7890,"indexExpression":{"id":7889,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7878,"src":"12185:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12162:25:22","typeDescriptions":{"typeIdentifier":"t_struct$_Tournament_$7135_storage","typeString":"struct MasterContract.Tournament storage ref"}},"id":7891,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12188:6:22","memberName":"winner","nodeType":"MemberAccess","referencedDeclaration":7134,"src":"12162:32:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7892,"name":"winner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7866,"src":"12198:6:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12162:42:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7898,"nodeType":"IfStatement","src":"12158:87:22","trueBody":{"id":7897,"nodeType":"Block","src":"12206:39:22","statements":[{"expression":{"id":7895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"12224:6:22","subExpression":{"id":7894,"name":"size","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7874,"src":"12224:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7896,"nodeType":"ExpressionStatement","src":"12224:6:22"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7881,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7878,"src":"12104:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":7882,"name":"globalTournamentsArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7145,"src":"12108:22:22","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Tournament_$7135_storage_$dyn_storage","typeString":"struct MasterContract.Tournament storage ref[] storage ref"}},"id":7883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12131:6:22","memberName":"length","nodeType":"MemberAccess","src":"12108:29:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12104:33:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7900,"initializationExpression":{"assignments":[7878],"declarations":[{"constant":false,"id":7878,"mutability":"mutable","name":"i","nameLocation":"12097:1:22","nodeType":"VariableDeclaration","scope":7900,"src":"12092:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7877,"name":"uint","nodeType":"ElementaryTypeName","src":"12092:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7880,"initialValue":{"hexValue":"30","id":7879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12101:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12092:10:22"},"loopExpression":{"expression":{"id":7886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"12139:3:22","subExpression":{"id":7885,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7878,"src":"12139:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7887,"nodeType":"ExpressionStatement","src":"12139:3:22"},"nodeType":"ForStatement","src":"12087:168:22"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7901,"name":"size","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7874,"src":"12268:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12276:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12268:9:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7909,"nodeType":"IfStatement","src":"12264:85:22","trueBody":{"id":7908,"nodeType":"Block","src":"12279:70:22","statements":[{"expression":{"arguments":[{"hexValue":"4e6f20746f75726e616d656e747320666f756e6420666f72207468652077696e6e6572","id":7905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12300:37:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_40d8d825bd46fc38ebdbe82ad5f003b63b0f8f48f5fa0d8fc9e28f84db6bac03","typeString":"literal_string \"No tournaments found for the winner\""},"value":"No tournaments found for the winner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_40d8d825bd46fc38ebdbe82ad5f003b63b0f8f48f5fa0d8fc9e28f84db6bac03","typeString":"literal_string \"No tournaments found for the winner\""}],"id":7904,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"12293:6:22","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":7906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12293:45:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7907,"nodeType":"ExpressionStatement","src":"12293:45:22"}]}},{"assignments":[7914],"declarations":[{"constant":false,"id":7914,"mutability":"mutable","name":"playerTournaments","nameLocation":"12378:17:22","nodeType":"VariableDeclaration","scope":7960,"src":"12358:37:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Tournament_$7135_memory_ptr_$dyn_memory_ptr","typeString":"struct MasterContract.Tournament[]"},"typeName":{"baseType":{"id":7912,"nodeType":"UserDefinedTypeName","pathNode":{"id":7911,"name":"Tournament","nameLocations":["12358:10:22"],"nodeType":"IdentifierPath","referencedDeclaration":7135,"src":"12358:10:22"},"referencedDeclaration":7135,"src":"12358:10:22","typeDescriptions":{"typeIdentifier":"t_struct$_Tournament_$7135_storage_ptr","typeString":"struct MasterContract.Tournament"}},"id":7913,"nodeType":"ArrayTypeName","src":"12358:12:22","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Tournament_$7135_storage_$dyn_storage_ptr","typeString":"struct MasterContract.Tournament[]"}},"visibility":"internal"}],"id":7921,"initialValue":{"arguments":[{"id":7919,"name":"size","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7874,"src":"12415:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7918,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"12398:16:22","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Tournament_$7135_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (struct MasterContract.Tournament memory[] memory)"},"typeName":{"baseType":{"id":7916,"nodeType":"UserDefinedTypeName","pathNode":{"id":7915,"name":"Tournament","nameLocations":["12402:10:22"],"nodeType":"IdentifierPath","referencedDeclaration":7135,"src":"12402:10:22"},"referencedDeclaration":7135,"src":"12402:10:22","typeDescriptions":{"typeIdentifier":"t_struct$_Tournament_$7135_storage_ptr","typeString":"struct MasterContract.Tournament"}},"id":7917,"nodeType":"ArrayTypeName","src":"12402:12:22","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Tournament_$7135_storage_$dyn_storage_ptr","typeString":"struct MasterContract.Tournament[]"}}},"id":7920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12398:22:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Tournament_$7135_memory_ptr_$dyn_memory_ptr","typeString":"struct MasterContract.Tournament memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"12358:62:22"},{"assignments":[7923],"declarations":[{"constant":false,"id":7923,"mutability":"mutable","name":"index","nameLocation":"12438:5:22","nodeType":"VariableDeclaration","scope":7960,"src":"12430:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7922,"name":"uint256","nodeType":"ElementaryTypeName","src":"12430:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7925,"initialValue":{"hexValue":"30","id":7924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12446:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12430:17:22"},{"body":{"id":7956,"nodeType":"Block","src":"12514:182:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":7937,"name":"globalTournamentsArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7145,"src":"12532:22:22","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Tournament_$7135_storage_$dyn_storage","typeString":"struct MasterContract.Tournament storage ref[] storage ref"}},"id":7939,"indexExpression":{"id":7938,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7927,"src":"12555:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12532:25:22","typeDescriptions":{"typeIdentifier":"t_struct$_Tournament_$7135_storage","typeString":"struct MasterContract.Tournament storage ref"}},"id":7940,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12558:6:22","memberName":"winner","nodeType":"MemberAccess","referencedDeclaration":7134,"src":"12532:32:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7941,"name":"winner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7866,"src":"12568:6:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12532:42:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7955,"nodeType":"IfStatement","src":"12528:158:22","trueBody":{"id":7954,"nodeType":"Block","src":"12576:110:22","statements":[{"expression":{"id":7949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7943,"name":"playerTournaments","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7914,"src":"12594:17:22","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Tournament_$7135_memory_ptr_$dyn_memory_ptr","typeString":"struct MasterContract.Tournament memory[] memory"}},"id":7945,"indexExpression":{"id":7944,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7923,"src":"12612:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12594:24:22","typeDescriptions":{"typeIdentifier":"t_struct$_Tournament_$7135_memory_ptr","typeString":"struct MasterContract.Tournament memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":7946,"name":"globalTournamentsArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7145,"src":"12621:22:22","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Tournament_$7135_storage_$dyn_storage","typeString":"struct MasterContract.Tournament storage ref[] storage ref"}},"id":7948,"indexExpression":{"id":7947,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7927,"src":"12644:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12621:25:22","typeDescriptions":{"typeIdentifier":"t_struct$_Tournament_$7135_storage","typeString":"struct MasterContract.Tournament storage ref"}},"src":"12594:52:22","typeDescriptions":{"typeIdentifier":"t_struct$_Tournament_$7135_memory_ptr","typeString":"struct MasterContract.Tournament memory"}},"id":7950,"nodeType":"ExpressionStatement","src":"12594:52:22"},{"expression":{"id":7952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"12664:7:22","subExpression":{"id":7951,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7923,"src":"12664:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7953,"nodeType":"ExpressionStatement","src":"12664:7:22"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7930,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7927,"src":"12474:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":7931,"name":"globalTournamentsArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7145,"src":"12478:22:22","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Tournament_$7135_storage_$dyn_storage","typeString":"struct MasterContract.Tournament storage ref[] storage ref"}},"id":7932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12501:6:22","memberName":"length","nodeType":"MemberAccess","src":"12478:29:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12474:33:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7957,"initializationExpression":{"assignments":[7927],"declarations":[{"constant":false,"id":7927,"mutability":"mutable","name":"i","nameLocation":"12467:1:22","nodeType":"VariableDeclaration","scope":7957,"src":"12462:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7926,"name":"uint","nodeType":"ElementaryTypeName","src":"12462:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7929,"initialValue":{"hexValue":"30","id":7928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12471:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12462:10:22"},"loopExpression":{"expression":{"id":7935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"12509:3:22","subExpression":{"id":7934,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7927,"src":"12509:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7936,"nodeType":"ExpressionStatement","src":"12509:3:22"},"nodeType":"ForStatement","src":"12457:239:22"},{"expression":{"id":7958,"name":"playerTournaments","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7914,"src":"12712:17:22","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Tournament_$7135_memory_ptr_$dyn_memory_ptr","typeString":"struct MasterContract.Tournament memory[] memory"}},"functionReturnParameters":7872,"id":7959,"nodeType":"Return","src":"12705:24:22"}]},"documentation":{"id":7864,"nodeType":"StructuredDocumentation","src":"11809:133:22","text":" @dev Function to get tournament by winner\n @param winner: winner address\n @return array of tournaments"},"functionSelector":"3b794245","id":7961,"implemented":true,"kind":"function","modifiers":[],"name":"getTournamentByWinner","nameLocation":"11957:21:22","nodeType":"FunctionDefinition","parameters":{"id":7867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7866,"mutability":"mutable","name":"winner","nameLocation":"11996:6:22","nodeType":"VariableDeclaration","scope":7961,"src":"11988:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7865,"name":"address","nodeType":"ElementaryTypeName","src":"11988:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11978:30:22"},"returnParameters":{"id":7872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7871,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7961,"src":"12030:19:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Tournament_$7135_memory_ptr_$dyn_memory_ptr","typeString":"struct MasterContract.Tournament[]"},"typeName":{"baseType":{"id":7869,"nodeType":"UserDefinedTypeName","pathNode":{"id":7868,"name":"Tournament","nameLocations":["12030:10:22"],"nodeType":"IdentifierPath","referencedDeclaration":7135,"src":"12030:10:22"},"referencedDeclaration":7135,"src":"12030:10:22","typeDescriptions":{"typeIdentifier":"t_struct$_Tournament_$7135_storage_ptr","typeString":"struct MasterContract.Tournament"}},"id":7870,"nodeType":"ArrayTypeName","src":"12030:12:22","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Tournament_$7135_storage_$dyn_storage_ptr","typeString":"struct MasterContract.Tournament[]"}},"visibility":"internal"}],"src":"12029:21:22"},"scope":7962,"src":"11948:788:22","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":7963,"src":"295:12443:22","usedErrors":[13,18],"usedEvents":[24,7165,7177,7184]}],"src":"33:12706:22"},"id":22},"contracts/nfts/GoatNft.sol":{"ast":{"absolutePath":"contracts/nfts/GoatNft.sol","exportedSymbols":{"Context":[2288],"ERC165":[3564],"ERC721":[1892],"ERC721URIStorage":[2153],"ERC721Utils":[2258],"GoatNft":[8112],"IERC165":[3576],"IERC4906":[175],"IERC721":[2009],"IERC721Errors":[269],"IERC721Metadata":[2181],"Ownable":[147],"Strings":[3540]},"id":8113,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7964,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:23"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"@openzeppelin/contracts/token/ERC721/ERC721.sol","id":7965,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8113,"sourceUnit":1893,"src":"58:57:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":7966,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8113,"sourceUnit":148,"src":"116:52:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","file":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","id":7967,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8113,"sourceUnit":2154,"src":"169:78:23","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":7969,"name":"ERC721","nameLocations":["347:6:23"],"nodeType":"IdentifierPath","referencedDeclaration":1892,"src":"347:6:23"},"id":7970,"nodeType":"InheritanceSpecifier","src":"347:6:23"},{"baseName":{"id":7971,"name":"ERC721URIStorage","nameLocations":["355:16:23"],"nodeType":"IdentifierPath","referencedDeclaration":2153,"src":"355:16:23"},"id":7972,"nodeType":"InheritanceSpecifier","src":"355:16:23"},{"baseName":{"id":7973,"name":"Ownable","nameLocations":["373:7:23"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"373:7:23"},"id":7974,"nodeType":"InheritanceSpecifier","src":"373:7:23"}],"canonicalName":"GoatNft","contractDependencies":[],"contractKind":"contract","documentation":{"id":7968,"nodeType":"StructuredDocumentation","src":"249:76:23","text":" @title GoatNft\n GoatNft - a contract for my non-fungible goats."},"fullyImplemented":true,"id":8112,"linearizedBaseContracts":[8112,147,2153,1892,269,2181,175,2009,3564,3576,2288],"name":"GoatNft","nameLocation":"336:7:23","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":7975,"nodeType":"StructuredDocumentation","src":"387:95:23","text":" @dev goat: address of the goat\n @dev goatTokenId: id of the goat token"},"functionSelector":"31d382a2","id":7977,"mutability":"mutable","name":"goat","nameLocation":"503:4:23","nodeType":"VariableDeclaration","scope":8112,"src":"488:19:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7976,"name":"address","nodeType":"ElementaryTypeName","src":"488:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"e4d9d122","id":7980,"mutability":"mutable","name":"goatTokenId","nameLocation":"528:11:23","nodeType":"VariableDeclaration","scope":8112,"src":"513:32:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7978,"name":"uint256","nodeType":"ElementaryTypeName","src":"513:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"323939","id":7979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"542:3:23","typeDescriptions":{"typeIdentifier":"t_rational_299_by_1","typeString":"int_const 299"},"value":"299"},"visibility":"public"},{"anonymous":false,"documentation":{"id":7981,"nodeType":"StructuredDocumentation","src":"552:165:23","text":" @dev Transfert event\n @param from: address of the sender\n @param to: address of the receiver\n @param amount: amount of the token"},"eventSelector":"af9ff3ada675379ca19fdd908e550417162f2a7370166e8257b25888e55926e7","id":7989,"name":"Transfert","nameLocation":"729:9:23","nodeType":"EventDefinition","parameters":{"id":7988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7983,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"755:4:23","nodeType":"VariableDeclaration","scope":7989,"src":"739:20:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7982,"name":"address","nodeType":"ElementaryTypeName","src":"739:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7985,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"777:2:23","nodeType":"VariableDeclaration","scope":7989,"src":"761:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7984,"name":"address","nodeType":"ElementaryTypeName","src":"761:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7987,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"789:6:23","nodeType":"VariableDeclaration","scope":7989,"src":"781:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7986,"name":"uint256","nodeType":"ElementaryTypeName","src":"781:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"738:58:23"},"src":"723:74:23"},{"body":{"id":8017,"nodeType":"Block","src":"949:226:23","statements":[{"expression":{"id":8004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8001,"name":"goat","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7977,"src":"959:4:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":8002,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"966:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"970:6:23","memberName":"sender","nodeType":"MemberAccess","src":"966:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"959:17:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8005,"nodeType":"ExpressionStatement","src":"959:17:23"},{"expression":{"arguments":[{"expression":{"id":8007,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"992:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"996:6:23","memberName":"sender","nodeType":"MemberAccess","src":"992:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8009,"name":"goatTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7980,"src":"1004:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8006,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1555,"src":"986:5:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":8010,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"986:30:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8011,"nodeType":"ExpressionStatement","src":"986:30:23"},{"expression":{"arguments":[{"id":8013,"name":"goatTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7980,"src":"1052:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"697066733a2f2f6261666b72656967796374716535666234353671636679646736706679367a64683632366569643466357a6e776636796a36726e6a6c7a627135612f476f61744e46542e6a736f6e","id":8014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1077:81:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_af2192173cabbc041d9672305fe50b4112e1659c0a63225ff91f5ceb63f79180","typeString":"literal_string \"ipfs://bafkreigyctqe5fb456qcfydg6pfy6zdh626eid4f5znwf6yj6rnjlzbq5a/GoatNFT.json\""},"value":"ipfs://bafkreigyctqe5fb456qcfydg6pfy6zdh626eid4f5znwf6yj6rnjlzbq5a/GoatNFT.json"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_af2192173cabbc041d9672305fe50b4112e1659c0a63225ff91f5ceb63f79180","typeString":"literal_string \"ipfs://bafkreigyctqe5fb456qcfydg6pfy6zdh626eid4f5znwf6yj6rnjlzbq5a/GoatNFT.json\""}],"id":8012,"name":"_setTokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2152,"src":"1026:12:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory)"}},"id":8015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1026:142:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8016,"nodeType":"ExpressionStatement","src":"1026:142:23"}]},"documentation":{"id":7990,"nodeType":"StructuredDocumentation","src":"803:78:23","text":" @dev Constructor to mint a goat token and set the token URI"},"id":8018,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"476f6174546f6b656e","id":7993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"908:11:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_f5860616b4f3b737a3fd435d974279ca5e6e67822666180f02b97cc47d28d8b4","typeString":"literal_string \"GoatToken\""},"value":"GoatToken"},{"hexValue":"474f4154","id":7994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"921:6:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_37c469dadd9df9fb454182ffced72eec76a99c56ccde61f27666b040e87df709","typeString":"literal_string \"GOAT\""},"value":"GOAT"}],"id":7995,"kind":"baseConstructorSpecifier","modifierName":{"id":7992,"name":"ERC721","nameLocations":["901:6:23"],"nodeType":"IdentifierPath","referencedDeclaration":1892,"src":"901:6:23"},"nodeType":"ModifierInvocation","src":"901:27:23"},{"arguments":[{"expression":{"id":7997,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"937:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"941:6:23","memberName":"sender","nodeType":"MemberAccess","src":"937:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":7999,"kind":"baseConstructorSpecifier","modifierName":{"id":7996,"name":"Ownable","nameLocations":["929:7:23"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"929:7:23"},"nodeType":"ModifierInvocation","src":"929:19:23"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":7991,"nodeType":"ParameterList","parameters":[],"src":"898:2:23"},"returnParameters":{"id":8000,"nodeType":"ParameterList","parameters":[],"src":"949:0:23"},"scope":8112,"src":"887:288:23","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8044,"nodeType":"Block","src":"1427:127:23","statements":[{"expression":{"arguments":[{"id":8029,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8021,"src":"1454:5:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8030,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8023,"src":"1461:3:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8031,"name":"goatTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7980,"src":"1466:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8028,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[1270,1300],"referencedDeclaration":1270,"src":"1437:16:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":8032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1437:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8033,"nodeType":"ExpressionStatement","src":"1437:41:23"},{"eventCall":{"arguments":[{"id":8035,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8021,"src":"1503:5:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8036,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8023,"src":"1510:3:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8037,"name":"goatTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7980,"src":"1515:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8034,"name":"Transfert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7989,"src":"1493:9:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":8038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1493:34:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8039,"nodeType":"EmitStatement","src":"1488:39:23"},{"expression":{"id":8042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8040,"name":"goat","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7977,"src":"1537:4:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8041,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8023,"src":"1544:3:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1537:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8043,"nodeType":"ExpressionStatement","src":"1537:10:23"}]},"documentation":{"id":8019,"nodeType":"StructuredDocumentation","src":"1181:174:23","text":" @dev transferNft function to transfer the goat token to a new address\n @param _from: address of the sender\n @param _to: address of the receiver"},"functionSelector":"065db7a5","id":8045,"implemented":true,"kind":"function","modifiers":[{"id":8026,"kind":"modifierInvocation","modifierName":{"id":8025,"name":"onlyOwner","nameLocations":["1417:9:23"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"1417:9:23"},"nodeType":"ModifierInvocation","src":"1417:9:23"}],"name":"transferNft","nameLocation":"1370:11:23","nodeType":"FunctionDefinition","parameters":{"id":8024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8021,"mutability":"mutable","name":"_from","nameLocation":"1390:5:23","nodeType":"VariableDeclaration","scope":8045,"src":"1382:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8020,"name":"address","nodeType":"ElementaryTypeName","src":"1382:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8023,"mutability":"mutable","name":"_to","nameLocation":"1405:3:23","nodeType":"VariableDeclaration","scope":8045,"src":"1397:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8022,"name":"address","nodeType":"ElementaryTypeName","src":"1397:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1381:28:23"},"returnParameters":{"id":8027,"nodeType":"ParameterList","parameters":[],"src":"1427:0:23"},"scope":8112,"src":"1361:193:23","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8053,"nodeType":"Block","src":"1735:28:23","statements":[{"expression":{"id":8051,"name":"goat","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7977,"src":"1752:4:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":8050,"id":8052,"nodeType":"Return","src":"1745:11:23"}]},"documentation":{"id":8046,"nodeType":"StructuredDocumentation","src":"1560:113:23","text":" @dev getGoatAddress function to get the address of the goat\n @return address of the goat"},"functionSelector":"f8cacb4c","id":8054,"implemented":true,"kind":"function","modifiers":[],"name":"getGoatAddress","nameLocation":"1688:14:23","nodeType":"FunctionDefinition","parameters":{"id":8047,"nodeType":"ParameterList","parameters":[],"src":"1702:2:23"},"returnParameters":{"id":8050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8049,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8054,"src":"1726:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8048,"name":"address","nodeType":"ElementaryTypeName","src":"1726:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1725:9:23"},"scope":8112,"src":"1679:84:23","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[1399],"body":{"id":8076,"nodeType":"Block","src":"2051:113:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8065,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8059,"src":"2065:7:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":8066,"name":"Ownable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":147,"src":"2076:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Ownable_$147_$","typeString":"type(contract Ownable)"}},"id":8067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2084:5:23","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":67,"src":"2076:13:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":8068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2076:15:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2065:26:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8075,"nodeType":"IfStatement","src":"2061:97:23","trueBody":{"id":8074,"nodeType":"Block","src":"2093:65:23","statements":[{"expression":{"arguments":[{"hexValue":"4f6e6c792061646d696e2063616e207472616e7366657220746f6b656e73","id":8071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2114:32:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_343baf082709e93d6ec72c89c1f25cf13509cddee60cd243e06b5ef8eb5199ff","typeString":"literal_string \"Only admin can transfer tokens\""},"value":"Only admin can transfer tokens"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_343baf082709e93d6ec72c89c1f25cf13509cddee60cd243e06b5ef8eb5199ff","typeString":"literal_string \"Only admin can transfer tokens\""}],"id":8070,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"2107:6:23","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":8072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2107:40:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8073,"nodeType":"ExpressionStatement","src":"2107:40:23"}]}}]},"documentation":{"id":8055,"nodeType":"StructuredDocumentation","src":"1769:140:23","text":" @dev override _checkAuthorized function to check if the sender is the owner\n @param spender: address of the spender"},"id":8077,"implemented":true,"kind":"function","modifiers":[],"name":"_checkAuthorized","nameLocation":"1924:16:23","nodeType":"FunctionDefinition","overrides":{"id":8063,"nodeType":"OverrideSpecifier","overrides":[],"src":"2042:8:23"},"parameters":{"id":8062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8057,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8077,"src":"1950:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8056,"name":"address","nodeType":"ElementaryTypeName","src":"1950:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8059,"mutability":"mutable","name":"spender","nameLocation":"1985:7:23","nodeType":"VariableDeclaration","scope":8077,"src":"1977:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8058,"name":"address","nodeType":"ElementaryTypeName","src":"1977:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8061,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8077,"src":"2002:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8060,"name":"uint256","nodeType":"ElementaryTypeName","src":"2002:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1940:87:23"},"returnParameters":{"id":8064,"nodeType":"ParameterList","parameters":[],"src":"2051:0:23"},"scope":8112,"src":"1915:249:23","stateMutability":"view","virtual":false,"visibility":"internal"},{"baseFunctions":[1036,2076],"body":{"id":8093,"nodeType":"Block","src":"2442:60:23","statements":[{"expression":{"arguments":[{"id":8090,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8080,"src":"2483:11:23","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":8088,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2459:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_GoatNft_$8112_$","typeString":"type(contract super GoatNft)"}},"id":8089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2465:17:23","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":2076,"src":"2459:23:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":8091,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2459:36:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":8087,"id":8092,"nodeType":"Return","src":"2452:43:23"}]},"documentation":{"id":8078,"nodeType":"StructuredDocumentation","src":"2170:143:23","text":" @dev override supportsInterface and tokenURI functions\n @param interfaceId: id of the interface\n @return boolean"},"functionSelector":"01ffc9a7","id":8094,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"2328:17:23","nodeType":"FunctionDefinition","overrides":{"id":8084,"nodeType":"OverrideSpecifier","overrides":[{"id":8082,"name":"ERC721","nameLocations":["2401:6:23"],"nodeType":"IdentifierPath","referencedDeclaration":1892,"src":"2401:6:23"},{"id":8083,"name":"ERC721URIStorage","nameLocations":["2409:16:23"],"nodeType":"IdentifierPath","referencedDeclaration":2153,"src":"2409:16:23"}],"src":"2392:34:23"},"parameters":{"id":8081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8080,"mutability":"mutable","name":"interfaceId","nameLocation":"2362:11:23","nodeType":"VariableDeclaration","scope":8094,"src":"2355:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":8079,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2355:6:23","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2345:34:23"},"returnParameters":{"id":8087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8086,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8094,"src":"2436:4:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8085,"name":"bool","nodeType":"ElementaryTypeName","src":"2436:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2435:6:23"},"scope":8112,"src":"2319:183:23","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[1131,2133],"body":{"id":8110,"nodeType":"Block","src":"2745:47:23","statements":[{"expression":{"arguments":[{"id":8107,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8097,"src":"2777:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8105,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2762:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_GoatNft_$8112_$","typeString":"type(contract super GoatNft)"}},"id":8106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2768:8:23","memberName":"tokenURI","nodeType":"MemberAccess","referencedDeclaration":2133,"src":"2762:14:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) view returns (string memory)"}},"id":8108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2762:23:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":8104,"id":8109,"nodeType":"Return","src":"2755:30:23"}]},"documentation":{"id":8095,"nodeType":"StructuredDocumentation","src":"2508:111:23","text":" @dev override tokenURI function\n @param tokenId: id of the token\n @return string"},"functionSelector":"c87b56dd","id":8111,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"2634:8:23","nodeType":"FunctionDefinition","overrides":{"id":8101,"nodeType":"OverrideSpecifier","overrides":[{"id":8099,"name":"ERC721","nameLocations":["2695:6:23"],"nodeType":"IdentifierPath","referencedDeclaration":1892,"src":"2695:6:23"},{"id":8100,"name":"ERC721URIStorage","nameLocations":["2703:16:23"],"nodeType":"IdentifierPath","referencedDeclaration":2153,"src":"2703:16:23"}],"src":"2686:34:23"},"parameters":{"id":8098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8097,"mutability":"mutable","name":"tokenId","nameLocation":"2660:7:23","nodeType":"VariableDeclaration","scope":8111,"src":"2652:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8096,"name":"uint256","nodeType":"ElementaryTypeName","src":"2652:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2642:31:23"},"returnParameters":{"id":8104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8103,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8111,"src":"2730:13:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8102,"name":"string","nodeType":"ElementaryTypeName","src":"2730:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2729:15:23"},"scope":8112,"src":"2625:167:23","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":8113,"src":"327:2467:23","usedErrors":[13,18,227,232,241,246,251,258,263,268],"usedEvents":[24,167,174,1908,1917,1926,7989]}],"src":"32:2763:23"},"id":23},"contracts/nfts/TournamentNft.sol":{"ast":{"absolutePath":"contracts/nfts/TournamentNft.sol","exportedSymbols":{"Context":[2288],"ERC165":[3564],"ERC721":[1892],"ERC721Utils":[2258],"IERC165":[3576],"IERC721":[2009],"IERC721Errors":[269],"IERC721Metadata":[2181],"Ownable":[147],"Strings":[3540],"TournamentNft":[8198]},"id":8199,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8114,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:24"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"@openzeppelin/contracts/token/ERC721/ERC721.sol","id":8115,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8199,"sourceUnit":1893,"src":"58:57:24","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":8116,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8199,"sourceUnit":148,"src":"116:52:24","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":8118,"name":"ERC721","nameLocations":["298:6:24"],"nodeType":"IdentifierPath","referencedDeclaration":1892,"src":"298:6:24"},"id":8119,"nodeType":"InheritanceSpecifier","src":"298:6:24"},{"baseName":{"id":8120,"name":"Ownable","nameLocations":["306:7:24"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"306:7:24"},"id":8121,"nodeType":"InheritanceSpecifier","src":"306:7:24"}],"canonicalName":"TournamentNft","contractDependencies":[],"contractKind":"contract","documentation":{"id":8117,"nodeType":"StructuredDocumentation","src":"170:100:24","text":" @title TournamentNft\n TournamentNft - a contract for my non-fungible tournament tokens."},"fullyImplemented":true,"id":8198,"linearizedBaseContracts":[8198,147,1892,269,2181,2009,3564,3576,2288],"name":"TournamentNft","nameLocation":"281:13:24","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":8122,"nodeType":"StructuredDocumentation","src":"320:78:24","text":" @dev tntTracking: mapping of tournamentId to winner address"},"id":8126,"mutability":"mutable","name":"tntTracking","nameLocation":"432:11:24","nodeType":"VariableDeclaration","scope":8198,"src":"404:39:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":8125,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8123,"name":"uint256","nodeType":"ElementaryTypeName","src":"412:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"404:27:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8124,"name":"address","nodeType":"ElementaryTypeName","src":"423:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"internal"},{"body":{"id":8138,"nodeType":"Block","src":"585:2:24","statements":[]},"documentation":{"id":8127,"nodeType":"StructuredDocumentation","src":"450:62:24","text":" @dev Constructor to mint a tournament token"},"id":8139,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"546f75726e616d656e74546f6b656e","id":8130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"539:17:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_ce634be9e6515309c56596e17f30eb10416b068337a861702e07ed50f3377beb","typeString":"literal_string \"TournamentToken\""},"value":"TournamentToken"},{"hexValue":"544e54","id":8131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"558:5:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_2656f58b0a73a32f9b4ad1c8eec5812754603b0309487bb4d296a7758f796e1c","typeString":"literal_string \"TNT\""},"value":"TNT"}],"id":8132,"kind":"baseConstructorSpecifier","modifierName":{"id":8129,"name":"ERC721","nameLocations":["532:6:24"],"nodeType":"IdentifierPath","referencedDeclaration":1892,"src":"532:6:24"},"nodeType":"ModifierInvocation","src":"532:32:24"},{"arguments":[{"expression":{"id":8134,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"573:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"577:6:24","memberName":"sender","nodeType":"MemberAccess","src":"573:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":8136,"kind":"baseConstructorSpecifier","modifierName":{"id":8133,"name":"Ownable","nameLocations":["565:7:24"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"565:7:24"},"nodeType":"ModifierInvocation","src":"565:19:24"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":8128,"nodeType":"ParameterList","parameters":[],"src":"529:2:24"},"returnParameters":{"id":8137,"nodeType":"ParameterList","parameters":[],"src":"585:0:24"},"scope":8198,"src":"518:69:24","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8160,"nodeType":"Block","src":"854:88:24","statements":[{"expression":{"arguments":[{"id":8150,"name":"winner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8142,"src":"870:6:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8151,"name":"tournamentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8144,"src":"878:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8149,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1555,"src":"864:5:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":8152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"864:27:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8153,"nodeType":"ExpressionStatement","src":"864:27:24"},{"expression":{"id":8158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8154,"name":"tntTracking","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8126,"src":"901:11:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":8156,"indexExpression":{"id":8155,"name":"tournamentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8144,"src":"913:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"901:25:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8157,"name":"winner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8142,"src":"929:6:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"901:34:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8159,"nodeType":"ExpressionStatement","src":"901:34:24"}]},"documentation":{"id":8140,"nodeType":"StructuredDocumentation","src":"593:183:24","text":" @dev mintTnt function to mint a tournament token to a new address\n @param winner: address of the winner\n @param tournamentId: id of the tournament token"},"functionSelector":"4d348eb5","id":8161,"implemented":true,"kind":"function","modifiers":[{"id":8147,"kind":"modifierInvocation","modifierName":{"id":8146,"name":"onlyOwner","nameLocations":["844:9:24"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"844:9:24"},"nodeType":"ModifierInvocation","src":"844:9:24"}],"name":"mintTnt","nameLocation":"791:7:24","nodeType":"FunctionDefinition","parameters":{"id":8145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8142,"mutability":"mutable","name":"winner","nameLocation":"807:6:24","nodeType":"VariableDeclaration","scope":8161,"src":"799:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8141,"name":"address","nodeType":"ElementaryTypeName","src":"799:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8144,"mutability":"mutable","name":"tournamentId","nameLocation":"823:12:24","nodeType":"VariableDeclaration","scope":8161,"src":"815:20:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8143,"name":"uint256","nodeType":"ElementaryTypeName","src":"815:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"798:38:24"},"returnParameters":{"id":8148,"nodeType":"ParameterList","parameters":[],"src":"854:0:24"},"scope":8198,"src":"782:160:24","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1399],"body":{"id":8183,"nodeType":"Block","src":"1221:113:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8172,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8166,"src":"1235:7:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":8173,"name":"Ownable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":147,"src":"1246:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Ownable_$147_$","typeString":"type(contract Ownable)"}},"id":8174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1254:5:24","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":67,"src":"1246:13:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":8175,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1246:15:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1235:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8182,"nodeType":"IfStatement","src":"1231:97:24","trueBody":{"id":8181,"nodeType":"Block","src":"1263:65:24","statements":[{"expression":{"arguments":[{"hexValue":"4f6e6c792061646d696e2063616e207472616e7366657220746f6b656e73","id":8178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1284:32:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_343baf082709e93d6ec72c89c1f25cf13509cddee60cd243e06b5ef8eb5199ff","typeString":"literal_string \"Only admin can transfer tokens\""},"value":"Only admin can transfer tokens"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_343baf082709e93d6ec72c89c1f25cf13509cddee60cd243e06b5ef8eb5199ff","typeString":"literal_string \"Only admin can transfer tokens\""}],"id":8177,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"1277:6:24","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":8179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1277:40:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8180,"nodeType":"ExpressionStatement","src":"1277:40:24"}]}}]},"documentation":{"id":8162,"nodeType":"StructuredDocumentation","src":"948:131:24","text":" @dev _checkAuthorized function to check if the sender is the owner\n @param spender: address of the spender"},"id":8184,"implemented":true,"kind":"function","modifiers":[],"name":"_checkAuthorized","nameLocation":"1094:16:24","nodeType":"FunctionDefinition","overrides":{"id":8170,"nodeType":"OverrideSpecifier","overrides":[],"src":"1212:8:24"},"parameters":{"id":8169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8164,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8184,"src":"1120:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8163,"name":"address","nodeType":"ElementaryTypeName","src":"1120:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8166,"mutability":"mutable","name":"spender","nameLocation":"1155:7:24","nodeType":"VariableDeclaration","scope":8184,"src":"1147:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8165,"name":"address","nodeType":"ElementaryTypeName","src":"1147:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8168,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8184,"src":"1172:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8167,"name":"uint256","nodeType":"ElementaryTypeName","src":"1172:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1110:87:24"},"returnParameters":{"id":8171,"nodeType":"ParameterList","parameters":[],"src":"1221:0:24"},"scope":8198,"src":"1085:249:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8196,"nodeType":"Block","src":"1589:44:24","statements":[{"expression":{"baseExpression":{"id":8192,"name":"tntTracking","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8126,"src":"1606:11:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":8194,"indexExpression":{"id":8193,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8187,"src":"1618:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1606:20:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":8191,"id":8195,"nodeType":"Return","src":"1599:27:24"}]},"documentation":{"id":8185,"nodeType":"StructuredDocumentation","src":"1340:175:24","text":" @dev getTracking function to get the winner address of the tournament\n @param tokenId: id of the tournament token\n @return address of the winner"},"functionSelector":"ac785e39","id":8197,"implemented":true,"kind":"function","modifiers":[],"name":"getTracking","nameLocation":"1530:11:24","nodeType":"FunctionDefinition","parameters":{"id":8188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8187,"mutability":"mutable","name":"tokenId","nameLocation":"1550:7:24","nodeType":"VariableDeclaration","scope":8197,"src":"1542:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8186,"name":"uint256","nodeType":"ElementaryTypeName","src":"1542:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1541:17:24"},"returnParameters":{"id":8191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8190,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8197,"src":"1580:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8189,"name":"address","nodeType":"ElementaryTypeName","src":"1580:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1579:9:24"},"scope":8198,"src":"1521:112:24","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":8199,"src":"272:1363:24","usedErrors":[13,18,227,232,241,246,251,258,263,268],"usedEvents":[24,1908,1917,1926]}],"src":"32:1604:24"},"id":24},"contracts/tokens/PongToken.sol":{"ast":{"absolutePath":"contracts/tokens/PongToken.sol","exportedSymbols":{"Context":[2288],"ERC20":[831],"IERC20":[909],"IERC20Errors":[221],"IERC20Metadata":[935],"Ownable":[147],"PongToken":[8254]},"id":8255,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8200,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:25"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":8201,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8255,"sourceUnit":832,"src":"58:55:25","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":8202,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8255,"sourceUnit":148,"src":"114:52:25","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":8203,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8255,"sourceUnit":910,"src":"167:56:25","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":8205,"name":"ERC20","nameLocations":["305:5:25"],"nodeType":"IdentifierPath","referencedDeclaration":831,"src":"305:5:25"},"id":8206,"nodeType":"InheritanceSpecifier","src":"305:5:25"},{"baseName":{"id":8207,"name":"Ownable","nameLocations":["312:7:25"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"312:7:25"},"id":8208,"nodeType":"InheritanceSpecifier","src":"312:7:25"}],"canonicalName":"PongToken","contractDependencies":[],"contractKind":"contract","documentation":{"id":8204,"nodeType":"StructuredDocumentation","src":"225:56:25","text":" @title PongToken\n @dev ERC20 token contract"},"fullyImplemented":true,"id":8254,"linearizedBaseContracts":[8254,147,831,221,935,909,2288],"name":"PongToken","nameLocation":"292:9:25","nodeType":"ContractDefinition","nodes":[{"body":{"id":8220,"nodeType":"Block","src":"494:2:25","statements":[]},"documentation":{"id":8209,"nodeType":"StructuredDocumentation","src":"326:101:25","text":" @dev Constructor to mint initial supply\n name: PongToken\n symbol: PONG"},"id":8221,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"506f6e67546f6b656e","id":8212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"453:11:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_b550f6688cf0b3fe4d1ca652dabf1c422481e7c3a888d5c5fadb8a8698a6f004","typeString":"literal_string \"PongToken\""},"value":"PongToken"},{"hexValue":"504f4e47","id":8213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"466:6:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_4bef96f3c8e80456e62720c82be84a51069d1352d866ebdc054fa3f9278214fc","typeString":"literal_string \"PONG\""},"value":"PONG"}],"id":8214,"kind":"baseConstructorSpecifier","modifierName":{"id":8211,"name":"ERC20","nameLocations":["447:5:25"],"nodeType":"IdentifierPath","referencedDeclaration":831,"src":"447:5:25"},"nodeType":"ModifierInvocation","src":"447:26:25"},{"arguments":[{"expression":{"id":8216,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"482:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"486:6:25","memberName":"sender","nodeType":"MemberAccess","src":"482:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":8218,"kind":"baseConstructorSpecifier","modifierName":{"id":8215,"name":"Ownable","nameLocations":["474:7:25"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"474:7:25"},"nodeType":"ModifierInvocation","src":"474:19:25"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":8210,"nodeType":"ParameterList","parameters":[],"src":"444:2:25"},"returnParameters":{"id":8219,"nodeType":"ParameterList","parameters":[],"src":"494:0:25"},"scope":8254,"src":"433:63:25","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8236,"nodeType":"Block","src":"692:34:25","statements":[{"expression":{"arguments":[{"id":8232,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8224,"src":"708:2:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8233,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8226,"src":"712:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8231,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":671,"src":"702:5:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":8234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"702:17:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8235,"nodeType":"ExpressionStatement","src":"702:17:25"}]},"documentation":{"id":8222,"nodeType":"StructuredDocumentation","src":"502:125:25","text":" @dev Function to mint tokens\n @param to: address to mint tokens\n @param amount: amount to mint"},"functionSelector":"40c10f19","id":8237,"implemented":true,"kind":"function","modifiers":[{"id":8229,"kind":"modifierInvocation","modifierName":{"id":8228,"name":"onlyOwner","nameLocations":["682:9:25"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"682:9:25"},"nodeType":"ModifierInvocation","src":"682:9:25"}],"name":"mint","nameLocation":"642:4:25","nodeType":"FunctionDefinition","parameters":{"id":8227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8224,"mutability":"mutable","name":"to","nameLocation":"655:2:25","nodeType":"VariableDeclaration","scope":8237,"src":"647:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8223,"name":"address","nodeType":"ElementaryTypeName","src":"647:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8226,"mutability":"mutable","name":"amount","nameLocation":"667:6:25","nodeType":"VariableDeclaration","scope":8237,"src":"659:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8225,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"646:28:25"},"returnParameters":{"id":8230,"nodeType":"ParameterList","parameters":[],"src":"692:0:25"},"scope":8254,"src":"633:93:25","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8252,"nodeType":"Block","src":"926:36:25","statements":[{"expression":{"arguments":[{"id":8248,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8240,"src":"942:4:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8249,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8242,"src":"948:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8247,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":704,"src":"936:5:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":8250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"936:19:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8251,"nodeType":"ExpressionStatement","src":"936:19:25"}]},"documentation":{"id":8238,"nodeType":"StructuredDocumentation","src":"732:127:25","text":" @dev Function to burn tokens\n @param from: address to burn tokens\n @param amount: amount to burn"},"functionSelector":"9dc29fac","id":8253,"implemented":true,"kind":"function","modifiers":[{"id":8245,"kind":"modifierInvocation","modifierName":{"id":8244,"name":"onlyOwner","nameLocations":["916:9:25"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"916:9:25"},"nodeType":"ModifierInvocation","src":"916:9:25"}],"name":"burn","nameLocation":"874:4:25","nodeType":"FunctionDefinition","parameters":{"id":8243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8240,"mutability":"mutable","name":"from","nameLocation":"887:4:25","nodeType":"VariableDeclaration","scope":8253,"src":"879:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8239,"name":"address","nodeType":"ElementaryTypeName","src":"879:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8242,"mutability":"mutable","name":"amount","nameLocation":"901:6:25","nodeType":"VariableDeclaration","scope":8253,"src":"893:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8241,"name":"uint256","nodeType":"ElementaryTypeName","src":"893:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"878:30:25"},"returnParameters":{"id":8246,"nodeType":"ParameterList","parameters":[],"src":"926:0:25"},"scope":8254,"src":"865:97:25","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":8255,"src":"283:681:25","usedErrors":[13,18,191,196,201,210,215,220],"usedEvents":[24,843,852]}],"src":"32:933:25"},"id":25}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC4906.sol":{"IERC4906":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_fromTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_toTokenId","type":"uint256"}],"name":"BatchMetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"MetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Metadata Update Extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC4906.sol\":\"IERC4906\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x1b8691e244f6e11d987459993671db0af33e6a29f7805eac6a9925cc6b601957\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9e2a5efc2e14e98f5fe91bbab769199b4987a40dd3b96075b04957fda2ae80f\",\"dweb:/ipfs/QmbAjrSSVBiJ6MbgF7Jkr53m674iGMZ6haWbbRrWDZJraK\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ERC721":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x39ed367e54765186281efcfe83e47cf0ad62cc879f10e191360712507125f29a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c5ae6d85bd48cca8d6d2fcec8c63efd86f56f8a5832577a47e403ce0e65cb09\",\"dweb:/ipfs/QmUtcS8AbRSWhuc61puYet58os8FvSqm329ChoW8wwZXZk\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0x40399695922383778f9f540a620bec475a2f8e0f08d41f0005682842e28a9855\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://746d295e403931aeb9d6065fd5a0871f43ab5459814a60623611e4b6641a09fd\",\"dweb:/ipfs/QmWrgT8YJrQ9FfD1o3YYArwo57e7MGdpFKuM74qJ4qE34E\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x44f87e91783e88415bde66f1a63f6c7f0076f2d511548820407d5c95643ac56c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13a51bc2b23827744dcf5bad10c69e72528cf015a6fe48c93632cdb2c0eb1251\",\"dweb:/ipfs/QmZwPA47Yqgje1qtkdEFEja8ntTahMStYzKf5q3JRnaR7d\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"IERC721Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC-721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC-721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"ERC721URIStorage":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_fromTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_toTokenId","type":"uint256"}],"name":"BatchMetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"MetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC-721 token with storage based token URI management.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":\"ERC721URIStorage\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x1b8691e244f6e11d987459993671db0af33e6a29f7805eac6a9925cc6b601957\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9e2a5efc2e14e98f5fe91bbab769199b4987a40dd3b96075b04957fda2ae80f\",\"dweb:/ipfs/QmbAjrSSVBiJ6MbgF7Jkr53m674iGMZ6haWbbRrWDZJraK\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x39ed367e54765186281efcfe83e47cf0ad62cc879f10e191360712507125f29a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c5ae6d85bd48cca8d6d2fcec8c63efd86f56f8a5832577a47e403ce0e65cb09\",\"dweb:/ipfs/QmUtcS8AbRSWhuc61puYet58os8FvSqm329ChoW8wwZXZk\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0xe52813067c6d5838eeb34e1da8beb2514371a7d778266013b04ca3be1dda7100\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53fb552d625eb5f60ef9dce439c826bb780952cbbafc985db6e48ac6382a5585\",\"dweb:/ipfs/QmSEbLqEWN1SqsWekfqt6RWC4oEajFWtZ5j8i6gKaGdtKr\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0x40399695922383778f9f540a620bec475a2f8e0f08d41f0005682842e28a9855\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://746d295e403931aeb9d6065fd5a0871f43ab5459814a60623611e4b6641a09fd\",\"dweb:/ipfs/QmWrgT8YJrQ9FfD1o3YYArwo57e7MGdpFKuM74qJ4qE34E\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x44f87e91783e88415bde66f1a63f6c7f0076f2d511548820407d5c95643ac56c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13a51bc2b23827744dcf5bad10c69e72528cf015a6fe48c93632cdb2c0eb1251\",\"dweb:/ipfs/QmZwPA47Yqgje1qtkdEFEja8ntTahMStYzKf5q3JRnaR7d\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"IERC721Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"ERC721Utils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122094a564e6a87c47303b64da925a5efccb7f3eb052eeef7b82a5440c296b82d8bd64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP5 0xA5 PUSH5 0xE6A87C4730 EXTCODESIZE PUSH5 0xDA925A5EFC 0xCB PUSH32 0x3EB052EEEF7B82A5440C296B82D8BD64736F6C63430008140033000000000000 ","sourceMap":"431:1480:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122094a564e6a87c47303b64da925a5efccb7f3eb052eeef7b82a5440c296b82d8bd64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP5 0xA5 PUSH5 0xE6A87C4730 EXTCODESIZE PUSH5 0xDA925A5EFC 0xCB PUSH32 0x3EB052EEEF7B82A5440C296B82D8BD64736F6C63430008140033000000000000 ","sourceMap":"431:1480:13:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library that provide common ERC-721 utility functions. See https://eips.ethereum.org/EIPS/eip-721[ERC-721]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":\"ERC721Utils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0x40399695922383778f9f540a620bec475a2f8e0f08d41f0005682842e28a9855\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://746d295e403931aeb9d6065fd5a0871f43ab5459814a60623611e4b6641a09fd\",\"dweb:/ipfs/QmWrgT8YJrQ9FfD1o3YYArwo57e7MGdpFKuM74qJ4qE34E\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202672d2a23e458693f6ba1440f70db5954b011cca38f915e3138b6836c3d4ea7464736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 PUSH19 0xD2A23E458693F6BA1440F70DB5954B011CCA38 0xF9 ISZERO 0xE3 SGT DUP12 PUSH9 0x36C3D4EA7464736F6C PUSH4 0x43000814 STOP CALLER ","sourceMap":"657:1315:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202672d2a23e458693f6ba1440f70db5954b011cca38f915e3138b6836c3d4ea7464736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 PUSH19 0xD2A23E458693F6BA1440F70DB5954B011CCA38 0xF9 ISZERO 0xE3 SGT DUP12 PUSH9 0x36C3D4EA7464736F6C PUSH4 0x43000814 STOP CALLER ","sourceMap":"657:1315:15:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"},{"inputs":[],"name":"StringsInvalidAddressFormat","type":"error"},{"inputs":[],"name":"StringsInvalidChar","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220324c39d5297afb136187e0a02fa806c282a2d4d9d4ba345dc57f45522daa24fb64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ORIGIN 0x4C CODECOPY 0xD5 0x29 PUSH27 0xFB136187E0A02FA806C282A2D4D9D4BA345DC57F45522DAA24FB64 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"297:16541:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220324c39d5297afb136187e0a02fa806c282a2d4d9d4ba345dc57f45522daa24fb64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ORIGIN 0x4C CODECOPY 0xD5 0x29 PUSH27 0xFB136187E0A02FA806C282A2D4D9D4BA345DC57F45522DAA24FB64 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"297:16541:16:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidAddressFormat\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidChar\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}],\"StringsInvalidAddressFormat()\":[{\"details\":\"The string being parsed is not a properly formatted address.\"}],\"StringsInvalidChar()\":[{\"details\":\"The string being parsed contains characters that are not in scope of the given base.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x44f87e91783e88415bde66f1a63f6c7f0076f2d511548820407d5c95643ac56c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13a51bc2b23827744dcf5bad10c69e72528cf015a6fe48c93632cdb2c0eb1251\",\"dweb:/ipfs/QmZwPA47Yqgje1qtkdEFEja8ntTahMStYzKf5q3JRnaR7d\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122077b13a6b811363169a34dc3026c435f66e1a245ec08d364ff325e78b6f413bd064736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0xB13A6B811363169A34DC3026C435F66E1A245EC08D364FF3 0x25 0xE7 DUP12 PUSH16 0x413BD064736F6C634300081400330000 ","sourceMap":"281:28026:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122077b13a6b811363169a34dc3026c435f66e1a245ec08d364ff325e78b6f413bd064736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0xB13A6B811363169A34DC3026C435F66E1A245EC08D364FF3 0x25 0xE7 DUP12 PUSH16 0x413BD064736F6C634300081400330000 ","sourceMap":"281:28026:19:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220316339f60b3fd1858de7f836dab11b96a56ba64a0fc65a8a88172d93a655ae7464736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE PUSH4 0x39F60B3F 0xD1 DUP6 DUP14 0xE7 0xF8 CALLDATASIZE 0xDA 0xB1 SHL SWAP7 0xA5 PUSH12 0xA64A0FC65A8A88172D93A655 0xAE PUSH21 0x64736F6C6343000814003300000000000000000000 ","sourceMap":"769:34173:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220316339f60b3fd1858de7f836dab11b96a56ba64a0fc65a8a88172d93a655ae7464736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE PUSH4 0x39F60B3F 0xD1 DUP6 DUP14 0xE7 0xF8 CALLDATASIZE 0xDA 0xB1 SHL SWAP7 0xA5 PUSH12 0xA64A0FC65A8A88172D93A655 0xAE PUSH21 0x64736F6C6343000814003300000000000000000000 ","sourceMap":"769:34173:20:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220473cbf930ed596e4ec76a1dda41503ab8a3aef35c98db76f2bcec0ef4066bcb664736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE EXTCODECOPY 0xBF SWAP4 0xE 0xD5 SWAP7 0xE4 0xEC PUSH23 0xA1DDA41503AB8A3AEF35C98DB76F2BCEC0EF4066BCB664 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"258:2354:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220473cbf930ed596e4ec76a1dda41503ab8a3aef35c98db76f2bcec0ef4066bcb664736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE EXTCODECOPY 0xBF SWAP4 0xE 0xD5 SWAP7 0xE4 0xEC PUSH23 0xA1DDA41503AB8A3AEF35C98DB76F2BCEC0EF4066BCB664 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"258:2354:21:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"contracts/MasterContract.sol":{"MasterContract":{"abi":[{"inputs":[{"internalType":"address","name":"_goatNft","type":"address"},{"internalType":"address","name":"_pongToken","type":"address"},{"internalType":"address","name":"_tournamentNft","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"player1","type":"address"},{"indexed":true,"internalType":"address","name":"player2","type":"address"},{"indexed":true,"internalType":"address","name":"winner","type":"address"},{"indexed":false,"internalType":"uint8","name":"player1Score","type":"uint8"},{"indexed":false,"internalType":"uint8","name":"player2Score","type":"uint8"},{"indexed":false,"internalType":"uint16","name":"matchId","type":"uint16"}],"name":"MatchReported","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"name","type":"string"},{"indexed":false,"internalType":"address","name":"playerAddress","type":"address"}],"name":"PlayerAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint16","name":"tournamentId","type":"uint16"},{"indexed":false,"internalType":"uint32","name":"endTimestamp","type":"uint32"},{"indexed":false,"internalType":"uint16[]","name":"matchIds","type":"uint16[]"},{"indexed":true,"internalType":"address","name":"winner","type":"address"}],"name":"TournamentReported","type":"event"},{"inputs":[{"internalType":"string","name":"_name","type":"string"},{"internalType":"address","name":"_player","type":"address"}],"name":"addPlayer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"matchId","type":"uint16"}],"name":"getMatchsByMatchId","outputs":[{"components":[{"internalType":"address","name":"player1","type":"address"},{"internalType":"address","name":"player2","type":"address"},{"internalType":"address","name":"winner","type":"address"},{"internalType":"uint8","name":"player1Score","type":"uint8"},{"internalType":"uint8","name":"player2Score","type":"uint8"},{"internalType":"uint16","name":"matchId","type":"uint16"}],"internalType":"struct MasterContract.Match","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"player","type":"string"}],"name":"getMatchsByPlayer","outputs":[{"components":[{"internalType":"address","name":"player1","type":"address"},{"internalType":"address","name":"player2","type":"address"},{"internalType":"address","name":"winner","type":"address"},{"internalType":"uint8","name":"player1Score","type":"uint8"},{"internalType":"uint8","name":"player2Score","type":"uint8"},{"internalType":"uint16","name":"matchId","type":"uint16"}],"internalType":"struct MasterContract.Match[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"winner","type":"address"}],"name":"getMatchsByWinner","outputs":[{"components":[{"internalType":"address","name":"player1","type":"address"},{"internalType":"address","name":"player2","type":"address"},{"internalType":"address","name":"winner","type":"address"},{"internalType":"uint8","name":"player1Score","type":"uint8"},{"internalType":"uint8","name":"player2Score","type":"uint8"},{"internalType":"uint16","name":"matchId","type":"uint16"}],"internalType":"struct MasterContract.Match[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_name","type":"string"}],"name":"getPlayerAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint16","name":"tournamentId","type":"uint16"}],"name":"getTournamentById","outputs":[{"components":[{"internalType":"uint32","name":"endTimestamp","type":"uint32"},{"internalType":"uint16[]","name":"matchIds","type":"uint16[]"},{"internalType":"uint16","name":"tournamentId","type":"uint16"},{"internalType":"address","name":"winner","type":"address"}],"internalType":"struct MasterContract.Tournament","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"winner","type":"address"}],"name":"getTournamentByWinner","outputs":[{"components":[{"internalType":"uint32","name":"endTimestamp","type":"uint32"},{"internalType":"uint16[]","name":"matchIds","type":"uint16[]"},{"internalType":"uint16","name":"tournamentId","type":"uint16"},{"internalType":"address","name":"winner","type":"address"}],"internalType":"struct MasterContract.Tournament[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"globalMatchesArray","outputs":[{"internalType":"address","name":"player1","type":"address"},{"internalType":"address","name":"player2","type":"address"},{"internalType":"address","name":"winner","type":"address"},{"internalType":"uint8","name":"player1Score","type":"uint8"},{"internalType":"uint8","name":"player2Score","type":"uint8"},{"internalType":"uint16","name":"matchId","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"globalTournamentsArray","outputs":[{"internalType":"uint32","name":"endTimestamp","type":"uint32"},{"internalType":"uint16","name":"tournamentId","type":"uint16"},{"internalType":"address","name":"winner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"goatNft","outputs":[{"internalType":"contract GoatNft","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pongToken","outputs":[{"internalType":"contract PongToken","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"player1","type":"string"},{"internalType":"string","name":"player2","type":"string"},{"internalType":"uint16","name":"matchId","type":"uint16"},{"internalType":"uint8","name":"player1Score","type":"uint8"},{"internalType":"uint8","name":"player2Score","type":"uint8"},{"internalType":"address","name":"winner","type":"address"}],"name":"reportMatch","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint32","name":"endTimestamp","type":"uint32"},{"internalType":"uint16[]","name":"matchIds","type":"uint16[]"},{"internalType":"address","name":"winner","type":"address"}],"name":"reportTournament","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"tournamentNft","outputs":[{"internalType":"contract TournamentNft","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"tournamentTokenIds","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_7224":{"entryPoint":null,"id":7224,"parameterSlots":3,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":425,"id":146,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":704,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_addresst_address_fromMemory":{"entryPoint":727,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":819,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":836,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_address":{"entryPoint":658,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":626,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":621,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_address":{"entryPoint":678,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1863:26","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:26","statements":[{"nodeType":"YulAssignment","src":"57:19:26","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:26","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:26"},"nodeType":"YulFunctionCall","src":"67:9:26"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:26"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:26","type":""}],"src":"7:75:26"},{"body":{"nodeType":"YulBlock","src":"177:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:26"},"nodeType":"YulFunctionCall","src":"187:12:26"},"nodeType":"YulExpressionStatement","src":"187:12:26"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:26"},{"body":{"nodeType":"YulBlock","src":"300:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:26"},"nodeType":"YulFunctionCall","src":"310:12:26"},"nodeType":"YulExpressionStatement","src":"310:12:26"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:26"},{"body":{"nodeType":"YulBlock","src":"379:81:26","statements":[{"nodeType":"YulAssignment","src":"389:65:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:26"},"nodeType":"YulFunctionCall","src":"400:54:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:26"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:26","type":""}],"src":"334:126:26"},{"body":{"nodeType":"YulBlock","src":"511:51:26","statements":[{"nodeType":"YulAssignment","src":"521:35:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:26"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:26"},"nodeType":"YulFunctionCall","src":"532:24:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:26"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:26","type":""}],"src":"466:96:26"},{"body":{"nodeType":"YulBlock","src":"611:79:26","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:26"},"nodeType":"YulFunctionCall","src":"670:12:26"},"nodeType":"YulExpressionStatement","src":"670:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:26"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:26"},"nodeType":"YulFunctionCall","src":"641:24:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:26"},"nodeType":"YulFunctionCall","src":"631:35:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:26"},"nodeType":"YulFunctionCall","src":"624:43:26"},"nodeType":"YulIf","src":"621:63:26"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:26","type":""}],"src":"568:122:26"},{"body":{"nodeType":"YulBlock","src":"759:80:26","statements":[{"nodeType":"YulAssignment","src":"769:22:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"784:6:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"778:5:26"},"nodeType":"YulFunctionCall","src":"778:13:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"769:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"827:5:26"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"800:26:26"},"nodeType":"YulFunctionCall","src":"800:33:26"},"nodeType":"YulExpressionStatement","src":"800:33:26"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"737:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"745:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"753:5:26","type":""}],"src":"696:143:26"},{"body":{"nodeType":"YulBlock","src":"956:552:26","statements":[{"body":{"nodeType":"YulBlock","src":"1002:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1004:77:26"},"nodeType":"YulFunctionCall","src":"1004:79:26"},"nodeType":"YulExpressionStatement","src":"1004:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"977:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"986:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"973:3:26"},"nodeType":"YulFunctionCall","src":"973:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"998:2:26","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"969:3:26"},"nodeType":"YulFunctionCall","src":"969:32:26"},"nodeType":"YulIf","src":"966:119:26"},{"nodeType":"YulBlock","src":"1095:128:26","statements":[{"nodeType":"YulVariableDeclaration","src":"1110:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"1124:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1114:6:26","type":""}]},{"nodeType":"YulAssignment","src":"1139:74:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1185:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"1196:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1181:3:26"},"nodeType":"YulFunctionCall","src":"1181:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1205:7:26"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1149:31:26"},"nodeType":"YulFunctionCall","src":"1149:64:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1139:6:26"}]}]},{"nodeType":"YulBlock","src":"1233:129:26","statements":[{"nodeType":"YulVariableDeclaration","src":"1248:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"1262:2:26","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1252:6:26","type":""}]},{"nodeType":"YulAssignment","src":"1278:74:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1324:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"1335:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1320:3:26"},"nodeType":"YulFunctionCall","src":"1320:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1344:7:26"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1288:31:26"},"nodeType":"YulFunctionCall","src":"1288:64:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1278:6:26"}]}]},{"nodeType":"YulBlock","src":"1372:129:26","statements":[{"nodeType":"YulVariableDeclaration","src":"1387:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"1401:2:26","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1391:6:26","type":""}]},{"nodeType":"YulAssignment","src":"1417:74:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1463:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"1474:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1459:3:26"},"nodeType":"YulFunctionCall","src":"1459:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1483:7:26"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1427:31:26"},"nodeType":"YulFunctionCall","src":"1427:64:26"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1417:6:26"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"910:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"921:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"933:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"941:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"949:6:26","type":""}],"src":"845:663:26"},{"body":{"nodeType":"YulBlock","src":"1579:53:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1596:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1619:5:26"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1601:17:26"},"nodeType":"YulFunctionCall","src":"1601:24:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1589:6:26"},"nodeType":"YulFunctionCall","src":"1589:37:26"},"nodeType":"YulExpressionStatement","src":"1589:37:26"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1567:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1574:3:26","type":""}],"src":"1514:118:26"},{"body":{"nodeType":"YulBlock","src":"1736:124:26","statements":[{"nodeType":"YulAssignment","src":"1746:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1758:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"1769:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1754:3:26"},"nodeType":"YulFunctionCall","src":"1754:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1746:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1826:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1839:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"1850:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1835:3:26"},"nodeType":"YulFunctionCall","src":"1835:17:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"1782:43:26"},"nodeType":"YulFunctionCall","src":"1782:71:26"},"nodeType":"YulExpressionStatement","src":"1782:71:26"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1708:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1720:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1731:4:26","type":""}],"src":"1638:222:26"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":26,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b5060405162004040380380620040408339818101604052810190620000379190620002d7565b33600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000ad5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000a4919062000344565b60405180910390fd5b620000be81620001a960201b60201c565b5082600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600760006101000a81548161ffff021916908361ffff16021790555050505062000361565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200029f8262000272565b9050919050565b620002b18162000292565b8114620002bd57600080fd5b50565b600081519050620002d181620002a6565b92915050565b600080600060608486031215620002f357620002f26200026d565b5b60006200030386828701620002c0565b93505060206200031686828701620002c0565b92505060406200032986828701620002c0565b9150509250925092565b6200033e8162000292565b82525050565b60006020820190506200035b600083018462000333565b92915050565b613ccf80620003716000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c8063715018a6116100a25780638da5cb5b116100715780638da5cb5b146102f7578063bb5aa49514610315578063e542506014610345578063ec203f6b1461037a578063f2fde38b1461039657610116565b8063715018a61461026f5780637a080fd11461027957806380192760146102a95780638cecb84d146102d957610116565b806340f55f91116100e957806340f55f91146101b5578063592f7253146101d357806364518cdd146102055780636561207714610223578063661c37fd1461023f57610116565b80630c954fd71461011b578063149249da1461014b5780631750094a146101695780633b79424514610185575b600080fd5b610135600480360381019061013091906127dc565b6103b2565b604051610142919061297b565b60405180910390f35b610153610759565b60405161016091906129fc565b60405180910390f35b610183600480360381019061017e9190612bb5565b61077f565b005b61019f600480360381019061019a91906127dc565b611005565b6040516101ac9190612e6d565b60405180910390f35b6101bd61136c565b6040516101ca9190612e9e565b60405180910390f35b6101ed60048036038101906101e89190612eef565b611380565b6040516101fc93929190612f3a565b60405180910390f35b61020d6113f8565b60405161021a9190612f92565b60405180910390f35b61023d600480360381019061023891906130a1565b61141e565b005b61025960048036038101906102549190613110565b611667565b6040516102669190613159565b60405180910390f35b6102776116b7565b005b610293600480360381019061028e9190613174565b6116cb565b6040516102a09190613204565b60405180910390f35b6102c360048036038101906102be9190613174565b6118ca565b6040516102d091906132a1565b60405180910390f35b6102e1611b09565b6040516102ee91906132dd565b60405180910390f35b6102ff611b2f565b60405161030c9190613159565b60405180910390f35b61032f600480360381019061032a9190613110565b611b58565b60405161033c919061297b565b60405180910390f35b61035f600480360381019061035a9190612eef565b612017565b60405161037196959493929190613307565b60405180910390f35b610394600480360381019061038f9190613368565b6120eb565b005b6103b060048036038101906103ab91906127dc565b6122ca565b005b60606000805b60048054905081101561045f578373ffffffffffffffffffffffffffffffffffffffff16600482815481106103f0576103ef6133c4565b5b906000526020600020906003020160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361044c57818061044890613422565b9250505b808061045790613422565b9150506103b8565b50600081036104a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049a906134c7565b60405180910390fd5b60008167ffffffffffffffff8111156104bf576104be612a32565b5b6040519080825280602002602001820160405280156104f857816020015b6104e56125d9565b8152602001906001900390816104dd5790505b5090506000805b60048054905081101561074d578573ffffffffffffffffffffffffffffffffffffffff1660048281548110610537576105366133c4565b5b906000526020600020906003020160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361073a5760048181548110610598576105976133c4565b5b90600052602060002090600302016040518060c00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160149054906101000a900460ff1660ff1660ff1681526020016002820160159054906101000a900460ff1660ff1660ff1681526020016002820160169054906101000a900461ffff1661ffff1661ffff16815250508383815181106107205761071f6133c4565b5b6020026020010181905250818061073690613422565b9250505b808061074590613422565b9150506104ff565b50819350505050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610787612350565b600073ffffffffffffffffffffffffffffffffffffffff166107a887611667565b73ffffffffffffffffffffffffffffffffffffffff16036107fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107f590613533565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1661081f86611667565b73ffffffffffffffffffffffffffffffffffffffff1603610875576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086c9061359f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036108e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108db9061360b565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1982600a6040518363ffffffff1660e01b8152600401610942929190613666565b600060405180830381600087803b15801561095c57600080fd5b505af1158015610970573d6000803e3d6000fd5b50505050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231826040518263ffffffff1660e01b81526004016109cf9190613159565b602060405180830381865afa1580156109ec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1091906136a4565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f8cacb4c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610abb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610adf91906136e6565b6040518263ffffffff1660e01b8152600401610afb9190613159565b602060405180830381865afa158015610b18573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b3c91906136a4565b1015610c6257600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663065db7a5600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f8cacb4c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610bed573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c1191906136e6565b836040518363ffffffff1660e01b8152600401610c2f929190613713565b600060405180830381600087803b158015610c4957600080fd5b505af1158015610c5d573d6000803e3d6000fd5b505050505b60008173ffffffffffffffffffffffffffffffffffffffff16610c8488611667565b73ffffffffffffffffffffffffffffffffffffffff1603610cad57610ca886611667565b610cb7565b610cb687611667565b5b90506000610d5f600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231846040518263ffffffff1660e01b8152600401610d199190613159565b602060405180830381865afa158015610d36573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d5a91906136a4565b6123d7565b9050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639dc29fac83836040518363ffffffff1660e01b8152600401610dbe92919061374b565b600060405180830381600087803b158015610dd857600080fd5b505af1158015610dec573d6000803e3d6000fd5b505050506000610e0089898689898c612411565b9050600481908060018154018082558091505060019003906000526020600020906003020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160146101000a81548160ff021916908360ff16021790555060808201518160020160156101000a81548160ff021916908360ff16021790555060a08201518160020160166101000a81548161ffff021916908361ffff16021790555050508373ffffffffffffffffffffffffffffffffffffffff16610f8a89611667565b73ffffffffffffffffffffffffffffffffffffffff16610fa98b611667565b73ffffffffffffffffffffffffffffffffffffffff167f5169cf6c9c65452203b100125a7144f1f8fa3c59d527a84551a88fcee99df6ff89898c604051610ff293929190613774565b60405180910390a4505050505050505050565b60606000805b6005805490508110156110b2578373ffffffffffffffffffffffffffffffffffffffff1660058281548110611043576110426133c4565b5b906000526020600020906003020160020160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361109f57818061109b90613422565b9250505b80806110aa90613422565b91505061100b565b50600081036110f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110ed9061381d565b60405180910390fd5b60008167ffffffffffffffff81111561111257611111612a32565b5b60405190808252806020026020018201604052801561114b57816020015b61113861265b565b8152602001906001900390816111305790505b5090506000805b600580549050811015611360578573ffffffffffffffffffffffffffffffffffffffff166005828154811061118a576111896133c4565b5b906000526020600020906003020160020160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361134d57600581815481106111eb576111ea6133c4565b5b90600052602060002090600302016040518060800160405290816000820160009054906101000a900463ffffffff1663ffffffff1663ffffffff168152602001600182018054806020026020016040519081016040528092919081815260200182805480156112a157602002820191906000526020600020906000905b82829054906101000a900461ffff1661ffff16815260200190600201906020826001010492830192600103820291508084116112685790505b505050505081526020016002820160009054906101000a900461ffff1661ffff1661ffff1681526020016002820160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050838381518110611333576113326133c4565b5b6020026020010181905250818061134990613422565b9250505b808061135890613422565b915050611152565b50819350505050919050565b600760009054906101000a900461ffff1681565b6005818154811061139057600080fd5b90600052602060002090600302016000915090508060000160009054906101000a900463ffffffff16908060020160009054906101000a900461ffff16908060020160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905083565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b611426612350565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634d348eb582600760009054906101000a900461ffff166040518363ffffffff1660e01b815260040161149392919061386e565b600060405180830381600087803b1580156114ad57600080fd5b505af11580156114c1573d6000803e3d6000fd5b5050505060006114e38484600760009054906101000a900461ffff16856124b4565b9050600581908060018154018082558091505060019003906000526020600020906003020160009091909190915060008201518160000160006101000a81548163ffffffff021916908363ffffffff16021790555060208201518160010190805190602001906115549291906126a3565b5060408201518160020160006101000a81548161ffff021916908361ffff16021790555060608201518160020160026101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050508173ffffffffffffffffffffffffffffffffffffffff16600760009054906101000a900461ffff1661ffff167f20cccded3274d61ae21772e24555a8219991777fcbfa43e8c3587f5d1c17b681868660405161161e929190613906565b60405180910390a36007600081819054906101000a900461ffff168092919061164690613936565b91906101000a81548161ffff021916908361ffff1602179055505050505050565b6000611671612350565b60068260405161168191906139d1565b908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6116bf612350565b6116c9600061250d565b565b6116d361265b565b60005b600580549050811015611889578261ffff16600582815481106116fc576116fb6133c4565b5b906000526020600020906003020160020160009054906101000a900461ffff1661ffff16036118765760058181548110611739576117386133c4565b5b90600052602060002090600302016040518060800160405290816000820160009054906101000a900463ffffffff1663ffffffff1663ffffffff168152602001600182018054806020026020016040519081016040528092919081815260200182805480156117ef57602002820191906000526020600020906000905b82829054906101000a900461ffff1661ffff16815260200190600201906020826001010492830192600103820291508084116117b65790505b505050505081526020016002820160009054906101000a900461ffff1661ffff1661ffff1681526020016002820160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509150506118c5565b808061188190613422565b9150506116d6565b506040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118bc90613a34565b60405180910390fd5b919050565b6118d26125d9565b60005b600480549050811015611ac8578261ffff16600482815481106118fb576118fa6133c4565b5b906000526020600020906003020160020160169054906101000a900461ffff1661ffff1603611ab55760048181548110611938576119376133c4565b5b90600052602060002090600302016040518060c00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160149054906101000a900460ff1660ff1660ff1681526020016002820160159054906101000a900460ff1660ff1660ff1681526020016002820160169054906101000a900461ffff1661ffff1661ffff1681525050915050611b04565b8080611ac090613422565b9150506118d5565b506040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611afb90613aa0565b60405180910390fd5b919050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606000805b600480549050811015611c9157611b7484611667565b73ffffffffffffffffffffffffffffffffffffffff1660048281548110611b9e57611b9d6133c4565b5b906000526020600020906003020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480611c6a5750611bf684611667565b73ffffffffffffffffffffffffffffffffffffffff1660048281548110611c2057611c1f6133c4565b5b906000526020600020906003020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b15611c7e578180611c7a90613422565b9250505b8080611c8990613422565b915050611b5e565b5060008103611cd5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ccc90613b0c565b60405180910390fd5b60008167ffffffffffffffff811115611cf157611cf0612a32565b5b604051908082528060200260200182016040528015611d2a57816020015b611d176125d9565b815260200190600190039081611d0f5790505b5090506000805b60048054905081101561200b57611d4786611667565b73ffffffffffffffffffffffffffffffffffffffff1660048281548110611d7157611d706133c4565b5b906000526020600020906003020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480611e3d5750611dc986611667565b73ffffffffffffffffffffffffffffffffffffffff1660048281548110611df357611df26133c4565b5b906000526020600020906003020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b15611ff85760048181548110611e5657611e556133c4565b5b90600052602060002090600302016040518060c00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160149054906101000a900460ff1660ff1660ff1681526020016002820160159054906101000a900460ff1660ff1660ff1681526020016002820160169054906101000a900461ffff1661ffff1661ffff1681525050838381518110611fde57611fdd6133c4565b5b60200260200101819052508180611ff490613422565b9250505b808061200390613422565b915050611d31565b50819350505050919050565b6004818154811061202757600080fd5b90600052602060002090600302016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160149054906101000a900460ff16908060020160159054906101000a900460ff16908060020160169054906101000a900461ffff16905086565b6120f3612350565b600073ffffffffffffffffffffffffffffffffffffffff1660068360405161211b91906139d1565b908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146121a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161219790613b78565b60405180910390fd5b806006836040516121b191906139d1565b908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f198260646040518363ffffffff1660e01b815260040161225b929190613bd3565b600060405180830381600087803b15801561227557600080fd5b505af1158015612289573d6000803e3d6000fd5b505050507f746dea5d185825c2cafa76d92ad583ff3a306508c3b038f5aa772d0318df533282826040516122be929190613c35565b60405180910390a15050565b6122d2612350565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036123445760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161233b9190613159565b60405180910390fd5b61234d8161250d565b50565b6123586125d1565b73ffffffffffffffffffffffffffffffffffffffff16612376611b2f565b73ffffffffffffffffffffffffffffffffffffffff16146123d5576123996125d1565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016123cc9190613159565b60405180910390fd5b565b6000600a82116123ea576000905061240c565b601482101561240757600a826124009190613c65565b905061240c565b600a90505b919050565b6124196125d9565b60006040518060c0016040528061242f8a611667565b73ffffffffffffffffffffffffffffffffffffffff16815260200161245389611667565b73ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff1681526020018660ff1681526020018560ff1681526020018461ffff168152509050809150509695505050505050565b6124bc61265b565b600060405180608001604052808763ffffffff1681526020018681526020018561ffff1681526020018473ffffffffffffffffffffffffffffffffffffffff16815250905080915050949350505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6040518060c00160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600060ff168152602001600060ff168152602001600061ffff1681525090565b6040518060800160405280600063ffffffff16815260200160608152602001600061ffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b82805482825590600052602060002090600f0160109004810192821561273c5791602002820160005b8382111561270c57835183826101000a81548161ffff021916908361ffff16021790555092602001926002016020816001010492830192600103026126cc565b801561273a5782816101000a81549061ffff021916905560020160208160010104928301926001030261270c565b505b509050612749919061274d565b5090565b5b8082111561276657600081600090555060010161274e565b5090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006127a98261277e565b9050919050565b6127b98161279e565b81146127c457600080fd5b50565b6000813590506127d6816127b0565b92915050565b6000602082840312156127f2576127f1612774565b5b6000612800848285016127c7565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61283e8161279e565b82525050565b600060ff82169050919050565b61285a81612844565b82525050565b600061ffff82169050919050565b61287781612860565b82525050565b60c0820160008201516128936000850182612835565b5060208201516128a66020850182612835565b5060408201516128b96040850182612835565b5060608201516128cc6060850182612851565b5060808201516128df6080850182612851565b5060a08201516128f260a085018261286e565b50505050565b6000612904838361287d565b60c08301905092915050565b6000602082019050919050565b600061292882612809565b6129328185612814565b935061293d83612825565b8060005b8381101561296e57815161295588826128f8565b975061296083612910565b925050600181019050612941565b5085935050505092915050565b60006020820190508181036000830152612995818461291d565b905092915050565b6000819050919050565b60006129c26129bd6129b88461277e565b61299d565b61277e565b9050919050565b60006129d4826129a7565b9050919050565b60006129e6826129c9565b9050919050565b6129f6816129db565b82525050565b6000602082019050612a1160008301846129ed565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b612a6a82612a21565b810181811067ffffffffffffffff82111715612a8957612a88612a32565b5b80604052505050565b6000612a9c61276a565b9050612aa88282612a61565b919050565b600067ffffffffffffffff821115612ac857612ac7612a32565b5b612ad182612a21565b9050602081019050919050565b82818337600083830152505050565b6000612b00612afb84612aad565b612a92565b905082815260208101848484011115612b1c57612b1b612a1c565b5b612b27848285612ade565b509392505050565b600082601f830112612b4457612b43612a17565b5b8135612b54848260208601612aed565b91505092915050565b612b6681612860565b8114612b7157600080fd5b50565b600081359050612b8381612b5d565b92915050565b612b9281612844565b8114612b9d57600080fd5b50565b600081359050612baf81612b89565b92915050565b60008060008060008060c08789031215612bd257612bd1612774565b5b600087013567ffffffffffffffff811115612bf057612bef612779565b5b612bfc89828a01612b2f565b965050602087013567ffffffffffffffff811115612c1d57612c1c612779565b5b612c2989828a01612b2f565b9550506040612c3a89828a01612b74565b9450506060612c4b89828a01612ba0565b9350506080612c5c89828a01612ba0565b92505060a0612c6d89828a016127c7565b9150509295509295509295565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600063ffffffff82169050919050565b612cbf81612ca6565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000612cfd838361286e565b60208301905092915050565b6000602082019050919050565b6000612d2182612cc5565b612d2b8185612cd0565b9350612d3683612ce1565b8060005b83811015612d67578151612d4e8882612cf1565b9750612d5983612d09565b925050600181019050612d3a565b5085935050505092915050565b6000608083016000830151612d8c6000860182612cb6565b5060208301518482036020860152612da48282612d16565b9150506040830151612db9604086018261286e565b506060830151612dcc6060860182612835565b508091505092915050565b6000612de38383612d74565b905092915050565b6000602082019050919050565b6000612e0382612c7a565b612e0d8185612c85565b935083602082028501612e1f85612c96565b8060005b85811015612e5b5784840389528151612e3c8582612dd7565b9450612e4783612deb565b925060208a01995050600181019050612e23565b50829750879550505050505092915050565b60006020820190508181036000830152612e878184612df8565b905092915050565b612e9881612860565b82525050565b6000602082019050612eb36000830184612e8f565b92915050565b6000819050919050565b612ecc81612eb9565b8114612ed757600080fd5b50565b600081359050612ee981612ec3565b92915050565b600060208284031215612f0557612f04612774565b5b6000612f1384828501612eda565b91505092915050565b612f2581612ca6565b82525050565b612f348161279e565b82525050565b6000606082019050612f4f6000830186612f1c565b612f5c6020830185612e8f565b612f696040830184612f2b565b949350505050565b6000612f7c826129c9565b9050919050565b612f8c81612f71565b82525050565b6000602082019050612fa76000830184612f83565b92915050565b612fb681612ca6565b8114612fc157600080fd5b50565b600081359050612fd381612fad565b92915050565b600067ffffffffffffffff821115612ff457612ff3612a32565b5b602082029050602081019050919050565b600080fd5b600061301d61301884612fd9565b612a92565b905080838252602082019050602084028301858111156130405761303f613005565b5b835b8181101561306957806130558882612b74565b845260208401935050602081019050613042565b5050509392505050565b600082601f83011261308857613087612a17565b5b813561309884826020860161300a565b91505092915050565b6000806000606084860312156130ba576130b9612774565b5b60006130c886828701612fc4565b935050602084013567ffffffffffffffff8111156130e9576130e8612779565b5b6130f586828701613073565b9250506040613106868287016127c7565b9150509250925092565b60006020828403121561312657613125612774565b5b600082013567ffffffffffffffff81111561314457613143612779565b5b61315084828501612b2f565b91505092915050565b600060208201905061316e6000830184612f2b565b92915050565b60006020828403121561318a57613189612774565b5b600061319884828501612b74565b91505092915050565b60006080830160008301516131b96000860182612cb6565b50602083015184820360208601526131d18282612d16565b91505060408301516131e6604086018261286e565b5060608301516131f96060860182612835565b508091505092915050565b6000602082019050818103600083015261321e81846131a1565b905092915050565b60c08201600082015161323c6000850182612835565b50602082015161324f6020850182612835565b5060408201516132626040850182612835565b5060608201516132756060850182612851565b5060808201516132886080850182612851565b5060a082015161329b60a085018261286e565b50505050565b600060c0820190506132b66000830184613226565b92915050565b60006132c7826129c9565b9050919050565b6132d7816132bc565b82525050565b60006020820190506132f260008301846132ce565b92915050565b61330181612844565b82525050565b600060c08201905061331c6000830189612f2b565b6133296020830188612f2b565b6133366040830187612f2b565b61334360608301866132f8565b61335060808301856132f8565b61335d60a0830184612e8f565b979650505050505050565b6000806040838503121561337f5761337e612774565b5b600083013567ffffffffffffffff81111561339d5761339c612779565b5b6133a985828601612b2f565b92505060206133ba858286016127c7565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061342d82612eb9565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361345f5761345e6133f3565b5b600182019050919050565b600082825260208201905092915050565b7f4e6f206d61746368657320666f756e6420666f72207468652077696e6e657200600082015250565b60006134b1601f8361346a565b91506134bc8261347b565b602082019050919050565b600060208201905081810360008301526134e0816134a4565b9050919050565b7f506c6179657231206e6f74207265676973746572656400000000000000000000600082015250565b600061351d60168361346a565b9150613528826134e7565b602082019050919050565b6000602082019050818103600083015261354c81613510565b9050919050565b7f506c6179657232206e6f74207265676973746572656400000000000000000000600082015250565b600061358960168361346a565b915061359482613553565b602082019050919050565b600060208201905081810360008301526135b88161357c565b9050919050565b7f57696e6e6572206164647265737320697320696e76616c696400000000000000600082015250565b60006135f560198361346a565b9150613600826135bf565b602082019050919050565b60006020820190508181036000830152613624816135e8565b9050919050565b6000819050919050565b600061365061364b6136468461362b565b61299d565b612eb9565b9050919050565b61366081613635565b82525050565b600060408201905061367b6000830185612f2b565b6136886020830184613657565b9392505050565b60008151905061369e81612ec3565b92915050565b6000602082840312156136ba576136b9612774565b5b60006136c88482850161368f565b91505092915050565b6000815190506136e0816127b0565b92915050565b6000602082840312156136fc576136fb612774565b5b600061370a848285016136d1565b91505092915050565b60006040820190506137286000830185612f2b565b6137356020830184612f2b565b9392505050565b61374581612eb9565b82525050565b60006040820190506137606000830185612f2b565b61376d602083018461373c565b9392505050565b600060608201905061378960008301866132f8565b61379660208301856132f8565b6137a36040830184612e8f565b949350505050565b7f4e6f20746f75726e616d656e747320666f756e6420666f72207468652077696e60008201527f6e65720000000000000000000000000000000000000000000000000000000000602082015250565b600061380760238361346a565b9150613812826137ab565b604082019050919050565b60006020820190508181036000830152613836816137fa565b9050919050565b600061385861385361384e84612860565b61299d565b612eb9565b9050919050565b6138688161383d565b82525050565b60006040820190506138836000830185612f2b565b613890602083018461385f565b9392505050565b600082825260208201905092915050565b60006138b382612cc5565b6138bd8185613897565b93506138c883612ce1565b8060005b838110156138f95781516138e08882612cf1565b97506138eb83612d09565b9250506001810190506138cc565b5085935050505092915050565b600060408201905061391b6000830185612f1c565b818103602083015261392d81846138a8565b90509392505050565b600061394182612860565b915061ffff8203613955576139546133f3565b5b600182019050919050565b600081519050919050565b600081905092915050565b60005b83811015613994578082015181840152602081019050613979565b60008484015250505050565b60006139ab82613960565b6139b5818561396b565b93506139c5818560208601613976565b80840191505092915050565b60006139dd82846139a0565b915081905092915050565b7f546f75726e616d656e74206e6f7420666f756e64000000000000000000000000600082015250565b6000613a1e60148361346a565b9150613a29826139e8565b602082019050919050565b60006020820190508181036000830152613a4d81613a11565b9050919050565b7f4d61746368206e6f7420666f756e640000000000000000000000000000000000600082015250565b6000613a8a600f8361346a565b9150613a9582613a54565b602082019050919050565b60006020820190508181036000830152613ab981613a7d565b9050919050565b7f4e6f206d61746368657320666f756e6420666f722074686520706c6179657200600082015250565b6000613af6601f8361346a565b9150613b0182613ac0565b602082019050919050565b60006020820190508181036000830152613b2581613ae9565b9050919050565b7f506c6179657220616c7265616479206578697374730000000000000000000000600082015250565b6000613b6260158361346a565b9150613b6d82613b2c565b602082019050919050565b60006020820190508181036000830152613b9181613b55565b9050919050565b6000819050919050565b6000613bbd613bb8613bb384613b98565b61299d565b612eb9565b9050919050565b613bcd81613ba2565b82525050565b6000604082019050613be86000830185612f2b565b613bf56020830184613bc4565b9392505050565b6000613c0782613960565b613c11818561346a565b9350613c21818560208601613976565b613c2a81612a21565b840191505092915050565b60006040820190508181036000830152613c4f8185613bfc565b9050613c5e6020830184612f2b565b9392505050565b6000613c7082612eb9565b9150613c7b83612eb9565b9250828203905081811115613c9357613c926133f3565b5b9291505056fea2646970667358221220c08daa6e9e952415b93c281d1f0e9ed79f374cbbce3c11f899577ae753253f3064736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x4040 CODESIZE SUB DUP1 PUSH3 0x4040 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x2D7 JUMP JUMPDEST CALLER PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xAD JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xA4 SWAP2 SWAP1 PUSH3 0x344 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xBE DUP2 PUSH3 0x1A9 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP3 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP PUSH3 0x361 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x29F DUP3 PUSH3 0x272 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2B1 DUP2 PUSH3 0x292 JUMP JUMPDEST DUP2 EQ PUSH3 0x2BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x2D1 DUP2 PUSH3 0x2A6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x2F3 JUMPI PUSH3 0x2F2 PUSH3 0x26D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x303 DUP7 DUP3 DUP8 ADD PUSH3 0x2C0 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH3 0x316 DUP7 DUP3 DUP8 ADD PUSH3 0x2C0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0x329 DUP7 DUP3 DUP8 ADD PUSH3 0x2C0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH3 0x33E DUP2 PUSH3 0x292 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x35B PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x333 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3CCF DUP1 PUSH3 0x371 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x116 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0xBB5AA495 EQ PUSH2 0x315 JUMPI DUP1 PUSH4 0xE5425060 EQ PUSH2 0x345 JUMPI DUP1 PUSH4 0xEC203F6B EQ PUSH2 0x37A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x396 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x26F JUMPI DUP1 PUSH4 0x7A080FD1 EQ PUSH2 0x279 JUMPI DUP1 PUSH4 0x80192760 EQ PUSH2 0x2A9 JUMPI DUP1 PUSH4 0x8CECB84D EQ PUSH2 0x2D9 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x40F55F91 GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x40F55F91 EQ PUSH2 0x1B5 JUMPI DUP1 PUSH4 0x592F7253 EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0x64518CDD EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0x65612077 EQ PUSH2 0x223 JUMPI DUP1 PUSH4 0x661C37FD EQ PUSH2 0x23F JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0xC954FD7 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x149249DA EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0x1750094A EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0x3B794245 EQ PUSH2 0x185 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x135 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x130 SWAP2 SWAP1 PUSH2 0x27DC JUMP JUMPDEST PUSH2 0x3B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x142 SWAP2 SWAP1 PUSH2 0x297B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x153 PUSH2 0x759 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x160 SWAP2 SWAP1 PUSH2 0x29FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x183 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17E SWAP2 SWAP1 PUSH2 0x2BB5 JUMP JUMPDEST PUSH2 0x77F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19A SWAP2 SWAP1 PUSH2 0x27DC JUMP JUMPDEST PUSH2 0x1005 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AC SWAP2 SWAP1 PUSH2 0x2E6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BD PUSH2 0x136C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CA SWAP2 SWAP1 PUSH2 0x2E9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1ED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E8 SWAP2 SWAP1 PUSH2 0x2EEF JUMP JUMPDEST PUSH2 0x1380 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FC SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2F3A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20D PUSH2 0x13F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21A SWAP2 SWAP1 PUSH2 0x2F92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x238 SWAP2 SWAP1 PUSH2 0x30A1 JUMP JUMPDEST PUSH2 0x141E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x259 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x254 SWAP2 SWAP1 PUSH2 0x3110 JUMP JUMPDEST PUSH2 0x1667 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x266 SWAP2 SWAP1 PUSH2 0x3159 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x277 PUSH2 0x16B7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x293 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28E SWAP2 SWAP1 PUSH2 0x3174 JUMP JUMPDEST PUSH2 0x16CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A0 SWAP2 SWAP1 PUSH2 0x3204 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BE SWAP2 SWAP1 PUSH2 0x3174 JUMP JUMPDEST PUSH2 0x18CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D0 SWAP2 SWAP1 PUSH2 0x32A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E1 PUSH2 0x1B09 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EE SWAP2 SWAP1 PUSH2 0x32DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FF PUSH2 0x1B2F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30C SWAP2 SWAP1 PUSH2 0x3159 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32A SWAP2 SWAP1 PUSH2 0x3110 JUMP JUMPDEST PUSH2 0x1B58 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33C SWAP2 SWAP1 PUSH2 0x297B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35A SWAP2 SWAP1 PUSH2 0x2EEF JUMP JUMPDEST PUSH2 0x2017 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x371 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3307 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x394 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38F SWAP2 SWAP1 PUSH2 0x3368 JUMP JUMPDEST PUSH2 0x20EB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3AB SWAP2 SWAP1 PUSH2 0x27DC JUMP JUMPDEST PUSH2 0x22CA JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x4 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x45F JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x3F0 JUMPI PUSH2 0x3EF PUSH2 0x33C4 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x44C JUMPI DUP2 DUP1 PUSH2 0x448 SWAP1 PUSH2 0x3422 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH2 0x457 SWAP1 PUSH2 0x3422 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3B8 JUMP JUMPDEST POP PUSH1 0x0 DUP2 SUB PUSH2 0x4A3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x49A SWAP1 PUSH2 0x34C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4BF JUMPI PUSH2 0x4BE PUSH2 0x2A32 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x4F8 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x4E5 PUSH2 0x25D9 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x4DD JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x4 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x74D JUMPI DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x537 JUMPI PUSH2 0x536 PUSH2 0x33C4 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x73A JUMPI PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x598 JUMPI PUSH2 0x597 PUSH2 0x33C4 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x16 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE POP POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x720 JUMPI PUSH2 0x71F PUSH2 0x33C4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP2 DUP1 PUSH2 0x736 SWAP1 PUSH2 0x3422 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH2 0x745 SWAP1 PUSH2 0x3422 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x4FF JUMP JUMPDEST POP DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x787 PUSH2 0x2350 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x7A8 DUP8 PUSH2 0x1667 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7FE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7F5 SWAP1 PUSH2 0x3533 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x81F DUP7 PUSH2 0x1667 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x875 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x86C SWAP1 PUSH2 0x359F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8E4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8DB SWAP1 PUSH2 0x360B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x40C10F19 DUP3 PUSH1 0xA PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x942 SWAP3 SWAP2 SWAP1 PUSH2 0x3666 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x95C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x970 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9CF SWAP2 SWAP1 PUSH2 0x3159 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9EC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA10 SWAP2 SWAP1 PUSH2 0x36A4 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF8CACB4C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xABB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xADF SWAP2 SWAP1 PUSH2 0x36E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAFB SWAP2 SWAP1 PUSH2 0x3159 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB18 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB3C SWAP2 SWAP1 PUSH2 0x36A4 JUMP JUMPDEST LT ISZERO PUSH2 0xC62 JUMPI PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x65DB7A5 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF8CACB4C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBED JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC11 SWAP2 SWAP1 PUSH2 0x36E6 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC2F SWAP3 SWAP2 SWAP1 PUSH2 0x3713 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC5D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC84 DUP9 PUSH2 0x1667 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCAD JUMPI PUSH2 0xCA8 DUP7 PUSH2 0x1667 JUMP JUMPDEST PUSH2 0xCB7 JUMP JUMPDEST PUSH2 0xCB6 DUP8 PUSH2 0x1667 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xD5F PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD19 SWAP2 SWAP1 PUSH2 0x3159 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD36 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD5A SWAP2 SWAP1 PUSH2 0x36A4 JUMP JUMPDEST PUSH2 0x23D7 JUMP JUMPDEST SWAP1 POP PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x9DC29FAC DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDBE SWAP3 SWAP2 SWAP1 PUSH2 0x374B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDD8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDEC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 PUSH2 0xE00 DUP10 DUP10 DUP7 DUP10 DUP10 DUP13 PUSH2 0x2411 JUMP JUMPDEST SWAP1 POP PUSH1 0x4 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x15 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x16 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP POP POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF8A DUP10 PUSH2 0x1667 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xFA9 DUP12 PUSH2 0x1667 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5169CF6C9C65452203B100125A7144F1F8FA3C59D527A84551A88FCEE99DF6FF DUP10 DUP10 DUP13 PUSH1 0x40 MLOAD PUSH2 0xFF2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3774 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x5 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x10B2 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1043 JUMPI PUSH2 0x1042 PUSH2 0x33C4 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x109F JUMPI DUP2 DUP1 PUSH2 0x109B SWAP1 PUSH2 0x3422 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH2 0x10AA SWAP1 PUSH2 0x3422 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x100B JUMP JUMPDEST POP PUSH1 0x0 DUP2 SUB PUSH2 0x10F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10ED SWAP1 PUSH2 0x381D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1112 JUMPI PUSH2 0x1111 PUSH2 0x2A32 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x114B JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x1138 PUSH2 0x265B JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1130 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x5 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x1360 JUMPI DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x118A JUMPI PUSH2 0x1189 PUSH2 0x33C4 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x134D JUMPI PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x11EB JUMPI PUSH2 0x11EA PUSH2 0x33C4 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x12A1 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x2 ADD SWAP1 PUSH1 0x20 DUP3 PUSH1 0x1 ADD DIV SWAP3 DUP4 ADD SWAP3 PUSH1 0x1 SUB DUP3 MUL SWAP2 POP DUP1 DUP5 GT PUSH2 0x1268 JUMPI SWAP1 POP JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1333 JUMPI PUSH2 0x1332 PUSH2 0x33C4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP2 DUP1 PUSH2 0x1349 SWAP1 PUSH2 0x3422 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH2 0x1358 SWAP1 PUSH2 0x3422 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1152 JUMP JUMPDEST POP DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1390 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x1426 PUSH2 0x2350 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x4D348EB5 DUP3 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1493 SWAP3 SWAP2 SWAP1 PUSH2 0x386E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x14AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x14C1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 PUSH2 0x14E3 DUP5 DUP5 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND DUP6 PUSH2 0x24B4 JUMP JUMPDEST SWAP1 POP PUSH1 0x5 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x1554 SWAP3 SWAP2 SWAP1 PUSH2 0x26A3 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND PUSH32 0x20CCCDED3274D61AE21772E24555A8219991777FCBFA43E8C3587F5D1C17B681 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x161E SWAP3 SWAP2 SWAP1 PUSH2 0x3906 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x7 PUSH1 0x0 DUP2 DUP2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1646 SWAP1 PUSH2 0x3936 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1671 PUSH2 0x2350 JUMP JUMPDEST PUSH1 0x6 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1681 SWAP2 SWAP1 PUSH2 0x39D1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16BF PUSH2 0x2350 JUMP JUMPDEST PUSH2 0x16C9 PUSH1 0x0 PUSH2 0x250D JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x16D3 PUSH2 0x265B JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x5 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x1889 JUMPI DUP3 PUSH2 0xFFFF AND PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x16FC JUMPI PUSH2 0x16FB PUSH2 0x33C4 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND SUB PUSH2 0x1876 JUMPI PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1739 JUMPI PUSH2 0x1738 PUSH2 0x33C4 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x17EF JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x2 ADD SWAP1 PUSH1 0x20 DUP3 PUSH1 0x1 ADD DIV SWAP3 DUP4 ADD SWAP3 PUSH1 0x1 SUB DUP3 MUL SWAP2 POP DUP1 DUP5 GT PUSH2 0x17B6 JUMPI SWAP1 POP JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP2 POP POP PUSH2 0x18C5 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1881 SWAP1 PUSH2 0x3422 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x16D6 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18BC SWAP1 PUSH2 0x3A34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18D2 PUSH2 0x25D9 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x4 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x1AC8 JUMPI DUP3 PUSH2 0xFFFF AND PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x18FB JUMPI PUSH2 0x18FA PUSH2 0x33C4 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD PUSH1 0x16 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND SUB PUSH2 0x1AB5 JUMPI PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1938 JUMPI PUSH2 0x1937 PUSH2 0x33C4 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x16 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE POP POP SWAP2 POP POP PUSH2 0x1B04 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1AC0 SWAP1 PUSH2 0x3422 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x18D5 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AFB SWAP1 PUSH2 0x3AA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x4 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x1C91 JUMPI PUSH2 0x1B74 DUP5 PUSH2 0x1667 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1B9E JUMPI PUSH2 0x1B9D PUSH2 0x33C4 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1C6A JUMPI POP PUSH2 0x1BF6 DUP5 PUSH2 0x1667 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1C20 JUMPI PUSH2 0x1C1F PUSH2 0x33C4 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0x1C7E JUMPI DUP2 DUP1 PUSH2 0x1C7A SWAP1 PUSH2 0x3422 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH2 0x1C89 SWAP1 PUSH2 0x3422 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1B5E JUMP JUMPDEST POP PUSH1 0x0 DUP2 SUB PUSH2 0x1CD5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CCC SWAP1 PUSH2 0x3B0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1CF1 JUMPI PUSH2 0x1CF0 PUSH2 0x2A32 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1D2A JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x1D17 PUSH2 0x25D9 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1D0F JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x4 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x200B JUMPI PUSH2 0x1D47 DUP7 PUSH2 0x1667 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1D71 JUMPI PUSH2 0x1D70 PUSH2 0x33C4 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1E3D JUMPI POP PUSH2 0x1DC9 DUP7 PUSH2 0x1667 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1DF3 JUMPI PUSH2 0x1DF2 PUSH2 0x33C4 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0x1FF8 JUMPI PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1E56 JUMPI PUSH2 0x1E55 PUSH2 0x33C4 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x16 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE POP POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1FDE JUMPI PUSH2 0x1FDD PUSH2 0x33C4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP2 DUP1 PUSH2 0x1FF4 SWAP1 PUSH2 0x3422 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH2 0x2003 SWAP1 PUSH2 0x3422 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1D31 JUMP JUMPDEST POP DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2027 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x16 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND SWAP1 POP DUP7 JUMP JUMPDEST PUSH2 0x20F3 PUSH2 0x2350 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 DUP4 PUSH1 0x40 MLOAD PUSH2 0x211B SWAP2 SWAP1 PUSH2 0x39D1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x21A0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2197 SWAP1 PUSH2 0x3B78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 DUP4 PUSH1 0x40 MLOAD PUSH2 0x21B1 SWAP2 SWAP1 PUSH2 0x39D1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x40C10F19 DUP3 PUSH1 0x64 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x225B SWAP3 SWAP2 SWAP1 PUSH2 0x3BD3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2275 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2289 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH32 0x746DEA5D185825C2CAFA76D92AD583FF3A306508C3B038F5AA772D0318DF5332 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0x22BE SWAP3 SWAP2 SWAP1 PUSH2 0x3C35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x22D2 PUSH2 0x2350 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2344 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x233B SWAP2 SWAP1 PUSH2 0x3159 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x234D DUP2 PUSH2 0x250D JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x2358 PUSH2 0x25D1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2376 PUSH2 0x1B2F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x23D5 JUMPI PUSH2 0x2399 PUSH2 0x25D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23CC SWAP2 SWAP1 PUSH2 0x3159 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA DUP3 GT PUSH2 0x23EA JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x240C JUMP JUMPDEST PUSH1 0x14 DUP3 LT ISZERO PUSH2 0x2407 JUMPI PUSH1 0xA DUP3 PUSH2 0x2400 SWAP2 SWAP1 PUSH2 0x3C65 JUMP JUMPDEST SWAP1 POP PUSH2 0x240C JUMP JUMPDEST PUSH1 0xA SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2419 PUSH2 0x25D9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x242F DUP11 PUSH2 0x1667 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2453 DUP10 PUSH2 0x1667 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH2 0xFFFF AND DUP2 MSTORE POP SWAP1 POP DUP1 SWAP2 POP POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x24BC PUSH2 0x265B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP8 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP DUP1 SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH2 0xFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xF ADD PUSH1 0x10 SWAP1 DIV DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x273C JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD PUSH1 0x0 JUMPDEST DUP4 DUP3 GT ISZERO PUSH2 0x270C JUMPI DUP4 MLOAD DUP4 DUP3 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP SWAP3 PUSH1 0x20 ADD SWAP3 PUSH1 0x2 ADD PUSH1 0x20 DUP2 PUSH1 0x1 ADD DIV SWAP3 DUP4 ADD SWAP3 PUSH1 0x1 SUB MUL PUSH2 0x26CC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x273A JUMPI DUP3 DUP2 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH2 0xFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x2 ADD PUSH1 0x20 DUP2 PUSH1 0x1 ADD DIV SWAP3 DUP4 ADD SWAP3 PUSH1 0x1 SUB MUL PUSH2 0x270C JUMP JUMPDEST POP JUMPDEST POP SWAP1 POP PUSH2 0x2749 SWAP2 SWAP1 PUSH2 0x274D JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2766 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x274E JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27A9 DUP3 PUSH2 0x277E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x27B9 DUP2 PUSH2 0x279E JUMP JUMPDEST DUP2 EQ PUSH2 0x27C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x27D6 DUP2 PUSH2 0x27B0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27F2 JUMPI PUSH2 0x27F1 PUSH2 0x2774 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2800 DUP5 DUP3 DUP6 ADD PUSH2 0x27C7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x283E DUP2 PUSH2 0x279E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x285A DUP2 PUSH2 0x2844 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2877 DUP2 PUSH2 0x2860 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0xC0 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x2893 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x2835 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x28A6 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x2835 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x28B9 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x2835 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x28CC PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x2851 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x28DF PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x2851 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x28F2 PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x286E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2904 DUP4 DUP4 PUSH2 0x287D JUMP JUMPDEST PUSH1 0xC0 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2928 DUP3 PUSH2 0x2809 JUMP JUMPDEST PUSH2 0x2932 DUP2 DUP6 PUSH2 0x2814 JUMP JUMPDEST SWAP4 POP PUSH2 0x293D DUP4 PUSH2 0x2825 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x296E JUMPI DUP2 MLOAD PUSH2 0x2955 DUP9 DUP3 PUSH2 0x28F8 JUMP JUMPDEST SWAP8 POP PUSH2 0x2960 DUP4 PUSH2 0x2910 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2941 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2995 DUP2 DUP5 PUSH2 0x291D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29C2 PUSH2 0x29BD PUSH2 0x29B8 DUP5 PUSH2 0x277E JUMP JUMPDEST PUSH2 0x299D JUMP JUMPDEST PUSH2 0x277E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29D4 DUP3 PUSH2 0x29A7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29E6 DUP3 PUSH2 0x29C9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x29F6 DUP2 PUSH2 0x29DB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2A11 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x29ED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x2A6A DUP3 PUSH2 0x2A21 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2A89 JUMPI PUSH2 0x2A88 PUSH2 0x2A32 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A9C PUSH2 0x276A JUMP JUMPDEST SWAP1 POP PUSH2 0x2AA8 DUP3 DUP3 PUSH2 0x2A61 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2AC8 JUMPI PUSH2 0x2AC7 PUSH2 0x2A32 JUMP JUMPDEST JUMPDEST PUSH2 0x2AD1 DUP3 PUSH2 0x2A21 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B00 PUSH2 0x2AFB DUP5 PUSH2 0x2AAD JUMP JUMPDEST PUSH2 0x2A92 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2B1C JUMPI PUSH2 0x2B1B PUSH2 0x2A1C JUMP JUMPDEST JUMPDEST PUSH2 0x2B27 DUP5 DUP3 DUP6 PUSH2 0x2ADE JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2B44 JUMPI PUSH2 0x2B43 PUSH2 0x2A17 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2B54 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2AED JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2B66 DUP2 PUSH2 0x2860 JUMP JUMPDEST DUP2 EQ PUSH2 0x2B71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2B83 DUP2 PUSH2 0x2B5D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2B92 DUP2 PUSH2 0x2844 JUMP JUMPDEST DUP2 EQ PUSH2 0x2B9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2BAF DUP2 PUSH2 0x2B89 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x2BD2 JUMPI PUSH2 0x2BD1 PUSH2 0x2774 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2BF0 JUMPI PUSH2 0x2BEF PUSH2 0x2779 JUMP JUMPDEST JUMPDEST PUSH2 0x2BFC DUP10 DUP3 DUP11 ADD PUSH2 0x2B2F JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2C1D JUMPI PUSH2 0x2C1C PUSH2 0x2779 JUMP JUMPDEST JUMPDEST PUSH2 0x2C29 DUP10 DUP3 DUP11 ADD PUSH2 0x2B2F JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x2C3A DUP10 DUP3 DUP11 ADD PUSH2 0x2B74 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x2C4B DUP10 DUP3 DUP11 ADD PUSH2 0x2BA0 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH2 0x2C5C DUP10 DUP3 DUP11 ADD PUSH2 0x2BA0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH2 0x2C6D DUP10 DUP3 DUP11 ADD PUSH2 0x27C7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2CBF DUP2 PUSH2 0x2CA6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CFD DUP4 DUP4 PUSH2 0x286E JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D21 DUP3 PUSH2 0x2CC5 JUMP JUMPDEST PUSH2 0x2D2B DUP2 DUP6 PUSH2 0x2CD0 JUMP JUMPDEST SWAP4 POP PUSH2 0x2D36 DUP4 PUSH2 0x2CE1 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2D67 JUMPI DUP2 MLOAD PUSH2 0x2D4E DUP9 DUP3 PUSH2 0x2CF1 JUMP JUMPDEST SWAP8 POP PUSH2 0x2D59 DUP4 PUSH2 0x2D09 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2D3A JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0x2D8C PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x2CB6 JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x2DA4 DUP3 DUP3 PUSH2 0x2D16 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x2DB9 PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0x286E JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x2DCC PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x2835 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DE3 DUP4 DUP4 PUSH2 0x2D74 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E03 DUP3 PUSH2 0x2C7A JUMP JUMPDEST PUSH2 0x2E0D DUP2 DUP6 PUSH2 0x2C85 JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x2E1F DUP6 PUSH2 0x2C96 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x2E5B JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x2E3C DUP6 DUP3 PUSH2 0x2DD7 JUMP JUMPDEST SWAP5 POP PUSH2 0x2E47 DUP4 PUSH2 0x2DEB JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2E23 JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2E87 DUP2 DUP5 PUSH2 0x2DF8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2E98 DUP2 PUSH2 0x2860 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2EB3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2E8F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2ECC DUP2 PUSH2 0x2EB9 JUMP JUMPDEST DUP2 EQ PUSH2 0x2ED7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2EE9 DUP2 PUSH2 0x2EC3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2F05 JUMPI PUSH2 0x2F04 PUSH2 0x2774 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2F13 DUP5 DUP3 DUP6 ADD PUSH2 0x2EDA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2F25 DUP2 PUSH2 0x2CA6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2F34 DUP2 PUSH2 0x279E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2F4F PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2F1C JUMP JUMPDEST PUSH2 0x2F5C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2E8F JUMP JUMPDEST PUSH2 0x2F69 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2F2B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F7C DUP3 PUSH2 0x29C9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2F8C DUP2 PUSH2 0x2F71 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2FA7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2F83 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2FB6 DUP2 PUSH2 0x2CA6 JUMP JUMPDEST DUP2 EQ PUSH2 0x2FC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2FD3 DUP2 PUSH2 0x2FAD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2FF4 JUMPI PUSH2 0x2FF3 PUSH2 0x2A32 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x301D PUSH2 0x3018 DUP5 PUSH2 0x2FD9 JUMP JUMPDEST PUSH2 0x2A92 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x3040 JUMPI PUSH2 0x303F PUSH2 0x3005 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3069 JUMPI DUP1 PUSH2 0x3055 DUP9 DUP3 PUSH2 0x2B74 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3042 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3088 JUMPI PUSH2 0x3087 PUSH2 0x2A17 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3098 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x300A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x30BA JUMPI PUSH2 0x30B9 PUSH2 0x2774 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x30C8 DUP7 DUP3 DUP8 ADD PUSH2 0x2FC4 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x30E9 JUMPI PUSH2 0x30E8 PUSH2 0x2779 JUMP JUMPDEST JUMPDEST PUSH2 0x30F5 DUP7 DUP3 DUP8 ADD PUSH2 0x3073 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x3106 DUP7 DUP3 DUP8 ADD PUSH2 0x27C7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3126 JUMPI PUSH2 0x3125 PUSH2 0x2774 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3144 JUMPI PUSH2 0x3143 PUSH2 0x2779 JUMP JUMPDEST JUMPDEST PUSH2 0x3150 DUP5 DUP3 DUP6 ADD PUSH2 0x2B2F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x316E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2F2B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x318A JUMPI PUSH2 0x3189 PUSH2 0x2774 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3198 DUP5 DUP3 DUP6 ADD PUSH2 0x2B74 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0x31B9 PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x2CB6 JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x31D1 DUP3 DUP3 PUSH2 0x2D16 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x31E6 PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0x286E JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x31F9 PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x2835 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x321E DUP2 DUP5 PUSH2 0x31A1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xC0 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x323C PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x2835 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x324F PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x2835 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x3262 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x2835 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x3275 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x2851 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x3288 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x2851 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x329B PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x286E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x32B6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3226 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32C7 DUP3 PUSH2 0x29C9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x32D7 DUP2 PUSH2 0x32BC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x32F2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x32CE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3301 DUP2 PUSH2 0x2844 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x331C PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x2F2B JUMP JUMPDEST PUSH2 0x3329 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x2F2B JUMP JUMPDEST PUSH2 0x3336 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x2F2B JUMP JUMPDEST PUSH2 0x3343 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x32F8 JUMP JUMPDEST PUSH2 0x3350 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x32F8 JUMP JUMPDEST PUSH2 0x335D PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x2E8F JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x337F JUMPI PUSH2 0x337E PUSH2 0x2774 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x339D JUMPI PUSH2 0x339C PUSH2 0x2779 JUMP JUMPDEST JUMPDEST PUSH2 0x33A9 DUP6 DUP3 DUP7 ADD PUSH2 0x2B2F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x33BA DUP6 DUP3 DUP7 ADD PUSH2 0x27C7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x342D DUP3 PUSH2 0x2EB9 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x345F JUMPI PUSH2 0x345E PUSH2 0x33F3 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F206D61746368657320666F756E6420666F72207468652077696E6E657200 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34B1 PUSH1 0x1F DUP4 PUSH2 0x346A JUMP JUMPDEST SWAP2 POP PUSH2 0x34BC DUP3 PUSH2 0x347B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x34E0 DUP2 PUSH2 0x34A4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x506C6179657231206E6F74207265676973746572656400000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x351D PUSH1 0x16 DUP4 PUSH2 0x346A JUMP JUMPDEST SWAP2 POP PUSH2 0x3528 DUP3 PUSH2 0x34E7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x354C DUP2 PUSH2 0x3510 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x506C6179657232206E6F74207265676973746572656400000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3589 PUSH1 0x16 DUP4 PUSH2 0x346A JUMP JUMPDEST SWAP2 POP PUSH2 0x3594 DUP3 PUSH2 0x3553 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x35B8 DUP2 PUSH2 0x357C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x57696E6E6572206164647265737320697320696E76616C696400000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35F5 PUSH1 0x19 DUP4 PUSH2 0x346A JUMP JUMPDEST SWAP2 POP PUSH2 0x3600 DUP3 PUSH2 0x35BF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3624 DUP2 PUSH2 0x35E8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3650 PUSH2 0x364B PUSH2 0x3646 DUP5 PUSH2 0x362B JUMP JUMPDEST PUSH2 0x299D JUMP JUMPDEST PUSH2 0x2EB9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3660 DUP2 PUSH2 0x3635 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x367B PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2F2B JUMP JUMPDEST PUSH2 0x3688 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3657 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x369E DUP2 PUSH2 0x2EC3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x36BA JUMPI PUSH2 0x36B9 PUSH2 0x2774 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x36C8 DUP5 DUP3 DUP6 ADD PUSH2 0x368F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x36E0 DUP2 PUSH2 0x27B0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x36FC JUMPI PUSH2 0x36FB PUSH2 0x2774 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x370A DUP5 DUP3 DUP6 ADD PUSH2 0x36D1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3728 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2F2B JUMP JUMPDEST PUSH2 0x3735 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2F2B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x3745 DUP2 PUSH2 0x2EB9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3760 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2F2B JUMP JUMPDEST PUSH2 0x376D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x373C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3789 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x32F8 JUMP JUMPDEST PUSH2 0x3796 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x32F8 JUMP JUMPDEST PUSH2 0x37A3 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2E8F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E6F20746F75726E616D656E747320666F756E6420666F72207468652077696E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E65720000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3807 PUSH1 0x23 DUP4 PUSH2 0x346A JUMP JUMPDEST SWAP2 POP PUSH2 0x3812 DUP3 PUSH2 0x37AB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3836 DUP2 PUSH2 0x37FA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3858 PUSH2 0x3853 PUSH2 0x384E DUP5 PUSH2 0x2860 JUMP JUMPDEST PUSH2 0x299D JUMP JUMPDEST PUSH2 0x2EB9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3868 DUP2 PUSH2 0x383D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3883 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2F2B JUMP JUMPDEST PUSH2 0x3890 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x385F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x38B3 DUP3 PUSH2 0x2CC5 JUMP JUMPDEST PUSH2 0x38BD DUP2 DUP6 PUSH2 0x3897 JUMP JUMPDEST SWAP4 POP PUSH2 0x38C8 DUP4 PUSH2 0x2CE1 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x38F9 JUMPI DUP2 MLOAD PUSH2 0x38E0 DUP9 DUP3 PUSH2 0x2CF1 JUMP JUMPDEST SWAP8 POP PUSH2 0x38EB DUP4 PUSH2 0x2D09 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x38CC JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x391B PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2F1C JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x392D DUP2 DUP5 PUSH2 0x38A8 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3941 DUP3 PUSH2 0x2860 JUMP JUMPDEST SWAP2 POP PUSH2 0xFFFF DUP3 SUB PUSH2 0x3955 JUMPI PUSH2 0x3954 PUSH2 0x33F3 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3994 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3979 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39AB DUP3 PUSH2 0x3960 JUMP JUMPDEST PUSH2 0x39B5 DUP2 DUP6 PUSH2 0x396B JUMP JUMPDEST SWAP4 POP PUSH2 0x39C5 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3976 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39DD DUP3 DUP5 PUSH2 0x39A0 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546F75726E616D656E74206E6F7420666F756E64000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A1E PUSH1 0x14 DUP4 PUSH2 0x346A JUMP JUMPDEST SWAP2 POP PUSH2 0x3A29 DUP3 PUSH2 0x39E8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3A4D DUP2 PUSH2 0x3A11 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D61746368206E6F7420666F756E640000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A8A PUSH1 0xF DUP4 PUSH2 0x346A JUMP JUMPDEST SWAP2 POP PUSH2 0x3A95 DUP3 PUSH2 0x3A54 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3AB9 DUP2 PUSH2 0x3A7D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F206D61746368657320666F756E6420666F722074686520706C6179657200 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AF6 PUSH1 0x1F DUP4 PUSH2 0x346A JUMP JUMPDEST SWAP2 POP PUSH2 0x3B01 DUP3 PUSH2 0x3AC0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3B25 DUP2 PUSH2 0x3AE9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x506C6179657220616C7265616479206578697374730000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B62 PUSH1 0x15 DUP4 PUSH2 0x346A JUMP JUMPDEST SWAP2 POP PUSH2 0x3B6D DUP3 PUSH2 0x3B2C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3B91 DUP2 PUSH2 0x3B55 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3BBD PUSH2 0x3BB8 PUSH2 0x3BB3 DUP5 PUSH2 0x3B98 JUMP JUMPDEST PUSH2 0x299D JUMP JUMPDEST PUSH2 0x2EB9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3BCD DUP2 PUSH2 0x3BA2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3BE8 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2F2B JUMP JUMPDEST PUSH2 0x3BF5 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3BC4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C07 DUP3 PUSH2 0x3960 JUMP JUMPDEST PUSH2 0x3C11 DUP2 DUP6 PUSH2 0x346A JUMP JUMPDEST SWAP4 POP PUSH2 0x3C21 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3976 JUMP JUMPDEST PUSH2 0x3C2A DUP2 PUSH2 0x2A21 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3C4F DUP2 DUP6 PUSH2 0x3BFC JUMP JUMPDEST SWAP1 POP PUSH2 0x3C5E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2F2B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C70 DUP3 PUSH2 0x2EB9 JUMP JUMPDEST SWAP2 POP PUSH2 0x3C7B DUP4 PUSH2 0x2EB9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x3C93 JUMPI PUSH2 0x3C92 PUSH2 0x33F3 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC0 DUP14 0xAA PUSH15 0x9E952415B93C281D1F0E9ED79F374C 0xBB 0xCE EXTCODECOPY GT 0xF8 SWAP10 JUMPI PUSH27 0xE753253F3064736F6C634300081400330000000000000000000000 ","sourceMap":"295:12443:22:-:0;;;3137:298;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3249:10;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;3289:8:22::1;3271:7;;:27;;;;;;;;;;;;;;;;;;3330:10;3308:9;;:33;;;;;;;;;;;;;;;;;;3381:14;3351:13;;:45;;;;;;;;;;;;;;;;;;3427:1;3406:18;;:22;;;;;;;;;;;;;;;;;;3137:298:::0;;;295:12443;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:26:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:663::-;933:6;941;949;998:2;986:9;977:7;973:23;969:32;966:119;;;1004:79;;:::i;:::-;966:119;1124:1;1149:64;1205:7;1196:6;1185:9;1181:22;1149:64;:::i;:::-;1139:74;;1095:128;1262:2;1288:64;1344:7;1335:6;1324:9;1320:22;1288:64;:::i;:::-;1278:74;;1233:129;1401:2;1427:64;1483:7;1474:6;1463:9;1459:22;1427:64;:::i;:::-;1417:74;;1372:129;845:663;;;;;:::o;1514:118::-;1601:24;1619:5;1601:24;:::i;:::-;1596:3;1589:37;1514:118;;:::o;1638:222::-;1731:4;1769:2;1758:9;1754:18;1746:26;;1782:71;1850:1;1839:9;1835:17;1826:6;1782:71;:::i;:::-;1638:222;;;;:::o;295:12443:22:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_checkOwner_84":{"entryPoint":9040,"id":84,"parameterSlots":0,"returnSlots":0},"@_msgSender_2270":{"entryPoint":9681,"id":2270,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_146":{"entryPoint":9485,"id":146,"parameterSlots":1,"returnSlots":0},"@addPlayer_7265":{"entryPoint":8427,"id":7265,"parameterSlots":2,"returnSlots":0},"@calculateBurnAmount_7748":{"entryPoint":9175,"id":7748,"parameterSlots":1,"returnSlots":1},"@fillMatchStruct_7463":{"entryPoint":9233,"id":7463,"parameterSlots":6,"returnSlots":1},"@fillTournamentStruct_7824":{"entryPoint":9396,"id":7824,"parameterSlots":4,"returnSlots":1},"@getMatchsByMatchId_7720":{"entryPoint":6346,"id":7720,"parameterSlots":1,"returnSlots":1},"@getMatchsByPlayer_7583":{"entryPoint":7000,"id":7583,"parameterSlots":1,"returnSlots":1},"@getMatchsByWinner_7681":{"entryPoint":946,"id":7681,"parameterSlots":1,"returnSlots":1},"@getPlayerAddress_7280":{"entryPoint":5735,"id":7280,"parameterSlots":1,"returnSlots":1},"@getTournamentById_7863":{"entryPoint":5835,"id":7863,"parameterSlots":1,"returnSlots":1},"@getTournamentByWinner_7961":{"entryPoint":4101,"id":7961,"parameterSlots":1,"returnSlots":1},"@globalMatchesArray_7140":{"entryPoint":8215,"id":7140,"parameterSlots":0,"returnSlots":0},"@globalTournamentsArray_7145":{"entryPoint":4992,"id":7145,"parameterSlots":0,"returnSlots":0},"@goatNft_7104":{"entryPoint":1881,"id":7104,"parameterSlots":0,"returnSlots":0},"@owner_67":{"entryPoint":6959,"id":67,"parameterSlots":0,"returnSlots":1},"@pongToken_7110":{"entryPoint":5112,"id":7110,"parameterSlots":0,"returnSlots":0},"@renounceOwnership_98":{"entryPoint":5815,"id":98,"parameterSlots":0,"returnSlots":0},"@reportMatch_7425":{"entryPoint":1919,"id":7425,"parameterSlots":6,"returnSlots":0},"@reportTournament_7795":{"entryPoint":5150,"id":7795,"parameterSlots":3,"returnSlots":0},"@tournamentNft_7107":{"entryPoint":6921,"id":7107,"parameterSlots":0,"returnSlots":0},"@tournamentTokenIds_7187":{"entryPoint":4972,"id":7187,"parameterSlots":0,"returnSlots":0},"@transferOwnership_126":{"entryPoint":8906,"id":126,"parameterSlots":1,"returnSlots":0},"abi_decode_available_length_t_array$_t_uint16_$dyn_memory_ptr":{"entryPoint":12298,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_string_memory_ptr":{"entryPoint":10989,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":10183,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":14033,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_uint16_$dyn_memory_ptr":{"entryPoint":12403,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr":{"entryPoint":11055,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint16":{"entryPoint":11124,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":11994,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":13967,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint32":{"entryPoint":12228,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint8":{"entryPoint":11168,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":10204,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":14054,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptr":{"entryPoint":12560,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_address":{"entryPoint":13160,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint16t_uint8t_uint8t_address":{"entryPoint":11189,"id":null,"parameterSlots":2,"returnSlots":6},"abi_decode_tuple_t_uint16":{"entryPoint":12660,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":12015,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":13988,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint32t_array$_t_uint16_$dyn_memory_ptrt_address":{"entryPoint":12449,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encodeUpdatedPos_t_struct$_Match_$7124_memory_ptr_to_t_struct$_Match_$7124_memory_ptr":{"entryPoint":10488,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_struct$_Tournament_$7135_memory_ptr_to_t_struct$_Tournament_$7135_memory_ptr":{"entryPoint":11735,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_uint16_to_t_uint16":{"entryPoint":11505,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address":{"entryPoint":10293,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":12075,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_struct$_Match_$7124_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Match_$7124_memory_ptr_$dyn_memory_ptr_fromStack":{"entryPoint":10525,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_array$_t_struct$_Tournament_$7135_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Tournament_$7135_memory_ptr_$dyn_memory_ptr_fromStack":{"entryPoint":11768,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_array$_t_uint16_$dyn_memory_ptr_to_t_array$_t_uint16_$dyn_memory_ptr":{"entryPoint":11542,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_array$_t_uint16_$dyn_memory_ptr_to_t_array$_t_uint16_$dyn_memory_ptr_fromStack":{"entryPoint":14504,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_contract$_GoatNft_$8112_to_t_address_fromStack":{"entryPoint":10733,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_contract$_PongToken_$8254_to_t_address_fromStack":{"entryPoint":12163,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_contract$_TournamentNft_$8198_to_t_address_fromStack":{"entryPoint":13006,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_rational_100_by_1_to_t_uint256_fromStack":{"entryPoint":15300,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_rational_10_by_1_to_t_uint256_fromStack":{"entryPoint":13911,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":15356,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":14752,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_40d8d825bd46fc38ebdbe82ad5f003b63b0f8f48f5fa0d8fc9e28f84db6bac03_to_t_string_memory_ptr_fromStack":{"entryPoint":14330,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_48a88b95e8c6943c3c5543ee0c6ad8f7d009a48ab4b8ecd53ced3aa366e8f172_to_t_string_memory_ptr_fromStack":{"entryPoint":15081,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_623b141a8c668802eee97798d04dd23a05d99e520a3bb8abbffe39a955154d9f_to_t_string_memory_ptr_fromStack":{"entryPoint":14973,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_81004fe6ac4a02932b2eae4209edcfc6d4a21d20ea50616048d119ea0921c6dc_to_t_string_memory_ptr_fromStack":{"entryPoint":14865,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_8ae9f25dd7148543b8715f8f5912a2b61497a4b06739d3b9ade261c33ae7b70d_to_t_string_memory_ptr_fromStack":{"entryPoint":13584,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_cfbd3297e5ce3c0189d5ce0fe901e81167648760a96bf142a59985fc6d3fcaa4_to_t_string_memory_ptr_fromStack":{"entryPoint":13476,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_e075ac6d8fa43b0d2071c35dbf7312ba4f3cecda52a6171c83e7b0b7d1d8c44c_to_t_string_memory_ptr_fromStack":{"entryPoint":13800,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_e62d5747e47bcd18d9ddf74b7bcef9f67e80418a4c933197d321fea58848ef3f_to_t_string_memory_ptr_fromStack":{"entryPoint":15189,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_ffc207f67b7ae6032b4314a089795ca325f65bfd399e4ba03a8b2ad7f3abc206_to_t_string_memory_ptr_fromStack":{"entryPoint":13692,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_struct$_Match_$7124_memory_ptr_to_t_struct$_Match_$7124_memory_ptr":{"entryPoint":10365,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_struct$_Match_$7124_memory_ptr_to_t_struct$_Match_$7124_memory_ptr_fromStack":{"entryPoint":12838,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_struct$_Tournament_$7135_memory_ptr_to_t_struct$_Tournament_$7135_memory_ptr":{"entryPoint":11636,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_struct$_Tournament_$7135_memory_ptr_to_t_struct$_Tournament_$7135_memory_ptr_fromStack":{"entryPoint":12705,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint16_to_t_uint16":{"entryPoint":10350,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint16_to_t_uint16_fromStack":{"entryPoint":11919,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint16_to_t_uint256_fromStack":{"entryPoint":14431,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":14140,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint32_to_t_uint32":{"entryPoint":11446,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint32_to_t_uint32_fromStack":{"entryPoint":12060,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8":{"entryPoint":10321,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":13048,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":14801,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":12633,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":14099,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_address_t_uint8_t_uint8_t_uint16__to_t_address_t_address_t_address_t_uint8_t_uint8_t_uint16__fromStack_reversed":{"entryPoint":13063,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_address_t_rational_100_by_1__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":15315,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_rational_10_by_1__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":13926,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint16__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":14446,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":14155,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_array$_t_struct$_Match_$7124_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Match_$7124_memory_ptr_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":10619,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_struct$_Tournament_$7135_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Tournament_$7135_memory_ptr_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":11885,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_GoatNft_$8112__to_t_address__fromStack_reversed":{"entryPoint":10748,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_PongToken_$8254__to_t_address__fromStack_reversed":{"entryPoint":12178,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_TournamentNft_$8198__to_t_address__fromStack_reversed":{"entryPoint":13021,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr_t_address__to_t_string_memory_ptr_t_address__fromStack_reversed":{"entryPoint":15413,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_stringliteral_40d8d825bd46fc38ebdbe82ad5f003b63b0f8f48f5fa0d8fc9e28f84db6bac03__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14365,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_48a88b95e8c6943c3c5543ee0c6ad8f7d009a48ab4b8ecd53ced3aa366e8f172__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15116,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_623b141a8c668802eee97798d04dd23a05d99e520a3bb8abbffe39a955154d9f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15008,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_81004fe6ac4a02932b2eae4209edcfc6d4a21d20ea50616048d119ea0921c6dc__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14900,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8ae9f25dd7148543b8715f8f5912a2b61497a4b06739d3b9ade261c33ae7b70d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13619,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_cfbd3297e5ce3c0189d5ce0fe901e81167648760a96bf142a59985fc6d3fcaa4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13511,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e075ac6d8fa43b0d2071c35dbf7312ba4f3cecda52a6171c83e7b0b7d1d8c44c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13835,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e62d5747e47bcd18d9ddf74b7bcef9f67e80418a4c933197d321fea58848ef3f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15224,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ffc207f67b7ae6032b4314a089795ca325f65bfd399e4ba03a8b2ad7f3abc206__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13727,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_struct$_Match_$7124_memory_ptr__to_t_struct$_Match_$7124_memory_ptr__fromStack_reversed":{"entryPoint":12961,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_struct$_Tournament_$7135_memory_ptr__to_t_struct$_Tournament_$7135_memory_ptr__fromStack_reversed":{"entryPoint":12804,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed":{"entryPoint":11934,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint32_t_array$_t_uint16_$dyn_memory_ptr__to_t_uint32_t_array$_t_uint16_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":14598,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint32_t_uint16_t_address__to_t_uint32_t_uint16_t_address__fromStack_reversed":{"entryPoint":12090,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint8_t_uint8_t_uint16__to_t_uint8_t_uint8_t_uint16__fromStack_reversed":{"entryPoint":14196,"id":null,"parameterSlots":4,"returnSlots":1},"allocate_memory":{"entryPoint":10898,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":10090,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_array$_t_uint16_$dyn_memory_ptr":{"entryPoint":12249,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":10925,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_struct$_Match_$7124_memory_ptr_$dyn_memory_ptr":{"entryPoint":10277,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_struct$_Tournament_$7135_memory_ptr_$dyn_memory_ptr":{"entryPoint":11414,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_uint16_$dyn_memory_ptr":{"entryPoint":11489,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_struct$_Match_$7124_memory_ptr_$dyn_memory_ptr":{"entryPoint":10249,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_struct$_Tournament_$7135_memory_ptr_$dyn_memory_ptr":{"entryPoint":11386,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_uint16_$dyn_memory_ptr":{"entryPoint":11461,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":14688,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_struct$_Match_$7124_memory_ptr_$dyn_memory_ptr":{"entryPoint":10512,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_struct$_Tournament_$7135_memory_ptr_$dyn_memory_ptr":{"entryPoint":11755,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_uint16_$dyn_memory_ptr":{"entryPoint":11529,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_struct$_Match_$7124_memory_ptr_$dyn_memory_ptr_fromStack":{"entryPoint":10260,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_struct$_Tournament_$7135_memory_ptr_$dyn_memory_ptr_fromStack":{"entryPoint":11397,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_uint16_$dyn_memory_ptr":{"entryPoint":11472,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_uint16_$dyn_memory_ptr_fromStack":{"entryPoint":14487,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":13418,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":14699,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":15461,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":10142,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_rational_100_by_1":{"entryPoint":15256,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_rational_10_by_1":{"entryPoint":13867,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint16":{"entryPoint":10336,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":10110,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":11961,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint32":{"entryPoint":11430,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":10308,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_GoatNft_$8112_to_t_address":{"entryPoint":10715,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_PongToken_$8254_to_t_address":{"entryPoint":12145,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_TournamentNft_$8198_to_t_address":{"entryPoint":12988,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_rational_100_by_1_to_t_uint256":{"entryPoint":15266,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_rational_10_by_1_to_t_uint256":{"entryPoint":13877,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address":{"entryPoint":10697,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":10663,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint16_to_t_uint256":{"entryPoint":14397,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory_with_cleanup":{"entryPoint":10974,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":14710,"id":null,"parameterSlots":3,"returnSlots":0},"finalize_allocation":{"entryPoint":10849,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":10653,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint16":{"entryPoint":14646,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":13346,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":13299,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":13252,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":10802,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":10775,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":12293,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":10780,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":10105,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":10100,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":10785,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_40d8d825bd46fc38ebdbe82ad5f003b63b0f8f48f5fa0d8fc9e28f84db6bac03":{"entryPoint":14251,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_48a88b95e8c6943c3c5543ee0c6ad8f7d009a48ab4b8ecd53ced3aa366e8f172":{"entryPoint":15040,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_623b141a8c668802eee97798d04dd23a05d99e520a3bb8abbffe39a955154d9f":{"entryPoint":14932,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_81004fe6ac4a02932b2eae4209edcfc6d4a21d20ea50616048d119ea0921c6dc":{"entryPoint":14824,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_8ae9f25dd7148543b8715f8f5912a2b61497a4b06739d3b9ade261c33ae7b70d":{"entryPoint":13543,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_cfbd3297e5ce3c0189d5ce0fe901e81167648760a96bf142a59985fc6d3fcaa4":{"entryPoint":13435,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_e075ac6d8fa43b0d2071c35dbf7312ba4f3cecda52a6171c83e7b0b7d1d8c44c":{"entryPoint":13759,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_e62d5747e47bcd18d9ddf74b7bcef9f67e80418a4c933197d321fea58848ef3f":{"entryPoint":15148,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_ffc207f67b7ae6032b4314a089795ca325f65bfd399e4ba03a8b2ad7f3abc206":{"entryPoint":13651,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":10160,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint16":{"entryPoint":11101,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":11971,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint32":{"entryPoint":12205,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint8":{"entryPoint":11145,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:44989:26","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:26","statements":[{"nodeType":"YulAssignment","src":"57:19:26","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:26","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:26"},"nodeType":"YulFunctionCall","src":"67:9:26"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:26"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:26","type":""}],"src":"7:75:26"},{"body":{"nodeType":"YulBlock","src":"177:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:26"},"nodeType":"YulFunctionCall","src":"187:12:26"},"nodeType":"YulExpressionStatement","src":"187:12:26"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:26"},{"body":{"nodeType":"YulBlock","src":"300:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:26"},"nodeType":"YulFunctionCall","src":"310:12:26"},"nodeType":"YulExpressionStatement","src":"310:12:26"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:26"},{"body":{"nodeType":"YulBlock","src":"379:81:26","statements":[{"nodeType":"YulAssignment","src":"389:65:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:26"},"nodeType":"YulFunctionCall","src":"400:54:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:26"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:26","type":""}],"src":"334:126:26"},{"body":{"nodeType":"YulBlock","src":"511:51:26","statements":[{"nodeType":"YulAssignment","src":"521:35:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:26"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:26"},"nodeType":"YulFunctionCall","src":"532:24:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:26"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:26","type":""}],"src":"466:96:26"},{"body":{"nodeType":"YulBlock","src":"611:79:26","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:26"},"nodeType":"YulFunctionCall","src":"670:12:26"},"nodeType":"YulExpressionStatement","src":"670:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:26"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:26"},"nodeType":"YulFunctionCall","src":"641:24:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:26"},"nodeType":"YulFunctionCall","src":"631:35:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:26"},"nodeType":"YulFunctionCall","src":"624:43:26"},"nodeType":"YulIf","src":"621:63:26"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:26","type":""}],"src":"568:122:26"},{"body":{"nodeType":"YulBlock","src":"748:87:26","statements":[{"nodeType":"YulAssignment","src":"758:29:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"780:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"767:12:26"},"nodeType":"YulFunctionCall","src":"767:20:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"758:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"823:5:26"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"796:26:26"},"nodeType":"YulFunctionCall","src":"796:33:26"},"nodeType":"YulExpressionStatement","src":"796:33:26"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"726:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"734:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"742:5:26","type":""}],"src":"696:139:26"},{"body":{"nodeType":"YulBlock","src":"907:263:26","statements":[{"body":{"nodeType":"YulBlock","src":"953:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"955:77:26"},"nodeType":"YulFunctionCall","src":"955:79:26"},"nodeType":"YulExpressionStatement","src":"955:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"928:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"937:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"924:3:26"},"nodeType":"YulFunctionCall","src":"924:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"949:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"920:3:26"},"nodeType":"YulFunctionCall","src":"920:32:26"},"nodeType":"YulIf","src":"917:119:26"},{"nodeType":"YulBlock","src":"1046:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"1061:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"1075:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1065:6:26","type":""}]},{"nodeType":"YulAssignment","src":"1090:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1125:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"1136:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1121:3:26"},"nodeType":"YulFunctionCall","src":"1121:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1145:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1100:20:26"},"nodeType":"YulFunctionCall","src":"1100:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1090:6:26"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"877:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"888:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"900:6:26","type":""}],"src":"841:329:26"},{"body":{"nodeType":"YulBlock","src":"1273:40:26","statements":[{"nodeType":"YulAssignment","src":"1284:22:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1300:5:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1294:5:26"},"nodeType":"YulFunctionCall","src":"1294:12:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1284:6:26"}]}]},"name":"array_length_t_array$_t_struct$_Match_$7124_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1256:5:26","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1266:6:26","type":""}],"src":"1176:137:26"},{"body":{"nodeType":"YulBlock","src":"1453:73:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1470:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"1475:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1463:6:26"},"nodeType":"YulFunctionCall","src":"1463:19:26"},"nodeType":"YulExpressionStatement","src":"1463:19:26"},{"nodeType":"YulAssignment","src":"1491:29:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1510:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"1515:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1506:3:26"},"nodeType":"YulFunctionCall","src":"1506:14:26"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"1491:11:26"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_struct$_Match_$7124_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1425:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"1430:6:26","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"1441:11:26","type":""}],"src":"1319:207:26"},{"body":{"nodeType":"YulBlock","src":"1627:60:26","statements":[{"nodeType":"YulAssignment","src":"1637:11:26","value":{"name":"ptr","nodeType":"YulIdentifier","src":"1645:3:26"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"1637:4:26"}]},{"nodeType":"YulAssignment","src":"1658:22:26","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1670:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"1675:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1666:3:26"},"nodeType":"YulFunctionCall","src":"1666:14:26"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"1658:4:26"}]}]},"name":"array_dataslot_t_array$_t_struct$_Match_$7124_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"1614:3:26","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"1622:4:26","type":""}],"src":"1532:155:26"},{"body":{"nodeType":"YulBlock","src":"1748:53:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1765:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1788:5:26"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1770:17:26"},"nodeType":"YulFunctionCall","src":"1770:24:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1758:6:26"},"nodeType":"YulFunctionCall","src":"1758:37:26"},"nodeType":"YulExpressionStatement","src":"1758:37:26"}]},"name":"abi_encode_t_address_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1736:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1743:3:26","type":""}],"src":"1693:108:26"},{"body":{"nodeType":"YulBlock","src":"1850:43:26","statements":[{"nodeType":"YulAssignment","src":"1860:27:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1875:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"1882:4:26","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1871:3:26"},"nodeType":"YulFunctionCall","src":"1871:16:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1860:7:26"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1832:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1842:7:26","type":""}],"src":"1807:86:26"},{"body":{"nodeType":"YulBlock","src":"1950:51:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1967:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1988:5:26"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"1972:15:26"},"nodeType":"YulFunctionCall","src":"1972:22:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1960:6:26"},"nodeType":"YulFunctionCall","src":"1960:35:26"},"nodeType":"YulExpressionStatement","src":"1960:35:26"}]},"name":"abi_encode_t_uint8_to_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1938:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1945:3:26","type":""}],"src":"1899:102:26"},{"body":{"nodeType":"YulBlock","src":"2051:45:26","statements":[{"nodeType":"YulAssignment","src":"2061:29:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2076:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"2083:6:26","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2072:3:26"},"nodeType":"YulFunctionCall","src":"2072:18:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2061:7:26"}]}]},"name":"cleanup_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2033:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2043:7:26","type":""}],"src":"2007:89:26"},{"body":{"nodeType":"YulBlock","src":"2155:52:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2172:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2194:5:26"}],"functionName":{"name":"cleanup_t_uint16","nodeType":"YulIdentifier","src":"2177:16:26"},"nodeType":"YulFunctionCall","src":"2177:23:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2165:6:26"},"nodeType":"YulFunctionCall","src":"2165:36:26"},"nodeType":"YulExpressionStatement","src":"2165:36:26"}]},"name":"abi_encode_t_uint16_to_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2143:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2150:3:26","type":""}],"src":"2102:105:26"},{"body":{"nodeType":"YulBlock","src":"2381:1104:26","statements":[{"nodeType":"YulVariableDeclaration","src":"2391:26:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2407:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"2412:4:26","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2403:3:26"},"nodeType":"YulFunctionCall","src":"2403:14:26"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"2395:4:26","type":""}]},{"nodeType":"YulBlock","src":"2427:167:26","statements":[{"nodeType":"YulVariableDeclaration","src":"2465:43:26","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2495:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"2502:4:26","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2491:3:26"},"nodeType":"YulFunctionCall","src":"2491:16:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2485:5:26"},"nodeType":"YulFunctionCall","src":"2485:23:26"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"2469:12:26","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"2555:12:26"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2573:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"2578:4:26","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2569:3:26"},"nodeType":"YulFunctionCall","src":"2569:14:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"2521:33:26"},"nodeType":"YulFunctionCall","src":"2521:63:26"},"nodeType":"YulExpressionStatement","src":"2521:63:26"}]},{"nodeType":"YulBlock","src":"2604:167:26","statements":[{"nodeType":"YulVariableDeclaration","src":"2642:43:26","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2672:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"2679:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2668:3:26"},"nodeType":"YulFunctionCall","src":"2668:16:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2662:5:26"},"nodeType":"YulFunctionCall","src":"2662:23:26"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"2646:12:26","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"2732:12:26"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2750:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"2755:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2746:3:26"},"nodeType":"YulFunctionCall","src":"2746:14:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"2698:33:26"},"nodeType":"YulFunctionCall","src":"2698:63:26"},"nodeType":"YulExpressionStatement","src":"2698:63:26"}]},{"nodeType":"YulBlock","src":"2781:166:26","statements":[{"nodeType":"YulVariableDeclaration","src":"2818:43:26","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2848:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"2855:4:26","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2844:3:26"},"nodeType":"YulFunctionCall","src":"2844:16:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2838:5:26"},"nodeType":"YulFunctionCall","src":"2838:23:26"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"2822:12:26","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"2908:12:26"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2926:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"2931:4:26","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2922:3:26"},"nodeType":"YulFunctionCall","src":"2922:14:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"2874:33:26"},"nodeType":"YulFunctionCall","src":"2874:63:26"},"nodeType":"YulExpressionStatement","src":"2874:63:26"}]},{"nodeType":"YulBlock","src":"2957:168:26","statements":[{"nodeType":"YulVariableDeclaration","src":"3000:43:26","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3030:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"3037:4:26","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3026:3:26"},"nodeType":"YulFunctionCall","src":"3026:16:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3020:5:26"},"nodeType":"YulFunctionCall","src":"3020:23:26"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"3004:12:26","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"3086:12:26"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3104:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"3109:4:26","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3100:3:26"},"nodeType":"YulFunctionCall","src":"3100:14:26"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8","nodeType":"YulIdentifier","src":"3056:29:26"},"nodeType":"YulFunctionCall","src":"3056:59:26"},"nodeType":"YulExpressionStatement","src":"3056:59:26"}]},{"nodeType":"YulBlock","src":"3135:168:26","statements":[{"nodeType":"YulVariableDeclaration","src":"3178:43:26","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3208:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"3215:4:26","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3204:3:26"},"nodeType":"YulFunctionCall","src":"3204:16:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3198:5:26"},"nodeType":"YulFunctionCall","src":"3198:23:26"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"3182:12:26","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"3264:12:26"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3282:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"3287:4:26","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3278:3:26"},"nodeType":"YulFunctionCall","src":"3278:14:26"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8","nodeType":"YulIdentifier","src":"3234:29:26"},"nodeType":"YulFunctionCall","src":"3234:59:26"},"nodeType":"YulExpressionStatement","src":"3234:59:26"}]},{"nodeType":"YulBlock","src":"3313:165:26","statements":[{"nodeType":"YulVariableDeclaration","src":"3351:43:26","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3381:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"3388:4:26","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3377:3:26"},"nodeType":"YulFunctionCall","src":"3377:16:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3371:5:26"},"nodeType":"YulFunctionCall","src":"3371:23:26"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"3355:12:26","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"3439:12:26"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3457:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"3462:4:26","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3453:3:26"},"nodeType":"YulFunctionCall","src":"3453:14:26"}],"functionName":{"name":"abi_encode_t_uint16_to_t_uint16","nodeType":"YulIdentifier","src":"3407:31:26"},"nodeType":"YulFunctionCall","src":"3407:61:26"},"nodeType":"YulExpressionStatement","src":"3407:61:26"}]}]},"name":"abi_encode_t_struct$_Match_$7124_memory_ptr_to_t_struct$_Match_$7124_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2368:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2375:3:26","type":""}],"src":"2279:1206:26"},{"body":{"nodeType":"YulBlock","src":"3617:145:26","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3707:6:26"},{"name":"pos","nodeType":"YulIdentifier","src":"3715:3:26"}],"functionName":{"name":"abi_encode_t_struct$_Match_$7124_memory_ptr_to_t_struct$_Match_$7124_memory_ptr","nodeType":"YulIdentifier","src":"3627:79:26"},"nodeType":"YulFunctionCall","src":"3627:92:26"},"nodeType":"YulExpressionStatement","src":"3627:92:26"},{"nodeType":"YulAssignment","src":"3728:28:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3746:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"3751:4:26","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3742:3:26"},"nodeType":"YulFunctionCall","src":"3742:14:26"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"3728:10:26"}]}]},"name":"abi_encodeUpdatedPos_t_struct$_Match_$7124_memory_ptr_to_t_struct$_Match_$7124_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"3590:6:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3598:3:26","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"3606:10:26","type":""}],"src":"3491:271:26"},{"body":{"nodeType":"YulBlock","src":"3866:38:26","statements":[{"nodeType":"YulAssignment","src":"3876:22:26","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3888:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"3893:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3884:3:26"},"nodeType":"YulFunctionCall","src":"3884:14:26"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"3876:4:26"}]}]},"name":"array_nextElement_t_array$_t_struct$_Match_$7124_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"3853:3:26","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"3861:4:26","type":""}],"src":"3768:136:26"},{"body":{"nodeType":"YulBlock","src":"4150:746:26","statements":[{"nodeType":"YulVariableDeclaration","src":"4160:91:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4245:5:26"}],"functionName":{"name":"array_length_t_array$_t_struct$_Match_$7124_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"4174:70:26"},"nodeType":"YulFunctionCall","src":"4174:77:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4164:6:26","type":""}]},{"nodeType":"YulAssignment","src":"4260:116:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4364:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"4369:6:26"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_struct$_Match_$7124_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4267:96:26"},"nodeType":"YulFunctionCall","src":"4267:109:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4260:3:26"}]},{"nodeType":"YulVariableDeclaration","src":"4385:94:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4473:5:26"}],"functionName":{"name":"array_dataslot_t_array$_t_struct$_Match_$7124_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"4400:72:26"},"nodeType":"YulFunctionCall","src":"4400:79:26"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"4389:7:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4488:21:26","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"4502:7:26"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"4492:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"4578:293:26","statements":[{"nodeType":"YulVariableDeclaration","src":"4592:34:26","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"4619:6:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4613:5:26"},"nodeType":"YulFunctionCall","src":"4613:13:26"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"4596:13:26","type":""}]},{"nodeType":"YulAssignment","src":"4639:116:26","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"4736:13:26"},{"name":"pos","nodeType":"YulIdentifier","src":"4751:3:26"}],"functionName":{"name":"abi_encodeUpdatedPos_t_struct$_Match_$7124_memory_ptr_to_t_struct$_Match_$7124_memory_ptr","nodeType":"YulIdentifier","src":"4646:89:26"},"nodeType":"YulFunctionCall","src":"4646:109:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4639:3:26"}]},{"nodeType":"YulAssignment","src":"4768:93:26","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"4854:6:26"}],"functionName":{"name":"array_nextElement_t_array$_t_struct$_Match_$7124_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"4778:75:26"},"nodeType":"YulFunctionCall","src":"4778:83:26"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"4768:6:26"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4540:1:26"},{"name":"length","nodeType":"YulIdentifier","src":"4543:6:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4537:2:26"},"nodeType":"YulFunctionCall","src":"4537:13:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4551:18:26","statements":[{"nodeType":"YulAssignment","src":"4553:14:26","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4562:1:26"},{"kind":"number","nodeType":"YulLiteral","src":"4565:1:26","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4558:3:26"},"nodeType":"YulFunctionCall","src":"4558:9:26"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"4553:1:26"}]}]},"pre":{"nodeType":"YulBlock","src":"4522:14:26","statements":[{"nodeType":"YulVariableDeclaration","src":"4524:10:26","value":{"kind":"number","nodeType":"YulLiteral","src":"4533:1:26","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"4528:1:26","type":""}]}]},"src":"4518:353:26"},{"nodeType":"YulAssignment","src":"4880:10:26","value":{"name":"pos","nodeType":"YulIdentifier","src":"4887:3:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4880:3:26"}]}]},"name":"abi_encode_t_array$_t_struct$_Match_$7124_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Match_$7124_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4129:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4136:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4145:3:26","type":""}],"src":"3980:916:26"},{"body":{"nodeType":"YulBlock","src":"5096:271:26","statements":[{"nodeType":"YulAssignment","src":"5106:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5118:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"5129:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5114:3:26"},"nodeType":"YulFunctionCall","src":"5114:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5106:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5153:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"5164:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5149:3:26"},"nodeType":"YulFunctionCall","src":"5149:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5172:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"5178:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5168:3:26"},"nodeType":"YulFunctionCall","src":"5168:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5142:6:26"},"nodeType":"YulFunctionCall","src":"5142:47:26"},"nodeType":"YulExpressionStatement","src":"5142:47:26"},{"nodeType":"YulAssignment","src":"5198:162:26","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5346:6:26"},{"name":"tail","nodeType":"YulIdentifier","src":"5355:4:26"}],"functionName":{"name":"abi_encode_t_array$_t_struct$_Match_$7124_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Match_$7124_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5206:139:26"},"nodeType":"YulFunctionCall","src":"5206:154:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5198:4:26"}]}]},"name":"abi_encode_tuple_t_array$_t_struct$_Match_$7124_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Match_$7124_memory_ptr_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5068:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5080:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5091:4:26","type":""}],"src":"4902:465:26"},{"body":{"nodeType":"YulBlock","src":"5405:28:26","statements":[{"nodeType":"YulAssignment","src":"5415:12:26","value":{"name":"value","nodeType":"YulIdentifier","src":"5422:5:26"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5415:3:26"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5391:5:26","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5401:3:26","type":""}],"src":"5373:60:26"},{"body":{"nodeType":"YulBlock","src":"5499:82:26","statements":[{"nodeType":"YulAssignment","src":"5509:66:26","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5567:5:26"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"5549:17:26"},"nodeType":"YulFunctionCall","src":"5549:24:26"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"5540:8:26"},"nodeType":"YulFunctionCall","src":"5540:34:26"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"5522:17:26"},"nodeType":"YulFunctionCall","src":"5522:53:26"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"5509:9:26"}]}]},"name":"convert_t_uint160_to_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5479:5:26","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"5489:9:26","type":""}],"src":"5439:142:26"},{"body":{"nodeType":"YulBlock","src":"5647:66:26","statements":[{"nodeType":"YulAssignment","src":"5657:50:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5701:5:26"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nodeType":"YulIdentifier","src":"5670:30:26"},"nodeType":"YulFunctionCall","src":"5670:37:26"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"5657:9:26"}]}]},"name":"convert_t_uint160_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5627:5:26","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"5637:9:26","type":""}],"src":"5587:126:26"},{"body":{"nodeType":"YulBlock","src":"5795:66:26","statements":[{"nodeType":"YulAssignment","src":"5805:50:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5849:5:26"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"5818:30:26"},"nodeType":"YulFunctionCall","src":"5818:37:26"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"5805:9:26"}]}]},"name":"convert_t_contract$_GoatNft_$8112_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5775:5:26","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"5785:9:26","type":""}],"src":"5719:142:26"},{"body":{"nodeType":"YulBlock","src":"5948:82:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5965:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6017:5:26"}],"functionName":{"name":"convert_t_contract$_GoatNft_$8112_to_t_address","nodeType":"YulIdentifier","src":"5970:46:26"},"nodeType":"YulFunctionCall","src":"5970:53:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5958:6:26"},"nodeType":"YulFunctionCall","src":"5958:66:26"},"nodeType":"YulExpressionStatement","src":"5958:66:26"}]},"name":"abi_encode_t_contract$_GoatNft_$8112_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5936:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5943:3:26","type":""}],"src":"5867:163:26"},{"body":{"nodeType":"YulBlock","src":"6150:140:26","statements":[{"nodeType":"YulAssignment","src":"6160:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6172:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"6183:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6168:3:26"},"nodeType":"YulFunctionCall","src":"6168:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6160:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6256:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6269:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"6280:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6265:3:26"},"nodeType":"YulFunctionCall","src":"6265:17:26"}],"functionName":{"name":"abi_encode_t_contract$_GoatNft_$8112_to_t_address_fromStack","nodeType":"YulIdentifier","src":"6196:59:26"},"nodeType":"YulFunctionCall","src":"6196:87:26"},"nodeType":"YulExpressionStatement","src":"6196:87:26"}]},"name":"abi_encode_tuple_t_contract$_GoatNft_$8112__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6122:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6134:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6145:4:26","type":""}],"src":"6036:254:26"},{"body":{"nodeType":"YulBlock","src":"6385:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6402:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6405:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6395:6:26"},"nodeType":"YulFunctionCall","src":"6395:12:26"},"nodeType":"YulExpressionStatement","src":"6395:12:26"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"6296:117:26"},{"body":{"nodeType":"YulBlock","src":"6508:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6525:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6528:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6518:6:26"},"nodeType":"YulFunctionCall","src":"6518:12:26"},"nodeType":"YulExpressionStatement","src":"6518:12:26"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"6419:117:26"},{"body":{"nodeType":"YulBlock","src":"6590:54:26","statements":[{"nodeType":"YulAssignment","src":"6600:38:26","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6618:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"6625:2:26","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6614:3:26"},"nodeType":"YulFunctionCall","src":"6614:14:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6634:2:26","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6630:3:26"},"nodeType":"YulFunctionCall","src":"6630:7:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6610:3:26"},"nodeType":"YulFunctionCall","src":"6610:28:26"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"6600:6:26"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6573:5:26","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"6583:6:26","type":""}],"src":"6542:102:26"},{"body":{"nodeType":"YulBlock","src":"6678:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6695:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6698:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6688:6:26"},"nodeType":"YulFunctionCall","src":"6688:88:26"},"nodeType":"YulExpressionStatement","src":"6688:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6792:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6795:4:26","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6785:6:26"},"nodeType":"YulFunctionCall","src":"6785:15:26"},"nodeType":"YulExpressionStatement","src":"6785:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6816:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6819:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6809:6:26"},"nodeType":"YulFunctionCall","src":"6809:15:26"},"nodeType":"YulExpressionStatement","src":"6809:15:26"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"6650:180:26"},{"body":{"nodeType":"YulBlock","src":"6879:238:26","statements":[{"nodeType":"YulVariableDeclaration","src":"6889:58:26","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6911:6:26"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"6941:4:26"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"6919:21:26"},"nodeType":"YulFunctionCall","src":"6919:27:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6907:3:26"},"nodeType":"YulFunctionCall","src":"6907:40:26"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"6893:10:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"7058:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7060:16:26"},"nodeType":"YulFunctionCall","src":"7060:18:26"},"nodeType":"YulExpressionStatement","src":"7060:18:26"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7001:10:26"},{"kind":"number","nodeType":"YulLiteral","src":"7013:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6998:2:26"},"nodeType":"YulFunctionCall","src":"6998:34:26"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7037:10:26"},{"name":"memPtr","nodeType":"YulIdentifier","src":"7049:6:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7034:2:26"},"nodeType":"YulFunctionCall","src":"7034:22:26"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"6995:2:26"},"nodeType":"YulFunctionCall","src":"6995:62:26"},"nodeType":"YulIf","src":"6992:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7096:2:26","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7100:10:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7089:6:26"},"nodeType":"YulFunctionCall","src":"7089:22:26"},"nodeType":"YulExpressionStatement","src":"7089:22:26"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"6865:6:26","type":""},{"name":"size","nodeType":"YulTypedName","src":"6873:4:26","type":""}],"src":"6836:281:26"},{"body":{"nodeType":"YulBlock","src":"7164:88:26","statements":[{"nodeType":"YulAssignment","src":"7174:30:26","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"7184:18:26"},"nodeType":"YulFunctionCall","src":"7184:20:26"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7174:6:26"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7233:6:26"},{"name":"size","nodeType":"YulIdentifier","src":"7241:4:26"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"7213:19:26"},"nodeType":"YulFunctionCall","src":"7213:33:26"},"nodeType":"YulExpressionStatement","src":"7213:33:26"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"7148:4:26","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"7157:6:26","type":""}],"src":"7123:129:26"},{"body":{"nodeType":"YulBlock","src":"7325:241:26","statements":[{"body":{"nodeType":"YulBlock","src":"7430:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7432:16:26"},"nodeType":"YulFunctionCall","src":"7432:18:26"},"nodeType":"YulExpressionStatement","src":"7432:18:26"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7402:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"7410:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7399:2:26"},"nodeType":"YulFunctionCall","src":"7399:30:26"},"nodeType":"YulIf","src":"7396:56:26"},{"nodeType":"YulAssignment","src":"7462:37:26","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7492:6:26"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"7470:21:26"},"nodeType":"YulFunctionCall","src":"7470:29:26"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"7462:4:26"}]},{"nodeType":"YulAssignment","src":"7536:23:26","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"7548:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"7554:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7544:3:26"},"nodeType":"YulFunctionCall","src":"7544:15:26"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"7536:4:26"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"7309:6:26","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"7320:4:26","type":""}],"src":"7258:308:26"},{"body":{"nodeType":"YulBlock","src":"7636:82:26","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7659:3:26"},{"name":"src","nodeType":"YulIdentifier","src":"7664:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"7669:6:26"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"7646:12:26"},"nodeType":"YulFunctionCall","src":"7646:30:26"},"nodeType":"YulExpressionStatement","src":"7646:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7696:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"7701:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7692:3:26"},"nodeType":"YulFunctionCall","src":"7692:16:26"},{"kind":"number","nodeType":"YulLiteral","src":"7710:1:26","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7685:6:26"},"nodeType":"YulFunctionCall","src":"7685:27:26"},"nodeType":"YulExpressionStatement","src":"7685:27:26"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"7618:3:26","type":""},{"name":"dst","nodeType":"YulTypedName","src":"7623:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"7628:6:26","type":""}],"src":"7572:146:26"},{"body":{"nodeType":"YulBlock","src":"7808:341:26","statements":[{"nodeType":"YulAssignment","src":"7818:75:26","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7885:6:26"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"7843:41:26"},"nodeType":"YulFunctionCall","src":"7843:49:26"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"7827:15:26"},"nodeType":"YulFunctionCall","src":"7827:66:26"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"7818:5:26"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"7909:5:26"},{"name":"length","nodeType":"YulIdentifier","src":"7916:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7902:6:26"},"nodeType":"YulFunctionCall","src":"7902:21:26"},"nodeType":"YulExpressionStatement","src":"7902:21:26"},{"nodeType":"YulVariableDeclaration","src":"7932:27:26","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"7947:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"7954:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7943:3:26"},"nodeType":"YulFunctionCall","src":"7943:16:26"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"7936:3:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"7997:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"7999:77:26"},"nodeType":"YulFunctionCall","src":"7999:79:26"},"nodeType":"YulExpressionStatement","src":"7999:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7978:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"7983:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7974:3:26"},"nodeType":"YulFunctionCall","src":"7974:16:26"},{"name":"end","nodeType":"YulIdentifier","src":"7992:3:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7971:2:26"},"nodeType":"YulFunctionCall","src":"7971:25:26"},"nodeType":"YulIf","src":"7968:112:26"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8126:3:26"},{"name":"dst","nodeType":"YulIdentifier","src":"8131:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"8136:6:26"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"8089:36:26"},"nodeType":"YulFunctionCall","src":"8089:54:26"},"nodeType":"YulExpressionStatement","src":"8089:54:26"}]},"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"7781:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"7786:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"7794:3:26","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"7802:5:26","type":""}],"src":"7724:425:26"},{"body":{"nodeType":"YulBlock","src":"8231:278:26","statements":[{"body":{"nodeType":"YulBlock","src":"8280:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"8282:77:26"},"nodeType":"YulFunctionCall","src":"8282:79:26"},"nodeType":"YulExpressionStatement","src":"8282:79:26"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8259:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"8267:4:26","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8255:3:26"},"nodeType":"YulFunctionCall","src":"8255:17:26"},{"name":"end","nodeType":"YulIdentifier","src":"8274:3:26"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8251:3:26"},"nodeType":"YulFunctionCall","src":"8251:27:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8244:6:26"},"nodeType":"YulFunctionCall","src":"8244:35:26"},"nodeType":"YulIf","src":"8241:122:26"},{"nodeType":"YulVariableDeclaration","src":"8372:34:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8399:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8386:12:26"},"nodeType":"YulFunctionCall","src":"8386:20:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"8376:6:26","type":""}]},{"nodeType":"YulAssignment","src":"8415:88:26","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8476:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"8484:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8472:3:26"},"nodeType":"YulFunctionCall","src":"8472:17:26"},{"name":"length","nodeType":"YulIdentifier","src":"8491:6:26"},{"name":"end","nodeType":"YulIdentifier","src":"8499:3:26"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"8424:47:26"},"nodeType":"YulFunctionCall","src":"8424:79:26"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"8415:5:26"}]}]},"name":"abi_decode_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"8209:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"8217:3:26","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"8225:5:26","type":""}],"src":"8169:340:26"},{"body":{"nodeType":"YulBlock","src":"8557:78:26","statements":[{"body":{"nodeType":"YulBlock","src":"8613:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8622:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8625:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8615:6:26"},"nodeType":"YulFunctionCall","src":"8615:12:26"},"nodeType":"YulExpressionStatement","src":"8615:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8580:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8604:5:26"}],"functionName":{"name":"cleanup_t_uint16","nodeType":"YulIdentifier","src":"8587:16:26"},"nodeType":"YulFunctionCall","src":"8587:23:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8577:2:26"},"nodeType":"YulFunctionCall","src":"8577:34:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8570:6:26"},"nodeType":"YulFunctionCall","src":"8570:42:26"},"nodeType":"YulIf","src":"8567:62:26"}]},"name":"validator_revert_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8550:5:26","type":""}],"src":"8515:120:26"},{"body":{"nodeType":"YulBlock","src":"8692:86:26","statements":[{"nodeType":"YulAssignment","src":"8702:29:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8724:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8711:12:26"},"nodeType":"YulFunctionCall","src":"8711:20:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"8702:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8766:5:26"}],"functionName":{"name":"validator_revert_t_uint16","nodeType":"YulIdentifier","src":"8740:25:26"},"nodeType":"YulFunctionCall","src":"8740:32:26"},"nodeType":"YulExpressionStatement","src":"8740:32:26"}]},"name":"abi_decode_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"8670:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"8678:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"8686:5:26","type":""}],"src":"8641:137:26"},{"body":{"nodeType":"YulBlock","src":"8825:77:26","statements":[{"body":{"nodeType":"YulBlock","src":"8880:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8889:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8892:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8882:6:26"},"nodeType":"YulFunctionCall","src":"8882:12:26"},"nodeType":"YulExpressionStatement","src":"8882:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8848:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8871:5:26"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"8855:15:26"},"nodeType":"YulFunctionCall","src":"8855:22:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8845:2:26"},"nodeType":"YulFunctionCall","src":"8845:33:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8838:6:26"},"nodeType":"YulFunctionCall","src":"8838:41:26"},"nodeType":"YulIf","src":"8835:61:26"}]},"name":"validator_revert_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8818:5:26","type":""}],"src":"8784:118:26"},{"body":{"nodeType":"YulBlock","src":"8958:85:26","statements":[{"nodeType":"YulAssignment","src":"8968:29:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8990:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8977:12:26"},"nodeType":"YulFunctionCall","src":"8977:20:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"8968:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9031:5:26"}],"functionName":{"name":"validator_revert_t_uint8","nodeType":"YulIdentifier","src":"9006:24:26"},"nodeType":"YulFunctionCall","src":"9006:31:26"},"nodeType":"YulExpressionStatement","src":"9006:31:26"}]},"name":"abi_decode_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"8936:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"8944:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"8952:5:26","type":""}],"src":"8908:135:26"},{"body":{"nodeType":"YulBlock","src":"9215:1241:26","statements":[{"body":{"nodeType":"YulBlock","src":"9262:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"9264:77:26"},"nodeType":"YulFunctionCall","src":"9264:79:26"},"nodeType":"YulExpressionStatement","src":"9264:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9236:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"9245:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9232:3:26"},"nodeType":"YulFunctionCall","src":"9232:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"9257:3:26","type":"","value":"192"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9228:3:26"},"nodeType":"YulFunctionCall","src":"9228:33:26"},"nodeType":"YulIf","src":"9225:120:26"},{"nodeType":"YulBlock","src":"9355:287:26","statements":[{"nodeType":"YulVariableDeclaration","src":"9370:45:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9401:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"9412:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9397:3:26"},"nodeType":"YulFunctionCall","src":"9397:17:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9384:12:26"},"nodeType":"YulFunctionCall","src":"9384:31:26"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9374:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"9462:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"9464:77:26"},"nodeType":"YulFunctionCall","src":"9464:79:26"},"nodeType":"YulExpressionStatement","src":"9464:79:26"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9434:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"9442:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9431:2:26"},"nodeType":"YulFunctionCall","src":"9431:30:26"},"nodeType":"YulIf","src":"9428:117:26"},{"nodeType":"YulAssignment","src":"9559:73:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9604:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"9615:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9600:3:26"},"nodeType":"YulFunctionCall","src":"9600:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9624:7:26"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"9569:30:26"},"nodeType":"YulFunctionCall","src":"9569:63:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9559:6:26"}]}]},{"nodeType":"YulBlock","src":"9652:288:26","statements":[{"nodeType":"YulVariableDeclaration","src":"9667:46:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9698:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"9709:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9694:3:26"},"nodeType":"YulFunctionCall","src":"9694:18:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9681:12:26"},"nodeType":"YulFunctionCall","src":"9681:32:26"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9671:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"9760:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"9762:77:26"},"nodeType":"YulFunctionCall","src":"9762:79:26"},"nodeType":"YulExpressionStatement","src":"9762:79:26"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9732:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"9740:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9729:2:26"},"nodeType":"YulFunctionCall","src":"9729:30:26"},"nodeType":"YulIf","src":"9726:117:26"},{"nodeType":"YulAssignment","src":"9857:73:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9902:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"9913:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9898:3:26"},"nodeType":"YulFunctionCall","src":"9898:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9922:7:26"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"9867:30:26"},"nodeType":"YulFunctionCall","src":"9867:63:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"9857:6:26"}]}]},{"nodeType":"YulBlock","src":"9950:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"9965:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"9979:2:26","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9969:6:26","type":""}]},{"nodeType":"YulAssignment","src":"9995:62:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10029:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"10040:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10025:3:26"},"nodeType":"YulFunctionCall","src":"10025:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10049:7:26"}],"functionName":{"name":"abi_decode_t_uint16","nodeType":"YulIdentifier","src":"10005:19:26"},"nodeType":"YulFunctionCall","src":"10005:52:26"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"9995:6:26"}]}]},{"nodeType":"YulBlock","src":"10077:116:26","statements":[{"nodeType":"YulVariableDeclaration","src":"10092:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"10106:2:26","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10096:6:26","type":""}]},{"nodeType":"YulAssignment","src":"10122:61:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10155:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"10166:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10151:3:26"},"nodeType":"YulFunctionCall","src":"10151:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10175:7:26"}],"functionName":{"name":"abi_decode_t_uint8","nodeType":"YulIdentifier","src":"10132:18:26"},"nodeType":"YulFunctionCall","src":"10132:51:26"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"10122:6:26"}]}]},{"nodeType":"YulBlock","src":"10203:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"10218:17:26","value":{"kind":"number","nodeType":"YulLiteral","src":"10232:3:26","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10222:6:26","type":""}]},{"nodeType":"YulAssignment","src":"10249:61:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10282:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"10293:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10278:3:26"},"nodeType":"YulFunctionCall","src":"10278:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10302:7:26"}],"functionName":{"name":"abi_decode_t_uint8","nodeType":"YulIdentifier","src":"10259:18:26"},"nodeType":"YulFunctionCall","src":"10259:51:26"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"10249:6:26"}]}]},{"nodeType":"YulBlock","src":"10330:119:26","statements":[{"nodeType":"YulVariableDeclaration","src":"10345:17:26","value":{"kind":"number","nodeType":"YulLiteral","src":"10359:3:26","type":"","value":"160"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10349:6:26","type":""}]},{"nodeType":"YulAssignment","src":"10376:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10411:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"10422:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10407:3:26"},"nodeType":"YulFunctionCall","src":"10407:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10431:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10386:20:26"},"nodeType":"YulFunctionCall","src":"10386:53:26"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"10376:6:26"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint16t_uint8t_uint8t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9145:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9156:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9168:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9176:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9184:6:26","type":""},{"name":"value3","nodeType":"YulTypedName","src":"9192:6:26","type":""},{"name":"value4","nodeType":"YulTypedName","src":"9200:6:26","type":""},{"name":"value5","nodeType":"YulTypedName","src":"9208:6:26","type":""}],"src":"9049:1407:26"},{"body":{"nodeType":"YulBlock","src":"10564:40:26","statements":[{"nodeType":"YulAssignment","src":"10575:22:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10591:5:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10585:5:26"},"nodeType":"YulFunctionCall","src":"10585:12:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"10575:6:26"}]}]},"name":"array_length_t_array$_t_struct$_Tournament_$7135_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10547:5:26","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"10557:6:26","type":""}],"src":"10462:142:26"},{"body":{"nodeType":"YulBlock","src":"10749:73:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10766:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"10771:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10759:6:26"},"nodeType":"YulFunctionCall","src":"10759:19:26"},"nodeType":"YulExpressionStatement","src":"10759:19:26"},{"nodeType":"YulAssignment","src":"10787:29:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10806:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"10811:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10802:3:26"},"nodeType":"YulFunctionCall","src":"10802:14:26"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"10787:11:26"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_struct$_Tournament_$7135_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10721:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"10726:6:26","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"10737:11:26","type":""}],"src":"10610:212:26"},{"body":{"nodeType":"YulBlock","src":"10928:60:26","statements":[{"nodeType":"YulAssignment","src":"10938:11:26","value":{"name":"ptr","nodeType":"YulIdentifier","src":"10946:3:26"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"10938:4:26"}]},{"nodeType":"YulAssignment","src":"10959:22:26","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"10971:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"10976:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10967:3:26"},"nodeType":"YulFunctionCall","src":"10967:14:26"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"10959:4:26"}]}]},"name":"array_dataslot_t_array$_t_struct$_Tournament_$7135_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"10915:3:26","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"10923:4:26","type":""}],"src":"10828:160:26"},{"body":{"nodeType":"YulBlock","src":"11038:49:26","statements":[{"nodeType":"YulAssignment","src":"11048:33:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11063:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"11070:10:26","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11059:3:26"},"nodeType":"YulFunctionCall","src":"11059:22:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"11048:7:26"}]}]},"name":"cleanup_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11020:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"11030:7:26","type":""}],"src":"10994:93:26"},{"body":{"nodeType":"YulBlock","src":"11146:52:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11163:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11185:5:26"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"11168:16:26"},"nodeType":"YulFunctionCall","src":"11168:23:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11156:6:26"},"nodeType":"YulFunctionCall","src":"11156:36:26"},"nodeType":"YulExpressionStatement","src":"11156:36:26"}]},"name":"abi_encode_t_uint32_to_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11134:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11141:3:26","type":""}],"src":"11093:105:26"},{"body":{"nodeType":"YulBlock","src":"11277:40:26","statements":[{"nodeType":"YulAssignment","src":"11288:22:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11304:5:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11298:5:26"},"nodeType":"YulFunctionCall","src":"11298:12:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"11288:6:26"}]}]},"name":"array_length_t_array$_t_uint16_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11260:5:26","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"11270:6:26","type":""}],"src":"11204:113:26"},{"body":{"nodeType":"YulBlock","src":"11423:73:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11440:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"11445:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11433:6:26"},"nodeType":"YulFunctionCall","src":"11433:19:26"},"nodeType":"YulExpressionStatement","src":"11433:19:26"},{"nodeType":"YulAssignment","src":"11461:29:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11480:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"11485:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11476:3:26"},"nodeType":"YulFunctionCall","src":"11476:14:26"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"11461:11:26"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint16_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11395:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"11400:6:26","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"11411:11:26","type":""}],"src":"11323:173:26"},{"body":{"nodeType":"YulBlock","src":"11573:60:26","statements":[{"nodeType":"YulAssignment","src":"11583:11:26","value":{"name":"ptr","nodeType":"YulIdentifier","src":"11591:3:26"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"11583:4:26"}]},{"nodeType":"YulAssignment","src":"11604:22:26","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"11616:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"11621:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11612:3:26"},"nodeType":"YulFunctionCall","src":"11612:14:26"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"11604:4:26"}]}]},"name":"array_dataslot_t_array$_t_uint16_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"11560:3:26","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"11568:4:26","type":""}],"src":"11502:131:26"},{"body":{"nodeType":"YulBlock","src":"11717:97:26","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11759:6:26"},{"name":"pos","nodeType":"YulIdentifier","src":"11767:3:26"}],"functionName":{"name":"abi_encode_t_uint16_to_t_uint16","nodeType":"YulIdentifier","src":"11727:31:26"},"nodeType":"YulFunctionCall","src":"11727:44:26"},"nodeType":"YulExpressionStatement","src":"11727:44:26"},{"nodeType":"YulAssignment","src":"11780:28:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11798:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"11803:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11794:3:26"},"nodeType":"YulFunctionCall","src":"11794:14:26"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"11780:10:26"}]}]},"name":"abi_encodeUpdatedPos_t_uint16_to_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"11690:6:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11698:3:26","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"11706:10:26","type":""}],"src":"11639:175:26"},{"body":{"nodeType":"YulBlock","src":"11894:38:26","statements":[{"nodeType":"YulAssignment","src":"11904:22:26","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"11916:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"11921:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11912:3:26"},"nodeType":"YulFunctionCall","src":"11912:14:26"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"11904:4:26"}]}]},"name":"array_nextElement_t_array$_t_uint16_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"11881:3:26","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"11889:4:26","type":""}],"src":"11820:112:26"},{"body":{"nodeType":"YulBlock","src":"12078:592:26","statements":[{"nodeType":"YulVariableDeclaration","src":"12088:67:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12149:5:26"}],"functionName":{"name":"array_length_t_array$_t_uint16_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"12102:46:26"},"nodeType":"YulFunctionCall","src":"12102:53:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"12092:6:26","type":""}]},{"nodeType":"YulAssignment","src":"12164:82:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12234:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"12239:6:26"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint16_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"12171:62:26"},"nodeType":"YulFunctionCall","src":"12171:75:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12164:3:26"}]},{"nodeType":"YulVariableDeclaration","src":"12255:70:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12319:5:26"}],"functionName":{"name":"array_dataslot_t_array$_t_uint16_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"12270:48:26"},"nodeType":"YulFunctionCall","src":"12270:55:26"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"12259:7:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"12334:21:26","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"12348:7:26"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"12338:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"12424:221:26","statements":[{"nodeType":"YulVariableDeclaration","src":"12438:34:26","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"12465:6:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12459:5:26"},"nodeType":"YulFunctionCall","src":"12459:13:26"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"12442:13:26","type":""}]},{"nodeType":"YulAssignment","src":"12485:68:26","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"12534:13:26"},{"name":"pos","nodeType":"YulIdentifier","src":"12549:3:26"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint16_to_t_uint16","nodeType":"YulIdentifier","src":"12492:41:26"},"nodeType":"YulFunctionCall","src":"12492:61:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12485:3:26"}]},{"nodeType":"YulAssignment","src":"12566:69:26","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"12628:6:26"}],"functionName":{"name":"array_nextElement_t_array$_t_uint16_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"12576:51:26"},"nodeType":"YulFunctionCall","src":"12576:59:26"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"12566:6:26"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"12386:1:26"},{"name":"length","nodeType":"YulIdentifier","src":"12389:6:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"12383:2:26"},"nodeType":"YulFunctionCall","src":"12383:13:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"12397:18:26","statements":[{"nodeType":"YulAssignment","src":"12399:14:26","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"12408:1:26"},{"kind":"number","nodeType":"YulLiteral","src":"12411:1:26","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12404:3:26"},"nodeType":"YulFunctionCall","src":"12404:9:26"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"12399:1:26"}]}]},"pre":{"nodeType":"YulBlock","src":"12368:14:26","statements":[{"nodeType":"YulVariableDeclaration","src":"12370:10:26","value":{"kind":"number","nodeType":"YulLiteral","src":"12379:1:26","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"12374:1:26","type":""}]}]},"src":"12364:281:26"},{"nodeType":"YulAssignment","src":"12654:10:26","value":{"name":"pos","nodeType":"YulIdentifier","src":"12661:3:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12654:3:26"}]}]},"name":"abi_encode_t_array$_t_uint16_$dyn_memory_ptr_to_t_array$_t_uint16_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12057:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12064:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12073:3:26","type":""}],"src":"11966:704:26"},{"body":{"nodeType":"YulBlock","src":"12872:876:26","statements":[{"nodeType":"YulVariableDeclaration","src":"12882:26:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12898:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"12903:4:26","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12894:3:26"},"nodeType":"YulFunctionCall","src":"12894:14:26"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"12886:4:26","type":""}]},{"nodeType":"YulBlock","src":"12918:170:26","statements":[{"nodeType":"YulVariableDeclaration","src":"12961:43:26","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12991:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"12998:4:26","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12987:3:26"},"nodeType":"YulFunctionCall","src":"12987:16:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12981:5:26"},"nodeType":"YulFunctionCall","src":"12981:23:26"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"12965:12:26","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"13049:12:26"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13067:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"13072:4:26","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13063:3:26"},"nodeType":"YulFunctionCall","src":"13063:14:26"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32","nodeType":"YulIdentifier","src":"13017:31:26"},"nodeType":"YulFunctionCall","src":"13017:61:26"},"nodeType":"YulExpressionStatement","src":"13017:61:26"}]},{"nodeType":"YulBlock","src":"13098:267:26","statements":[{"nodeType":"YulVariableDeclaration","src":"13137:43:26","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13167:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"13174:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13163:3:26"},"nodeType":"YulFunctionCall","src":"13163:16:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13157:5:26"},"nodeType":"YulFunctionCall","src":"13157:23:26"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"13141:12:26","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13205:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"13210:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13201:3:26"},"nodeType":"YulFunctionCall","src":"13201:14:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13221:4:26"},{"name":"pos","nodeType":"YulIdentifier","src":"13227:3:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13217:3:26"},"nodeType":"YulFunctionCall","src":"13217:14:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13194:6:26"},"nodeType":"YulFunctionCall","src":"13194:38:26"},"nodeType":"YulExpressionStatement","src":"13194:38:26"},{"nodeType":"YulAssignment","src":"13245:109:26","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"13335:12:26"},{"name":"tail","nodeType":"YulIdentifier","src":"13349:4:26"}],"functionName":{"name":"abi_encode_t_array$_t_uint16_$dyn_memory_ptr_to_t_array$_t_uint16_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"13253:81:26"},"nodeType":"YulFunctionCall","src":"13253:101:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13245:4:26"}]}]},{"nodeType":"YulBlock","src":"13375:170:26","statements":[{"nodeType":"YulVariableDeclaration","src":"13418:43:26","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13448:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"13455:4:26","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13444:3:26"},"nodeType":"YulFunctionCall","src":"13444:16:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13438:5:26"},"nodeType":"YulFunctionCall","src":"13438:23:26"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"13422:12:26","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"13506:12:26"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13524:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"13529:4:26","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13520:3:26"},"nodeType":"YulFunctionCall","src":"13520:14:26"}],"functionName":{"name":"abi_encode_t_uint16_to_t_uint16","nodeType":"YulIdentifier","src":"13474:31:26"},"nodeType":"YulFunctionCall","src":"13474:61:26"},"nodeType":"YulExpressionStatement","src":"13474:61:26"}]},{"nodeType":"YulBlock","src":"13555:166:26","statements":[{"nodeType":"YulVariableDeclaration","src":"13592:43:26","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13622:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"13629:4:26","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13618:3:26"},"nodeType":"YulFunctionCall","src":"13618:16:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13612:5:26"},"nodeType":"YulFunctionCall","src":"13612:23:26"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"13596:12:26","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"13682:12:26"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13700:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"13705:4:26","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13696:3:26"},"nodeType":"YulFunctionCall","src":"13696:14:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"13648:33:26"},"nodeType":"YulFunctionCall","src":"13648:63:26"},"nodeType":"YulExpressionStatement","src":"13648:63:26"}]},{"nodeType":"YulAssignment","src":"13731:11:26","value":{"name":"tail","nodeType":"YulIdentifier","src":"13738:4:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13731:3:26"}]}]},"name":"abi_encode_t_struct$_Tournament_$7135_memory_ptr_to_t_struct$_Tournament_$7135_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12851:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12858:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12867:3:26","type":""}],"src":"12752:996:26"},{"body":{"nodeType":"YulBlock","src":"13890:132:26","statements":[{"nodeType":"YulAssignment","src":"13900:116:26","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14004:6:26"},{"name":"pos","nodeType":"YulIdentifier","src":"14012:3:26"}],"functionName":{"name":"abi_encode_t_struct$_Tournament_$7135_memory_ptr_to_t_struct$_Tournament_$7135_memory_ptr","nodeType":"YulIdentifier","src":"13914:89:26"},"nodeType":"YulFunctionCall","src":"13914:102:26"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"13900:10:26"}]}]},"name":"abi_encodeUpdatedPos_t_struct$_Tournament_$7135_memory_ptr_to_t_struct$_Tournament_$7135_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"13863:6:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"13871:3:26","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"13879:10:26","type":""}],"src":"13754:268:26"},{"body":{"nodeType":"YulBlock","src":"14131:38:26","statements":[{"nodeType":"YulAssignment","src":"14141:22:26","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"14153:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"14158:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14149:3:26"},"nodeType":"YulFunctionCall","src":"14149:14:26"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"14141:4:26"}]}]},"name":"array_nextElement_t_array$_t_struct$_Tournament_$7135_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"14118:3:26","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"14126:4:26","type":""}],"src":"14028:141:26"},{"body":{"nodeType":"YulBlock","src":"14435:955:26","statements":[{"nodeType":"YulVariableDeclaration","src":"14445:96:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14535:5:26"}],"functionName":{"name":"array_length_t_array$_t_struct$_Tournament_$7135_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"14459:75:26"},"nodeType":"YulFunctionCall","src":"14459:82:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"14449:6:26","type":""}]},{"nodeType":"YulAssignment","src":"14550:121:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14659:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"14664:6:26"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_struct$_Tournament_$7135_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14557:101:26"},"nodeType":"YulFunctionCall","src":"14557:114:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14550:3:26"}]},{"nodeType":"YulVariableDeclaration","src":"14680:20:26","value":{"name":"pos","nodeType":"YulIdentifier","src":"14697:3:26"},"variables":[{"name":"headStart","nodeType":"YulTypedName","src":"14684:9:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"14709:39:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14725:3:26"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"14734:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"14742:4:26","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"14730:3:26"},"nodeType":"YulFunctionCall","src":"14730:17:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14721:3:26"},"nodeType":"YulFunctionCall","src":"14721:27:26"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"14713:4:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"14757:99:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14850:5:26"}],"functionName":{"name":"array_dataslot_t_array$_t_struct$_Tournament_$7135_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"14772:77:26"},"nodeType":"YulFunctionCall","src":"14772:84:26"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"14761:7:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"14865:21:26","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"14879:7:26"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"14869:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"14955:390:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14976:3:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14985:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"14991:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14981:3:26"},"nodeType":"YulFunctionCall","src":"14981:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14969:6:26"},"nodeType":"YulFunctionCall","src":"14969:33:26"},"nodeType":"YulExpressionStatement","src":"14969:33:26"},{"nodeType":"YulVariableDeclaration","src":"15015:34:26","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"15042:6:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15036:5:26"},"nodeType":"YulFunctionCall","src":"15036:13:26"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"15019:13:26","type":""}]},{"nodeType":"YulAssignment","src":"15062:128:26","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"15170:13:26"},{"name":"tail","nodeType":"YulIdentifier","src":"15185:4:26"}],"functionName":{"name":"abi_encodeUpdatedPos_t_struct$_Tournament_$7135_memory_ptr_to_t_struct$_Tournament_$7135_memory_ptr","nodeType":"YulIdentifier","src":"15070:99:26"},"nodeType":"YulFunctionCall","src":"15070:120:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15062:4:26"}]},{"nodeType":"YulAssignment","src":"15203:98:26","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"15294:6:26"}],"functionName":{"name":"array_nextElement_t_array$_t_struct$_Tournament_$7135_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"15213:80:26"},"nodeType":"YulFunctionCall","src":"15213:88:26"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"15203:6:26"}]},{"nodeType":"YulAssignment","src":"15314:21:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15325:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"15330:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15321:3:26"},"nodeType":"YulFunctionCall","src":"15321:14:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15314:3:26"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"14917:1:26"},{"name":"length","nodeType":"YulIdentifier","src":"14920:6:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"14914:2:26"},"nodeType":"YulFunctionCall","src":"14914:13:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"14928:18:26","statements":[{"nodeType":"YulAssignment","src":"14930:14:26","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"14939:1:26"},{"kind":"number","nodeType":"YulLiteral","src":"14942:1:26","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14935:3:26"},"nodeType":"YulFunctionCall","src":"14935:9:26"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"14930:1:26"}]}]},"pre":{"nodeType":"YulBlock","src":"14899:14:26","statements":[{"nodeType":"YulVariableDeclaration","src":"14901:10:26","value":{"kind":"number","nodeType":"YulLiteral","src":"14910:1:26","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"14905:1:26","type":""}]}]},"src":"14895:450:26"},{"nodeType":"YulAssignment","src":"15354:11:26","value":{"name":"tail","nodeType":"YulIdentifier","src":"15361:4:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15354:3:26"}]},{"nodeType":"YulAssignment","src":"15374:10:26","value":{"name":"pos","nodeType":"YulIdentifier","src":"15381:3:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15374:3:26"}]}]},"name":"abi_encode_t_array$_t_struct$_Tournament_$7135_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Tournament_$7135_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14414:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"14421:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14430:3:26","type":""}],"src":"14255:1135:26"},{"body":{"nodeType":"YulBlock","src":"15600:281:26","statements":[{"nodeType":"YulAssignment","src":"15610:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15622:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"15633:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15618:3:26"},"nodeType":"YulFunctionCall","src":"15618:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15610:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15657:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"15668:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15653:3:26"},"nodeType":"YulFunctionCall","src":"15653:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15676:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"15682:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15672:3:26"},"nodeType":"YulFunctionCall","src":"15672:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15646:6:26"},"nodeType":"YulFunctionCall","src":"15646:47:26"},"nodeType":"YulExpressionStatement","src":"15646:47:26"},{"nodeType":"YulAssignment","src":"15702:172:26","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15860:6:26"},{"name":"tail","nodeType":"YulIdentifier","src":"15869:4:26"}],"functionName":{"name":"abi_encode_t_array$_t_struct$_Tournament_$7135_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Tournament_$7135_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15710:149:26"},"nodeType":"YulFunctionCall","src":"15710:164:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15702:4:26"}]}]},"name":"abi_encode_tuple_t_array$_t_struct$_Tournament_$7135_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Tournament_$7135_memory_ptr_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15572:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15584:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15595:4:26","type":""}],"src":"15396:485:26"},{"body":{"nodeType":"YulBlock","src":"15950:52:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15967:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15989:5:26"}],"functionName":{"name":"cleanup_t_uint16","nodeType":"YulIdentifier","src":"15972:16:26"},"nodeType":"YulFunctionCall","src":"15972:23:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15960:6:26"},"nodeType":"YulFunctionCall","src":"15960:36:26"},"nodeType":"YulExpressionStatement","src":"15960:36:26"}]},"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15938:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"15945:3:26","type":""}],"src":"15887:115:26"},{"body":{"nodeType":"YulBlock","src":"16104:122:26","statements":[{"nodeType":"YulAssignment","src":"16114:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16126:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"16137:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16122:3:26"},"nodeType":"YulFunctionCall","src":"16122:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16114:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16192:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16205:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"16216:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16201:3:26"},"nodeType":"YulFunctionCall","src":"16201:17:26"}],"functionName":{"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulIdentifier","src":"16150:41:26"},"nodeType":"YulFunctionCall","src":"16150:69:26"},"nodeType":"YulExpressionStatement","src":"16150:69:26"}]},"name":"abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16076:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16088:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16099:4:26","type":""}],"src":"16008:218:26"},{"body":{"nodeType":"YulBlock","src":"16277:32:26","statements":[{"nodeType":"YulAssignment","src":"16287:16:26","value":{"name":"value","nodeType":"YulIdentifier","src":"16298:5:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"16287:7:26"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16259:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"16269:7:26","type":""}],"src":"16232:77:26"},{"body":{"nodeType":"YulBlock","src":"16358:79:26","statements":[{"body":{"nodeType":"YulBlock","src":"16415:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16424:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16427:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16417:6:26"},"nodeType":"YulFunctionCall","src":"16417:12:26"},"nodeType":"YulExpressionStatement","src":"16417:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16381:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16406:5:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"16388:17:26"},"nodeType":"YulFunctionCall","src":"16388:24:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"16378:2:26"},"nodeType":"YulFunctionCall","src":"16378:35:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"16371:6:26"},"nodeType":"YulFunctionCall","src":"16371:43:26"},"nodeType":"YulIf","src":"16368:63:26"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16351:5:26","type":""}],"src":"16315:122:26"},{"body":{"nodeType":"YulBlock","src":"16495:87:26","statements":[{"nodeType":"YulAssignment","src":"16505:29:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"16527:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"16514:12:26"},"nodeType":"YulFunctionCall","src":"16514:20:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"16505:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16570:5:26"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"16543:26:26"},"nodeType":"YulFunctionCall","src":"16543:33:26"},"nodeType":"YulExpressionStatement","src":"16543:33:26"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"16473:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"16481:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"16489:5:26","type":""}],"src":"16443:139:26"},{"body":{"nodeType":"YulBlock","src":"16654:263:26","statements":[{"body":{"nodeType":"YulBlock","src":"16700:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"16702:77:26"},"nodeType":"YulFunctionCall","src":"16702:79:26"},"nodeType":"YulExpressionStatement","src":"16702:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"16675:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"16684:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16671:3:26"},"nodeType":"YulFunctionCall","src":"16671:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"16696:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"16667:3:26"},"nodeType":"YulFunctionCall","src":"16667:32:26"},"nodeType":"YulIf","src":"16664:119:26"},{"nodeType":"YulBlock","src":"16793:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"16808:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"16822:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"16812:6:26","type":""}]},{"nodeType":"YulAssignment","src":"16837:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16872:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"16883:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16868:3:26"},"nodeType":"YulFunctionCall","src":"16868:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"16892:7:26"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"16847:20:26"},"nodeType":"YulFunctionCall","src":"16847:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"16837:6:26"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16624:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"16635:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"16647:6:26","type":""}],"src":"16588:329:26"},{"body":{"nodeType":"YulBlock","src":"16986:52:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17003:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17025:5:26"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"17008:16:26"},"nodeType":"YulFunctionCall","src":"17008:23:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16996:6:26"},"nodeType":"YulFunctionCall","src":"16996:36:26"},"nodeType":"YulExpressionStatement","src":"16996:36:26"}]},"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16974:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"16981:3:26","type":""}],"src":"16923:115:26"},{"body":{"nodeType":"YulBlock","src":"17109:53:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17126:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17149:5:26"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"17131:17:26"},"nodeType":"YulFunctionCall","src":"17131:24:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17119:6:26"},"nodeType":"YulFunctionCall","src":"17119:37:26"},"nodeType":"YulExpressionStatement","src":"17119:37:26"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17097:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"17104:3:26","type":""}],"src":"17044:118:26"},{"body":{"nodeType":"YulBlock","src":"17318:284:26","statements":[{"nodeType":"YulAssignment","src":"17328:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17340:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"17351:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17336:3:26"},"nodeType":"YulFunctionCall","src":"17336:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17328:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17406:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17419:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"17430:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17415:3:26"},"nodeType":"YulFunctionCall","src":"17415:17:26"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"17364:41:26"},"nodeType":"YulFunctionCall","src":"17364:69:26"},"nodeType":"YulExpressionStatement","src":"17364:69:26"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"17485:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17498:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"17509:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17494:3:26"},"nodeType":"YulFunctionCall","src":"17494:18:26"}],"functionName":{"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulIdentifier","src":"17443:41:26"},"nodeType":"YulFunctionCall","src":"17443:70:26"},"nodeType":"YulExpressionStatement","src":"17443:70:26"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"17567:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17580:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"17591:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17576:3:26"},"nodeType":"YulFunctionCall","src":"17576:18:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"17523:43:26"},"nodeType":"YulFunctionCall","src":"17523:72:26"},"nodeType":"YulExpressionStatement","src":"17523:72:26"}]},"name":"abi_encode_tuple_t_uint32_t_uint16_t_address__to_t_uint32_t_uint16_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17274:9:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"17286:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"17294:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17302:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17313:4:26","type":""}],"src":"17168:434:26"},{"body":{"nodeType":"YulBlock","src":"17686:66:26","statements":[{"nodeType":"YulAssignment","src":"17696:50:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17740:5:26"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"17709:30:26"},"nodeType":"YulFunctionCall","src":"17709:37:26"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"17696:9:26"}]}]},"name":"convert_t_contract$_PongToken_$8254_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17666:5:26","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"17676:9:26","type":""}],"src":"17608:144:26"},{"body":{"nodeType":"YulBlock","src":"17841:84:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17858:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17912:5:26"}],"functionName":{"name":"convert_t_contract$_PongToken_$8254_to_t_address","nodeType":"YulIdentifier","src":"17863:48:26"},"nodeType":"YulFunctionCall","src":"17863:55:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17851:6:26"},"nodeType":"YulFunctionCall","src":"17851:68:26"},"nodeType":"YulExpressionStatement","src":"17851:68:26"}]},"name":"abi_encode_t_contract$_PongToken_$8254_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17829:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"17836:3:26","type":""}],"src":"17758:167:26"},{"body":{"nodeType":"YulBlock","src":"18047:142:26","statements":[{"nodeType":"YulAssignment","src":"18057:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18069:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"18080:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18065:3:26"},"nodeType":"YulFunctionCall","src":"18065:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18057:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18155:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18168:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"18179:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18164:3:26"},"nodeType":"YulFunctionCall","src":"18164:17:26"}],"functionName":{"name":"abi_encode_t_contract$_PongToken_$8254_to_t_address_fromStack","nodeType":"YulIdentifier","src":"18093:61:26"},"nodeType":"YulFunctionCall","src":"18093:89:26"},"nodeType":"YulExpressionStatement","src":"18093:89:26"}]},"name":"abi_encode_tuple_t_contract$_PongToken_$8254__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18019:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"18031:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18042:4:26","type":""}],"src":"17931:258:26"},{"body":{"nodeType":"YulBlock","src":"18237:78:26","statements":[{"body":{"nodeType":"YulBlock","src":"18293:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18302:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18305:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"18295:6:26"},"nodeType":"YulFunctionCall","src":"18295:12:26"},"nodeType":"YulExpressionStatement","src":"18295:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18260:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18284:5:26"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"18267:16:26"},"nodeType":"YulFunctionCall","src":"18267:23:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"18257:2:26"},"nodeType":"YulFunctionCall","src":"18257:34:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"18250:6:26"},"nodeType":"YulFunctionCall","src":"18250:42:26"},"nodeType":"YulIf","src":"18247:62:26"}]},"name":"validator_revert_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18230:5:26","type":""}],"src":"18195:120:26"},{"body":{"nodeType":"YulBlock","src":"18372:86:26","statements":[{"nodeType":"YulAssignment","src":"18382:29:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"18404:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"18391:12:26"},"nodeType":"YulFunctionCall","src":"18391:20:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"18382:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18446:5:26"}],"functionName":{"name":"validator_revert_t_uint32","nodeType":"YulIdentifier","src":"18420:25:26"},"nodeType":"YulFunctionCall","src":"18420:32:26"},"nodeType":"YulExpressionStatement","src":"18420:32:26"}]},"name":"abi_decode_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"18350:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"18358:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"18366:5:26","type":""}],"src":"18321:137:26"},{"body":{"nodeType":"YulBlock","src":"18545:229:26","statements":[{"body":{"nodeType":"YulBlock","src":"18650:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"18652:16:26"},"nodeType":"YulFunctionCall","src":"18652:18:26"},"nodeType":"YulExpressionStatement","src":"18652:18:26"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"18622:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"18630:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18619:2:26"},"nodeType":"YulFunctionCall","src":"18619:30:26"},"nodeType":"YulIf","src":"18616:56:26"},{"nodeType":"YulAssignment","src":"18682:25:26","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"18694:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"18702:4:26","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"18690:3:26"},"nodeType":"YulFunctionCall","src":"18690:17:26"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"18682:4:26"}]},{"nodeType":"YulAssignment","src":"18744:23:26","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"18756:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"18762:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18752:3:26"},"nodeType":"YulFunctionCall","src":"18752:15:26"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"18744:4:26"}]}]},"name":"array_allocation_size_t_array$_t_uint16_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"18529:6:26","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"18540:4:26","type":""}],"src":"18464:310:26"},{"body":{"nodeType":"YulBlock","src":"18869:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18886:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18889:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"18879:6:26"},"nodeType":"YulFunctionCall","src":"18879:12:26"},"nodeType":"YulExpressionStatement","src":"18879:12:26"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"18780:117:26"},{"body":{"nodeType":"YulBlock","src":"19020:606:26","statements":[{"nodeType":"YulAssignment","src":"19030:89:26","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"19111:6:26"}],"functionName":{"name":"array_allocation_size_t_array$_t_uint16_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"19055:55:26"},"nodeType":"YulFunctionCall","src":"19055:63:26"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"19039:15:26"},"nodeType":"YulFunctionCall","src":"19039:80:26"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"19030:5:26"}]},{"nodeType":"YulVariableDeclaration","src":"19128:16:26","value":{"name":"array","nodeType":"YulIdentifier","src":"19139:5:26"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"19132:3:26","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"19161:5:26"},{"name":"length","nodeType":"YulIdentifier","src":"19168:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19154:6:26"},"nodeType":"YulFunctionCall","src":"19154:21:26"},"nodeType":"YulExpressionStatement","src":"19154:21:26"},{"nodeType":"YulAssignment","src":"19184:23:26","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"19195:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"19202:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19191:3:26"},"nodeType":"YulFunctionCall","src":"19191:16:26"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"19184:3:26"}]},{"nodeType":"YulVariableDeclaration","src":"19217:44:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"19235:6:26"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"19247:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"19255:4:26","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"19243:3:26"},"nodeType":"YulFunctionCall","src":"19243:17:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19231:3:26"},"nodeType":"YulFunctionCall","src":"19231:30:26"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"19221:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"19289:103:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"19303:77:26"},"nodeType":"YulFunctionCall","src":"19303:79:26"},"nodeType":"YulExpressionStatement","src":"19303:79:26"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"19276:6:26"},{"name":"end","nodeType":"YulIdentifier","src":"19284:3:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19273:2:26"},"nodeType":"YulFunctionCall","src":"19273:15:26"},"nodeType":"YulIf","src":"19270:122:26"},{"body":{"nodeType":"YulBlock","src":"19477:143:26","statements":[{"nodeType":"YulVariableDeclaration","src":"19492:21:26","value":{"name":"src","nodeType":"YulIdentifier","src":"19510:3:26"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"19496:10:26","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"19534:3:26"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"19559:10:26"},{"name":"end","nodeType":"YulIdentifier","src":"19571:3:26"}],"functionName":{"name":"abi_decode_t_uint16","nodeType":"YulIdentifier","src":"19539:19:26"},"nodeType":"YulFunctionCall","src":"19539:36:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19527:6:26"},"nodeType":"YulFunctionCall","src":"19527:49:26"},"nodeType":"YulExpressionStatement","src":"19527:49:26"},{"nodeType":"YulAssignment","src":"19589:21:26","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"19600:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"19605:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19596:3:26"},"nodeType":"YulFunctionCall","src":"19596:14:26"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"19589:3:26"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"19430:3:26"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"19435:6:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"19427:2:26"},"nodeType":"YulFunctionCall","src":"19427:15:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"19443:25:26","statements":[{"nodeType":"YulAssignment","src":"19445:21:26","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"19456:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"19461:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19452:3:26"},"nodeType":"YulFunctionCall","src":"19452:14:26"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"19445:3:26"}]}]},"pre":{"nodeType":"YulBlock","src":"19405:21:26","statements":[{"nodeType":"YulVariableDeclaration","src":"19407:17:26","value":{"name":"offset","nodeType":"YulIdentifier","src":"19418:6:26"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"19411:3:26","type":""}]}]},"src":"19401:219:26"}]},"name":"abi_decode_available_length_t_array$_t_uint16_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"18990:6:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"18998:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"19006:3:26","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"19014:5:26","type":""}],"src":"18919:707:26"},{"body":{"nodeType":"YulBlock","src":"19724:292:26","statements":[{"body":{"nodeType":"YulBlock","src":"19773:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"19775:77:26"},"nodeType":"YulFunctionCall","src":"19775:79:26"},"nodeType":"YulExpressionStatement","src":"19775:79:26"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"19752:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"19760:4:26","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19748:3:26"},"nodeType":"YulFunctionCall","src":"19748:17:26"},{"name":"end","nodeType":"YulIdentifier","src":"19767:3:26"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"19744:3:26"},"nodeType":"YulFunctionCall","src":"19744:27:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"19737:6:26"},"nodeType":"YulFunctionCall","src":"19737:35:26"},"nodeType":"YulIf","src":"19734:122:26"},{"nodeType":"YulVariableDeclaration","src":"19865:34:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"19892:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"19879:12:26"},"nodeType":"YulFunctionCall","src":"19879:20:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"19869:6:26","type":""}]},{"nodeType":"YulAssignment","src":"19908:102:26","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"19983:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"19991:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19979:3:26"},"nodeType":"YulFunctionCall","src":"19979:17:26"},{"name":"length","nodeType":"YulIdentifier","src":"19998:6:26"},{"name":"end","nodeType":"YulIdentifier","src":"20006:3:26"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_uint16_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"19917:61:26"},"nodeType":"YulFunctionCall","src":"19917:93:26"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"19908:5:26"}]}]},"name":"abi_decode_t_array$_t_uint16_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"19702:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"19710:3:26","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"19718:5:26","type":""}],"src":"19648:368:26"},{"body":{"nodeType":"YulBlock","src":"20145:702:26","statements":[{"body":{"nodeType":"YulBlock","src":"20191:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"20193:77:26"},"nodeType":"YulFunctionCall","src":"20193:79:26"},"nodeType":"YulExpressionStatement","src":"20193:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"20166:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"20175:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20162:3:26"},"nodeType":"YulFunctionCall","src":"20162:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"20187:2:26","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"20158:3:26"},"nodeType":"YulFunctionCall","src":"20158:32:26"},"nodeType":"YulIf","src":"20155:119:26"},{"nodeType":"YulBlock","src":"20284:116:26","statements":[{"nodeType":"YulVariableDeclaration","src":"20299:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"20313:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"20303:6:26","type":""}]},{"nodeType":"YulAssignment","src":"20328:62:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20362:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"20373:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20358:3:26"},"nodeType":"YulFunctionCall","src":"20358:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"20382:7:26"}],"functionName":{"name":"abi_decode_t_uint32","nodeType":"YulIdentifier","src":"20338:19:26"},"nodeType":"YulFunctionCall","src":"20338:52:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"20328:6:26"}]}]},{"nodeType":"YulBlock","src":"20410:302:26","statements":[{"nodeType":"YulVariableDeclaration","src":"20425:46:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20456:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"20467:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20452:3:26"},"nodeType":"YulFunctionCall","src":"20452:18:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"20439:12:26"},"nodeType":"YulFunctionCall","src":"20439:32:26"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"20429:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"20518:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"20520:77:26"},"nodeType":"YulFunctionCall","src":"20520:79:26"},"nodeType":"YulExpressionStatement","src":"20520:79:26"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"20490:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"20498:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"20487:2:26"},"nodeType":"YulFunctionCall","src":"20487:30:26"},"nodeType":"YulIf","src":"20484:117:26"},{"nodeType":"YulAssignment","src":"20615:87:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20674:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"20685:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20670:3:26"},"nodeType":"YulFunctionCall","src":"20670:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"20694:7:26"}],"functionName":{"name":"abi_decode_t_array$_t_uint16_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"20625:44:26"},"nodeType":"YulFunctionCall","src":"20625:77:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"20615:6:26"}]}]},{"nodeType":"YulBlock","src":"20722:118:26","statements":[{"nodeType":"YulVariableDeclaration","src":"20737:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"20751:2:26","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"20741:6:26","type":""}]},{"nodeType":"YulAssignment","src":"20767:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20802:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"20813:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20798:3:26"},"nodeType":"YulFunctionCall","src":"20798:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"20822:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"20777:20:26"},"nodeType":"YulFunctionCall","src":"20777:53:26"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"20767:6:26"}]}]}]},"name":"abi_decode_tuple_t_uint32t_array$_t_uint16_$dyn_memory_ptrt_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20099:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"20110:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"20122:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"20130:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"20138:6:26","type":""}],"src":"20022:825:26"},{"body":{"nodeType":"YulBlock","src":"20929:433:26","statements":[{"body":{"nodeType":"YulBlock","src":"20975:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"20977:77:26"},"nodeType":"YulFunctionCall","src":"20977:79:26"},"nodeType":"YulExpressionStatement","src":"20977:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"20950:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"20959:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20946:3:26"},"nodeType":"YulFunctionCall","src":"20946:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"20971:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"20942:3:26"},"nodeType":"YulFunctionCall","src":"20942:32:26"},"nodeType":"YulIf","src":"20939:119:26"},{"nodeType":"YulBlock","src":"21068:287:26","statements":[{"nodeType":"YulVariableDeclaration","src":"21083:45:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21114:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"21125:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21110:3:26"},"nodeType":"YulFunctionCall","src":"21110:17:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"21097:12:26"},"nodeType":"YulFunctionCall","src":"21097:31:26"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"21087:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"21175:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"21177:77:26"},"nodeType":"YulFunctionCall","src":"21177:79:26"},"nodeType":"YulExpressionStatement","src":"21177:79:26"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"21147:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"21155:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"21144:2:26"},"nodeType":"YulFunctionCall","src":"21144:30:26"},"nodeType":"YulIf","src":"21141:117:26"},{"nodeType":"YulAssignment","src":"21272:73:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21317:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"21328:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21313:3:26"},"nodeType":"YulFunctionCall","src":"21313:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"21337:7:26"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"21282:30:26"},"nodeType":"YulFunctionCall","src":"21282:63:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"21272:6:26"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20899:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"20910:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"20922:6:26","type":""}],"src":"20853:509:26"},{"body":{"nodeType":"YulBlock","src":"21466:124:26","statements":[{"nodeType":"YulAssignment","src":"21476:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21488:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"21499:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21484:3:26"},"nodeType":"YulFunctionCall","src":"21484:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21476:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"21556:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21569:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"21580:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21565:3:26"},"nodeType":"YulFunctionCall","src":"21565:17:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"21512:43:26"},"nodeType":"YulFunctionCall","src":"21512:71:26"},"nodeType":"YulExpressionStatement","src":"21512:71:26"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21438:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"21450:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21461:4:26","type":""}],"src":"21368:222:26"},{"body":{"nodeType":"YulBlock","src":"21661:262:26","statements":[{"body":{"nodeType":"YulBlock","src":"21707:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"21709:77:26"},"nodeType":"YulFunctionCall","src":"21709:79:26"},"nodeType":"YulExpressionStatement","src":"21709:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"21682:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"21691:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21678:3:26"},"nodeType":"YulFunctionCall","src":"21678:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"21703:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"21674:3:26"},"nodeType":"YulFunctionCall","src":"21674:32:26"},"nodeType":"YulIf","src":"21671:119:26"},{"nodeType":"YulBlock","src":"21800:116:26","statements":[{"nodeType":"YulVariableDeclaration","src":"21815:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"21829:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"21819:6:26","type":""}]},{"nodeType":"YulAssignment","src":"21844:62:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21878:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"21889:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21874:3:26"},"nodeType":"YulFunctionCall","src":"21874:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"21898:7:26"}],"functionName":{"name":"abi_decode_t_uint16","nodeType":"YulIdentifier","src":"21854:19:26"},"nodeType":"YulFunctionCall","src":"21854:52:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"21844:6:26"}]}]}]},"name":"abi_decode_tuple_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21631:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"21642:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"21654:6:26","type":""}],"src":"21596:327:26"},{"body":{"nodeType":"YulBlock","src":"22135:876:26","statements":[{"nodeType":"YulVariableDeclaration","src":"22145:26:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22161:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"22166:4:26","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22157:3:26"},"nodeType":"YulFunctionCall","src":"22157:14:26"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"22149:4:26","type":""}]},{"nodeType":"YulBlock","src":"22181:170:26","statements":[{"nodeType":"YulVariableDeclaration","src":"22224:43:26","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22254:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"22261:4:26","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22250:3:26"},"nodeType":"YulFunctionCall","src":"22250:16:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22244:5:26"},"nodeType":"YulFunctionCall","src":"22244:23:26"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"22228:12:26","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"22312:12:26"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22330:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"22335:4:26","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22326:3:26"},"nodeType":"YulFunctionCall","src":"22326:14:26"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32","nodeType":"YulIdentifier","src":"22280:31:26"},"nodeType":"YulFunctionCall","src":"22280:61:26"},"nodeType":"YulExpressionStatement","src":"22280:61:26"}]},{"nodeType":"YulBlock","src":"22361:267:26","statements":[{"nodeType":"YulVariableDeclaration","src":"22400:43:26","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22430:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"22437:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22426:3:26"},"nodeType":"YulFunctionCall","src":"22426:16:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22420:5:26"},"nodeType":"YulFunctionCall","src":"22420:23:26"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"22404:12:26","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22468:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"22473:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22464:3:26"},"nodeType":"YulFunctionCall","src":"22464:14:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22484:4:26"},{"name":"pos","nodeType":"YulIdentifier","src":"22490:3:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22480:3:26"},"nodeType":"YulFunctionCall","src":"22480:14:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22457:6:26"},"nodeType":"YulFunctionCall","src":"22457:38:26"},"nodeType":"YulExpressionStatement","src":"22457:38:26"},{"nodeType":"YulAssignment","src":"22508:109:26","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"22598:12:26"},{"name":"tail","nodeType":"YulIdentifier","src":"22612:4:26"}],"functionName":{"name":"abi_encode_t_array$_t_uint16_$dyn_memory_ptr_to_t_array$_t_uint16_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"22516:81:26"},"nodeType":"YulFunctionCall","src":"22516:101:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22508:4:26"}]}]},{"nodeType":"YulBlock","src":"22638:170:26","statements":[{"nodeType":"YulVariableDeclaration","src":"22681:43:26","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22711:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"22718:4:26","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22707:3:26"},"nodeType":"YulFunctionCall","src":"22707:16:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22701:5:26"},"nodeType":"YulFunctionCall","src":"22701:23:26"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"22685:12:26","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"22769:12:26"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22787:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"22792:4:26","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22783:3:26"},"nodeType":"YulFunctionCall","src":"22783:14:26"}],"functionName":{"name":"abi_encode_t_uint16_to_t_uint16","nodeType":"YulIdentifier","src":"22737:31:26"},"nodeType":"YulFunctionCall","src":"22737:61:26"},"nodeType":"YulExpressionStatement","src":"22737:61:26"}]},{"nodeType":"YulBlock","src":"22818:166:26","statements":[{"nodeType":"YulVariableDeclaration","src":"22855:43:26","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22885:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"22892:4:26","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22881:3:26"},"nodeType":"YulFunctionCall","src":"22881:16:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22875:5:26"},"nodeType":"YulFunctionCall","src":"22875:23:26"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"22859:12:26","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"22945:12:26"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22963:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"22968:4:26","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22959:3:26"},"nodeType":"YulFunctionCall","src":"22959:14:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"22911:33:26"},"nodeType":"YulFunctionCall","src":"22911:63:26"},"nodeType":"YulExpressionStatement","src":"22911:63:26"}]},{"nodeType":"YulAssignment","src":"22994:11:26","value":{"name":"tail","nodeType":"YulIdentifier","src":"23001:4:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"22994:3:26"}]}]},"name":"abi_encode_t_struct$_Tournament_$7135_memory_ptr_to_t_struct$_Tournament_$7135_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22114:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"22121:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"22130:3:26","type":""}],"src":"22005:1006:26"},{"body":{"nodeType":"YulBlock","src":"23171:231:26","statements":[{"nodeType":"YulAssignment","src":"23181:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23193:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"23204:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23189:3:26"},"nodeType":"YulFunctionCall","src":"23189:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23181:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23228:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"23239:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23224:3:26"},"nodeType":"YulFunctionCall","src":"23224:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23247:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"23253:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23243:3:26"},"nodeType":"YulFunctionCall","src":"23243:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23217:6:26"},"nodeType":"YulFunctionCall","src":"23217:47:26"},"nodeType":"YulExpressionStatement","src":"23217:47:26"},{"nodeType":"YulAssignment","src":"23273:122:26","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"23381:6:26"},{"name":"tail","nodeType":"YulIdentifier","src":"23390:4:26"}],"functionName":{"name":"abi_encode_t_struct$_Tournament_$7135_memory_ptr_to_t_struct$_Tournament_$7135_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23281:99:26"},"nodeType":"YulFunctionCall","src":"23281:114:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23273:4:26"}]}]},"name":"abi_encode_tuple_t_struct$_Tournament_$7135_memory_ptr__to_t_struct$_Tournament_$7135_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23143:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"23155:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23166:4:26","type":""}],"src":"23017:385:26"},{"body":{"nodeType":"YulBlock","src":"23586:1104:26","statements":[{"nodeType":"YulVariableDeclaration","src":"23596:26:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23612:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"23617:4:26","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23608:3:26"},"nodeType":"YulFunctionCall","src":"23608:14:26"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"23600:4:26","type":""}]},{"nodeType":"YulBlock","src":"23632:167:26","statements":[{"nodeType":"YulVariableDeclaration","src":"23670:43:26","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23700:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"23707:4:26","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23696:3:26"},"nodeType":"YulFunctionCall","src":"23696:16:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"23690:5:26"},"nodeType":"YulFunctionCall","src":"23690:23:26"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"23674:12:26","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"23760:12:26"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23778:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"23783:4:26","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23774:3:26"},"nodeType":"YulFunctionCall","src":"23774:14:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"23726:33:26"},"nodeType":"YulFunctionCall","src":"23726:63:26"},"nodeType":"YulExpressionStatement","src":"23726:63:26"}]},{"nodeType":"YulBlock","src":"23809:167:26","statements":[{"nodeType":"YulVariableDeclaration","src":"23847:43:26","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23877:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"23884:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23873:3:26"},"nodeType":"YulFunctionCall","src":"23873:16:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"23867:5:26"},"nodeType":"YulFunctionCall","src":"23867:23:26"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"23851:12:26","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"23937:12:26"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23955:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"23960:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23951:3:26"},"nodeType":"YulFunctionCall","src":"23951:14:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"23903:33:26"},"nodeType":"YulFunctionCall","src":"23903:63:26"},"nodeType":"YulExpressionStatement","src":"23903:63:26"}]},{"nodeType":"YulBlock","src":"23986:166:26","statements":[{"nodeType":"YulVariableDeclaration","src":"24023:43:26","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24053:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"24060:4:26","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24049:3:26"},"nodeType":"YulFunctionCall","src":"24049:16:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"24043:5:26"},"nodeType":"YulFunctionCall","src":"24043:23:26"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"24027:12:26","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"24113:12:26"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24131:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"24136:4:26","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24127:3:26"},"nodeType":"YulFunctionCall","src":"24127:14:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"24079:33:26"},"nodeType":"YulFunctionCall","src":"24079:63:26"},"nodeType":"YulExpressionStatement","src":"24079:63:26"}]},{"nodeType":"YulBlock","src":"24162:168:26","statements":[{"nodeType":"YulVariableDeclaration","src":"24205:43:26","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24235:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"24242:4:26","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24231:3:26"},"nodeType":"YulFunctionCall","src":"24231:16:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"24225:5:26"},"nodeType":"YulFunctionCall","src":"24225:23:26"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"24209:12:26","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"24291:12:26"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24309:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"24314:4:26","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24305:3:26"},"nodeType":"YulFunctionCall","src":"24305:14:26"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8","nodeType":"YulIdentifier","src":"24261:29:26"},"nodeType":"YulFunctionCall","src":"24261:59:26"},"nodeType":"YulExpressionStatement","src":"24261:59:26"}]},{"nodeType":"YulBlock","src":"24340:168:26","statements":[{"nodeType":"YulVariableDeclaration","src":"24383:43:26","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24413:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"24420:4:26","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24409:3:26"},"nodeType":"YulFunctionCall","src":"24409:16:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"24403:5:26"},"nodeType":"YulFunctionCall","src":"24403:23:26"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"24387:12:26","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"24469:12:26"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24487:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"24492:4:26","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24483:3:26"},"nodeType":"YulFunctionCall","src":"24483:14:26"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8","nodeType":"YulIdentifier","src":"24439:29:26"},"nodeType":"YulFunctionCall","src":"24439:59:26"},"nodeType":"YulExpressionStatement","src":"24439:59:26"}]},{"nodeType":"YulBlock","src":"24518:165:26","statements":[{"nodeType":"YulVariableDeclaration","src":"24556:43:26","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24586:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"24593:4:26","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24582:3:26"},"nodeType":"YulFunctionCall","src":"24582:16:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"24576:5:26"},"nodeType":"YulFunctionCall","src":"24576:23:26"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"24560:12:26","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"24644:12:26"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24662:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"24667:4:26","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24658:3:26"},"nodeType":"YulFunctionCall","src":"24658:14:26"}],"functionName":{"name":"abi_encode_t_uint16_to_t_uint16","nodeType":"YulIdentifier","src":"24612:31:26"},"nodeType":"YulFunctionCall","src":"24612:61:26"},"nodeType":"YulExpressionStatement","src":"24612:61:26"}]}]},"name":"abi_encode_t_struct$_Match_$7124_memory_ptr_to_t_struct$_Match_$7124_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23573:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"23580:3:26","type":""}],"src":"23474:1216:26"},{"body":{"nodeType":"YulBlock","src":"24840:171:26","statements":[{"nodeType":"YulAssignment","src":"24850:27:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24862:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"24873:3:26","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24858:3:26"},"nodeType":"YulFunctionCall","src":"24858:19:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24850:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"24977:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24990:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"25001:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24986:3:26"},"nodeType":"YulFunctionCall","src":"24986:17:26"}],"functionName":{"name":"abi_encode_t_struct$_Match_$7124_memory_ptr_to_t_struct$_Match_$7124_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24887:89:26"},"nodeType":"YulFunctionCall","src":"24887:117:26"},"nodeType":"YulExpressionStatement","src":"24887:117:26"}]},"name":"abi_encode_tuple_t_struct$_Match_$7124_memory_ptr__to_t_struct$_Match_$7124_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24812:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"24824:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24835:4:26","type":""}],"src":"24696:315:26"},{"body":{"nodeType":"YulBlock","src":"25099:66:26","statements":[{"nodeType":"YulAssignment","src":"25109:50:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25153:5:26"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"25122:30:26"},"nodeType":"YulFunctionCall","src":"25122:37:26"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"25109:9:26"}]}]},"name":"convert_t_contract$_TournamentNft_$8198_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"25079:5:26","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"25089:9:26","type":""}],"src":"25017:148:26"},{"body":{"nodeType":"YulBlock","src":"25258:88:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25275:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25333:5:26"}],"functionName":{"name":"convert_t_contract$_TournamentNft_$8198_to_t_address","nodeType":"YulIdentifier","src":"25280:52:26"},"nodeType":"YulFunctionCall","src":"25280:59:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25268:6:26"},"nodeType":"YulFunctionCall","src":"25268:72:26"},"nodeType":"YulExpressionStatement","src":"25268:72:26"}]},"name":"abi_encode_t_contract$_TournamentNft_$8198_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"25246:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"25253:3:26","type":""}],"src":"25171:175:26"},{"body":{"nodeType":"YulBlock","src":"25472:146:26","statements":[{"nodeType":"YulAssignment","src":"25482:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25494:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"25505:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25490:3:26"},"nodeType":"YulFunctionCall","src":"25490:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25482:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"25584:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25597:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"25608:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25593:3:26"},"nodeType":"YulFunctionCall","src":"25593:17:26"}],"functionName":{"name":"abi_encode_t_contract$_TournamentNft_$8198_to_t_address_fromStack","nodeType":"YulIdentifier","src":"25518:65:26"},"nodeType":"YulFunctionCall","src":"25518:93:26"},"nodeType":"YulExpressionStatement","src":"25518:93:26"}]},"name":"abi_encode_tuple_t_contract$_TournamentNft_$8198__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25444:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"25456:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25467:4:26","type":""}],"src":"25352:266:26"},{"body":{"nodeType":"YulBlock","src":"25685:51:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25702:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25723:5:26"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"25707:15:26"},"nodeType":"YulFunctionCall","src":"25707:22:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25695:6:26"},"nodeType":"YulFunctionCall","src":"25695:35:26"},"nodeType":"YulExpressionStatement","src":"25695:35:26"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"25673:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"25680:3:26","type":""}],"src":"25624:112:26"},{"body":{"nodeType":"YulBlock","src":"25970:527:26","statements":[{"nodeType":"YulAssignment","src":"25980:27:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25992:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"26003:3:26","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25988:3:26"},"nodeType":"YulFunctionCall","src":"25988:19:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25980:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"26061:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26074:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"26085:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26070:3:26"},"nodeType":"YulFunctionCall","src":"26070:17:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"26017:43:26"},"nodeType":"YulFunctionCall","src":"26017:71:26"},"nodeType":"YulExpressionStatement","src":"26017:71:26"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"26142:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26155:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"26166:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26151:3:26"},"nodeType":"YulFunctionCall","src":"26151:18:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"26098:43:26"},"nodeType":"YulFunctionCall","src":"26098:72:26"},"nodeType":"YulExpressionStatement","src":"26098:72:26"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"26224:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26237:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"26248:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26233:3:26"},"nodeType":"YulFunctionCall","src":"26233:18:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"26180:43:26"},"nodeType":"YulFunctionCall","src":"26180:72:26"},"nodeType":"YulExpressionStatement","src":"26180:72:26"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"26302:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26315:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"26326:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26311:3:26"},"nodeType":"YulFunctionCall","src":"26311:18:26"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"26262:39:26"},"nodeType":"YulFunctionCall","src":"26262:68:26"},"nodeType":"YulExpressionStatement","src":"26262:68:26"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"26380:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26393:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"26404:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26389:3:26"},"nodeType":"YulFunctionCall","src":"26389:19:26"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"26340:39:26"},"nodeType":"YulFunctionCall","src":"26340:69:26"},"nodeType":"YulExpressionStatement","src":"26340:69:26"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"26461:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26474:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"26485:3:26","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26470:3:26"},"nodeType":"YulFunctionCall","src":"26470:19:26"}],"functionName":{"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulIdentifier","src":"26419:41:26"},"nodeType":"YulFunctionCall","src":"26419:71:26"},"nodeType":"YulExpressionStatement","src":"26419:71:26"}]},"name":"abi_encode_tuple_t_address_t_address_t_address_t_uint8_t_uint8_t_uint16__to_t_address_t_address_t_address_t_uint8_t_uint8_t_uint16__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25902:9:26","type":""},{"name":"value5","nodeType":"YulTypedName","src":"25914:6:26","type":""},{"name":"value4","nodeType":"YulTypedName","src":"25922:6:26","type":""},{"name":"value3","nodeType":"YulTypedName","src":"25930:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"25938:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"25946:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"25954:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25965:4:26","type":""}],"src":"25742:755:26"},{"body":{"nodeType":"YulBlock","src":"26596:561:26","statements":[{"body":{"nodeType":"YulBlock","src":"26642:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"26644:77:26"},"nodeType":"YulFunctionCall","src":"26644:79:26"},"nodeType":"YulExpressionStatement","src":"26644:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"26617:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"26626:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"26613:3:26"},"nodeType":"YulFunctionCall","src":"26613:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"26638:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"26609:3:26"},"nodeType":"YulFunctionCall","src":"26609:32:26"},"nodeType":"YulIf","src":"26606:119:26"},{"nodeType":"YulBlock","src":"26735:287:26","statements":[{"nodeType":"YulVariableDeclaration","src":"26750:45:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26781:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"26792:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26777:3:26"},"nodeType":"YulFunctionCall","src":"26777:17:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"26764:12:26"},"nodeType":"YulFunctionCall","src":"26764:31:26"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"26754:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"26842:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"26844:77:26"},"nodeType":"YulFunctionCall","src":"26844:79:26"},"nodeType":"YulExpressionStatement","src":"26844:79:26"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"26814:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"26822:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"26811:2:26"},"nodeType":"YulFunctionCall","src":"26811:30:26"},"nodeType":"YulIf","src":"26808:117:26"},{"nodeType":"YulAssignment","src":"26939:73:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26984:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"26995:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26980:3:26"},"nodeType":"YulFunctionCall","src":"26980:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"27004:7:26"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"26949:30:26"},"nodeType":"YulFunctionCall","src":"26949:63:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"26939:6:26"}]}]},{"nodeType":"YulBlock","src":"27032:118:26","statements":[{"nodeType":"YulVariableDeclaration","src":"27047:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"27061:2:26","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"27051:6:26","type":""}]},{"nodeType":"YulAssignment","src":"27077:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27112:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"27123:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27108:3:26"},"nodeType":"YulFunctionCall","src":"27108:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"27132:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"27087:20:26"},"nodeType":"YulFunctionCall","src":"27087:53:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"27077:6:26"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26558:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"26569:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"26581:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"26589:6:26","type":""}],"src":"26503:654:26"},{"body":{"nodeType":"YulBlock","src":"27191:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27208:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"27211:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27201:6:26"},"nodeType":"YulFunctionCall","src":"27201:88:26"},"nodeType":"YulExpressionStatement","src":"27201:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27305:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"27308:4:26","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27298:6:26"},"nodeType":"YulFunctionCall","src":"27298:15:26"},"nodeType":"YulExpressionStatement","src":"27298:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27329:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"27332:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"27322:6:26"},"nodeType":"YulFunctionCall","src":"27322:15:26"},"nodeType":"YulExpressionStatement","src":"27322:15:26"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"27163:180:26"},{"body":{"nodeType":"YulBlock","src":"27377:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27394:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"27397:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27387:6:26"},"nodeType":"YulFunctionCall","src":"27387:88:26"},"nodeType":"YulExpressionStatement","src":"27387:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27491:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"27494:4:26","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27484:6:26"},"nodeType":"YulFunctionCall","src":"27484:15:26"},"nodeType":"YulExpressionStatement","src":"27484:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27515:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"27518:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"27508:6:26"},"nodeType":"YulFunctionCall","src":"27508:15:26"},"nodeType":"YulExpressionStatement","src":"27508:15:26"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"27349:180:26"},{"body":{"nodeType":"YulBlock","src":"27578:190:26","statements":[{"nodeType":"YulAssignment","src":"27588:33:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"27615:5:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"27597:17:26"},"nodeType":"YulFunctionCall","src":"27597:24:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"27588:5:26"}]},{"body":{"nodeType":"YulBlock","src":"27711:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"27713:16:26"},"nodeType":"YulFunctionCall","src":"27713:18:26"},"nodeType":"YulExpressionStatement","src":"27713:18:26"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"27636:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"27643:66:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"27633:2:26"},"nodeType":"YulFunctionCall","src":"27633:77:26"},"nodeType":"YulIf","src":"27630:103:26"},{"nodeType":"YulAssignment","src":"27742:20:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"27753:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"27760:1:26","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27749:3:26"},"nodeType":"YulFunctionCall","src":"27749:13:26"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"27742:3:26"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"27564:5:26","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"27574:3:26","type":""}],"src":"27535:233:26"},{"body":{"nodeType":"YulBlock","src":"27870:73:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27887:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"27892:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27880:6:26"},"nodeType":"YulFunctionCall","src":"27880:19:26"},"nodeType":"YulExpressionStatement","src":"27880:19:26"},{"nodeType":"YulAssignment","src":"27908:29:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27927:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"27932:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27923:3:26"},"nodeType":"YulFunctionCall","src":"27923:14:26"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"27908:11:26"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"27842:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"27847:6:26","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"27858:11:26","type":""}],"src":"27774:169:26"},{"body":{"nodeType":"YulBlock","src":"28055:75:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"28077:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"28085:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28073:3:26"},"nodeType":"YulFunctionCall","src":"28073:14:26"},{"hexValue":"4e6f206d61746368657320666f756e6420666f72207468652077696e6e6572","kind":"string","nodeType":"YulLiteral","src":"28089:33:26","type":"","value":"No matches found for the winner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28066:6:26"},"nodeType":"YulFunctionCall","src":"28066:57:26"},"nodeType":"YulExpressionStatement","src":"28066:57:26"}]},"name":"store_literal_in_memory_cfbd3297e5ce3c0189d5ce0fe901e81167648760a96bf142a59985fc6d3fcaa4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"28047:6:26","type":""}],"src":"27949:181:26"},{"body":{"nodeType":"YulBlock","src":"28282:220:26","statements":[{"nodeType":"YulAssignment","src":"28292:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28358:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"28363:2:26","type":"","value":"31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"28299:58:26"},"nodeType":"YulFunctionCall","src":"28299:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"28292:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28464:3:26"}],"functionName":{"name":"store_literal_in_memory_cfbd3297e5ce3c0189d5ce0fe901e81167648760a96bf142a59985fc6d3fcaa4","nodeType":"YulIdentifier","src":"28375:88:26"},"nodeType":"YulFunctionCall","src":"28375:93:26"},"nodeType":"YulExpressionStatement","src":"28375:93:26"},{"nodeType":"YulAssignment","src":"28477:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28488:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"28493:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28484:3:26"},"nodeType":"YulFunctionCall","src":"28484:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"28477:3:26"}]}]},"name":"abi_encode_t_stringliteral_cfbd3297e5ce3c0189d5ce0fe901e81167648760a96bf142a59985fc6d3fcaa4_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"28270:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"28278:3:26","type":""}],"src":"28136:366:26"},{"body":{"nodeType":"YulBlock","src":"28679:248:26","statements":[{"nodeType":"YulAssignment","src":"28689:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28701:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"28712:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28697:3:26"},"nodeType":"YulFunctionCall","src":"28697:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28689:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28736:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"28747:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28732:3:26"},"nodeType":"YulFunctionCall","src":"28732:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"28755:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"28761:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"28751:3:26"},"nodeType":"YulFunctionCall","src":"28751:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28725:6:26"},"nodeType":"YulFunctionCall","src":"28725:47:26"},"nodeType":"YulExpressionStatement","src":"28725:47:26"},{"nodeType":"YulAssignment","src":"28781:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"28915:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_cfbd3297e5ce3c0189d5ce0fe901e81167648760a96bf142a59985fc6d3fcaa4_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"28789:124:26"},"nodeType":"YulFunctionCall","src":"28789:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28781:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_cfbd3297e5ce3c0189d5ce0fe901e81167648760a96bf142a59985fc6d3fcaa4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28659:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"28674:4:26","type":""}],"src":"28508:419:26"},{"body":{"nodeType":"YulBlock","src":"29039:66:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"29061:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"29069:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29057:3:26"},"nodeType":"YulFunctionCall","src":"29057:14:26"},{"hexValue":"506c6179657231206e6f742072656769737465726564","kind":"string","nodeType":"YulLiteral","src":"29073:24:26","type":"","value":"Player1 not registered"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29050:6:26"},"nodeType":"YulFunctionCall","src":"29050:48:26"},"nodeType":"YulExpressionStatement","src":"29050:48:26"}]},"name":"store_literal_in_memory_8ae9f25dd7148543b8715f8f5912a2b61497a4b06739d3b9ade261c33ae7b70d","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"29031:6:26","type":""}],"src":"28933:172:26"},{"body":{"nodeType":"YulBlock","src":"29257:220:26","statements":[{"nodeType":"YulAssignment","src":"29267:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29333:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"29338:2:26","type":"","value":"22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29274:58:26"},"nodeType":"YulFunctionCall","src":"29274:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"29267:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29439:3:26"}],"functionName":{"name":"store_literal_in_memory_8ae9f25dd7148543b8715f8f5912a2b61497a4b06739d3b9ade261c33ae7b70d","nodeType":"YulIdentifier","src":"29350:88:26"},"nodeType":"YulFunctionCall","src":"29350:93:26"},"nodeType":"YulExpressionStatement","src":"29350:93:26"},{"nodeType":"YulAssignment","src":"29452:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29463:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"29468:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29459:3:26"},"nodeType":"YulFunctionCall","src":"29459:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"29452:3:26"}]}]},"name":"abi_encode_t_stringliteral_8ae9f25dd7148543b8715f8f5912a2b61497a4b06739d3b9ade261c33ae7b70d_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"29245:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"29253:3:26","type":""}],"src":"29111:366:26"},{"body":{"nodeType":"YulBlock","src":"29654:248:26","statements":[{"nodeType":"YulAssignment","src":"29664:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29676:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"29687:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29672:3:26"},"nodeType":"YulFunctionCall","src":"29672:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29664:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29711:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"29722:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29707:3:26"},"nodeType":"YulFunctionCall","src":"29707:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29730:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"29736:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"29726:3:26"},"nodeType":"YulFunctionCall","src":"29726:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29700:6:26"},"nodeType":"YulFunctionCall","src":"29700:47:26"},"nodeType":"YulExpressionStatement","src":"29700:47:26"},{"nodeType":"YulAssignment","src":"29756:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29890:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_8ae9f25dd7148543b8715f8f5912a2b61497a4b06739d3b9ade261c33ae7b70d_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29764:124:26"},"nodeType":"YulFunctionCall","src":"29764:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29756:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_8ae9f25dd7148543b8715f8f5912a2b61497a4b06739d3b9ade261c33ae7b70d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"29634:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"29649:4:26","type":""}],"src":"29483:419:26"},{"body":{"nodeType":"YulBlock","src":"30014:66:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"30036:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"30044:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30032:3:26"},"nodeType":"YulFunctionCall","src":"30032:14:26"},{"hexValue":"506c6179657232206e6f742072656769737465726564","kind":"string","nodeType":"YulLiteral","src":"30048:24:26","type":"","value":"Player2 not registered"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30025:6:26"},"nodeType":"YulFunctionCall","src":"30025:48:26"},"nodeType":"YulExpressionStatement","src":"30025:48:26"}]},"name":"store_literal_in_memory_ffc207f67b7ae6032b4314a089795ca325f65bfd399e4ba03a8b2ad7f3abc206","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"30006:6:26","type":""}],"src":"29908:172:26"},{"body":{"nodeType":"YulBlock","src":"30232:220:26","statements":[{"nodeType":"YulAssignment","src":"30242:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30308:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"30313:2:26","type":"","value":"22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"30249:58:26"},"nodeType":"YulFunctionCall","src":"30249:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"30242:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30414:3:26"}],"functionName":{"name":"store_literal_in_memory_ffc207f67b7ae6032b4314a089795ca325f65bfd399e4ba03a8b2ad7f3abc206","nodeType":"YulIdentifier","src":"30325:88:26"},"nodeType":"YulFunctionCall","src":"30325:93:26"},"nodeType":"YulExpressionStatement","src":"30325:93:26"},{"nodeType":"YulAssignment","src":"30427:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30438:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"30443:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30434:3:26"},"nodeType":"YulFunctionCall","src":"30434:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"30427:3:26"}]}]},"name":"abi_encode_t_stringliteral_ffc207f67b7ae6032b4314a089795ca325f65bfd399e4ba03a8b2ad7f3abc206_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"30220:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"30228:3:26","type":""}],"src":"30086:366:26"},{"body":{"nodeType":"YulBlock","src":"30629:248:26","statements":[{"nodeType":"YulAssignment","src":"30639:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30651:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"30662:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30647:3:26"},"nodeType":"YulFunctionCall","src":"30647:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30639:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30686:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"30697:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30682:3:26"},"nodeType":"YulFunctionCall","src":"30682:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30705:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"30711:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"30701:3:26"},"nodeType":"YulFunctionCall","src":"30701:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30675:6:26"},"nodeType":"YulFunctionCall","src":"30675:47:26"},"nodeType":"YulExpressionStatement","src":"30675:47:26"},{"nodeType":"YulAssignment","src":"30731:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30865:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_ffc207f67b7ae6032b4314a089795ca325f65bfd399e4ba03a8b2ad7f3abc206_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"30739:124:26"},"nodeType":"YulFunctionCall","src":"30739:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30731:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_ffc207f67b7ae6032b4314a089795ca325f65bfd399e4ba03a8b2ad7f3abc206__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"30609:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"30624:4:26","type":""}],"src":"30458:419:26"},{"body":{"nodeType":"YulBlock","src":"30989:69:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"31011:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"31019:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31007:3:26"},"nodeType":"YulFunctionCall","src":"31007:14:26"},{"hexValue":"57696e6e6572206164647265737320697320696e76616c6964","kind":"string","nodeType":"YulLiteral","src":"31023:27:26","type":"","value":"Winner address is invalid"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31000:6:26"},"nodeType":"YulFunctionCall","src":"31000:51:26"},"nodeType":"YulExpressionStatement","src":"31000:51:26"}]},"name":"store_literal_in_memory_e075ac6d8fa43b0d2071c35dbf7312ba4f3cecda52a6171c83e7b0b7d1d8c44c","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"30981:6:26","type":""}],"src":"30883:175:26"},{"body":{"nodeType":"YulBlock","src":"31210:220:26","statements":[{"nodeType":"YulAssignment","src":"31220:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31286:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"31291:2:26","type":"","value":"25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"31227:58:26"},"nodeType":"YulFunctionCall","src":"31227:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"31220:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31392:3:26"}],"functionName":{"name":"store_literal_in_memory_e075ac6d8fa43b0d2071c35dbf7312ba4f3cecda52a6171c83e7b0b7d1d8c44c","nodeType":"YulIdentifier","src":"31303:88:26"},"nodeType":"YulFunctionCall","src":"31303:93:26"},"nodeType":"YulExpressionStatement","src":"31303:93:26"},{"nodeType":"YulAssignment","src":"31405:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31416:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"31421:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31412:3:26"},"nodeType":"YulFunctionCall","src":"31412:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"31405:3:26"}]}]},"name":"abi_encode_t_stringliteral_e075ac6d8fa43b0d2071c35dbf7312ba4f3cecda52a6171c83e7b0b7d1d8c44c_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"31198:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"31206:3:26","type":""}],"src":"31064:366:26"},{"body":{"nodeType":"YulBlock","src":"31607:248:26","statements":[{"nodeType":"YulAssignment","src":"31617:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31629:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"31640:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31625:3:26"},"nodeType":"YulFunctionCall","src":"31625:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31617:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31664:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"31675:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31660:3:26"},"nodeType":"YulFunctionCall","src":"31660:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31683:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"31689:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"31679:3:26"},"nodeType":"YulFunctionCall","src":"31679:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31653:6:26"},"nodeType":"YulFunctionCall","src":"31653:47:26"},"nodeType":"YulExpressionStatement","src":"31653:47:26"},{"nodeType":"YulAssignment","src":"31709:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31843:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_e075ac6d8fa43b0d2071c35dbf7312ba4f3cecda52a6171c83e7b0b7d1d8c44c_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"31717:124:26"},"nodeType":"YulFunctionCall","src":"31717:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31709:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_e075ac6d8fa43b0d2071c35dbf7312ba4f3cecda52a6171c83e7b0b7d1d8c44c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31587:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"31602:4:26","type":""}],"src":"31436:419:26"},{"body":{"nodeType":"YulBlock","src":"31915:32:26","statements":[{"nodeType":"YulAssignment","src":"31925:16:26","value":{"name":"value","nodeType":"YulIdentifier","src":"31936:5:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"31925:7:26"}]}]},"name":"cleanup_t_rational_10_by_1","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"31897:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"31907:7:26","type":""}],"src":"31861:86:26"},{"body":{"nodeType":"YulBlock","src":"32022:91:26","statements":[{"nodeType":"YulAssignment","src":"32032:75:26","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"32099:5:26"}],"functionName":{"name":"cleanup_t_rational_10_by_1","nodeType":"YulIdentifier","src":"32072:26:26"},"nodeType":"YulFunctionCall","src":"32072:33:26"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"32063:8:26"},"nodeType":"YulFunctionCall","src":"32063:43:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"32045:17:26"},"nodeType":"YulFunctionCall","src":"32045:62:26"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"32032:9:26"}]}]},"name":"convert_t_rational_10_by_1_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"32002:5:26","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"32012:9:26","type":""}],"src":"31953:160:26"},{"body":{"nodeType":"YulBlock","src":"32193:75:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32210:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"32255:5:26"}],"functionName":{"name":"convert_t_rational_10_by_1_to_t_uint256","nodeType":"YulIdentifier","src":"32215:39:26"},"nodeType":"YulFunctionCall","src":"32215:46:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32203:6:26"},"nodeType":"YulFunctionCall","src":"32203:59:26"},"nodeType":"YulExpressionStatement","src":"32203:59:26"}]},"name":"abi_encode_t_rational_10_by_1_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"32181:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"32188:3:26","type":""}],"src":"32119:149:26"},{"body":{"nodeType":"YulBlock","src":"32409:215:26","statements":[{"nodeType":"YulAssignment","src":"32419:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32431:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"32442:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32427:3:26"},"nodeType":"YulFunctionCall","src":"32427:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32419:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"32499:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32512:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"32523:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32508:3:26"},"nodeType":"YulFunctionCall","src":"32508:17:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"32455:43:26"},"nodeType":"YulFunctionCall","src":"32455:71:26"},"nodeType":"YulExpressionStatement","src":"32455:71:26"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"32589:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32602:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"32613:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32598:3:26"},"nodeType":"YulFunctionCall","src":"32598:18:26"}],"functionName":{"name":"abi_encode_t_rational_10_by_1_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"32536:52:26"},"nodeType":"YulFunctionCall","src":"32536:81:26"},"nodeType":"YulExpressionStatement","src":"32536:81:26"}]},"name":"abi_encode_tuple_t_address_t_rational_10_by_1__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"32373:9:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"32385:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"32393:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"32404:4:26","type":""}],"src":"32274:350:26"},{"body":{"nodeType":"YulBlock","src":"32693:80:26","statements":[{"nodeType":"YulAssignment","src":"32703:22:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"32718:6:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"32712:5:26"},"nodeType":"YulFunctionCall","src":"32712:13:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"32703:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"32761:5:26"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"32734:26:26"},"nodeType":"YulFunctionCall","src":"32734:33:26"},"nodeType":"YulExpressionStatement","src":"32734:33:26"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"32671:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"32679:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"32687:5:26","type":""}],"src":"32630:143:26"},{"body":{"nodeType":"YulBlock","src":"32856:274:26","statements":[{"body":{"nodeType":"YulBlock","src":"32902:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"32904:77:26"},"nodeType":"YulFunctionCall","src":"32904:79:26"},"nodeType":"YulExpressionStatement","src":"32904:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"32877:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"32886:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"32873:3:26"},"nodeType":"YulFunctionCall","src":"32873:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"32898:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"32869:3:26"},"nodeType":"YulFunctionCall","src":"32869:32:26"},"nodeType":"YulIf","src":"32866:119:26"},{"nodeType":"YulBlock","src":"32995:128:26","statements":[{"nodeType":"YulVariableDeclaration","src":"33010:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"33024:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"33014:6:26","type":""}]},{"nodeType":"YulAssignment","src":"33039:74:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33085:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"33096:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33081:3:26"},"nodeType":"YulFunctionCall","src":"33081:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"33105:7:26"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"33049:31:26"},"nodeType":"YulFunctionCall","src":"33049:64:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"33039:6:26"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"32826:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"32837:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"32849:6:26","type":""}],"src":"32779:351:26"},{"body":{"nodeType":"YulBlock","src":"33199:80:26","statements":[{"nodeType":"YulAssignment","src":"33209:22:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"33224:6:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"33218:5:26"},"nodeType":"YulFunctionCall","src":"33218:13:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"33209:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"33267:5:26"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"33240:26:26"},"nodeType":"YulFunctionCall","src":"33240:33:26"},"nodeType":"YulExpressionStatement","src":"33240:33:26"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"33177:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"33185:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"33193:5:26","type":""}],"src":"33136:143:26"},{"body":{"nodeType":"YulBlock","src":"33362:274:26","statements":[{"body":{"nodeType":"YulBlock","src":"33408:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"33410:77:26"},"nodeType":"YulFunctionCall","src":"33410:79:26"},"nodeType":"YulExpressionStatement","src":"33410:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"33383:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"33392:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"33379:3:26"},"nodeType":"YulFunctionCall","src":"33379:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"33404:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"33375:3:26"},"nodeType":"YulFunctionCall","src":"33375:32:26"},"nodeType":"YulIf","src":"33372:119:26"},{"nodeType":"YulBlock","src":"33501:128:26","statements":[{"nodeType":"YulVariableDeclaration","src":"33516:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"33530:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"33520:6:26","type":""}]},{"nodeType":"YulAssignment","src":"33545:74:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33591:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"33602:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33587:3:26"},"nodeType":"YulFunctionCall","src":"33587:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"33611:7:26"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"33555:31:26"},"nodeType":"YulFunctionCall","src":"33555:64:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"33545:6:26"}]}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"33332:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"33343:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"33355:6:26","type":""}],"src":"33285:351:26"},{"body":{"nodeType":"YulBlock","src":"33768:206:26","statements":[{"nodeType":"YulAssignment","src":"33778:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33790:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"33801:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33786:3:26"},"nodeType":"YulFunctionCall","src":"33786:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33778:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"33858:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33871:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"33882:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33867:3:26"},"nodeType":"YulFunctionCall","src":"33867:17:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"33814:43:26"},"nodeType":"YulFunctionCall","src":"33814:71:26"},"nodeType":"YulExpressionStatement","src":"33814:71:26"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"33939:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33952:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"33963:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33948:3:26"},"nodeType":"YulFunctionCall","src":"33948:18:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"33895:43:26"},"nodeType":"YulFunctionCall","src":"33895:72:26"},"nodeType":"YulExpressionStatement","src":"33895:72:26"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"33732:9:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"33744:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"33752:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"33763:4:26","type":""}],"src":"33642:332:26"},{"body":{"nodeType":"YulBlock","src":"34045:53:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34062:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"34085:5:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"34067:17:26"},"nodeType":"YulFunctionCall","src":"34067:24:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34055:6:26"},"nodeType":"YulFunctionCall","src":"34055:37:26"},"nodeType":"YulExpressionStatement","src":"34055:37:26"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34033:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"34040:3:26","type":""}],"src":"33980:118:26"},{"body":{"nodeType":"YulBlock","src":"34230:206:26","statements":[{"nodeType":"YulAssignment","src":"34240:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34252:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"34263:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34248:3:26"},"nodeType":"YulFunctionCall","src":"34248:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34240:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"34320:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34333:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"34344:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34329:3:26"},"nodeType":"YulFunctionCall","src":"34329:17:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"34276:43:26"},"nodeType":"YulFunctionCall","src":"34276:71:26"},"nodeType":"YulExpressionStatement","src":"34276:71:26"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"34401:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34414:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"34425:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34410:3:26"},"nodeType":"YulFunctionCall","src":"34410:18:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"34357:43:26"},"nodeType":"YulFunctionCall","src":"34357:72:26"},"nodeType":"YulExpressionStatement","src":"34357:72:26"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"34194:9:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"34206:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"34214:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"34225:4:26","type":""}],"src":"34104:332:26"},{"body":{"nodeType":"YulBlock","src":"34586:278:26","statements":[{"nodeType":"YulAssignment","src":"34596:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34608:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"34619:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34604:3:26"},"nodeType":"YulFunctionCall","src":"34604:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34596:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"34672:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34685:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"34696:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34681:3:26"},"nodeType":"YulFunctionCall","src":"34681:17:26"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"34632:39:26"},"nodeType":"YulFunctionCall","src":"34632:67:26"},"nodeType":"YulExpressionStatement","src":"34632:67:26"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"34749:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34762:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"34773:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34758:3:26"},"nodeType":"YulFunctionCall","src":"34758:18:26"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"34709:39:26"},"nodeType":"YulFunctionCall","src":"34709:68:26"},"nodeType":"YulExpressionStatement","src":"34709:68:26"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"34829:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34842:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"34853:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34838:3:26"},"nodeType":"YulFunctionCall","src":"34838:18:26"}],"functionName":{"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulIdentifier","src":"34787:41:26"},"nodeType":"YulFunctionCall","src":"34787:70:26"},"nodeType":"YulExpressionStatement","src":"34787:70:26"}]},"name":"abi_encode_tuple_t_uint8_t_uint8_t_uint16__to_t_uint8_t_uint8_t_uint16__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"34542:9:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"34554:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"34562:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"34570:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"34581:4:26","type":""}],"src":"34442:422:26"},{"body":{"nodeType":"YulBlock","src":"34976:116:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"34998:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"35006:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34994:3:26"},"nodeType":"YulFunctionCall","src":"34994:14:26"},{"hexValue":"4e6f20746f75726e616d656e747320666f756e6420666f72207468652077696e","kind":"string","nodeType":"YulLiteral","src":"35010:34:26","type":"","value":"No tournaments found for the win"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34987:6:26"},"nodeType":"YulFunctionCall","src":"34987:58:26"},"nodeType":"YulExpressionStatement","src":"34987:58:26"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"35066:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"35074:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35062:3:26"},"nodeType":"YulFunctionCall","src":"35062:15:26"},{"hexValue":"6e6572","kind":"string","nodeType":"YulLiteral","src":"35079:5:26","type":"","value":"ner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35055:6:26"},"nodeType":"YulFunctionCall","src":"35055:30:26"},"nodeType":"YulExpressionStatement","src":"35055:30:26"}]},"name":"store_literal_in_memory_40d8d825bd46fc38ebdbe82ad5f003b63b0f8f48f5fa0d8fc9e28f84db6bac03","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"34968:6:26","type":""}],"src":"34870:222:26"},{"body":{"nodeType":"YulBlock","src":"35244:220:26","statements":[{"nodeType":"YulAssignment","src":"35254:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35320:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"35325:2:26","type":"","value":"35"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"35261:58:26"},"nodeType":"YulFunctionCall","src":"35261:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"35254:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35426:3:26"}],"functionName":{"name":"store_literal_in_memory_40d8d825bd46fc38ebdbe82ad5f003b63b0f8f48f5fa0d8fc9e28f84db6bac03","nodeType":"YulIdentifier","src":"35337:88:26"},"nodeType":"YulFunctionCall","src":"35337:93:26"},"nodeType":"YulExpressionStatement","src":"35337:93:26"},{"nodeType":"YulAssignment","src":"35439:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35450:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"35455:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35446:3:26"},"nodeType":"YulFunctionCall","src":"35446:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"35439:3:26"}]}]},"name":"abi_encode_t_stringliteral_40d8d825bd46fc38ebdbe82ad5f003b63b0f8f48f5fa0d8fc9e28f84db6bac03_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"35232:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"35240:3:26","type":""}],"src":"35098:366:26"},{"body":{"nodeType":"YulBlock","src":"35641:248:26","statements":[{"nodeType":"YulAssignment","src":"35651:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35663:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"35674:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35659:3:26"},"nodeType":"YulFunctionCall","src":"35659:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35651:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35698:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"35709:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35694:3:26"},"nodeType":"YulFunctionCall","src":"35694:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"35717:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"35723:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"35713:3:26"},"nodeType":"YulFunctionCall","src":"35713:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35687:6:26"},"nodeType":"YulFunctionCall","src":"35687:47:26"},"nodeType":"YulExpressionStatement","src":"35687:47:26"},{"nodeType":"YulAssignment","src":"35743:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"35877:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_40d8d825bd46fc38ebdbe82ad5f003b63b0f8f48f5fa0d8fc9e28f84db6bac03_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"35751:124:26"},"nodeType":"YulFunctionCall","src":"35751:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35743:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_40d8d825bd46fc38ebdbe82ad5f003b63b0f8f48f5fa0d8fc9e28f84db6bac03__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"35621:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"35636:4:26","type":""}],"src":"35470:419:26"},{"body":{"nodeType":"YulBlock","src":"35954:81:26","statements":[{"nodeType":"YulAssignment","src":"35964:65:26","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"36021:5:26"}],"functionName":{"name":"cleanup_t_uint16","nodeType":"YulIdentifier","src":"36004:16:26"},"nodeType":"YulFunctionCall","src":"36004:23:26"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"35995:8:26"},"nodeType":"YulFunctionCall","src":"35995:33:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"35977:17:26"},"nodeType":"YulFunctionCall","src":"35977:52:26"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"35964:9:26"}]}]},"name":"convert_t_uint16_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"35934:5:26","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"35944:9:26","type":""}],"src":"35895:140:26"},{"body":{"nodeType":"YulBlock","src":"36105:65:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36122:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"36157:5:26"}],"functionName":{"name":"convert_t_uint16_to_t_uint256","nodeType":"YulIdentifier","src":"36127:29:26"},"nodeType":"YulFunctionCall","src":"36127:36:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36115:6:26"},"nodeType":"YulFunctionCall","src":"36115:49:26"},"nodeType":"YulExpressionStatement","src":"36115:49:26"}]},"name":"abi_encode_t_uint16_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"36093:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"36100:3:26","type":""}],"src":"36041:129:26"},{"body":{"nodeType":"YulBlock","src":"36301:205:26","statements":[{"nodeType":"YulAssignment","src":"36311:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36323:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"36334:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36319:3:26"},"nodeType":"YulFunctionCall","src":"36319:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"36311:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"36391:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36404:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"36415:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36400:3:26"},"nodeType":"YulFunctionCall","src":"36400:17:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"36347:43:26"},"nodeType":"YulFunctionCall","src":"36347:71:26"},"nodeType":"YulExpressionStatement","src":"36347:71:26"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"36471:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36484:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"36495:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36480:3:26"},"nodeType":"YulFunctionCall","src":"36480:18:26"}],"functionName":{"name":"abi_encode_t_uint16_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"36428:42:26"},"nodeType":"YulFunctionCall","src":"36428:71:26"},"nodeType":"YulExpressionStatement","src":"36428:71:26"}]},"name":"abi_encode_tuple_t_address_t_uint16__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"36265:9:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"36277:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"36285:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"36296:4:26","type":""}],"src":"36176:330:26"},{"body":{"nodeType":"YulBlock","src":"36622:73:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36639:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"36644:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36632:6:26"},"nodeType":"YulFunctionCall","src":"36632:19:26"},"nodeType":"YulExpressionStatement","src":"36632:19:26"},{"nodeType":"YulAssignment","src":"36660:29:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36679:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"36684:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36675:3:26"},"nodeType":"YulFunctionCall","src":"36675:14:26"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"36660:11:26"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint16_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"36594:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"36599:6:26","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"36610:11:26","type":""}],"src":"36512:183:26"},{"body":{"nodeType":"YulBlock","src":"36851:602:26","statements":[{"nodeType":"YulVariableDeclaration","src":"36861:67:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"36922:5:26"}],"functionName":{"name":"array_length_t_array$_t_uint16_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"36875:46:26"},"nodeType":"YulFunctionCall","src":"36875:53:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"36865:6:26","type":""}]},{"nodeType":"YulAssignment","src":"36937:92:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37017:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"37022:6:26"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint16_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"36944:72:26"},"nodeType":"YulFunctionCall","src":"36944:85:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"36937:3:26"}]},{"nodeType":"YulVariableDeclaration","src":"37038:70:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"37102:5:26"}],"functionName":{"name":"array_dataslot_t_array$_t_uint16_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"37053:48:26"},"nodeType":"YulFunctionCall","src":"37053:55:26"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"37042:7:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"37117:21:26","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"37131:7:26"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"37121:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"37207:221:26","statements":[{"nodeType":"YulVariableDeclaration","src":"37221:34:26","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"37248:6:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"37242:5:26"},"nodeType":"YulFunctionCall","src":"37242:13:26"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"37225:13:26","type":""}]},{"nodeType":"YulAssignment","src":"37268:68:26","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"37317:13:26"},{"name":"pos","nodeType":"YulIdentifier","src":"37332:3:26"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint16_to_t_uint16","nodeType":"YulIdentifier","src":"37275:41:26"},"nodeType":"YulFunctionCall","src":"37275:61:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"37268:3:26"}]},{"nodeType":"YulAssignment","src":"37349:69:26","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"37411:6:26"}],"functionName":{"name":"array_nextElement_t_array$_t_uint16_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"37359:51:26"},"nodeType":"YulFunctionCall","src":"37359:59:26"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"37349:6:26"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"37169:1:26"},{"name":"length","nodeType":"YulIdentifier","src":"37172:6:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"37166:2:26"},"nodeType":"YulFunctionCall","src":"37166:13:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"37180:18:26","statements":[{"nodeType":"YulAssignment","src":"37182:14:26","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"37191:1:26"},{"kind":"number","nodeType":"YulLiteral","src":"37194:1:26","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37187:3:26"},"nodeType":"YulFunctionCall","src":"37187:9:26"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"37182:1:26"}]}]},"pre":{"nodeType":"YulBlock","src":"37151:14:26","statements":[{"nodeType":"YulVariableDeclaration","src":"37153:10:26","value":{"kind":"number","nodeType":"YulLiteral","src":"37162:1:26","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"37157:1:26","type":""}]}]},"src":"37147:281:26"},{"nodeType":"YulAssignment","src":"37437:10:26","value":{"name":"pos","nodeType":"YulIdentifier","src":"37444:3:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"37437:3:26"}]}]},"name":"abi_encode_t_array$_t_uint16_$dyn_memory_ptr_to_t_array$_t_uint16_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"36830:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"36837:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"36846:3:26","type":""}],"src":"36729:724:26"},{"body":{"nodeType":"YulBlock","src":"37631:303:26","statements":[{"nodeType":"YulAssignment","src":"37641:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37653:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"37664:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37649:3:26"},"nodeType":"YulFunctionCall","src":"37649:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"37641:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"37719:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37732:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"37743:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37728:3:26"},"nodeType":"YulFunctionCall","src":"37728:17:26"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"37677:41:26"},"nodeType":"YulFunctionCall","src":"37677:69:26"},"nodeType":"YulExpressionStatement","src":"37677:69:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37767:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"37778:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37763:3:26"},"nodeType":"YulFunctionCall","src":"37763:18:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"37787:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"37793:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"37783:3:26"},"nodeType":"YulFunctionCall","src":"37783:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37756:6:26"},"nodeType":"YulFunctionCall","src":"37756:48:26"},"nodeType":"YulExpressionStatement","src":"37756:48:26"},{"nodeType":"YulAssignment","src":"37813:114:26","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"37913:6:26"},{"name":"tail","nodeType":"YulIdentifier","src":"37922:4:26"}],"functionName":{"name":"abi_encode_t_array$_t_uint16_$dyn_memory_ptr_to_t_array$_t_uint16_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"37821:91:26"},"nodeType":"YulFunctionCall","src":"37821:106:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"37813:4:26"}]}]},"name":"abi_encode_tuple_t_uint32_t_array$_t_uint16_$dyn_memory_ptr__to_t_uint32_t_array$_t_uint16_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"37595:9:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"37607:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"37615:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"37626:4:26","type":""}],"src":"37459:475:26"},{"body":{"nodeType":"YulBlock","src":"37982:129:26","statements":[{"nodeType":"YulAssignment","src":"37992:32:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"38018:5:26"}],"functionName":{"name":"cleanup_t_uint16","nodeType":"YulIdentifier","src":"38001:16:26"},"nodeType":"YulFunctionCall","src":"38001:23:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"37992:5:26"}]},{"body":{"nodeType":"YulBlock","src":"38054:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"38056:16:26"},"nodeType":"YulFunctionCall","src":"38056:18:26"},"nodeType":"YulExpressionStatement","src":"38056:18:26"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"38039:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"38046:6:26","type":"","value":"0xffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"38036:2:26"},"nodeType":"YulFunctionCall","src":"38036:17:26"},"nodeType":"YulIf","src":"38033:43:26"},{"nodeType":"YulAssignment","src":"38085:20:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"38096:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"38103:1:26","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38092:3:26"},"nodeType":"YulFunctionCall","src":"38092:13:26"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"38085:3:26"}]}]},"name":"increment_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"37968:5:26","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"37978:3:26","type":""}],"src":"37940:171:26"},{"body":{"nodeType":"YulBlock","src":"38176:40:26","statements":[{"nodeType":"YulAssignment","src":"38187:22:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"38203:5:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"38197:5:26"},"nodeType":"YulFunctionCall","src":"38197:12:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"38187:6:26"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"38159:5:26","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"38169:6:26","type":""}],"src":"38117:99:26"},{"body":{"nodeType":"YulBlock","src":"38336:34:26","statements":[{"nodeType":"YulAssignment","src":"38346:18:26","value":{"name":"pos","nodeType":"YulIdentifier","src":"38361:3:26"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"38346:11:26"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"38308:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"38313:6:26","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"38324:11:26","type":""}],"src":"38222:148:26"},{"body":{"nodeType":"YulBlock","src":"38438:184:26","statements":[{"nodeType":"YulVariableDeclaration","src":"38448:10:26","value":{"kind":"number","nodeType":"YulLiteral","src":"38457:1:26","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"38452:1:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"38517:63:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"38542:3:26"},{"name":"i","nodeType":"YulIdentifier","src":"38547:1:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38538:3:26"},"nodeType":"YulFunctionCall","src":"38538:11:26"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"38561:3:26"},{"name":"i","nodeType":"YulIdentifier","src":"38566:1:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38557:3:26"},"nodeType":"YulFunctionCall","src":"38557:11:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"38551:5:26"},"nodeType":"YulFunctionCall","src":"38551:18:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38531:6:26"},"nodeType":"YulFunctionCall","src":"38531:39:26"},"nodeType":"YulExpressionStatement","src":"38531:39:26"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"38478:1:26"},{"name":"length","nodeType":"YulIdentifier","src":"38481:6:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"38475:2:26"},"nodeType":"YulFunctionCall","src":"38475:13:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"38489:19:26","statements":[{"nodeType":"YulAssignment","src":"38491:15:26","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"38500:1:26"},{"kind":"number","nodeType":"YulLiteral","src":"38503:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38496:3:26"},"nodeType":"YulFunctionCall","src":"38496:10:26"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"38491:1:26"}]}]},"pre":{"nodeType":"YulBlock","src":"38471:3:26","statements":[]},"src":"38467:113:26"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"38600:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"38605:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38596:3:26"},"nodeType":"YulFunctionCall","src":"38596:16:26"},{"kind":"number","nodeType":"YulLiteral","src":"38614:1:26","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38589:6:26"},"nodeType":"YulFunctionCall","src":"38589:27:26"},"nodeType":"YulExpressionStatement","src":"38589:27:26"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"38420:3:26","type":""},{"name":"dst","nodeType":"YulTypedName","src":"38425:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"38430:6:26","type":""}],"src":"38376:246:26"},{"body":{"nodeType":"YulBlock","src":"38738:280:26","statements":[{"nodeType":"YulVariableDeclaration","src":"38748:53:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"38795:5:26"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"38762:32:26"},"nodeType":"YulFunctionCall","src":"38762:39:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"38752:6:26","type":""}]},{"nodeType":"YulAssignment","src":"38810:96:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38894:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"38899:6:26"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"38817:76:26"},"nodeType":"YulFunctionCall","src":"38817:89:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"38810:3:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"38954:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"38961:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38950:3:26"},"nodeType":"YulFunctionCall","src":"38950:16:26"},{"name":"pos","nodeType":"YulIdentifier","src":"38968:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"38973:6:26"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"38915:34:26"},"nodeType":"YulFunctionCall","src":"38915:65:26"},"nodeType":"YulExpressionStatement","src":"38915:65:26"},{"nodeType":"YulAssignment","src":"38989:23:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39000:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"39005:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38996:3:26"},"nodeType":"YulFunctionCall","src":"38996:16:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"38989:3:26"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"38719:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"38726:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"38734:3:26","type":""}],"src":"38628:390:26"},{"body":{"nodeType":"YulBlock","src":"39160:139:26","statements":[{"nodeType":"YulAssignment","src":"39171:102:26","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"39260:6:26"},{"name":"pos","nodeType":"YulIdentifier","src":"39269:3:26"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"39178:81:26"},"nodeType":"YulFunctionCall","src":"39178:95:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"39171:3:26"}]},{"nodeType":"YulAssignment","src":"39283:10:26","value":{"name":"pos","nodeType":"YulIdentifier","src":"39290:3:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"39283:3:26"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"39139:3:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"39145:6:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"39156:3:26","type":""}],"src":"39024:275:26"},{"body":{"nodeType":"YulBlock","src":"39411:64:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"39433:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"39441:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39429:3:26"},"nodeType":"YulFunctionCall","src":"39429:14:26"},{"hexValue":"546f75726e616d656e74206e6f7420666f756e64","kind":"string","nodeType":"YulLiteral","src":"39445:22:26","type":"","value":"Tournament not found"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39422:6:26"},"nodeType":"YulFunctionCall","src":"39422:46:26"},"nodeType":"YulExpressionStatement","src":"39422:46:26"}]},"name":"store_literal_in_memory_81004fe6ac4a02932b2eae4209edcfc6d4a21d20ea50616048d119ea0921c6dc","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"39403:6:26","type":""}],"src":"39305:170:26"},{"body":{"nodeType":"YulBlock","src":"39627:220:26","statements":[{"nodeType":"YulAssignment","src":"39637:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39703:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"39708:2:26","type":"","value":"20"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"39644:58:26"},"nodeType":"YulFunctionCall","src":"39644:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"39637:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39809:3:26"}],"functionName":{"name":"store_literal_in_memory_81004fe6ac4a02932b2eae4209edcfc6d4a21d20ea50616048d119ea0921c6dc","nodeType":"YulIdentifier","src":"39720:88:26"},"nodeType":"YulFunctionCall","src":"39720:93:26"},"nodeType":"YulExpressionStatement","src":"39720:93:26"},{"nodeType":"YulAssignment","src":"39822:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39833:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"39838:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39829:3:26"},"nodeType":"YulFunctionCall","src":"39829:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"39822:3:26"}]}]},"name":"abi_encode_t_stringliteral_81004fe6ac4a02932b2eae4209edcfc6d4a21d20ea50616048d119ea0921c6dc_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"39615:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"39623:3:26","type":""}],"src":"39481:366:26"},{"body":{"nodeType":"YulBlock","src":"40024:248:26","statements":[{"nodeType":"YulAssignment","src":"40034:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40046:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"40057:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40042:3:26"},"nodeType":"YulFunctionCall","src":"40042:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"40034:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40081:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"40092:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40077:3:26"},"nodeType":"YulFunctionCall","src":"40077:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"40100:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"40106:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"40096:3:26"},"nodeType":"YulFunctionCall","src":"40096:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40070:6:26"},"nodeType":"YulFunctionCall","src":"40070:47:26"},"nodeType":"YulExpressionStatement","src":"40070:47:26"},{"nodeType":"YulAssignment","src":"40126:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"40260:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_81004fe6ac4a02932b2eae4209edcfc6d4a21d20ea50616048d119ea0921c6dc_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"40134:124:26"},"nodeType":"YulFunctionCall","src":"40134:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"40126:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_81004fe6ac4a02932b2eae4209edcfc6d4a21d20ea50616048d119ea0921c6dc__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"40004:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"40019:4:26","type":""}],"src":"39853:419:26"},{"body":{"nodeType":"YulBlock","src":"40384:59:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"40406:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"40414:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40402:3:26"},"nodeType":"YulFunctionCall","src":"40402:14:26"},{"hexValue":"4d61746368206e6f7420666f756e64","kind":"string","nodeType":"YulLiteral","src":"40418:17:26","type":"","value":"Match not found"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40395:6:26"},"nodeType":"YulFunctionCall","src":"40395:41:26"},"nodeType":"YulExpressionStatement","src":"40395:41:26"}]},"name":"store_literal_in_memory_623b141a8c668802eee97798d04dd23a05d99e520a3bb8abbffe39a955154d9f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"40376:6:26","type":""}],"src":"40278:165:26"},{"body":{"nodeType":"YulBlock","src":"40595:220:26","statements":[{"nodeType":"YulAssignment","src":"40605:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"40671:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"40676:2:26","type":"","value":"15"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"40612:58:26"},"nodeType":"YulFunctionCall","src":"40612:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"40605:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"40777:3:26"}],"functionName":{"name":"store_literal_in_memory_623b141a8c668802eee97798d04dd23a05d99e520a3bb8abbffe39a955154d9f","nodeType":"YulIdentifier","src":"40688:88:26"},"nodeType":"YulFunctionCall","src":"40688:93:26"},"nodeType":"YulExpressionStatement","src":"40688:93:26"},{"nodeType":"YulAssignment","src":"40790:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"40801:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"40806:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40797:3:26"},"nodeType":"YulFunctionCall","src":"40797:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"40790:3:26"}]}]},"name":"abi_encode_t_stringliteral_623b141a8c668802eee97798d04dd23a05d99e520a3bb8abbffe39a955154d9f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"40583:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"40591:3:26","type":""}],"src":"40449:366:26"},{"body":{"nodeType":"YulBlock","src":"40992:248:26","statements":[{"nodeType":"YulAssignment","src":"41002:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41014:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"41025:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41010:3:26"},"nodeType":"YulFunctionCall","src":"41010:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"41002:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41049:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"41060:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41045:3:26"},"nodeType":"YulFunctionCall","src":"41045:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"41068:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"41074:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"41064:3:26"},"nodeType":"YulFunctionCall","src":"41064:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41038:6:26"},"nodeType":"YulFunctionCall","src":"41038:47:26"},"nodeType":"YulExpressionStatement","src":"41038:47:26"},{"nodeType":"YulAssignment","src":"41094:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"41228:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_623b141a8c668802eee97798d04dd23a05d99e520a3bb8abbffe39a955154d9f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"41102:124:26"},"nodeType":"YulFunctionCall","src":"41102:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"41094:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_623b141a8c668802eee97798d04dd23a05d99e520a3bb8abbffe39a955154d9f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"40972:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"40987:4:26","type":""}],"src":"40821:419:26"},{"body":{"nodeType":"YulBlock","src":"41352:75:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"41374:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"41382:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41370:3:26"},"nodeType":"YulFunctionCall","src":"41370:14:26"},{"hexValue":"4e6f206d61746368657320666f756e6420666f722074686520706c61796572","kind":"string","nodeType":"YulLiteral","src":"41386:33:26","type":"","value":"No matches found for the player"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41363:6:26"},"nodeType":"YulFunctionCall","src":"41363:57:26"},"nodeType":"YulExpressionStatement","src":"41363:57:26"}]},"name":"store_literal_in_memory_48a88b95e8c6943c3c5543ee0c6ad8f7d009a48ab4b8ecd53ced3aa366e8f172","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"41344:6:26","type":""}],"src":"41246:181:26"},{"body":{"nodeType":"YulBlock","src":"41579:220:26","statements":[{"nodeType":"YulAssignment","src":"41589:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"41655:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"41660:2:26","type":"","value":"31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"41596:58:26"},"nodeType":"YulFunctionCall","src":"41596:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"41589:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"41761:3:26"}],"functionName":{"name":"store_literal_in_memory_48a88b95e8c6943c3c5543ee0c6ad8f7d009a48ab4b8ecd53ced3aa366e8f172","nodeType":"YulIdentifier","src":"41672:88:26"},"nodeType":"YulFunctionCall","src":"41672:93:26"},"nodeType":"YulExpressionStatement","src":"41672:93:26"},{"nodeType":"YulAssignment","src":"41774:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"41785:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"41790:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41781:3:26"},"nodeType":"YulFunctionCall","src":"41781:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"41774:3:26"}]}]},"name":"abi_encode_t_stringliteral_48a88b95e8c6943c3c5543ee0c6ad8f7d009a48ab4b8ecd53ced3aa366e8f172_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"41567:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"41575:3:26","type":""}],"src":"41433:366:26"},{"body":{"nodeType":"YulBlock","src":"41976:248:26","statements":[{"nodeType":"YulAssignment","src":"41986:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41998:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"42009:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41994:3:26"},"nodeType":"YulFunctionCall","src":"41994:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"41986:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42033:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"42044:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42029:3:26"},"nodeType":"YulFunctionCall","src":"42029:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"42052:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"42058:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"42048:3:26"},"nodeType":"YulFunctionCall","src":"42048:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42022:6:26"},"nodeType":"YulFunctionCall","src":"42022:47:26"},"nodeType":"YulExpressionStatement","src":"42022:47:26"},{"nodeType":"YulAssignment","src":"42078:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"42212:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_48a88b95e8c6943c3c5543ee0c6ad8f7d009a48ab4b8ecd53ced3aa366e8f172_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"42086:124:26"},"nodeType":"YulFunctionCall","src":"42086:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"42078:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_48a88b95e8c6943c3c5543ee0c6ad8f7d009a48ab4b8ecd53ced3aa366e8f172__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"41956:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"41971:4:26","type":""}],"src":"41805:419:26"},{"body":{"nodeType":"YulBlock","src":"42336:65:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"42358:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"42366:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42354:3:26"},"nodeType":"YulFunctionCall","src":"42354:14:26"},{"hexValue":"506c6179657220616c726561647920657869737473","kind":"string","nodeType":"YulLiteral","src":"42370:23:26","type":"","value":"Player already exists"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42347:6:26"},"nodeType":"YulFunctionCall","src":"42347:47:26"},"nodeType":"YulExpressionStatement","src":"42347:47:26"}]},"name":"store_literal_in_memory_e62d5747e47bcd18d9ddf74b7bcef9f67e80418a4c933197d321fea58848ef3f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"42328:6:26","type":""}],"src":"42230:171:26"},{"body":{"nodeType":"YulBlock","src":"42553:220:26","statements":[{"nodeType":"YulAssignment","src":"42563:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"42629:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"42634:2:26","type":"","value":"21"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"42570:58:26"},"nodeType":"YulFunctionCall","src":"42570:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"42563:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"42735:3:26"}],"functionName":{"name":"store_literal_in_memory_e62d5747e47bcd18d9ddf74b7bcef9f67e80418a4c933197d321fea58848ef3f","nodeType":"YulIdentifier","src":"42646:88:26"},"nodeType":"YulFunctionCall","src":"42646:93:26"},"nodeType":"YulExpressionStatement","src":"42646:93:26"},{"nodeType":"YulAssignment","src":"42748:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"42759:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"42764:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42755:3:26"},"nodeType":"YulFunctionCall","src":"42755:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"42748:3:26"}]}]},"name":"abi_encode_t_stringliteral_e62d5747e47bcd18d9ddf74b7bcef9f67e80418a4c933197d321fea58848ef3f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"42541:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"42549:3:26","type":""}],"src":"42407:366:26"},{"body":{"nodeType":"YulBlock","src":"42950:248:26","statements":[{"nodeType":"YulAssignment","src":"42960:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42972:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"42983:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42968:3:26"},"nodeType":"YulFunctionCall","src":"42968:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"42960:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43007:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"43018:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43003:3:26"},"nodeType":"YulFunctionCall","src":"43003:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"43026:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"43032:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"43022:3:26"},"nodeType":"YulFunctionCall","src":"43022:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42996:6:26"},"nodeType":"YulFunctionCall","src":"42996:47:26"},"nodeType":"YulExpressionStatement","src":"42996:47:26"},{"nodeType":"YulAssignment","src":"43052:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"43186:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_e62d5747e47bcd18d9ddf74b7bcef9f67e80418a4c933197d321fea58848ef3f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"43060:124:26"},"nodeType":"YulFunctionCall","src":"43060:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"43052:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_e62d5747e47bcd18d9ddf74b7bcef9f67e80418a4c933197d321fea58848ef3f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"42930:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"42945:4:26","type":""}],"src":"42779:419:26"},{"body":{"nodeType":"YulBlock","src":"43259:32:26","statements":[{"nodeType":"YulAssignment","src":"43269:16:26","value":{"name":"value","nodeType":"YulIdentifier","src":"43280:5:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"43269:7:26"}]}]},"name":"cleanup_t_rational_100_by_1","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"43241:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"43251:7:26","type":""}],"src":"43204:87:26"},{"body":{"nodeType":"YulBlock","src":"43367:92:26","statements":[{"nodeType":"YulAssignment","src":"43377:76:26","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"43445:5:26"}],"functionName":{"name":"cleanup_t_rational_100_by_1","nodeType":"YulIdentifier","src":"43417:27:26"},"nodeType":"YulFunctionCall","src":"43417:34:26"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"43408:8:26"},"nodeType":"YulFunctionCall","src":"43408:44:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"43390:17:26"},"nodeType":"YulFunctionCall","src":"43390:63:26"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"43377:9:26"}]}]},"name":"convert_t_rational_100_by_1_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"43347:5:26","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"43357:9:26","type":""}],"src":"43297:162:26"},{"body":{"nodeType":"YulBlock","src":"43540:76:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"43557:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"43603:5:26"}],"functionName":{"name":"convert_t_rational_100_by_1_to_t_uint256","nodeType":"YulIdentifier","src":"43562:40:26"},"nodeType":"YulFunctionCall","src":"43562:47:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43550:6:26"},"nodeType":"YulFunctionCall","src":"43550:60:26"},"nodeType":"YulExpressionStatement","src":"43550:60:26"}]},"name":"abi_encode_t_rational_100_by_1_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"43528:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"43535:3:26","type":""}],"src":"43465:151:26"},{"body":{"nodeType":"YulBlock","src":"43758:216:26","statements":[{"nodeType":"YulAssignment","src":"43768:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43780:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"43791:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43776:3:26"},"nodeType":"YulFunctionCall","src":"43776:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"43768:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"43848:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43861:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"43872:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43857:3:26"},"nodeType":"YulFunctionCall","src":"43857:17:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"43804:43:26"},"nodeType":"YulFunctionCall","src":"43804:71:26"},"nodeType":"YulExpressionStatement","src":"43804:71:26"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"43939:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43952:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"43963:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43948:3:26"},"nodeType":"YulFunctionCall","src":"43948:18:26"}],"functionName":{"name":"abi_encode_t_rational_100_by_1_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"43885:53:26"},"nodeType":"YulFunctionCall","src":"43885:82:26"},"nodeType":"YulExpressionStatement","src":"43885:82:26"}]},"name":"abi_encode_tuple_t_address_t_rational_100_by_1__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"43722:9:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"43734:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"43742:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"43753:4:26","type":""}],"src":"43622:352:26"},{"body":{"nodeType":"YulBlock","src":"44072:285:26","statements":[{"nodeType":"YulVariableDeclaration","src":"44082:53:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"44129:5:26"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"44096:32:26"},"nodeType":"YulFunctionCall","src":"44096:39:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"44086:6:26","type":""}]},{"nodeType":"YulAssignment","src":"44144:78:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"44210:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"44215:6:26"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"44151:58:26"},"nodeType":"YulFunctionCall","src":"44151:71:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"44144:3:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"44270:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"44277:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44266:3:26"},"nodeType":"YulFunctionCall","src":"44266:16:26"},{"name":"pos","nodeType":"YulIdentifier","src":"44284:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"44289:6:26"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"44231:34:26"},"nodeType":"YulFunctionCall","src":"44231:65:26"},"nodeType":"YulExpressionStatement","src":"44231:65:26"},{"nodeType":"YulAssignment","src":"44305:46:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"44316:3:26"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"44343:6:26"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"44321:21:26"},"nodeType":"YulFunctionCall","src":"44321:29:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44312:3:26"},"nodeType":"YulFunctionCall","src":"44312:39:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"44305:3:26"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"44053:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"44060:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"44068:3:26","type":""}],"src":"43980:377:26"},{"body":{"nodeType":"YulBlock","src":"44509:277:26","statements":[{"nodeType":"YulAssignment","src":"44519:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"44531:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"44542:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44527:3:26"},"nodeType":"YulFunctionCall","src":"44527:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"44519:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"44566:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"44577:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44562:3:26"},"nodeType":"YulFunctionCall","src":"44562:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"44585:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"44591:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"44581:3:26"},"nodeType":"YulFunctionCall","src":"44581:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44555:6:26"},"nodeType":"YulFunctionCall","src":"44555:47:26"},"nodeType":"YulExpressionStatement","src":"44555:47:26"},{"nodeType":"YulAssignment","src":"44611:86:26","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"44683:6:26"},{"name":"tail","nodeType":"YulIdentifier","src":"44692:4:26"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"44619:63:26"},"nodeType":"YulFunctionCall","src":"44619:78:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"44611:4:26"}]},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"44751:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"44764:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"44775:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44760:3:26"},"nodeType":"YulFunctionCall","src":"44760:18:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"44707:43:26"},"nodeType":"YulFunctionCall","src":"44707:72:26"},"nodeType":"YulExpressionStatement","src":"44707:72:26"}]},"name":"abi_encode_tuple_t_string_memory_ptr_t_address__to_t_string_memory_ptr_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"44473:9:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"44485:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"44493:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"44504:4:26","type":""}],"src":"44363:423:26"},{"body":{"nodeType":"YulBlock","src":"44837:149:26","statements":[{"nodeType":"YulAssignment","src":"44847:25:26","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"44870:1:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"44852:17:26"},"nodeType":"YulFunctionCall","src":"44852:20:26"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"44847:1:26"}]},{"nodeType":"YulAssignment","src":"44881:25:26","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"44904:1:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"44886:17:26"},"nodeType":"YulFunctionCall","src":"44886:20:26"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"44881:1:26"}]},{"nodeType":"YulAssignment","src":"44915:17:26","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"44927:1:26"},{"name":"y","nodeType":"YulIdentifier","src":"44930:1:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"44923:3:26"},"nodeType":"YulFunctionCall","src":"44923:9:26"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"44915:4:26"}]},{"body":{"nodeType":"YulBlock","src":"44957:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"44959:16:26"},"nodeType":"YulFunctionCall","src":"44959:18:26"},"nodeType":"YulExpressionStatement","src":"44959:18:26"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"44948:4:26"},{"name":"x","nodeType":"YulIdentifier","src":"44954:1:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"44945:2:26"},"nodeType":"YulFunctionCall","src":"44945:11:26"},"nodeType":"YulIf","src":"44942:37:26"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"44823:1:26","type":""},{"name":"y","nodeType":"YulTypedName","src":"44826:1:26","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"44832:4:26","type":""}],"src":"44792:194:26"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_struct$_Match_$7124_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_Match_$7124_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_struct$_Match_$7124_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function cleanup_t_uint16(value) -> cleaned {\n        cleaned := and(value, 0xffff)\n    }\n\n    function abi_encode_t_uint16_to_t_uint16(value, pos) {\n        mstore(pos, cleanup_t_uint16(value))\n    }\n\n    // struct MasterContract.Match -> struct MasterContract.Match\n    function abi_encode_t_struct$_Match_$7124_memory_ptr_to_t_struct$_Match_$7124_memory_ptr(value, pos)  {\n        let tail := add(pos, 0xc0)\n\n        {\n            // player1\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // player2\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // winner\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // player1Score\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint8_to_t_uint8(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // player2Score\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint8_to_t_uint8(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // matchId\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_uint16_to_t_uint16(memberValue0, add(pos, 0xa0))\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_Match_$7124_memory_ptr_to_t_struct$_Match_$7124_memory_ptr(value0, pos) -> updatedPos {\n        abi_encode_t_struct$_Match_$7124_memory_ptr_to_t_struct$_Match_$7124_memory_ptr(value0, pos)\n        updatedPos := add(pos, 0xc0)\n    }\n\n    function array_nextElement_t_array$_t_struct$_Match_$7124_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // struct MasterContract.Match[] -> struct MasterContract.Match[]\n    function abi_encode_t_array$_t_struct$_Match_$7124_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Match_$7124_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_Match_$7124_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_Match_$7124_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_struct$_Match_$7124_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_struct$_Match_$7124_memory_ptr_to_t_struct$_Match_$7124_memory_ptr(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_struct$_Match_$7124_memory_ptr_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_struct$_Match_$7124_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Match_$7124_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_struct$_Match_$7124_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Match_$7124_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_GoatNft_$8112_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_GoatNft_$8112_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_GoatNft_$8112_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_GoatNft_$8112__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_GoatNft_$8112_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function validator_revert_t_uint16(value) {\n        if iszero(eq(value, cleanup_t_uint16(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint16(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint16(value)\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint16t_uint8t_uint8t_address(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 192) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint16(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_struct$_Tournament_$7135_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_Tournament_$7135_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_struct$_Tournament_$7135_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function abi_encode_t_uint32_to_t_uint32(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function array_length_t_array$_t_uint16_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint16_$dyn_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint16_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encodeUpdatedPos_t_uint16_to_t_uint16(value0, pos) -> updatedPos {\n        abi_encode_t_uint16_to_t_uint16(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint16_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint16[] -> uint16[]\n    function abi_encode_t_array$_t_uint16_$dyn_memory_ptr_to_t_array$_t_uint16_$dyn_memory_ptr(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint16_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint16_$dyn_memory_ptr(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint16_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint16_to_t_uint16(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint16_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    // struct MasterContract.Tournament -> struct MasterContract.Tournament\n    function abi_encode_t_struct$_Tournament_$7135_memory_ptr_to_t_struct$_Tournament_$7135_memory_ptr(value, pos)  -> end  {\n        let tail := add(pos, 0x80)\n\n        {\n            // endTimestamp\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint32_to_t_uint32(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // matchIds\n\n            let memberValue0 := mload(add(value, 0x20))\n\n            mstore(add(pos, 0x20), sub(tail, pos))\n            tail := abi_encode_t_array$_t_uint16_$dyn_memory_ptr_to_t_array$_t_uint16_$dyn_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // tournamentId\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint16_to_t_uint16(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // winner\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x60))\n        }\n\n        end := tail\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_Tournament_$7135_memory_ptr_to_t_struct$_Tournament_$7135_memory_ptr(value0, pos) -> updatedPos {\n        updatedPos := abi_encode_t_struct$_Tournament_$7135_memory_ptr_to_t_struct$_Tournament_$7135_memory_ptr(value0, pos)\n    }\n\n    function array_nextElement_t_array$_t_struct$_Tournament_$7135_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // struct MasterContract.Tournament[] -> struct MasterContract.Tournament[]\n    function abi_encode_t_array$_t_struct$_Tournament_$7135_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Tournament_$7135_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_Tournament_$7135_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_Tournament_$7135_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let headStart := pos\n        let tail := add(pos, mul(length, 0x20))\n        let baseRef := array_dataslot_t_array$_t_struct$_Tournament_$7135_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, sub(tail, headStart))\n            let elementValue0 := mload(srcPtr)\n            tail := abi_encodeUpdatedPos_t_struct$_Tournament_$7135_memory_ptr_to_t_struct$_Tournament_$7135_memory_ptr(elementValue0, tail)\n            srcPtr := array_nextElement_t_array$_t_struct$_Tournament_$7135_memory_ptr_$dyn_memory_ptr(srcPtr)\n            pos := add(pos, 0x20)\n        }\n        pos := tail\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_struct$_Tournament_$7135_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Tournament_$7135_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_struct$_Tournament_$7135_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Tournament_$7135_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_t_uint16_to_t_uint16_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint16(value))\n    }\n\n    function abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint32_to_t_uint32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_uint32_t_uint16_t_address__to_t_uint32_t_uint16_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function convert_t_contract$_PongToken_$8254_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_PongToken_$8254_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_PongToken_$8254_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_PongToken_$8254__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_PongToken_$8254_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function array_allocation_size_t_array$_t_uint16_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // uint16[]\n    function abi_decode_available_length_t_array$_t_uint16_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint16_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint16(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint16[]\n    function abi_decode_t_array$_t_uint16_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint16_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_uint32t_array$_t_uint16_$dyn_memory_ptrt_address(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint16_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint16(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint16(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    // struct MasterContract.Tournament -> struct MasterContract.Tournament\n    function abi_encode_t_struct$_Tournament_$7135_memory_ptr_to_t_struct$_Tournament_$7135_memory_ptr_fromStack(value, pos)  -> end  {\n        let tail := add(pos, 0x80)\n\n        {\n            // endTimestamp\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint32_to_t_uint32(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // matchIds\n\n            let memberValue0 := mload(add(value, 0x20))\n\n            mstore(add(pos, 0x20), sub(tail, pos))\n            tail := abi_encode_t_array$_t_uint16_$dyn_memory_ptr_to_t_array$_t_uint16_$dyn_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // tournamentId\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint16_to_t_uint16(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // winner\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x60))\n        }\n\n        end := tail\n    }\n\n    function abi_encode_tuple_t_struct$_Tournament_$7135_memory_ptr__to_t_struct$_Tournament_$7135_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_struct$_Tournament_$7135_memory_ptr_to_t_struct$_Tournament_$7135_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    // struct MasterContract.Match -> struct MasterContract.Match\n    function abi_encode_t_struct$_Match_$7124_memory_ptr_to_t_struct$_Match_$7124_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0xc0)\n\n        {\n            // player1\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // player2\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // winner\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // player1Score\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint8_to_t_uint8(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // player2Score\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint8_to_t_uint8(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // matchId\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_uint16_to_t_uint16(memberValue0, add(pos, 0xa0))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_Match_$7124_memory_ptr__to_t_struct$_Match_$7124_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_struct$_Match_$7124_memory_ptr_to_t_struct$_Match_$7124_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function convert_t_contract$_TournamentNft_$8198_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_TournamentNft_$8198_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_TournamentNft_$8198_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_TournamentNft_$8198__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_TournamentNft_$8198_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_address_t_uint8_t_uint8_t_uint16__to_t_address_t_address_t_address_t_uint8_t_uint8_t_uint16__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_cfbd3297e5ce3c0189d5ce0fe901e81167648760a96bf142a59985fc6d3fcaa4(memPtr) {\n\n        mstore(add(memPtr, 0), \"No matches found for the winner\")\n\n    }\n\n    function abi_encode_t_stringliteral_cfbd3297e5ce3c0189d5ce0fe901e81167648760a96bf142a59985fc6d3fcaa4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_cfbd3297e5ce3c0189d5ce0fe901e81167648760a96bf142a59985fc6d3fcaa4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cfbd3297e5ce3c0189d5ce0fe901e81167648760a96bf142a59985fc6d3fcaa4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cfbd3297e5ce3c0189d5ce0fe901e81167648760a96bf142a59985fc6d3fcaa4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_8ae9f25dd7148543b8715f8f5912a2b61497a4b06739d3b9ade261c33ae7b70d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Player1 not registered\")\n\n    }\n\n    function abi_encode_t_stringliteral_8ae9f25dd7148543b8715f8f5912a2b61497a4b06739d3b9ade261c33ae7b70d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_8ae9f25dd7148543b8715f8f5912a2b61497a4b06739d3b9ade261c33ae7b70d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8ae9f25dd7148543b8715f8f5912a2b61497a4b06739d3b9ade261c33ae7b70d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8ae9f25dd7148543b8715f8f5912a2b61497a4b06739d3b9ade261c33ae7b70d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ffc207f67b7ae6032b4314a089795ca325f65bfd399e4ba03a8b2ad7f3abc206(memPtr) {\n\n        mstore(add(memPtr, 0), \"Player2 not registered\")\n\n    }\n\n    function abi_encode_t_stringliteral_ffc207f67b7ae6032b4314a089795ca325f65bfd399e4ba03a8b2ad7f3abc206_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_ffc207f67b7ae6032b4314a089795ca325f65bfd399e4ba03a8b2ad7f3abc206(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ffc207f67b7ae6032b4314a089795ca325f65bfd399e4ba03a8b2ad7f3abc206__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ffc207f67b7ae6032b4314a089795ca325f65bfd399e4ba03a8b2ad7f3abc206_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_e075ac6d8fa43b0d2071c35dbf7312ba4f3cecda52a6171c83e7b0b7d1d8c44c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Winner address is invalid\")\n\n    }\n\n    function abi_encode_t_stringliteral_e075ac6d8fa43b0d2071c35dbf7312ba4f3cecda52a6171c83e7b0b7d1d8c44c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_e075ac6d8fa43b0d2071c35dbf7312ba4f3cecda52a6171c83e7b0b7d1d8c44c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e075ac6d8fa43b0d2071c35dbf7312ba4f3cecda52a6171c83e7b0b7d1d8c44c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e075ac6d8fa43b0d2071c35dbf7312ba4f3cecda52a6171c83e7b0b7d1d8c44c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_rational_10_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_rational_10_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_rational_10_by_1(value)))\n    }\n\n    function abi_encode_t_rational_10_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_10_by_1_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_rational_10_by_1__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_rational_10_by_1_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint8_t_uint8_t_uint16__to_t_uint8_t_uint8_t_uint16__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_40d8d825bd46fc38ebdbe82ad5f003b63b0f8f48f5fa0d8fc9e28f84db6bac03(memPtr) {\n\n        mstore(add(memPtr, 0), \"No tournaments found for the win\")\n\n        mstore(add(memPtr, 32), \"ner\")\n\n    }\n\n    function abi_encode_t_stringliteral_40d8d825bd46fc38ebdbe82ad5f003b63b0f8f48f5fa0d8fc9e28f84db6bac03_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_40d8d825bd46fc38ebdbe82ad5f003b63b0f8f48f5fa0d8fc9e28f84db6bac03(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_40d8d825bd46fc38ebdbe82ad5f003b63b0f8f48f5fa0d8fc9e28f84db6bac03__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_40d8d825bd46fc38ebdbe82ad5f003b63b0f8f48f5fa0d8fc9e28f84db6bac03_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function convert_t_uint16_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint16(value)))\n    }\n\n    function abi_encode_t_uint16_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_uint16_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint16__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint16_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint16_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    // uint16[] -> uint16[]\n    function abi_encode_t_array$_t_uint16_$dyn_memory_ptr_to_t_array$_t_uint16_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint16_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint16_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint16_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint16_to_t_uint16(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint16_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_uint32_t_array$_t_uint16_$dyn_memory_ptr__to_t_uint32_t_array$_t_uint16_$dyn_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint16_$dyn_memory_ptr_to_t_array$_t_uint16_$dyn_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function increment_t_uint16(value) -> ret {\n        value := cleanup_t_uint16(value)\n        if eq(value, 0xffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_81004fe6ac4a02932b2eae4209edcfc6d4a21d20ea50616048d119ea0921c6dc(memPtr) {\n\n        mstore(add(memPtr, 0), \"Tournament not found\")\n\n    }\n\n    function abi_encode_t_stringliteral_81004fe6ac4a02932b2eae4209edcfc6d4a21d20ea50616048d119ea0921c6dc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_81004fe6ac4a02932b2eae4209edcfc6d4a21d20ea50616048d119ea0921c6dc(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_81004fe6ac4a02932b2eae4209edcfc6d4a21d20ea50616048d119ea0921c6dc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_81004fe6ac4a02932b2eae4209edcfc6d4a21d20ea50616048d119ea0921c6dc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_623b141a8c668802eee97798d04dd23a05d99e520a3bb8abbffe39a955154d9f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Match not found\")\n\n    }\n\n    function abi_encode_t_stringliteral_623b141a8c668802eee97798d04dd23a05d99e520a3bb8abbffe39a955154d9f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_623b141a8c668802eee97798d04dd23a05d99e520a3bb8abbffe39a955154d9f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_623b141a8c668802eee97798d04dd23a05d99e520a3bb8abbffe39a955154d9f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_623b141a8c668802eee97798d04dd23a05d99e520a3bb8abbffe39a955154d9f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_48a88b95e8c6943c3c5543ee0c6ad8f7d009a48ab4b8ecd53ced3aa366e8f172(memPtr) {\n\n        mstore(add(memPtr, 0), \"No matches found for the player\")\n\n    }\n\n    function abi_encode_t_stringliteral_48a88b95e8c6943c3c5543ee0c6ad8f7d009a48ab4b8ecd53ced3aa366e8f172_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_48a88b95e8c6943c3c5543ee0c6ad8f7d009a48ab4b8ecd53ced3aa366e8f172(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_48a88b95e8c6943c3c5543ee0c6ad8f7d009a48ab4b8ecd53ced3aa366e8f172__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_48a88b95e8c6943c3c5543ee0c6ad8f7d009a48ab4b8ecd53ced3aa366e8f172_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_e62d5747e47bcd18d9ddf74b7bcef9f67e80418a4c933197d321fea58848ef3f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Player already exists\")\n\n    }\n\n    function abi_encode_t_stringliteral_e62d5747e47bcd18d9ddf74b7bcef9f67e80418a4c933197d321fea58848ef3f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_e62d5747e47bcd18d9ddf74b7bcef9f67e80418a4c933197d321fea58848ef3f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e62d5747e47bcd18d9ddf74b7bcef9f67e80418a4c933197d321fea58848ef3f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e62d5747e47bcd18d9ddf74b7bcef9f67e80418a4c933197d321fea58848ef3f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_rational_100_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_rational_100_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_rational_100_by_1(value)))\n    }\n\n    function abi_encode_t_rational_100_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_100_by_1_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_rational_100_by_1__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_rational_100_by_1_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr_t_address__to_t_string_memory_ptr_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n}\n","id":26,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101165760003560e01c8063715018a6116100a25780638da5cb5b116100715780638da5cb5b146102f7578063bb5aa49514610315578063e542506014610345578063ec203f6b1461037a578063f2fde38b1461039657610116565b8063715018a61461026f5780637a080fd11461027957806380192760146102a95780638cecb84d146102d957610116565b806340f55f91116100e957806340f55f91146101b5578063592f7253146101d357806364518cdd146102055780636561207714610223578063661c37fd1461023f57610116565b80630c954fd71461011b578063149249da1461014b5780631750094a146101695780633b79424514610185575b600080fd5b610135600480360381019061013091906127dc565b6103b2565b604051610142919061297b565b60405180910390f35b610153610759565b60405161016091906129fc565b60405180910390f35b610183600480360381019061017e9190612bb5565b61077f565b005b61019f600480360381019061019a91906127dc565b611005565b6040516101ac9190612e6d565b60405180910390f35b6101bd61136c565b6040516101ca9190612e9e565b60405180910390f35b6101ed60048036038101906101e89190612eef565b611380565b6040516101fc93929190612f3a565b60405180910390f35b61020d6113f8565b60405161021a9190612f92565b60405180910390f35b61023d600480360381019061023891906130a1565b61141e565b005b61025960048036038101906102549190613110565b611667565b6040516102669190613159565b60405180910390f35b6102776116b7565b005b610293600480360381019061028e9190613174565b6116cb565b6040516102a09190613204565b60405180910390f35b6102c360048036038101906102be9190613174565b6118ca565b6040516102d091906132a1565b60405180910390f35b6102e1611b09565b6040516102ee91906132dd565b60405180910390f35b6102ff611b2f565b60405161030c9190613159565b60405180910390f35b61032f600480360381019061032a9190613110565b611b58565b60405161033c919061297b565b60405180910390f35b61035f600480360381019061035a9190612eef565b612017565b60405161037196959493929190613307565b60405180910390f35b610394600480360381019061038f9190613368565b6120eb565b005b6103b060048036038101906103ab91906127dc565b6122ca565b005b60606000805b60048054905081101561045f578373ffffffffffffffffffffffffffffffffffffffff16600482815481106103f0576103ef6133c4565b5b906000526020600020906003020160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361044c57818061044890613422565b9250505b808061045790613422565b9150506103b8565b50600081036104a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049a906134c7565b60405180910390fd5b60008167ffffffffffffffff8111156104bf576104be612a32565b5b6040519080825280602002602001820160405280156104f857816020015b6104e56125d9565b8152602001906001900390816104dd5790505b5090506000805b60048054905081101561074d578573ffffffffffffffffffffffffffffffffffffffff1660048281548110610537576105366133c4565b5b906000526020600020906003020160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361073a5760048181548110610598576105976133c4565b5b90600052602060002090600302016040518060c00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160149054906101000a900460ff1660ff1660ff1681526020016002820160159054906101000a900460ff1660ff1660ff1681526020016002820160169054906101000a900461ffff1661ffff1661ffff16815250508383815181106107205761071f6133c4565b5b6020026020010181905250818061073690613422565b9250505b808061074590613422565b9150506104ff565b50819350505050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610787612350565b600073ffffffffffffffffffffffffffffffffffffffff166107a887611667565b73ffffffffffffffffffffffffffffffffffffffff16036107fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107f590613533565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1661081f86611667565b73ffffffffffffffffffffffffffffffffffffffff1603610875576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086c9061359f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036108e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108db9061360b565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1982600a6040518363ffffffff1660e01b8152600401610942929190613666565b600060405180830381600087803b15801561095c57600080fd5b505af1158015610970573d6000803e3d6000fd5b50505050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231826040518263ffffffff1660e01b81526004016109cf9190613159565b602060405180830381865afa1580156109ec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1091906136a4565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f8cacb4c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610abb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610adf91906136e6565b6040518263ffffffff1660e01b8152600401610afb9190613159565b602060405180830381865afa158015610b18573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b3c91906136a4565b1015610c6257600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663065db7a5600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f8cacb4c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610bed573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c1191906136e6565b836040518363ffffffff1660e01b8152600401610c2f929190613713565b600060405180830381600087803b158015610c4957600080fd5b505af1158015610c5d573d6000803e3d6000fd5b505050505b60008173ffffffffffffffffffffffffffffffffffffffff16610c8488611667565b73ffffffffffffffffffffffffffffffffffffffff1603610cad57610ca886611667565b610cb7565b610cb687611667565b5b90506000610d5f600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231846040518263ffffffff1660e01b8152600401610d199190613159565b602060405180830381865afa158015610d36573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d5a91906136a4565b6123d7565b9050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639dc29fac83836040518363ffffffff1660e01b8152600401610dbe92919061374b565b600060405180830381600087803b158015610dd857600080fd5b505af1158015610dec573d6000803e3d6000fd5b505050506000610e0089898689898c612411565b9050600481908060018154018082558091505060019003906000526020600020906003020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160146101000a81548160ff021916908360ff16021790555060808201518160020160156101000a81548160ff021916908360ff16021790555060a08201518160020160166101000a81548161ffff021916908361ffff16021790555050508373ffffffffffffffffffffffffffffffffffffffff16610f8a89611667565b73ffffffffffffffffffffffffffffffffffffffff16610fa98b611667565b73ffffffffffffffffffffffffffffffffffffffff167f5169cf6c9c65452203b100125a7144f1f8fa3c59d527a84551a88fcee99df6ff89898c604051610ff293929190613774565b60405180910390a4505050505050505050565b60606000805b6005805490508110156110b2578373ffffffffffffffffffffffffffffffffffffffff1660058281548110611043576110426133c4565b5b906000526020600020906003020160020160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361109f57818061109b90613422565b9250505b80806110aa90613422565b91505061100b565b50600081036110f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110ed9061381d565b60405180910390fd5b60008167ffffffffffffffff81111561111257611111612a32565b5b60405190808252806020026020018201604052801561114b57816020015b61113861265b565b8152602001906001900390816111305790505b5090506000805b600580549050811015611360578573ffffffffffffffffffffffffffffffffffffffff166005828154811061118a576111896133c4565b5b906000526020600020906003020160020160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361134d57600581815481106111eb576111ea6133c4565b5b90600052602060002090600302016040518060800160405290816000820160009054906101000a900463ffffffff1663ffffffff1663ffffffff168152602001600182018054806020026020016040519081016040528092919081815260200182805480156112a157602002820191906000526020600020906000905b82829054906101000a900461ffff1661ffff16815260200190600201906020826001010492830192600103820291508084116112685790505b505050505081526020016002820160009054906101000a900461ffff1661ffff1661ffff1681526020016002820160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050838381518110611333576113326133c4565b5b6020026020010181905250818061134990613422565b9250505b808061135890613422565b915050611152565b50819350505050919050565b600760009054906101000a900461ffff1681565b6005818154811061139057600080fd5b90600052602060002090600302016000915090508060000160009054906101000a900463ffffffff16908060020160009054906101000a900461ffff16908060020160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905083565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b611426612350565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634d348eb582600760009054906101000a900461ffff166040518363ffffffff1660e01b815260040161149392919061386e565b600060405180830381600087803b1580156114ad57600080fd5b505af11580156114c1573d6000803e3d6000fd5b5050505060006114e38484600760009054906101000a900461ffff16856124b4565b9050600581908060018154018082558091505060019003906000526020600020906003020160009091909190915060008201518160000160006101000a81548163ffffffff021916908363ffffffff16021790555060208201518160010190805190602001906115549291906126a3565b5060408201518160020160006101000a81548161ffff021916908361ffff16021790555060608201518160020160026101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050508173ffffffffffffffffffffffffffffffffffffffff16600760009054906101000a900461ffff1661ffff167f20cccded3274d61ae21772e24555a8219991777fcbfa43e8c3587f5d1c17b681868660405161161e929190613906565b60405180910390a36007600081819054906101000a900461ffff168092919061164690613936565b91906101000a81548161ffff021916908361ffff1602179055505050505050565b6000611671612350565b60068260405161168191906139d1565b908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6116bf612350565b6116c9600061250d565b565b6116d361265b565b60005b600580549050811015611889578261ffff16600582815481106116fc576116fb6133c4565b5b906000526020600020906003020160020160009054906101000a900461ffff1661ffff16036118765760058181548110611739576117386133c4565b5b90600052602060002090600302016040518060800160405290816000820160009054906101000a900463ffffffff1663ffffffff1663ffffffff168152602001600182018054806020026020016040519081016040528092919081815260200182805480156117ef57602002820191906000526020600020906000905b82829054906101000a900461ffff1661ffff16815260200190600201906020826001010492830192600103820291508084116117b65790505b505050505081526020016002820160009054906101000a900461ffff1661ffff1661ffff1681526020016002820160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509150506118c5565b808061188190613422565b9150506116d6565b506040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118bc90613a34565b60405180910390fd5b919050565b6118d26125d9565b60005b600480549050811015611ac8578261ffff16600482815481106118fb576118fa6133c4565b5b906000526020600020906003020160020160169054906101000a900461ffff1661ffff1603611ab55760048181548110611938576119376133c4565b5b90600052602060002090600302016040518060c00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160149054906101000a900460ff1660ff1660ff1681526020016002820160159054906101000a900460ff1660ff1660ff1681526020016002820160169054906101000a900461ffff1661ffff1661ffff1681525050915050611b04565b8080611ac090613422565b9150506118d5565b506040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611afb90613aa0565b60405180910390fd5b919050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606000805b600480549050811015611c9157611b7484611667565b73ffffffffffffffffffffffffffffffffffffffff1660048281548110611b9e57611b9d6133c4565b5b906000526020600020906003020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480611c6a5750611bf684611667565b73ffffffffffffffffffffffffffffffffffffffff1660048281548110611c2057611c1f6133c4565b5b906000526020600020906003020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b15611c7e578180611c7a90613422565b9250505b8080611c8990613422565b915050611b5e565b5060008103611cd5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ccc90613b0c565b60405180910390fd5b60008167ffffffffffffffff811115611cf157611cf0612a32565b5b604051908082528060200260200182016040528015611d2a57816020015b611d176125d9565b815260200190600190039081611d0f5790505b5090506000805b60048054905081101561200b57611d4786611667565b73ffffffffffffffffffffffffffffffffffffffff1660048281548110611d7157611d706133c4565b5b906000526020600020906003020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480611e3d5750611dc986611667565b73ffffffffffffffffffffffffffffffffffffffff1660048281548110611df357611df26133c4565b5b906000526020600020906003020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b15611ff85760048181548110611e5657611e556133c4565b5b90600052602060002090600302016040518060c00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160149054906101000a900460ff1660ff1660ff1681526020016002820160159054906101000a900460ff1660ff1660ff1681526020016002820160169054906101000a900461ffff1661ffff1661ffff1681525050838381518110611fde57611fdd6133c4565b5b60200260200101819052508180611ff490613422565b9250505b808061200390613422565b915050611d31565b50819350505050919050565b6004818154811061202757600080fd5b90600052602060002090600302016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160149054906101000a900460ff16908060020160159054906101000a900460ff16908060020160169054906101000a900461ffff16905086565b6120f3612350565b600073ffffffffffffffffffffffffffffffffffffffff1660068360405161211b91906139d1565b908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146121a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161219790613b78565b60405180910390fd5b806006836040516121b191906139d1565b908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f198260646040518363ffffffff1660e01b815260040161225b929190613bd3565b600060405180830381600087803b15801561227557600080fd5b505af1158015612289573d6000803e3d6000fd5b505050507f746dea5d185825c2cafa76d92ad583ff3a306508c3b038f5aa772d0318df533282826040516122be929190613c35565b60405180910390a15050565b6122d2612350565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036123445760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161233b9190613159565b60405180910390fd5b61234d8161250d565b50565b6123586125d1565b73ffffffffffffffffffffffffffffffffffffffff16612376611b2f565b73ffffffffffffffffffffffffffffffffffffffff16146123d5576123996125d1565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016123cc9190613159565b60405180910390fd5b565b6000600a82116123ea576000905061240c565b601482101561240757600a826124009190613c65565b905061240c565b600a90505b919050565b6124196125d9565b60006040518060c0016040528061242f8a611667565b73ffffffffffffffffffffffffffffffffffffffff16815260200161245389611667565b73ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff1681526020018660ff1681526020018560ff1681526020018461ffff168152509050809150509695505050505050565b6124bc61265b565b600060405180608001604052808763ffffffff1681526020018681526020018561ffff1681526020018473ffffffffffffffffffffffffffffffffffffffff16815250905080915050949350505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6040518060c00160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600060ff168152602001600060ff168152602001600061ffff1681525090565b6040518060800160405280600063ffffffff16815260200160608152602001600061ffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b82805482825590600052602060002090600f0160109004810192821561273c5791602002820160005b8382111561270c57835183826101000a81548161ffff021916908361ffff16021790555092602001926002016020816001010492830192600103026126cc565b801561273a5782816101000a81549061ffff021916905560020160208160010104928301926001030261270c565b505b509050612749919061274d565b5090565b5b8082111561276657600081600090555060010161274e565b5090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006127a98261277e565b9050919050565b6127b98161279e565b81146127c457600080fd5b50565b6000813590506127d6816127b0565b92915050565b6000602082840312156127f2576127f1612774565b5b6000612800848285016127c7565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61283e8161279e565b82525050565b600060ff82169050919050565b61285a81612844565b82525050565b600061ffff82169050919050565b61287781612860565b82525050565b60c0820160008201516128936000850182612835565b5060208201516128a66020850182612835565b5060408201516128b96040850182612835565b5060608201516128cc6060850182612851565b5060808201516128df6080850182612851565b5060a08201516128f260a085018261286e565b50505050565b6000612904838361287d565b60c08301905092915050565b6000602082019050919050565b600061292882612809565b6129328185612814565b935061293d83612825565b8060005b8381101561296e57815161295588826128f8565b975061296083612910565b925050600181019050612941565b5085935050505092915050565b60006020820190508181036000830152612995818461291d565b905092915050565b6000819050919050565b60006129c26129bd6129b88461277e565b61299d565b61277e565b9050919050565b60006129d4826129a7565b9050919050565b60006129e6826129c9565b9050919050565b6129f6816129db565b82525050565b6000602082019050612a1160008301846129ed565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b612a6a82612a21565b810181811067ffffffffffffffff82111715612a8957612a88612a32565b5b80604052505050565b6000612a9c61276a565b9050612aa88282612a61565b919050565b600067ffffffffffffffff821115612ac857612ac7612a32565b5b612ad182612a21565b9050602081019050919050565b82818337600083830152505050565b6000612b00612afb84612aad565b612a92565b905082815260208101848484011115612b1c57612b1b612a1c565b5b612b27848285612ade565b509392505050565b600082601f830112612b4457612b43612a17565b5b8135612b54848260208601612aed565b91505092915050565b612b6681612860565b8114612b7157600080fd5b50565b600081359050612b8381612b5d565b92915050565b612b9281612844565b8114612b9d57600080fd5b50565b600081359050612baf81612b89565b92915050565b60008060008060008060c08789031215612bd257612bd1612774565b5b600087013567ffffffffffffffff811115612bf057612bef612779565b5b612bfc89828a01612b2f565b965050602087013567ffffffffffffffff811115612c1d57612c1c612779565b5b612c2989828a01612b2f565b9550506040612c3a89828a01612b74565b9450506060612c4b89828a01612ba0565b9350506080612c5c89828a01612ba0565b92505060a0612c6d89828a016127c7565b9150509295509295509295565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600063ffffffff82169050919050565b612cbf81612ca6565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000612cfd838361286e565b60208301905092915050565b6000602082019050919050565b6000612d2182612cc5565b612d2b8185612cd0565b9350612d3683612ce1565b8060005b83811015612d67578151612d4e8882612cf1565b9750612d5983612d09565b925050600181019050612d3a565b5085935050505092915050565b6000608083016000830151612d8c6000860182612cb6565b5060208301518482036020860152612da48282612d16565b9150506040830151612db9604086018261286e565b506060830151612dcc6060860182612835565b508091505092915050565b6000612de38383612d74565b905092915050565b6000602082019050919050565b6000612e0382612c7a565b612e0d8185612c85565b935083602082028501612e1f85612c96565b8060005b85811015612e5b5784840389528151612e3c8582612dd7565b9450612e4783612deb565b925060208a01995050600181019050612e23565b50829750879550505050505092915050565b60006020820190508181036000830152612e878184612df8565b905092915050565b612e9881612860565b82525050565b6000602082019050612eb36000830184612e8f565b92915050565b6000819050919050565b612ecc81612eb9565b8114612ed757600080fd5b50565b600081359050612ee981612ec3565b92915050565b600060208284031215612f0557612f04612774565b5b6000612f1384828501612eda565b91505092915050565b612f2581612ca6565b82525050565b612f348161279e565b82525050565b6000606082019050612f4f6000830186612f1c565b612f5c6020830185612e8f565b612f696040830184612f2b565b949350505050565b6000612f7c826129c9565b9050919050565b612f8c81612f71565b82525050565b6000602082019050612fa76000830184612f83565b92915050565b612fb681612ca6565b8114612fc157600080fd5b50565b600081359050612fd381612fad565b92915050565b600067ffffffffffffffff821115612ff457612ff3612a32565b5b602082029050602081019050919050565b600080fd5b600061301d61301884612fd9565b612a92565b905080838252602082019050602084028301858111156130405761303f613005565b5b835b8181101561306957806130558882612b74565b845260208401935050602081019050613042565b5050509392505050565b600082601f83011261308857613087612a17565b5b813561309884826020860161300a565b91505092915050565b6000806000606084860312156130ba576130b9612774565b5b60006130c886828701612fc4565b935050602084013567ffffffffffffffff8111156130e9576130e8612779565b5b6130f586828701613073565b9250506040613106868287016127c7565b9150509250925092565b60006020828403121561312657613125612774565b5b600082013567ffffffffffffffff81111561314457613143612779565b5b61315084828501612b2f565b91505092915050565b600060208201905061316e6000830184612f2b565b92915050565b60006020828403121561318a57613189612774565b5b600061319884828501612b74565b91505092915050565b60006080830160008301516131b96000860182612cb6565b50602083015184820360208601526131d18282612d16565b91505060408301516131e6604086018261286e565b5060608301516131f96060860182612835565b508091505092915050565b6000602082019050818103600083015261321e81846131a1565b905092915050565b60c08201600082015161323c6000850182612835565b50602082015161324f6020850182612835565b5060408201516132626040850182612835565b5060608201516132756060850182612851565b5060808201516132886080850182612851565b5060a082015161329b60a085018261286e565b50505050565b600060c0820190506132b66000830184613226565b92915050565b60006132c7826129c9565b9050919050565b6132d7816132bc565b82525050565b60006020820190506132f260008301846132ce565b92915050565b61330181612844565b82525050565b600060c08201905061331c6000830189612f2b565b6133296020830188612f2b565b6133366040830187612f2b565b61334360608301866132f8565b61335060808301856132f8565b61335d60a0830184612e8f565b979650505050505050565b6000806040838503121561337f5761337e612774565b5b600083013567ffffffffffffffff81111561339d5761339c612779565b5b6133a985828601612b2f565b92505060206133ba858286016127c7565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061342d82612eb9565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361345f5761345e6133f3565b5b600182019050919050565b600082825260208201905092915050565b7f4e6f206d61746368657320666f756e6420666f72207468652077696e6e657200600082015250565b60006134b1601f8361346a565b91506134bc8261347b565b602082019050919050565b600060208201905081810360008301526134e0816134a4565b9050919050565b7f506c6179657231206e6f74207265676973746572656400000000000000000000600082015250565b600061351d60168361346a565b9150613528826134e7565b602082019050919050565b6000602082019050818103600083015261354c81613510565b9050919050565b7f506c6179657232206e6f74207265676973746572656400000000000000000000600082015250565b600061358960168361346a565b915061359482613553565b602082019050919050565b600060208201905081810360008301526135b88161357c565b9050919050565b7f57696e6e6572206164647265737320697320696e76616c696400000000000000600082015250565b60006135f560198361346a565b9150613600826135bf565b602082019050919050565b60006020820190508181036000830152613624816135e8565b9050919050565b6000819050919050565b600061365061364b6136468461362b565b61299d565b612eb9565b9050919050565b61366081613635565b82525050565b600060408201905061367b6000830185612f2b565b6136886020830184613657565b9392505050565b60008151905061369e81612ec3565b92915050565b6000602082840312156136ba576136b9612774565b5b60006136c88482850161368f565b91505092915050565b6000815190506136e0816127b0565b92915050565b6000602082840312156136fc576136fb612774565b5b600061370a848285016136d1565b91505092915050565b60006040820190506137286000830185612f2b565b6137356020830184612f2b565b9392505050565b61374581612eb9565b82525050565b60006040820190506137606000830185612f2b565b61376d602083018461373c565b9392505050565b600060608201905061378960008301866132f8565b61379660208301856132f8565b6137a36040830184612e8f565b949350505050565b7f4e6f20746f75726e616d656e747320666f756e6420666f72207468652077696e60008201527f6e65720000000000000000000000000000000000000000000000000000000000602082015250565b600061380760238361346a565b9150613812826137ab565b604082019050919050565b60006020820190508181036000830152613836816137fa565b9050919050565b600061385861385361384e84612860565b61299d565b612eb9565b9050919050565b6138688161383d565b82525050565b60006040820190506138836000830185612f2b565b613890602083018461385f565b9392505050565b600082825260208201905092915050565b60006138b382612cc5565b6138bd8185613897565b93506138c883612ce1565b8060005b838110156138f95781516138e08882612cf1565b97506138eb83612d09565b9250506001810190506138cc565b5085935050505092915050565b600060408201905061391b6000830185612f1c565b818103602083015261392d81846138a8565b90509392505050565b600061394182612860565b915061ffff8203613955576139546133f3565b5b600182019050919050565b600081519050919050565b600081905092915050565b60005b83811015613994578082015181840152602081019050613979565b60008484015250505050565b60006139ab82613960565b6139b5818561396b565b93506139c5818560208601613976565b80840191505092915050565b60006139dd82846139a0565b915081905092915050565b7f546f75726e616d656e74206e6f7420666f756e64000000000000000000000000600082015250565b6000613a1e60148361346a565b9150613a29826139e8565b602082019050919050565b60006020820190508181036000830152613a4d81613a11565b9050919050565b7f4d61746368206e6f7420666f756e640000000000000000000000000000000000600082015250565b6000613a8a600f8361346a565b9150613a9582613a54565b602082019050919050565b60006020820190508181036000830152613ab981613a7d565b9050919050565b7f4e6f206d61746368657320666f756e6420666f722074686520706c6179657200600082015250565b6000613af6601f8361346a565b9150613b0182613ac0565b602082019050919050565b60006020820190508181036000830152613b2581613ae9565b9050919050565b7f506c6179657220616c7265616479206578697374730000000000000000000000600082015250565b6000613b6260158361346a565b9150613b6d82613b2c565b602082019050919050565b60006020820190508181036000830152613b9181613b55565b9050919050565b6000819050919050565b6000613bbd613bb8613bb384613b98565b61299d565b612eb9565b9050919050565b613bcd81613ba2565b82525050565b6000604082019050613be86000830185612f2b565b613bf56020830184613bc4565b9392505050565b6000613c0782613960565b613c11818561346a565b9350613c21818560208601613976565b613c2a81612a21565b840191505092915050565b60006040820190508181036000830152613c4f8185613bfc565b9050613c5e6020830184612f2b565b9392505050565b6000613c7082612eb9565b9150613c7b83612eb9565b9250828203905081811115613c9357613c926133f3565b5b9291505056fea2646970667358221220c08daa6e9e952415b93c281d1f0e9ed79f374cbbce3c11f899577ae753253f3064736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x116 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0xBB5AA495 EQ PUSH2 0x315 JUMPI DUP1 PUSH4 0xE5425060 EQ PUSH2 0x345 JUMPI DUP1 PUSH4 0xEC203F6B EQ PUSH2 0x37A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x396 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x26F JUMPI DUP1 PUSH4 0x7A080FD1 EQ PUSH2 0x279 JUMPI DUP1 PUSH4 0x80192760 EQ PUSH2 0x2A9 JUMPI DUP1 PUSH4 0x8CECB84D EQ PUSH2 0x2D9 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x40F55F91 GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x40F55F91 EQ PUSH2 0x1B5 JUMPI DUP1 PUSH4 0x592F7253 EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0x64518CDD EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0x65612077 EQ PUSH2 0x223 JUMPI DUP1 PUSH4 0x661C37FD EQ PUSH2 0x23F JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0xC954FD7 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x149249DA EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0x1750094A EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0x3B794245 EQ PUSH2 0x185 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x135 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x130 SWAP2 SWAP1 PUSH2 0x27DC JUMP JUMPDEST PUSH2 0x3B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x142 SWAP2 SWAP1 PUSH2 0x297B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x153 PUSH2 0x759 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x160 SWAP2 SWAP1 PUSH2 0x29FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x183 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17E SWAP2 SWAP1 PUSH2 0x2BB5 JUMP JUMPDEST PUSH2 0x77F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19A SWAP2 SWAP1 PUSH2 0x27DC JUMP JUMPDEST PUSH2 0x1005 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AC SWAP2 SWAP1 PUSH2 0x2E6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BD PUSH2 0x136C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CA SWAP2 SWAP1 PUSH2 0x2E9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1ED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E8 SWAP2 SWAP1 PUSH2 0x2EEF JUMP JUMPDEST PUSH2 0x1380 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FC SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2F3A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20D PUSH2 0x13F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21A SWAP2 SWAP1 PUSH2 0x2F92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x238 SWAP2 SWAP1 PUSH2 0x30A1 JUMP JUMPDEST PUSH2 0x141E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x259 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x254 SWAP2 SWAP1 PUSH2 0x3110 JUMP JUMPDEST PUSH2 0x1667 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x266 SWAP2 SWAP1 PUSH2 0x3159 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x277 PUSH2 0x16B7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x293 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28E SWAP2 SWAP1 PUSH2 0x3174 JUMP JUMPDEST PUSH2 0x16CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A0 SWAP2 SWAP1 PUSH2 0x3204 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BE SWAP2 SWAP1 PUSH2 0x3174 JUMP JUMPDEST PUSH2 0x18CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D0 SWAP2 SWAP1 PUSH2 0x32A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E1 PUSH2 0x1B09 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EE SWAP2 SWAP1 PUSH2 0x32DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FF PUSH2 0x1B2F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30C SWAP2 SWAP1 PUSH2 0x3159 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32A SWAP2 SWAP1 PUSH2 0x3110 JUMP JUMPDEST PUSH2 0x1B58 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33C SWAP2 SWAP1 PUSH2 0x297B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35A SWAP2 SWAP1 PUSH2 0x2EEF JUMP JUMPDEST PUSH2 0x2017 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x371 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3307 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x394 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38F SWAP2 SWAP1 PUSH2 0x3368 JUMP JUMPDEST PUSH2 0x20EB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3AB SWAP2 SWAP1 PUSH2 0x27DC JUMP JUMPDEST PUSH2 0x22CA JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x4 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x45F JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x3F0 JUMPI PUSH2 0x3EF PUSH2 0x33C4 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x44C JUMPI DUP2 DUP1 PUSH2 0x448 SWAP1 PUSH2 0x3422 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH2 0x457 SWAP1 PUSH2 0x3422 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3B8 JUMP JUMPDEST POP PUSH1 0x0 DUP2 SUB PUSH2 0x4A3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x49A SWAP1 PUSH2 0x34C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4BF JUMPI PUSH2 0x4BE PUSH2 0x2A32 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x4F8 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x4E5 PUSH2 0x25D9 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x4DD JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x4 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x74D JUMPI DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x537 JUMPI PUSH2 0x536 PUSH2 0x33C4 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x73A JUMPI PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x598 JUMPI PUSH2 0x597 PUSH2 0x33C4 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x16 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE POP POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x720 JUMPI PUSH2 0x71F PUSH2 0x33C4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP2 DUP1 PUSH2 0x736 SWAP1 PUSH2 0x3422 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH2 0x745 SWAP1 PUSH2 0x3422 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x4FF JUMP JUMPDEST POP DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x787 PUSH2 0x2350 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x7A8 DUP8 PUSH2 0x1667 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7FE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7F5 SWAP1 PUSH2 0x3533 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x81F DUP7 PUSH2 0x1667 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x875 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x86C SWAP1 PUSH2 0x359F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8E4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8DB SWAP1 PUSH2 0x360B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x40C10F19 DUP3 PUSH1 0xA PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x942 SWAP3 SWAP2 SWAP1 PUSH2 0x3666 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x95C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x970 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9CF SWAP2 SWAP1 PUSH2 0x3159 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9EC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA10 SWAP2 SWAP1 PUSH2 0x36A4 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF8CACB4C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xABB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xADF SWAP2 SWAP1 PUSH2 0x36E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAFB SWAP2 SWAP1 PUSH2 0x3159 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB18 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB3C SWAP2 SWAP1 PUSH2 0x36A4 JUMP JUMPDEST LT ISZERO PUSH2 0xC62 JUMPI PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x65DB7A5 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF8CACB4C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBED JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC11 SWAP2 SWAP1 PUSH2 0x36E6 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC2F SWAP3 SWAP2 SWAP1 PUSH2 0x3713 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC5D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC84 DUP9 PUSH2 0x1667 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCAD JUMPI PUSH2 0xCA8 DUP7 PUSH2 0x1667 JUMP JUMPDEST PUSH2 0xCB7 JUMP JUMPDEST PUSH2 0xCB6 DUP8 PUSH2 0x1667 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xD5F PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD19 SWAP2 SWAP1 PUSH2 0x3159 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD36 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD5A SWAP2 SWAP1 PUSH2 0x36A4 JUMP JUMPDEST PUSH2 0x23D7 JUMP JUMPDEST SWAP1 POP PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x9DC29FAC DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDBE SWAP3 SWAP2 SWAP1 PUSH2 0x374B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDD8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDEC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 PUSH2 0xE00 DUP10 DUP10 DUP7 DUP10 DUP10 DUP13 PUSH2 0x2411 JUMP JUMPDEST SWAP1 POP PUSH1 0x4 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x15 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x16 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP POP POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF8A DUP10 PUSH2 0x1667 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xFA9 DUP12 PUSH2 0x1667 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5169CF6C9C65452203B100125A7144F1F8FA3C59D527A84551A88FCEE99DF6FF DUP10 DUP10 DUP13 PUSH1 0x40 MLOAD PUSH2 0xFF2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3774 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x5 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x10B2 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1043 JUMPI PUSH2 0x1042 PUSH2 0x33C4 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x109F JUMPI DUP2 DUP1 PUSH2 0x109B SWAP1 PUSH2 0x3422 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH2 0x10AA SWAP1 PUSH2 0x3422 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x100B JUMP JUMPDEST POP PUSH1 0x0 DUP2 SUB PUSH2 0x10F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10ED SWAP1 PUSH2 0x381D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1112 JUMPI PUSH2 0x1111 PUSH2 0x2A32 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x114B JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x1138 PUSH2 0x265B JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1130 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x5 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x1360 JUMPI DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x118A JUMPI PUSH2 0x1189 PUSH2 0x33C4 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x134D JUMPI PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x11EB JUMPI PUSH2 0x11EA PUSH2 0x33C4 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x12A1 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x2 ADD SWAP1 PUSH1 0x20 DUP3 PUSH1 0x1 ADD DIV SWAP3 DUP4 ADD SWAP3 PUSH1 0x1 SUB DUP3 MUL SWAP2 POP DUP1 DUP5 GT PUSH2 0x1268 JUMPI SWAP1 POP JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1333 JUMPI PUSH2 0x1332 PUSH2 0x33C4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP2 DUP1 PUSH2 0x1349 SWAP1 PUSH2 0x3422 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH2 0x1358 SWAP1 PUSH2 0x3422 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1152 JUMP JUMPDEST POP DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1390 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x1426 PUSH2 0x2350 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x4D348EB5 DUP3 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1493 SWAP3 SWAP2 SWAP1 PUSH2 0x386E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x14AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x14C1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 PUSH2 0x14E3 DUP5 DUP5 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND DUP6 PUSH2 0x24B4 JUMP JUMPDEST SWAP1 POP PUSH1 0x5 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x1554 SWAP3 SWAP2 SWAP1 PUSH2 0x26A3 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND PUSH32 0x20CCCDED3274D61AE21772E24555A8219991777FCBFA43E8C3587F5D1C17B681 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x161E SWAP3 SWAP2 SWAP1 PUSH2 0x3906 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x7 PUSH1 0x0 DUP2 DUP2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1646 SWAP1 PUSH2 0x3936 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1671 PUSH2 0x2350 JUMP JUMPDEST PUSH1 0x6 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1681 SWAP2 SWAP1 PUSH2 0x39D1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16BF PUSH2 0x2350 JUMP JUMPDEST PUSH2 0x16C9 PUSH1 0x0 PUSH2 0x250D JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x16D3 PUSH2 0x265B JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x5 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x1889 JUMPI DUP3 PUSH2 0xFFFF AND PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x16FC JUMPI PUSH2 0x16FB PUSH2 0x33C4 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND SUB PUSH2 0x1876 JUMPI PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1739 JUMPI PUSH2 0x1738 PUSH2 0x33C4 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x17EF JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x2 ADD SWAP1 PUSH1 0x20 DUP3 PUSH1 0x1 ADD DIV SWAP3 DUP4 ADD SWAP3 PUSH1 0x1 SUB DUP3 MUL SWAP2 POP DUP1 DUP5 GT PUSH2 0x17B6 JUMPI SWAP1 POP JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP2 POP POP PUSH2 0x18C5 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1881 SWAP1 PUSH2 0x3422 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x16D6 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18BC SWAP1 PUSH2 0x3A34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18D2 PUSH2 0x25D9 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x4 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x1AC8 JUMPI DUP3 PUSH2 0xFFFF AND PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x18FB JUMPI PUSH2 0x18FA PUSH2 0x33C4 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD PUSH1 0x16 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND SUB PUSH2 0x1AB5 JUMPI PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1938 JUMPI PUSH2 0x1937 PUSH2 0x33C4 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x16 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE POP POP SWAP2 POP POP PUSH2 0x1B04 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1AC0 SWAP1 PUSH2 0x3422 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x18D5 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AFB SWAP1 PUSH2 0x3AA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x4 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x1C91 JUMPI PUSH2 0x1B74 DUP5 PUSH2 0x1667 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1B9E JUMPI PUSH2 0x1B9D PUSH2 0x33C4 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1C6A JUMPI POP PUSH2 0x1BF6 DUP5 PUSH2 0x1667 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1C20 JUMPI PUSH2 0x1C1F PUSH2 0x33C4 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0x1C7E JUMPI DUP2 DUP1 PUSH2 0x1C7A SWAP1 PUSH2 0x3422 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH2 0x1C89 SWAP1 PUSH2 0x3422 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1B5E JUMP JUMPDEST POP PUSH1 0x0 DUP2 SUB PUSH2 0x1CD5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CCC SWAP1 PUSH2 0x3B0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1CF1 JUMPI PUSH2 0x1CF0 PUSH2 0x2A32 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1D2A JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x1D17 PUSH2 0x25D9 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1D0F JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x4 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x200B JUMPI PUSH2 0x1D47 DUP7 PUSH2 0x1667 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1D71 JUMPI PUSH2 0x1D70 PUSH2 0x33C4 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1E3D JUMPI POP PUSH2 0x1DC9 DUP7 PUSH2 0x1667 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1DF3 JUMPI PUSH2 0x1DF2 PUSH2 0x33C4 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0x1FF8 JUMPI PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1E56 JUMPI PUSH2 0x1E55 PUSH2 0x33C4 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x16 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE POP POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1FDE JUMPI PUSH2 0x1FDD PUSH2 0x33C4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP2 DUP1 PUSH2 0x1FF4 SWAP1 PUSH2 0x3422 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH2 0x2003 SWAP1 PUSH2 0x3422 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1D31 JUMP JUMPDEST POP DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2027 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x16 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND SWAP1 POP DUP7 JUMP JUMPDEST PUSH2 0x20F3 PUSH2 0x2350 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 DUP4 PUSH1 0x40 MLOAD PUSH2 0x211B SWAP2 SWAP1 PUSH2 0x39D1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x21A0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2197 SWAP1 PUSH2 0x3B78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 DUP4 PUSH1 0x40 MLOAD PUSH2 0x21B1 SWAP2 SWAP1 PUSH2 0x39D1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x40C10F19 DUP3 PUSH1 0x64 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x225B SWAP3 SWAP2 SWAP1 PUSH2 0x3BD3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2275 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2289 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH32 0x746DEA5D185825C2CAFA76D92AD583FF3A306508C3B038F5AA772D0318DF5332 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0x22BE SWAP3 SWAP2 SWAP1 PUSH2 0x3C35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x22D2 PUSH2 0x2350 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2344 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x233B SWAP2 SWAP1 PUSH2 0x3159 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x234D DUP2 PUSH2 0x250D JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x2358 PUSH2 0x25D1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2376 PUSH2 0x1B2F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x23D5 JUMPI PUSH2 0x2399 PUSH2 0x25D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23CC SWAP2 SWAP1 PUSH2 0x3159 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA DUP3 GT PUSH2 0x23EA JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x240C JUMP JUMPDEST PUSH1 0x14 DUP3 LT ISZERO PUSH2 0x2407 JUMPI PUSH1 0xA DUP3 PUSH2 0x2400 SWAP2 SWAP1 PUSH2 0x3C65 JUMP JUMPDEST SWAP1 POP PUSH2 0x240C JUMP JUMPDEST PUSH1 0xA SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2419 PUSH2 0x25D9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x242F DUP11 PUSH2 0x1667 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2453 DUP10 PUSH2 0x1667 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH2 0xFFFF AND DUP2 MSTORE POP SWAP1 POP DUP1 SWAP2 POP POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x24BC PUSH2 0x265B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP8 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP DUP1 SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH2 0xFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xF ADD PUSH1 0x10 SWAP1 DIV DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x273C JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD PUSH1 0x0 JUMPDEST DUP4 DUP3 GT ISZERO PUSH2 0x270C JUMPI DUP4 MLOAD DUP4 DUP3 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP SWAP3 PUSH1 0x20 ADD SWAP3 PUSH1 0x2 ADD PUSH1 0x20 DUP2 PUSH1 0x1 ADD DIV SWAP3 DUP4 ADD SWAP3 PUSH1 0x1 SUB MUL PUSH2 0x26CC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x273A JUMPI DUP3 DUP2 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH2 0xFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x2 ADD PUSH1 0x20 DUP2 PUSH1 0x1 ADD DIV SWAP3 DUP4 ADD SWAP3 PUSH1 0x1 SUB MUL PUSH2 0x270C JUMP JUMPDEST POP JUMPDEST POP SWAP1 POP PUSH2 0x2749 SWAP2 SWAP1 PUSH2 0x274D JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2766 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x274E JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27A9 DUP3 PUSH2 0x277E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x27B9 DUP2 PUSH2 0x279E JUMP JUMPDEST DUP2 EQ PUSH2 0x27C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x27D6 DUP2 PUSH2 0x27B0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27F2 JUMPI PUSH2 0x27F1 PUSH2 0x2774 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2800 DUP5 DUP3 DUP6 ADD PUSH2 0x27C7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x283E DUP2 PUSH2 0x279E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x285A DUP2 PUSH2 0x2844 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2877 DUP2 PUSH2 0x2860 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0xC0 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x2893 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x2835 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x28A6 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x2835 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x28B9 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x2835 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x28CC PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x2851 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x28DF PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x2851 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x28F2 PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x286E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2904 DUP4 DUP4 PUSH2 0x287D JUMP JUMPDEST PUSH1 0xC0 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2928 DUP3 PUSH2 0x2809 JUMP JUMPDEST PUSH2 0x2932 DUP2 DUP6 PUSH2 0x2814 JUMP JUMPDEST SWAP4 POP PUSH2 0x293D DUP4 PUSH2 0x2825 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x296E JUMPI DUP2 MLOAD PUSH2 0x2955 DUP9 DUP3 PUSH2 0x28F8 JUMP JUMPDEST SWAP8 POP PUSH2 0x2960 DUP4 PUSH2 0x2910 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2941 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2995 DUP2 DUP5 PUSH2 0x291D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29C2 PUSH2 0x29BD PUSH2 0x29B8 DUP5 PUSH2 0x277E JUMP JUMPDEST PUSH2 0x299D JUMP JUMPDEST PUSH2 0x277E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29D4 DUP3 PUSH2 0x29A7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29E6 DUP3 PUSH2 0x29C9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x29F6 DUP2 PUSH2 0x29DB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2A11 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x29ED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x2A6A DUP3 PUSH2 0x2A21 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2A89 JUMPI PUSH2 0x2A88 PUSH2 0x2A32 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A9C PUSH2 0x276A JUMP JUMPDEST SWAP1 POP PUSH2 0x2AA8 DUP3 DUP3 PUSH2 0x2A61 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2AC8 JUMPI PUSH2 0x2AC7 PUSH2 0x2A32 JUMP JUMPDEST JUMPDEST PUSH2 0x2AD1 DUP3 PUSH2 0x2A21 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B00 PUSH2 0x2AFB DUP5 PUSH2 0x2AAD JUMP JUMPDEST PUSH2 0x2A92 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2B1C JUMPI PUSH2 0x2B1B PUSH2 0x2A1C JUMP JUMPDEST JUMPDEST PUSH2 0x2B27 DUP5 DUP3 DUP6 PUSH2 0x2ADE JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2B44 JUMPI PUSH2 0x2B43 PUSH2 0x2A17 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2B54 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2AED JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2B66 DUP2 PUSH2 0x2860 JUMP JUMPDEST DUP2 EQ PUSH2 0x2B71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2B83 DUP2 PUSH2 0x2B5D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2B92 DUP2 PUSH2 0x2844 JUMP JUMPDEST DUP2 EQ PUSH2 0x2B9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2BAF DUP2 PUSH2 0x2B89 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x2BD2 JUMPI PUSH2 0x2BD1 PUSH2 0x2774 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2BF0 JUMPI PUSH2 0x2BEF PUSH2 0x2779 JUMP JUMPDEST JUMPDEST PUSH2 0x2BFC DUP10 DUP3 DUP11 ADD PUSH2 0x2B2F JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2C1D JUMPI PUSH2 0x2C1C PUSH2 0x2779 JUMP JUMPDEST JUMPDEST PUSH2 0x2C29 DUP10 DUP3 DUP11 ADD PUSH2 0x2B2F JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x2C3A DUP10 DUP3 DUP11 ADD PUSH2 0x2B74 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x2C4B DUP10 DUP3 DUP11 ADD PUSH2 0x2BA0 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH2 0x2C5C DUP10 DUP3 DUP11 ADD PUSH2 0x2BA0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH2 0x2C6D DUP10 DUP3 DUP11 ADD PUSH2 0x27C7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2CBF DUP2 PUSH2 0x2CA6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CFD DUP4 DUP4 PUSH2 0x286E JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D21 DUP3 PUSH2 0x2CC5 JUMP JUMPDEST PUSH2 0x2D2B DUP2 DUP6 PUSH2 0x2CD0 JUMP JUMPDEST SWAP4 POP PUSH2 0x2D36 DUP4 PUSH2 0x2CE1 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2D67 JUMPI DUP2 MLOAD PUSH2 0x2D4E DUP9 DUP3 PUSH2 0x2CF1 JUMP JUMPDEST SWAP8 POP PUSH2 0x2D59 DUP4 PUSH2 0x2D09 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2D3A JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0x2D8C PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x2CB6 JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x2DA4 DUP3 DUP3 PUSH2 0x2D16 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x2DB9 PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0x286E JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x2DCC PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x2835 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DE3 DUP4 DUP4 PUSH2 0x2D74 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E03 DUP3 PUSH2 0x2C7A JUMP JUMPDEST PUSH2 0x2E0D DUP2 DUP6 PUSH2 0x2C85 JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x2E1F DUP6 PUSH2 0x2C96 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x2E5B JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x2E3C DUP6 DUP3 PUSH2 0x2DD7 JUMP JUMPDEST SWAP5 POP PUSH2 0x2E47 DUP4 PUSH2 0x2DEB JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2E23 JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2E87 DUP2 DUP5 PUSH2 0x2DF8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2E98 DUP2 PUSH2 0x2860 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2EB3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2E8F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2ECC DUP2 PUSH2 0x2EB9 JUMP JUMPDEST DUP2 EQ PUSH2 0x2ED7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2EE9 DUP2 PUSH2 0x2EC3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2F05 JUMPI PUSH2 0x2F04 PUSH2 0x2774 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2F13 DUP5 DUP3 DUP6 ADD PUSH2 0x2EDA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2F25 DUP2 PUSH2 0x2CA6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2F34 DUP2 PUSH2 0x279E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2F4F PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2F1C JUMP JUMPDEST PUSH2 0x2F5C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2E8F JUMP JUMPDEST PUSH2 0x2F69 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2F2B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F7C DUP3 PUSH2 0x29C9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2F8C DUP2 PUSH2 0x2F71 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2FA7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2F83 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2FB6 DUP2 PUSH2 0x2CA6 JUMP JUMPDEST DUP2 EQ PUSH2 0x2FC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2FD3 DUP2 PUSH2 0x2FAD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2FF4 JUMPI PUSH2 0x2FF3 PUSH2 0x2A32 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x301D PUSH2 0x3018 DUP5 PUSH2 0x2FD9 JUMP JUMPDEST PUSH2 0x2A92 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x3040 JUMPI PUSH2 0x303F PUSH2 0x3005 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3069 JUMPI DUP1 PUSH2 0x3055 DUP9 DUP3 PUSH2 0x2B74 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3042 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3088 JUMPI PUSH2 0x3087 PUSH2 0x2A17 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3098 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x300A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x30BA JUMPI PUSH2 0x30B9 PUSH2 0x2774 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x30C8 DUP7 DUP3 DUP8 ADD PUSH2 0x2FC4 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x30E9 JUMPI PUSH2 0x30E8 PUSH2 0x2779 JUMP JUMPDEST JUMPDEST PUSH2 0x30F5 DUP7 DUP3 DUP8 ADD PUSH2 0x3073 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x3106 DUP7 DUP3 DUP8 ADD PUSH2 0x27C7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3126 JUMPI PUSH2 0x3125 PUSH2 0x2774 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3144 JUMPI PUSH2 0x3143 PUSH2 0x2779 JUMP JUMPDEST JUMPDEST PUSH2 0x3150 DUP5 DUP3 DUP6 ADD PUSH2 0x2B2F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x316E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2F2B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x318A JUMPI PUSH2 0x3189 PUSH2 0x2774 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3198 DUP5 DUP3 DUP6 ADD PUSH2 0x2B74 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0x31B9 PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x2CB6 JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x31D1 DUP3 DUP3 PUSH2 0x2D16 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x31E6 PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0x286E JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x31F9 PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x2835 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x321E DUP2 DUP5 PUSH2 0x31A1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xC0 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x323C PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x2835 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x324F PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x2835 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x3262 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x2835 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x3275 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x2851 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x3288 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x2851 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x329B PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x286E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x32B6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3226 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32C7 DUP3 PUSH2 0x29C9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x32D7 DUP2 PUSH2 0x32BC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x32F2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x32CE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3301 DUP2 PUSH2 0x2844 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x331C PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x2F2B JUMP JUMPDEST PUSH2 0x3329 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x2F2B JUMP JUMPDEST PUSH2 0x3336 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x2F2B JUMP JUMPDEST PUSH2 0x3343 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x32F8 JUMP JUMPDEST PUSH2 0x3350 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x32F8 JUMP JUMPDEST PUSH2 0x335D PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x2E8F JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x337F JUMPI PUSH2 0x337E PUSH2 0x2774 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x339D JUMPI PUSH2 0x339C PUSH2 0x2779 JUMP JUMPDEST JUMPDEST PUSH2 0x33A9 DUP6 DUP3 DUP7 ADD PUSH2 0x2B2F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x33BA DUP6 DUP3 DUP7 ADD PUSH2 0x27C7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x342D DUP3 PUSH2 0x2EB9 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x345F JUMPI PUSH2 0x345E PUSH2 0x33F3 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F206D61746368657320666F756E6420666F72207468652077696E6E657200 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34B1 PUSH1 0x1F DUP4 PUSH2 0x346A JUMP JUMPDEST SWAP2 POP PUSH2 0x34BC DUP3 PUSH2 0x347B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x34E0 DUP2 PUSH2 0x34A4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x506C6179657231206E6F74207265676973746572656400000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x351D PUSH1 0x16 DUP4 PUSH2 0x346A JUMP JUMPDEST SWAP2 POP PUSH2 0x3528 DUP3 PUSH2 0x34E7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x354C DUP2 PUSH2 0x3510 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x506C6179657232206E6F74207265676973746572656400000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3589 PUSH1 0x16 DUP4 PUSH2 0x346A JUMP JUMPDEST SWAP2 POP PUSH2 0x3594 DUP3 PUSH2 0x3553 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x35B8 DUP2 PUSH2 0x357C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x57696E6E6572206164647265737320697320696E76616C696400000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35F5 PUSH1 0x19 DUP4 PUSH2 0x346A JUMP JUMPDEST SWAP2 POP PUSH2 0x3600 DUP3 PUSH2 0x35BF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3624 DUP2 PUSH2 0x35E8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3650 PUSH2 0x364B PUSH2 0x3646 DUP5 PUSH2 0x362B JUMP JUMPDEST PUSH2 0x299D JUMP JUMPDEST PUSH2 0x2EB9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3660 DUP2 PUSH2 0x3635 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x367B PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2F2B JUMP JUMPDEST PUSH2 0x3688 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3657 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x369E DUP2 PUSH2 0x2EC3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x36BA JUMPI PUSH2 0x36B9 PUSH2 0x2774 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x36C8 DUP5 DUP3 DUP6 ADD PUSH2 0x368F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x36E0 DUP2 PUSH2 0x27B0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x36FC JUMPI PUSH2 0x36FB PUSH2 0x2774 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x370A DUP5 DUP3 DUP6 ADD PUSH2 0x36D1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3728 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2F2B JUMP JUMPDEST PUSH2 0x3735 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2F2B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x3745 DUP2 PUSH2 0x2EB9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3760 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2F2B JUMP JUMPDEST PUSH2 0x376D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x373C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3789 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x32F8 JUMP JUMPDEST PUSH2 0x3796 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x32F8 JUMP JUMPDEST PUSH2 0x37A3 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2E8F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E6F20746F75726E616D656E747320666F756E6420666F72207468652077696E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E65720000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3807 PUSH1 0x23 DUP4 PUSH2 0x346A JUMP JUMPDEST SWAP2 POP PUSH2 0x3812 DUP3 PUSH2 0x37AB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3836 DUP2 PUSH2 0x37FA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3858 PUSH2 0x3853 PUSH2 0x384E DUP5 PUSH2 0x2860 JUMP JUMPDEST PUSH2 0x299D JUMP JUMPDEST PUSH2 0x2EB9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3868 DUP2 PUSH2 0x383D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3883 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2F2B JUMP JUMPDEST PUSH2 0x3890 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x385F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x38B3 DUP3 PUSH2 0x2CC5 JUMP JUMPDEST PUSH2 0x38BD DUP2 DUP6 PUSH2 0x3897 JUMP JUMPDEST SWAP4 POP PUSH2 0x38C8 DUP4 PUSH2 0x2CE1 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x38F9 JUMPI DUP2 MLOAD PUSH2 0x38E0 DUP9 DUP3 PUSH2 0x2CF1 JUMP JUMPDEST SWAP8 POP PUSH2 0x38EB DUP4 PUSH2 0x2D09 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x38CC JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x391B PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2F1C JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x392D DUP2 DUP5 PUSH2 0x38A8 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3941 DUP3 PUSH2 0x2860 JUMP JUMPDEST SWAP2 POP PUSH2 0xFFFF DUP3 SUB PUSH2 0x3955 JUMPI PUSH2 0x3954 PUSH2 0x33F3 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3994 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3979 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39AB DUP3 PUSH2 0x3960 JUMP JUMPDEST PUSH2 0x39B5 DUP2 DUP6 PUSH2 0x396B JUMP JUMPDEST SWAP4 POP PUSH2 0x39C5 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3976 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39DD DUP3 DUP5 PUSH2 0x39A0 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546F75726E616D656E74206E6F7420666F756E64000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A1E PUSH1 0x14 DUP4 PUSH2 0x346A JUMP JUMPDEST SWAP2 POP PUSH2 0x3A29 DUP3 PUSH2 0x39E8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3A4D DUP2 PUSH2 0x3A11 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D61746368206E6F7420666F756E640000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A8A PUSH1 0xF DUP4 PUSH2 0x346A JUMP JUMPDEST SWAP2 POP PUSH2 0x3A95 DUP3 PUSH2 0x3A54 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3AB9 DUP2 PUSH2 0x3A7D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F206D61746368657320666F756E6420666F722074686520706C6179657200 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AF6 PUSH1 0x1F DUP4 PUSH2 0x346A JUMP JUMPDEST SWAP2 POP PUSH2 0x3B01 DUP3 PUSH2 0x3AC0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3B25 DUP2 PUSH2 0x3AE9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x506C6179657220616C7265616479206578697374730000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B62 PUSH1 0x15 DUP4 PUSH2 0x346A JUMP JUMPDEST SWAP2 POP PUSH2 0x3B6D DUP3 PUSH2 0x3B2C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3B91 DUP2 PUSH2 0x3B55 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3BBD PUSH2 0x3BB8 PUSH2 0x3BB3 DUP5 PUSH2 0x3B98 JUMP JUMPDEST PUSH2 0x299D JUMP JUMPDEST PUSH2 0x2EB9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3BCD DUP2 PUSH2 0x3BA2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3BE8 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2F2B JUMP JUMPDEST PUSH2 0x3BF5 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3BC4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C07 DUP3 PUSH2 0x3960 JUMP JUMPDEST PUSH2 0x3C11 DUP2 DUP6 PUSH2 0x346A JUMP JUMPDEST SWAP4 POP PUSH2 0x3C21 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3976 JUMP JUMPDEST PUSH2 0x3C2A DUP2 PUSH2 0x2A21 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3C4F DUP2 DUP6 PUSH2 0x3BFC JUMP JUMPDEST SWAP1 POP PUSH2 0x3C5E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2F2B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C70 DUP3 PUSH2 0x2EB9 JUMP JUMPDEST SWAP2 POP PUSH2 0x3C7B DUP4 PUSH2 0x2EB9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x3C93 JUMPI PUSH2 0x3C92 PUSH2 0x33F3 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC0 DUP14 0xAA PUSH15 0x9E952415B93C281D1F0E9ED79F374C 0xBB 0xCE EXTCODECOPY GT 0xF8 SWAP10 JUMPI PUSH27 0xE753253F3064736F6C634300081400330000000000000000000000 ","sourceMap":"295:12443:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8056:733;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;403:22;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4384:1475;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;11948:788;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2858:32;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1566:42;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;471:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9966:603;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3960:139;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;11439:364:22;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8919:328;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;431:34;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6899:991:22;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1398:33;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;3564:267;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8056:733:22;8134:14;8160:12;8191:6;8186:160;8207:18;:25;;;;8203:1;:29;8186:160;;;8289:6;8257:38;;:18;8276:1;8257:21;;;;;;;;:::i;:::-;;;;;;;;;;;;:28;;;;;;;;;;;;:38;;;8253:83;;8315:6;;;;;:::i;:::-;;;;8253:83;8234:3;;;;;:::i;:::-;;;;8186:160;;;;8367:1;8359:4;:9;8355:81;;8384:41;;;;;;;;;;:::i;:::-;;;;;;;;8355:81;8445:28;8488:4;8476:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;8445:48;;8503:13;8535:6;8530:223;8551:18;:25;;;;8547:1;:29;8530:223;;;8633:6;8601:38;;:18;8620:1;8601:21;;;;;;;;:::i;:::-;;;;;;;;;;;;:28;;;;;;;;;;;;:38;;;8597:146;;8682:18;8701:1;8682:21;;;;;;;;:::i;:::-;;;;;;;;;;;;8659:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:13;8673:5;8659:20;;;;;;;;:::i;:::-;;;;;;;:44;;;;8721:7;;;;;:::i;:::-;;;;8597:146;8578:3;;;;;:::i;:::-;;;;8530:223;;;;8769:13;8762:20;;;;;8056:733;;;:::o;403:22::-;;;;;;;;;;;;;:::o;4384:1475::-;1531:13:0;:11;:13::i;:::-;4662:1:22::1;4625:39;;:25;4642:7;4625:16;:25::i;:::-;:39;;::::0;4604:108:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;4780:1;4743:39;;:25;4760:7;4743:16;:25::i;:::-;:39;;::::0;4722:108:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;4866:1;4848:20;;:6;:20;;::::0;4840:58:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;4908:9;;;;;;;;;;;:14;;;4923:6;4931:2;4908:26;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;5021:9;;;;;;;;;;;:19;;;5041:6;5021:27;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4961:9;;;;;;;;;;;:19;;;4981:7;;;;;;;;;;;:22;;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4961:45;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:87;4944:193;;;5073:7;;;;;;;;;;;:19;;;5093:7;;;;;;;;;;;:22;;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5119:6;5073:53;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;4944:193;5146:13;5192:6;5163:35;;:25;5180:7;5163:16;:25::i;:::-;:35;;::::0;5162:117:::1;;5254:25;5271:7;5254:16;:25::i;:::-;5162:117;;;5214:25;5231:7;5214:16;:25::i;:::-;5162:117;5146:133;;5289:20;5312:47;5332:9;;;;;;;;;;;:19;;;5352:5;5332:26;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5312:19;:47::i;:::-;5289:70;;5369:9;;;;;;;;;;;:14;;;5384:5;5391:12;5369:35;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;5414:22;5439:160;5468:7;5489;5510:6;5530:12;5556;5582:7;5439:15;:160::i;:::-;5414:185;;5609:18;5633:9;5609:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5763:6;5658:194;;5724:25;5741:7;5724:16;:25::i;:::-;5658:194;;5685:25;5702:7;5685:16;:25::i;:::-;5658:194;;;5783:12;5809;5835:7;5658:194;;;;;;;;:::i;:::-;;;;;;;;4594:1265;;;4384:1475:::0;;;;;;:::o;11948:788::-;12030:19;12061:12;12092:6;12087:168;12108:22;:29;;;;12104:1;:33;12087:168;;;12198:6;12162:42;;:22;12185:1;12162:25;;;;;;;;:::i;:::-;;;;;;;;;;;;:32;;;;;;;;;;;;:42;;;12158:87;;12224:6;;;;;:::i;:::-;;;;12158:87;12139:3;;;;;:::i;:::-;;;;12087:168;;;;12276:1;12268:4;:9;12264:85;;12293:45;;;;;;;;;;:::i;:::-;;;;;;;;12264:85;12358:37;12415:4;12398:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;12358:62;;12430:13;12462:6;12457:239;12478:22;:29;;;;12474:1;:33;12457:239;;;12568:6;12532:42;;:22;12555:1;12532:25;;;;;;;;:::i;:::-;;;;;;;;;;;;:32;;;;;;;;;;;;:42;;;12528:158;;12621:22;12644:1;12621:25;;;;;;;;:::i;:::-;;;;;;;;;;;;12594:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:17;12612:5;12594:24;;;;;;;;:::i;:::-;;;;;;;:52;;;;12664:7;;;;;:::i;:::-;;;;12528:158;12509:3;;;;;:::i;:::-;;;;12457:239;;;;12712:17;12705:24;;;;;11948:788;;;:::o;2858:32::-;;;;;;;;;;;;;:::o;1566:42::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;471:26::-;;;;;;;;;;;;;:::o;9966:603::-;1531:13:0;:11;:13::i;:::-;10112::22::1;;;;;;;;;;;:21;;;10134:6;10142:18;;;;;;;;;;;10112:49;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;10171:32;10206:130;10240:12;10266:8;10288:18;;;;;;;;;;;10320:6;10206:20;:130::i;:::-;10171:165;;10346:22;10374:14;10346:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10516:6;10404:128;;10436:18;;;;;;;;;;;10404:128;;;10468:12;10494:8;10404:128;;;;;;;:::i;:::-;;;;;;;;10542:18;;:20;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;10102:467;9966:603:::0;;;:::o;3960:139::-;4052:7;1531:13:0;:11;:13::i;:::-;4078:7:22::1;4086:5;4078:14;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4071:21;;3960:139:::0;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;11439:364:22:-;11522:17;;:::i;:::-;11556:6;11551:206;11572:22;:29;;;;11568:1;:33;11551:206;;;11668:12;11626:54;;:22;11649:1;11626:25;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;;;;;;;;;;:54;;;11622:125;;11707:22;11730:1;11707:25;;;;;;;;:::i;:::-;;;;;;;;;;;;11700:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11622:125;11603:3;;;;;:::i;:::-;;;;11551:206;;;;11766:30;;;;;;;;;;:::i;:::-;;;;;;;;11439:364;;;;:::o;8919:328::-;8998:12;;:::i;:::-;9027:6;9022:184;9043:18;:25;;;;9039:1;:29;9022:184;;;9126:7;9093:40;;:18;9112:1;9093:21;;;;;;;;:::i;:::-;;;;;;;;;;;;:29;;;;;;;;;;;;:40;;;9089:107;;9160:18;9179:1;9160:21;;;;;;;;:::i;:::-;;;;;;;;;;;;9153:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9089:107;9070:3;;;;;:::i;:::-;;;;9022:184;;;;9215:25;;;;;;;;;;:::i;:::-;;;;;;;;8919:328;;;;:::o;431:34::-;;;;;;;;;;;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;6899:991:22:-;6983:14;7009:12;7040:6;7035:286;7056:18;:25;;;;7052:1;:29;7035:286;;;7156:24;7173:6;7156:16;:24::i;:::-;7123:57;;:18;7142:1;7123:21;;;;;;;;:::i;:::-;;;;;;;;;;;;:29;;;;;;;;;;;;:57;;;:134;;;;7233:24;7250:6;7233:16;:24::i;:::-;7200:57;;:18;7219:1;7200:21;;;;;;;;:::i;:::-;;;;;;;;;;;;:29;;;;;;;;;;;;:57;;;7123:134;7102:209;;;7290:6;;;;;:::i;:::-;;;;7102:209;7083:3;;;;;:::i;:::-;;;;7035:286;;;;7342:1;7334:4;:9;7330:81;;7359:41;;;;;;;;;;:::i;:::-;;;;;;;;7330:81;7420:28;7463:4;7451:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;7420:48;;7478:13;7510:6;7505:349;7526:18;:25;;;;7522:1;:29;7505:349;;;7626:24;7643:6;7626:16;:24::i;:::-;7593:57;;:18;7612:1;7593:21;;;;;;;;:::i;:::-;;;;;;;;;;;;:29;;;;;;;;;;;;:57;;;:134;;;;7703:24;7720:6;7703:16;:24::i;:::-;7670:57;;:18;7689:1;7670:21;;;;;;;;:::i;:::-;;;;;;;;;;;;:29;;;;;;;;;;;;:57;;;7593:134;7572:272;;;7783:18;7802:1;7783:21;;;;;;;;:::i;:::-;;;;;;;;;;;;7760:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:13;7774:5;7760:20;;;;;;;;:::i;:::-;;;;;;;:44;;;;7822:7;;;;;:::i;:::-;;;;7572:272;7553:3;;;;;:::i;:::-;;;;7505:349;;;;7870:13;7863:20;;;;;6899:991;;;:::o;1398:33::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3564:267::-;1531:13:0;:11;:13::i;:::-;3682:1:22::1;3656:28;;:7;3664:5;3656:14;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:28;;;3648:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;3737:7;3720;3728:5;3720:14;;;;;;:::i;:::-;;;;;;;;;;;;;;:24;;;;;;;;;;;;;;;;;;3754:9;;;;;;;;;;;:14;;;3769:7;3778:3;3754:28;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;3797:27;3809:5;3816:7;3797:27;;;;;;;:::i;:::-;;;;;;;;3564:267:::0;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;9394:268:22:-;9477:7;9511:2;9500:7;:13;9496:160;;9536:1;9529:8;;;;9496:160;9568:2;9558:7;:12;9554:102;;;9603:2;9593:7;:12;;;;:::i;:::-;9586:19;;;;9554:102;9643:2;9636:9;;9394:268;;;;:::o;6177:553::-;6397:12;;:::i;:::-;6421:22;6446:251;;;;;;;;6475:25;6492:7;6475:16;:25::i;:::-;6446:251;;;;;;6523:25;6540:7;6523:16;:25::i;:::-;6446:251;;;;;;6570:6;6446:251;;;;;;6604:12;6446:251;;;;;;6644:12;6446:251;;;;;;6679:7;6446:251;;;;;6421:276;;6714:9;6707:16;;;6177:553;;;;;;;;:::o;10854:439::-;11029:17;;:::i;:::-;11058:32;11093:162;;;;;;;;11132:12;11093:162;;;;;;11168:8;11093:162;;;;11204:12;11093:162;;;;;;11238:6;11093:162;;;;;11058:197;;11272:14;11265:21;;;10854:439;;;;;;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;656:96:14:-;709:7;735:10;728:17;;656:96;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:75:26:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:137::-;1266:6;1300:5;1294:12;1284:22;;1176:137;;;:::o;1319:207::-;1441:11;1475:6;1470:3;1463:19;1515:4;1510:3;1506:14;1491:29;;1319:207;;;;:::o;1532:155::-;1622:4;1645:3;1637:11;;1675:4;1670:3;1666:14;1658:22;;1532:155;;;:::o;1693:108::-;1770:24;1788:5;1770:24;:::i;:::-;1765:3;1758:37;1693:108;;:::o;1807:86::-;1842:7;1882:4;1875:5;1871:16;1860:27;;1807:86;;;:::o;1899:102::-;1972:22;1988:5;1972:22;:::i;:::-;1967:3;1960:35;1899:102;;:::o;2007:89::-;2043:7;2083:6;2076:5;2072:18;2061:29;;2007:89;;;:::o;2102:105::-;2177:23;2194:5;2177:23;:::i;:::-;2172:3;2165:36;2102:105;;:::o;2279:1206::-;2412:4;2407:3;2403:14;2502:4;2495:5;2491:16;2485:23;2521:63;2578:4;2573:3;2569:14;2555:12;2521:63;:::i;:::-;2427:167;2679:4;2672:5;2668:16;2662:23;2698:63;2755:4;2750:3;2746:14;2732:12;2698:63;:::i;:::-;2604:167;2855:4;2848:5;2844:16;2838:23;2874:63;2931:4;2926:3;2922:14;2908:12;2874:63;:::i;:::-;2781:166;3037:4;3030:5;3026:16;3020:23;3056:59;3109:4;3104:3;3100:14;3086:12;3056:59;:::i;:::-;2957:168;3215:4;3208:5;3204:16;3198:23;3234:59;3287:4;3282:3;3278:14;3264:12;3234:59;:::i;:::-;3135:168;3388:4;3381:5;3377:16;3371:23;3407:61;3462:4;3457:3;3453:14;3439:12;3407:61;:::i;:::-;3313:165;2381:1104;2279:1206;;:::o;3491:271::-;3606:10;3627:92;3715:3;3707:6;3627:92;:::i;:::-;3751:4;3746:3;3742:14;3728:28;;3491:271;;;;:::o;3768:136::-;3861:4;3893;3888:3;3884:14;3876:22;;3768:136;;;:::o;3980:916::-;4145:3;4174:77;4245:5;4174:77;:::i;:::-;4267:109;4369:6;4364:3;4267:109;:::i;:::-;4260:116;;4400:79;4473:5;4400:79;:::i;:::-;4502:7;4533:1;4518:353;4543:6;4540:1;4537:13;4518:353;;;4619:6;4613:13;4646:109;4751:3;4736:13;4646:109;:::i;:::-;4639:116;;4778:83;4854:6;4778:83;:::i;:::-;4768:93;;4578:293;4565:1;4562;4558:9;4553:14;;4518:353;;;4522:14;4887:3;4880:10;;4150:746;;;3980:916;;;;:::o;4902:465::-;5091:4;5129:2;5118:9;5114:18;5106:26;;5178:9;5172:4;5168:20;5164:1;5153:9;5149:17;5142:47;5206:154;5355:4;5346:6;5206:154;:::i;:::-;5198:162;;4902:465;;;;:::o;5373:60::-;5401:3;5422:5;5415:12;;5373:60;;;:::o;5439:142::-;5489:9;5522:53;5540:34;5549:24;5567:5;5549:24;:::i;:::-;5540:34;:::i;:::-;5522:53;:::i;:::-;5509:66;;5439:142;;;:::o;5587:126::-;5637:9;5670:37;5701:5;5670:37;:::i;:::-;5657:50;;5587:126;;;:::o;5719:142::-;5785:9;5818:37;5849:5;5818:37;:::i;:::-;5805:50;;5719:142;;;:::o;5867:163::-;5970:53;6017:5;5970:53;:::i;:::-;5965:3;5958:66;5867:163;;:::o;6036:254::-;6145:4;6183:2;6172:9;6168:18;6160:26;;6196:87;6280:1;6269:9;6265:17;6256:6;6196:87;:::i;:::-;6036:254;;;;:::o;6296:117::-;6405:1;6402;6395:12;6419:117;6528:1;6525;6518:12;6542:102;6583:6;6634:2;6630:7;6625:2;6618:5;6614:14;6610:28;6600:38;;6542:102;;;:::o;6650:180::-;6698:77;6695:1;6688:88;6795:4;6792:1;6785:15;6819:4;6816:1;6809:15;6836:281;6919:27;6941:4;6919:27;:::i;:::-;6911:6;6907:40;7049:6;7037:10;7034:22;7013:18;7001:10;6998:34;6995:62;6992:88;;;7060:18;;:::i;:::-;6992:88;7100:10;7096:2;7089:22;6879:238;6836:281;;:::o;7123:129::-;7157:6;7184:20;;:::i;:::-;7174:30;;7213:33;7241:4;7233:6;7213:33;:::i;:::-;7123:129;;;:::o;7258:308::-;7320:4;7410:18;7402:6;7399:30;7396:56;;;7432:18;;:::i;:::-;7396:56;7470:29;7492:6;7470:29;:::i;:::-;7462:37;;7554:4;7548;7544:15;7536:23;;7258:308;;;:::o;7572:146::-;7669:6;7664:3;7659;7646:30;7710:1;7701:6;7696:3;7692:16;7685:27;7572:146;;;:::o;7724:425::-;7802:5;7827:66;7843:49;7885:6;7843:49;:::i;:::-;7827:66;:::i;:::-;7818:75;;7916:6;7909:5;7902:21;7954:4;7947:5;7943:16;7992:3;7983:6;7978:3;7974:16;7971:25;7968:112;;;7999:79;;:::i;:::-;7968:112;8089:54;8136:6;8131:3;8126;8089:54;:::i;:::-;7808:341;7724:425;;;;;:::o;8169:340::-;8225:5;8274:3;8267:4;8259:6;8255:17;8251:27;8241:122;;8282:79;;:::i;:::-;8241:122;8399:6;8386:20;8424:79;8499:3;8491:6;8484:4;8476:6;8472:17;8424:79;:::i;:::-;8415:88;;8231:278;8169:340;;;;:::o;8515:120::-;8587:23;8604:5;8587:23;:::i;:::-;8580:5;8577:34;8567:62;;8625:1;8622;8615:12;8567:62;8515:120;:::o;8641:137::-;8686:5;8724:6;8711:20;8702:29;;8740:32;8766:5;8740:32;:::i;:::-;8641:137;;;;:::o;8784:118::-;8855:22;8871:5;8855:22;:::i;:::-;8848:5;8845:33;8835:61;;8892:1;8889;8882:12;8835:61;8784:118;:::o;8908:135::-;8952:5;8990:6;8977:20;8968:29;;9006:31;9031:5;9006:31;:::i;:::-;8908:135;;;;:::o;9049:1407::-;9168:6;9176;9184;9192;9200;9208;9257:3;9245:9;9236:7;9232:23;9228:33;9225:120;;;9264:79;;:::i;:::-;9225:120;9412:1;9401:9;9397:17;9384:31;9442:18;9434:6;9431:30;9428:117;;;9464:79;;:::i;:::-;9428:117;9569:63;9624:7;9615:6;9604:9;9600:22;9569:63;:::i;:::-;9559:73;;9355:287;9709:2;9698:9;9694:18;9681:32;9740:18;9732:6;9729:30;9726:117;;;9762:79;;:::i;:::-;9726:117;9867:63;9922:7;9913:6;9902:9;9898:22;9867:63;:::i;:::-;9857:73;;9652:288;9979:2;10005:52;10049:7;10040:6;10029:9;10025:22;10005:52;:::i;:::-;9995:62;;9950:117;10106:2;10132:51;10175:7;10166:6;10155:9;10151:22;10132:51;:::i;:::-;10122:61;;10077:116;10232:3;10259:51;10302:7;10293:6;10282:9;10278:22;10259:51;:::i;:::-;10249:61;;10203:117;10359:3;10386:53;10431:7;10422:6;10411:9;10407:22;10386:53;:::i;:::-;10376:63;;10330:119;9049:1407;;;;;;;;:::o;10462:142::-;10557:6;10591:5;10585:12;10575:22;;10462:142;;;:::o;10610:212::-;10737:11;10771:6;10766:3;10759:19;10811:4;10806:3;10802:14;10787:29;;10610:212;;;;:::o;10828:160::-;10923:4;10946:3;10938:11;;10976:4;10971:3;10967:14;10959:22;;10828:160;;;:::o;10994:93::-;11030:7;11070:10;11063:5;11059:22;11048:33;;10994:93;;;:::o;11093:105::-;11168:23;11185:5;11168:23;:::i;:::-;11163:3;11156:36;11093:105;;:::o;11204:113::-;11270:6;11304:5;11298:12;11288:22;;11204:113;;;:::o;11323:173::-;11411:11;11445:6;11440:3;11433:19;11485:4;11480:3;11476:14;11461:29;;11323:173;;;;:::o;11502:131::-;11568:4;11591:3;11583:11;;11621:4;11616:3;11612:14;11604:22;;11502:131;;;:::o;11639:175::-;11706:10;11727:44;11767:3;11759:6;11727:44;:::i;:::-;11803:4;11798:3;11794:14;11780:28;;11639:175;;;;:::o;11820:112::-;11889:4;11921;11916:3;11912:14;11904:22;;11820:112;;;:::o;11966:704::-;12073:3;12102:53;12149:5;12102:53;:::i;:::-;12171:75;12239:6;12234:3;12171:75;:::i;:::-;12164:82;;12270:55;12319:5;12270:55;:::i;:::-;12348:7;12379:1;12364:281;12389:6;12386:1;12383:13;12364:281;;;12465:6;12459:13;12492:61;12549:3;12534:13;12492:61;:::i;:::-;12485:68;;12576:59;12628:6;12576:59;:::i;:::-;12566:69;;12424:221;12411:1;12408;12404:9;12399:14;;12364:281;;;12368:14;12661:3;12654:10;;12078:592;;;11966:704;;;;:::o;12752:996::-;12867:3;12903:4;12898:3;12894:14;12998:4;12991:5;12987:16;12981:23;13017:61;13072:4;13067:3;13063:14;13049:12;13017:61;:::i;:::-;12918:170;13174:4;13167:5;13163:16;13157:23;13227:3;13221:4;13217:14;13210:4;13205:3;13201:14;13194:38;13253:101;13349:4;13335:12;13253:101;:::i;:::-;13245:109;;13098:267;13455:4;13448:5;13444:16;13438:23;13474:61;13529:4;13524:3;13520:14;13506:12;13474:61;:::i;:::-;13375:170;13629:4;13622:5;13618:16;13612:23;13648:63;13705:4;13700:3;13696:14;13682:12;13648:63;:::i;:::-;13555:166;13738:4;13731:11;;12872:876;12752:996;;;;:::o;13754:268::-;13879:10;13914:102;14012:3;14004:6;13914:102;:::i;:::-;13900:116;;13754:268;;;;:::o;14028:141::-;14126:4;14158;14153:3;14149:14;14141:22;;14028:141;;;:::o;14255:1135::-;14430:3;14459:82;14535:5;14459:82;:::i;:::-;14557:114;14664:6;14659:3;14557:114;:::i;:::-;14550:121;;14697:3;14742:4;14734:6;14730:17;14725:3;14721:27;14772:84;14850:5;14772:84;:::i;:::-;14879:7;14910:1;14895:450;14920:6;14917:1;14914:13;14895:450;;;14991:9;14985:4;14981:20;14976:3;14969:33;15042:6;15036:13;15070:120;15185:4;15170:13;15070:120;:::i;:::-;15062:128;;15213:88;15294:6;15213:88;:::i;:::-;15203:98;;15330:4;15325:3;15321:14;15314:21;;14955:390;14942:1;14939;14935:9;14930:14;;14895:450;;;14899:14;15361:4;15354:11;;15381:3;15374:10;;14435:955;;;;;14255:1135;;;;:::o;15396:485::-;15595:4;15633:2;15622:9;15618:18;15610:26;;15682:9;15676:4;15672:20;15668:1;15657:9;15653:17;15646:47;15710:164;15869:4;15860:6;15710:164;:::i;:::-;15702:172;;15396:485;;;;:::o;15887:115::-;15972:23;15989:5;15972:23;:::i;:::-;15967:3;15960:36;15887:115;;:::o;16008:218::-;16099:4;16137:2;16126:9;16122:18;16114:26;;16150:69;16216:1;16205:9;16201:17;16192:6;16150:69;:::i;:::-;16008:218;;;;:::o;16232:77::-;16269:7;16298:5;16287:16;;16232:77;;;:::o;16315:122::-;16388:24;16406:5;16388:24;:::i;:::-;16381:5;16378:35;16368:63;;16427:1;16424;16417:12;16368:63;16315:122;:::o;16443:139::-;16489:5;16527:6;16514:20;16505:29;;16543:33;16570:5;16543:33;:::i;:::-;16443:139;;;;:::o;16588:329::-;16647:6;16696:2;16684:9;16675:7;16671:23;16667:32;16664:119;;;16702:79;;:::i;:::-;16664:119;16822:1;16847:53;16892:7;16883:6;16872:9;16868:22;16847:53;:::i;:::-;16837:63;;16793:117;16588:329;;;;:::o;16923:115::-;17008:23;17025:5;17008:23;:::i;:::-;17003:3;16996:36;16923:115;;:::o;17044:118::-;17131:24;17149:5;17131:24;:::i;:::-;17126:3;17119:37;17044:118;;:::o;17168:434::-;17313:4;17351:2;17340:9;17336:18;17328:26;;17364:69;17430:1;17419:9;17415:17;17406:6;17364:69;:::i;:::-;17443:70;17509:2;17498:9;17494:18;17485:6;17443:70;:::i;:::-;17523:72;17591:2;17580:9;17576:18;17567:6;17523:72;:::i;:::-;17168:434;;;;;;:::o;17608:144::-;17676:9;17709:37;17740:5;17709:37;:::i;:::-;17696:50;;17608:144;;;:::o;17758:167::-;17863:55;17912:5;17863:55;:::i;:::-;17858:3;17851:68;17758:167;;:::o;17931:258::-;18042:4;18080:2;18069:9;18065:18;18057:26;;18093:89;18179:1;18168:9;18164:17;18155:6;18093:89;:::i;:::-;17931:258;;;;:::o;18195:120::-;18267:23;18284:5;18267:23;:::i;:::-;18260:5;18257:34;18247:62;;18305:1;18302;18295:12;18247:62;18195:120;:::o;18321:137::-;18366:5;18404:6;18391:20;18382:29;;18420:32;18446:5;18420:32;:::i;:::-;18321:137;;;;:::o;18464:310::-;18540:4;18630:18;18622:6;18619:30;18616:56;;;18652:18;;:::i;:::-;18616:56;18702:4;18694:6;18690:17;18682:25;;18762:4;18756;18752:15;18744:23;;18464:310;;;:::o;18780:117::-;18889:1;18886;18879:12;18919:707;19014:5;19039:80;19055:63;19111:6;19055:63;:::i;:::-;19039:80;:::i;:::-;19030:89;;19139:5;19168:6;19161:5;19154:21;19202:4;19195:5;19191:16;19184:23;;19255:4;19247:6;19243:17;19235:6;19231:30;19284:3;19276:6;19273:15;19270:122;;;19303:79;;:::i;:::-;19270:122;19418:6;19401:219;19435:6;19430:3;19427:15;19401:219;;;19510:3;19539:36;19571:3;19559:10;19539:36;:::i;:::-;19534:3;19527:49;19605:4;19600:3;19596:14;19589:21;;19477:143;19461:4;19456:3;19452:14;19445:21;;19401:219;;;19405:21;19020:606;;18919:707;;;;;:::o;19648:368::-;19718:5;19767:3;19760:4;19752:6;19748:17;19744:27;19734:122;;19775:79;;:::i;:::-;19734:122;19892:6;19879:20;19917:93;20006:3;19998:6;19991:4;19983:6;19979:17;19917:93;:::i;:::-;19908:102;;19724:292;19648:368;;;;:::o;20022:825::-;20122:6;20130;20138;20187:2;20175:9;20166:7;20162:23;20158:32;20155:119;;;20193:79;;:::i;:::-;20155:119;20313:1;20338:52;20382:7;20373:6;20362:9;20358:22;20338:52;:::i;:::-;20328:62;;20284:116;20467:2;20456:9;20452:18;20439:32;20498:18;20490:6;20487:30;20484:117;;;20520:79;;:::i;:::-;20484:117;20625:77;20694:7;20685:6;20674:9;20670:22;20625:77;:::i;:::-;20615:87;;20410:302;20751:2;20777:53;20822:7;20813:6;20802:9;20798:22;20777:53;:::i;:::-;20767:63;;20722:118;20022:825;;;;;:::o;20853:509::-;20922:6;20971:2;20959:9;20950:7;20946:23;20942:32;20939:119;;;20977:79;;:::i;:::-;20939:119;21125:1;21114:9;21110:17;21097:31;21155:18;21147:6;21144:30;21141:117;;;21177:79;;:::i;:::-;21141:117;21282:63;21337:7;21328:6;21317:9;21313:22;21282:63;:::i;:::-;21272:73;;21068:287;20853:509;;;;:::o;21368:222::-;21461:4;21499:2;21488:9;21484:18;21476:26;;21512:71;21580:1;21569:9;21565:17;21556:6;21512:71;:::i;:::-;21368:222;;;;:::o;21596:327::-;21654:6;21703:2;21691:9;21682:7;21678:23;21674:32;21671:119;;;21709:79;;:::i;:::-;21671:119;21829:1;21854:52;21898:7;21889:6;21878:9;21874:22;21854:52;:::i;:::-;21844:62;;21800:116;21596:327;;;;:::o;22005:1006::-;22130:3;22166:4;22161:3;22157:14;22261:4;22254:5;22250:16;22244:23;22280:61;22335:4;22330:3;22326:14;22312:12;22280:61;:::i;:::-;22181:170;22437:4;22430:5;22426:16;22420:23;22490:3;22484:4;22480:14;22473:4;22468:3;22464:14;22457:38;22516:101;22612:4;22598:12;22516:101;:::i;:::-;22508:109;;22361:267;22718:4;22711:5;22707:16;22701:23;22737:61;22792:4;22787:3;22783:14;22769:12;22737:61;:::i;:::-;22638:170;22892:4;22885:5;22881:16;22875:23;22911:63;22968:4;22963:3;22959:14;22945:12;22911:63;:::i;:::-;22818:166;23001:4;22994:11;;22135:876;22005:1006;;;;:::o;23017:385::-;23166:4;23204:2;23193:9;23189:18;23181:26;;23253:9;23247:4;23243:20;23239:1;23228:9;23224:17;23217:47;23281:114;23390:4;23381:6;23281:114;:::i;:::-;23273:122;;23017:385;;;;:::o;23474:1216::-;23617:4;23612:3;23608:14;23707:4;23700:5;23696:16;23690:23;23726:63;23783:4;23778:3;23774:14;23760:12;23726:63;:::i;:::-;23632:167;23884:4;23877:5;23873:16;23867:23;23903:63;23960:4;23955:3;23951:14;23937:12;23903:63;:::i;:::-;23809:167;24060:4;24053:5;24049:16;24043:23;24079:63;24136:4;24131:3;24127:14;24113:12;24079:63;:::i;:::-;23986:166;24242:4;24235:5;24231:16;24225:23;24261:59;24314:4;24309:3;24305:14;24291:12;24261:59;:::i;:::-;24162:168;24420:4;24413:5;24409:16;24403:23;24439:59;24492:4;24487:3;24483:14;24469:12;24439:59;:::i;:::-;24340:168;24593:4;24586:5;24582:16;24576:23;24612:61;24667:4;24662:3;24658:14;24644:12;24612:61;:::i;:::-;24518:165;23586:1104;23474:1216;;:::o;24696:315::-;24835:4;24873:3;24862:9;24858:19;24850:27;;24887:117;25001:1;24990:9;24986:17;24977:6;24887:117;:::i;:::-;24696:315;;;;:::o;25017:148::-;25089:9;25122:37;25153:5;25122:37;:::i;:::-;25109:50;;25017:148;;;:::o;25171:175::-;25280:59;25333:5;25280:59;:::i;:::-;25275:3;25268:72;25171:175;;:::o;25352:266::-;25467:4;25505:2;25494:9;25490:18;25482:26;;25518:93;25608:1;25597:9;25593:17;25584:6;25518:93;:::i;:::-;25352:266;;;;:::o;25624:112::-;25707:22;25723:5;25707:22;:::i;:::-;25702:3;25695:35;25624:112;;:::o;25742:755::-;25965:4;26003:3;25992:9;25988:19;25980:27;;26017:71;26085:1;26074:9;26070:17;26061:6;26017:71;:::i;:::-;26098:72;26166:2;26155:9;26151:18;26142:6;26098:72;:::i;:::-;26180;26248:2;26237:9;26233:18;26224:6;26180:72;:::i;:::-;26262:68;26326:2;26315:9;26311:18;26302:6;26262:68;:::i;:::-;26340:69;26404:3;26393:9;26389:19;26380:6;26340:69;:::i;:::-;26419:71;26485:3;26474:9;26470:19;26461:6;26419:71;:::i;:::-;25742:755;;;;;;;;;:::o;26503:654::-;26581:6;26589;26638:2;26626:9;26617:7;26613:23;26609:32;26606:119;;;26644:79;;:::i;:::-;26606:119;26792:1;26781:9;26777:17;26764:31;26822:18;26814:6;26811:30;26808:117;;;26844:79;;:::i;:::-;26808:117;26949:63;27004:7;26995:6;26984:9;26980:22;26949:63;:::i;:::-;26939:73;;26735:287;27061:2;27087:53;27132:7;27123:6;27112:9;27108:22;27087:53;:::i;:::-;27077:63;;27032:118;26503:654;;;;;:::o;27163:180::-;27211:77;27208:1;27201:88;27308:4;27305:1;27298:15;27332:4;27329:1;27322:15;27349:180;27397:77;27394:1;27387:88;27494:4;27491:1;27484:15;27518:4;27515:1;27508:15;27535:233;27574:3;27597:24;27615:5;27597:24;:::i;:::-;27588:33;;27643:66;27636:5;27633:77;27630:103;;27713:18;;:::i;:::-;27630:103;27760:1;27753:5;27749:13;27742:20;;27535:233;;;:::o;27774:169::-;27858:11;27892:6;27887:3;27880:19;27932:4;27927:3;27923:14;27908:29;;27774:169;;;;:::o;27949:181::-;28089:33;28085:1;28077:6;28073:14;28066:57;27949:181;:::o;28136:366::-;28278:3;28299:67;28363:2;28358:3;28299:67;:::i;:::-;28292:74;;28375:93;28464:3;28375:93;:::i;:::-;28493:2;28488:3;28484:12;28477:19;;28136:366;;;:::o;28508:419::-;28674:4;28712:2;28701:9;28697:18;28689:26;;28761:9;28755:4;28751:20;28747:1;28736:9;28732:17;28725:47;28789:131;28915:4;28789:131;:::i;:::-;28781:139;;28508:419;;;:::o;28933:172::-;29073:24;29069:1;29061:6;29057:14;29050:48;28933:172;:::o;29111:366::-;29253:3;29274:67;29338:2;29333:3;29274:67;:::i;:::-;29267:74;;29350:93;29439:3;29350:93;:::i;:::-;29468:2;29463:3;29459:12;29452:19;;29111:366;;;:::o;29483:419::-;29649:4;29687:2;29676:9;29672:18;29664:26;;29736:9;29730:4;29726:20;29722:1;29711:9;29707:17;29700:47;29764:131;29890:4;29764:131;:::i;:::-;29756:139;;29483:419;;;:::o;29908:172::-;30048:24;30044:1;30036:6;30032:14;30025:48;29908:172;:::o;30086:366::-;30228:3;30249:67;30313:2;30308:3;30249:67;:::i;:::-;30242:74;;30325:93;30414:3;30325:93;:::i;:::-;30443:2;30438:3;30434:12;30427:19;;30086:366;;;:::o;30458:419::-;30624:4;30662:2;30651:9;30647:18;30639:26;;30711:9;30705:4;30701:20;30697:1;30686:9;30682:17;30675:47;30739:131;30865:4;30739:131;:::i;:::-;30731:139;;30458:419;;;:::o;30883:175::-;31023:27;31019:1;31011:6;31007:14;31000:51;30883:175;:::o;31064:366::-;31206:3;31227:67;31291:2;31286:3;31227:67;:::i;:::-;31220:74;;31303:93;31392:3;31303:93;:::i;:::-;31421:2;31416:3;31412:12;31405:19;;31064:366;;;:::o;31436:419::-;31602:4;31640:2;31629:9;31625:18;31617:26;;31689:9;31683:4;31679:20;31675:1;31664:9;31660:17;31653:47;31717:131;31843:4;31717:131;:::i;:::-;31709:139;;31436:419;;;:::o;31861:86::-;31907:7;31936:5;31925:16;;31861:86;;;:::o;31953:160::-;32012:9;32045:62;32063:43;32072:33;32099:5;32072:33;:::i;:::-;32063:43;:::i;:::-;32045:62;:::i;:::-;32032:75;;31953:160;;;:::o;32119:149::-;32215:46;32255:5;32215:46;:::i;:::-;32210:3;32203:59;32119:149;;:::o;32274:350::-;32404:4;32442:2;32431:9;32427:18;32419:26;;32455:71;32523:1;32512:9;32508:17;32499:6;32455:71;:::i;:::-;32536:81;32613:2;32602:9;32598:18;32589:6;32536:81;:::i;:::-;32274:350;;;;;:::o;32630:143::-;32687:5;32718:6;32712:13;32703:22;;32734:33;32761:5;32734:33;:::i;:::-;32630:143;;;;:::o;32779:351::-;32849:6;32898:2;32886:9;32877:7;32873:23;32869:32;32866:119;;;32904:79;;:::i;:::-;32866:119;33024:1;33049:64;33105:7;33096:6;33085:9;33081:22;33049:64;:::i;:::-;33039:74;;32995:128;32779:351;;;;:::o;33136:143::-;33193:5;33224:6;33218:13;33209:22;;33240:33;33267:5;33240:33;:::i;:::-;33136:143;;;;:::o;33285:351::-;33355:6;33404:2;33392:9;33383:7;33379:23;33375:32;33372:119;;;33410:79;;:::i;:::-;33372:119;33530:1;33555:64;33611:7;33602:6;33591:9;33587:22;33555:64;:::i;:::-;33545:74;;33501:128;33285:351;;;;:::o;33642:332::-;33763:4;33801:2;33790:9;33786:18;33778:26;;33814:71;33882:1;33871:9;33867:17;33858:6;33814:71;:::i;:::-;33895:72;33963:2;33952:9;33948:18;33939:6;33895:72;:::i;:::-;33642:332;;;;;:::o;33980:118::-;34067:24;34085:5;34067:24;:::i;:::-;34062:3;34055:37;33980:118;;:::o;34104:332::-;34225:4;34263:2;34252:9;34248:18;34240:26;;34276:71;34344:1;34333:9;34329:17;34320:6;34276:71;:::i;:::-;34357:72;34425:2;34414:9;34410:18;34401:6;34357:72;:::i;:::-;34104:332;;;;;:::o;34442:422::-;34581:4;34619:2;34608:9;34604:18;34596:26;;34632:67;34696:1;34685:9;34681:17;34672:6;34632:67;:::i;:::-;34709:68;34773:2;34762:9;34758:18;34749:6;34709:68;:::i;:::-;34787:70;34853:2;34842:9;34838:18;34829:6;34787:70;:::i;:::-;34442:422;;;;;;:::o;34870:222::-;35010:34;35006:1;34998:6;34994:14;34987:58;35079:5;35074:2;35066:6;35062:15;35055:30;34870:222;:::o;35098:366::-;35240:3;35261:67;35325:2;35320:3;35261:67;:::i;:::-;35254:74;;35337:93;35426:3;35337:93;:::i;:::-;35455:2;35450:3;35446:12;35439:19;;35098:366;;;:::o;35470:419::-;35636:4;35674:2;35663:9;35659:18;35651:26;;35723:9;35717:4;35713:20;35709:1;35698:9;35694:17;35687:47;35751:131;35877:4;35751:131;:::i;:::-;35743:139;;35470:419;;;:::o;35895:140::-;35944:9;35977:52;35995:33;36004:23;36021:5;36004:23;:::i;:::-;35995:33;:::i;:::-;35977:52;:::i;:::-;35964:65;;35895:140;;;:::o;36041:129::-;36127:36;36157:5;36127:36;:::i;:::-;36122:3;36115:49;36041:129;;:::o;36176:330::-;36296:4;36334:2;36323:9;36319:18;36311:26;;36347:71;36415:1;36404:9;36400:17;36391:6;36347:71;:::i;:::-;36428;36495:2;36484:9;36480:18;36471:6;36428:71;:::i;:::-;36176:330;;;;;:::o;36512:183::-;36610:11;36644:6;36639:3;36632:19;36684:4;36679:3;36675:14;36660:29;;36512:183;;;;:::o;36729:724::-;36846:3;36875:53;36922:5;36875:53;:::i;:::-;36944:85;37022:6;37017:3;36944:85;:::i;:::-;36937:92;;37053:55;37102:5;37053:55;:::i;:::-;37131:7;37162:1;37147:281;37172:6;37169:1;37166:13;37147:281;;;37248:6;37242:13;37275:61;37332:3;37317:13;37275:61;:::i;:::-;37268:68;;37359:59;37411:6;37359:59;:::i;:::-;37349:69;;37207:221;37194:1;37191;37187:9;37182:14;;37147:281;;;37151:14;37444:3;37437:10;;36851:602;;;36729:724;;;;:::o;37459:475::-;37626:4;37664:2;37653:9;37649:18;37641:26;;37677:69;37743:1;37732:9;37728:17;37719:6;37677:69;:::i;:::-;37793:9;37787:4;37783:20;37778:2;37767:9;37763:18;37756:48;37821:106;37922:4;37913:6;37821:106;:::i;:::-;37813:114;;37459:475;;;;;:::o;37940:171::-;37978:3;38001:23;38018:5;38001:23;:::i;:::-;37992:32;;38046:6;38039:5;38036:17;38033:43;;38056:18;;:::i;:::-;38033:43;38103:1;38096:5;38092:13;38085:20;;37940:171;;;:::o;38117:99::-;38169:6;38203:5;38197:12;38187:22;;38117:99;;;:::o;38222:148::-;38324:11;38361:3;38346:18;;38222:148;;;;:::o;38376:246::-;38457:1;38467:113;38481:6;38478:1;38475:13;38467:113;;;38566:1;38561:3;38557:11;38551:18;38547:1;38542:3;38538:11;38531:39;38503:2;38500:1;38496:10;38491:15;;38467:113;;;38614:1;38605:6;38600:3;38596:16;38589:27;38438:184;38376:246;;;:::o;38628:390::-;38734:3;38762:39;38795:5;38762:39;:::i;:::-;38817:89;38899:6;38894:3;38817:89;:::i;:::-;38810:96;;38915:65;38973:6;38968:3;38961:4;38954:5;38950:16;38915:65;:::i;:::-;39005:6;39000:3;38996:16;38989:23;;38738:280;38628:390;;;;:::o;39024:275::-;39156:3;39178:95;39269:3;39260:6;39178:95;:::i;:::-;39171:102;;39290:3;39283:10;;39024:275;;;;:::o;39305:170::-;39445:22;39441:1;39433:6;39429:14;39422:46;39305:170;:::o;39481:366::-;39623:3;39644:67;39708:2;39703:3;39644:67;:::i;:::-;39637:74;;39720:93;39809:3;39720:93;:::i;:::-;39838:2;39833:3;39829:12;39822:19;;39481:366;;;:::o;39853:419::-;40019:4;40057:2;40046:9;40042:18;40034:26;;40106:9;40100:4;40096:20;40092:1;40081:9;40077:17;40070:47;40134:131;40260:4;40134:131;:::i;:::-;40126:139;;39853:419;;;:::o;40278:165::-;40418:17;40414:1;40406:6;40402:14;40395:41;40278:165;:::o;40449:366::-;40591:3;40612:67;40676:2;40671:3;40612:67;:::i;:::-;40605:74;;40688:93;40777:3;40688:93;:::i;:::-;40806:2;40801:3;40797:12;40790:19;;40449:366;;;:::o;40821:419::-;40987:4;41025:2;41014:9;41010:18;41002:26;;41074:9;41068:4;41064:20;41060:1;41049:9;41045:17;41038:47;41102:131;41228:4;41102:131;:::i;:::-;41094:139;;40821:419;;;:::o;41246:181::-;41386:33;41382:1;41374:6;41370:14;41363:57;41246:181;:::o;41433:366::-;41575:3;41596:67;41660:2;41655:3;41596:67;:::i;:::-;41589:74;;41672:93;41761:3;41672:93;:::i;:::-;41790:2;41785:3;41781:12;41774:19;;41433:366;;;:::o;41805:419::-;41971:4;42009:2;41998:9;41994:18;41986:26;;42058:9;42052:4;42048:20;42044:1;42033:9;42029:17;42022:47;42086:131;42212:4;42086:131;:::i;:::-;42078:139;;41805:419;;;:::o;42230:171::-;42370:23;42366:1;42358:6;42354:14;42347:47;42230:171;:::o;42407:366::-;42549:3;42570:67;42634:2;42629:3;42570:67;:::i;:::-;42563:74;;42646:93;42735:3;42646:93;:::i;:::-;42764:2;42759:3;42755:12;42748:19;;42407:366;;;:::o;42779:419::-;42945:4;42983:2;42972:9;42968:18;42960:26;;43032:9;43026:4;43022:20;43018:1;43007:9;43003:17;42996:47;43060:131;43186:4;43060:131;:::i;:::-;43052:139;;42779:419;;;:::o;43204:87::-;43251:7;43280:5;43269:16;;43204:87;;;:::o;43297:162::-;43357:9;43390:63;43408:44;43417:34;43445:5;43417:34;:::i;:::-;43408:44;:::i;:::-;43390:63;:::i;:::-;43377:76;;43297:162;;;:::o;43465:151::-;43562:47;43603:5;43562:47;:::i;:::-;43557:3;43550:60;43465:151;;:::o;43622:352::-;43753:4;43791:2;43780:9;43776:18;43768:26;;43804:71;43872:1;43861:9;43857:17;43848:6;43804:71;:::i;:::-;43885:82;43963:2;43952:9;43948:18;43939:6;43885:82;:::i;:::-;43622:352;;;;;:::o;43980:377::-;44068:3;44096:39;44129:5;44096:39;:::i;:::-;44151:71;44215:6;44210:3;44151:71;:::i;:::-;44144:78;;44231:65;44289:6;44284:3;44277:4;44270:5;44266:16;44231:65;:::i;:::-;44321:29;44343:6;44321:29;:::i;:::-;44316:3;44312:39;44305:46;;44072:285;43980:377;;;;:::o;44363:423::-;44504:4;44542:2;44531:9;44527:18;44519:26;;44591:9;44585:4;44581:20;44577:1;44566:9;44562:17;44555:47;44619:78;44692:4;44683:6;44619:78;:::i;:::-;44611:86;;44707:72;44775:2;44764:9;44760:18;44751:6;44707:72;:::i;:::-;44363:423;;;;;:::o;44792:194::-;44832:4;44852:20;44870:1;44852:20;:::i;:::-;44847:25;;44886:20;44904:1;44886:20;:::i;:::-;44881:25;;44930:1;44927;44923:9;44915:17;;44954:1;44948:4;44945:11;44942:37;;;44959:18;;:::i;:::-;44942:37;44792:194;;;;:::o"},"methodIdentifiers":{"addPlayer(string,address)":"ec203f6b","getMatchsByMatchId(uint16)":"80192760","getMatchsByPlayer(string)":"bb5aa495","getMatchsByWinner(address)":"0c954fd7","getPlayerAddress(string)":"661c37fd","getTournamentById(uint16)":"7a080fd1","getTournamentByWinner(address)":"3b794245","globalMatchesArray(uint256)":"e5425060","globalTournamentsArray(uint256)":"592f7253","goatNft()":"149249da","owner()":"8da5cb5b","pongToken()":"64518cdd","renounceOwnership()":"715018a6","reportMatch(string,string,uint16,uint8,uint8,address)":"1750094a","reportTournament(uint32,uint16[],address)":"65612077","tournamentNft()":"8cecb84d","tournamentTokenIds()":"40f55f91","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_goatNft\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_pongToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tournamentNft\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player1\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player2\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"player1Score\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"player2Score\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"matchId\",\"type\":\"uint16\"}],\"name\":\"MatchReported\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"playerAddress\",\"type\":\"address\"}],\"name\":\"PlayerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"tournamentId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"endTimestamp\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint16[]\",\"name\":\"matchIds\",\"type\":\"uint16[]\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"}],\"name\":\"TournamentReported\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_player\",\"type\":\"address\"}],\"name\":\"addPlayer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"matchId\",\"type\":\"uint16\"}],\"name\":\"getMatchsByMatchId\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"player1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"player2\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"player1Score\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"player2Score\",\"type\":\"uint8\"},{\"internalType\":\"uint16\",\"name\":\"matchId\",\"type\":\"uint16\"}],\"internalType\":\"struct MasterContract.Match\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"player\",\"type\":\"string\"}],\"name\":\"getMatchsByPlayer\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"player1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"player2\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"player1Score\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"player2Score\",\"type\":\"uint8\"},{\"internalType\":\"uint16\",\"name\":\"matchId\",\"type\":\"uint16\"}],\"internalType\":\"struct MasterContract.Match[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"}],\"name\":\"getMatchsByWinner\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"player1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"player2\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"player1Score\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"player2Score\",\"type\":\"uint8\"},{\"internalType\":\"uint16\",\"name\":\"matchId\",\"type\":\"uint16\"}],\"internalType\":\"struct MasterContract.Match[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"getPlayerAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"tournamentId\",\"type\":\"uint16\"}],\"name\":\"getTournamentById\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"endTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint16[]\",\"name\":\"matchIds\",\"type\":\"uint16[]\"},{\"internalType\":\"uint16\",\"name\":\"tournamentId\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"}],\"internalType\":\"struct MasterContract.Tournament\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"}],\"name\":\"getTournamentByWinner\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"endTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint16[]\",\"name\":\"matchIds\",\"type\":\"uint16[]\"},{\"internalType\":\"uint16\",\"name\":\"tournamentId\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"}],\"internalType\":\"struct MasterContract.Tournament[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"globalMatchesArray\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"player1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"player2\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"player1Score\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"player2Score\",\"type\":\"uint8\"},{\"internalType\":\"uint16\",\"name\":\"matchId\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"globalTournamentsArray\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"endTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint16\",\"name\":\"tournamentId\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"goatNft\",\"outputs\":[{\"internalType\":\"contract GoatNft\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pongToken\",\"outputs\":[{\"internalType\":\"contract PongToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"player1\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"player2\",\"type\":\"string\"},{\"internalType\":\"uint16\",\"name\":\"matchId\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"player1Score\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"player2Score\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"}],\"name\":\"reportMatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"endTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint16[]\",\"name\":\"matchIds\",\"type\":\"uint16[]\"},{\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"}],\"name\":\"reportTournament\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tournamentNft\",\"outputs\":[{\"internalType\":\"contract TournamentNft\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tournamentTokenIds\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"MasterContract to manage all the contracts\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"MatchReported(address,address,address,uint8,uint8,uint16)\":{\"details\":\"Event to log match reported\",\"params\":{\"matchId\":\": match id\",\"player1\":\": player1 name\",\"player1Score\":\": player1 score\",\"player2\":\": player2 name\",\"player2Score\":\": player2 score\",\"winner\":\": winner address\"}},\"PlayerAdded(string,address)\":{\"details\":\"Event to log player added\",\"params\":{\"name\":\": player name\",\"playerAddress\":\": player address\"}},\"TournamentReported(uint16,uint32,uint16[],address)\":{\"details\":\"Event to log tournament reported\",\"params\":{\"tournamentId\":\": tournament id\",\"winner\":\": winner address\"}}},\"kind\":\"dev\",\"methods\":{\"addPlayer(string,address)\":{\"details\":\"Function to add player\",\"params\":{\"_name\":\": player name\",\"_player\":\": player address\"}},\"constructor\":{\"details\":\"Constructor to initialize the contract\",\"params\":{\"_goatNft\":\": address of GoatNft contract\",\"_pongToken\":\": address of PongToken contract\",\"_tournamentNft\":\": address of TournamentNft contract\"}},\"getMatchsByMatchId(uint16)\":{\"details\":\"Function to get match by match id\",\"params\":{\"matchId\":\": match id\"},\"returns\":{\"_0\":\"match details\"}},\"getMatchsByPlayer(string)\":{\"details\":\"Function to get all matches played by a player\",\"params\":{\"player\":\": player name\"},\"returns\":{\"_0\":\"array of matches played by the player\"}},\"getMatchsByWinner(address)\":{\"details\":\"Function to get all matches won by a player\",\"params\":{\"winner\":\": winner address\"},\"returns\":{\"_0\":\"array of matches won by the player\"}},\"getPlayerAddress(string)\":{\"details\":\"Function to get player address\",\"params\":{\"_name\":\": player name\"},\"returns\":{\"_0\":\"player address\"}},\"getTournamentById(uint16)\":{\"details\":\"Function to get tournament by id\",\"params\":{\"tournamentId\":\": tournament id\"},\"returns\":{\"_0\":\"array of tournaments\"}},\"getTournamentByWinner(address)\":{\"details\":\"Function to get tournament by winner\",\"params\":{\"winner\":\": winner address\"},\"returns\":{\"_0\":\"array of tournaments\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"reportMatch(string,string,uint16,uint8,uint8,address)\":{\"details\":\"Function to report match\",\"params\":{\"matchId\":\": match id\",\"player1\":\": player1 name\",\"player1Score\":\": player1 score\",\"player2\":\": player2 name\",\"player2Score\":\": player2 score\",\"winner\":\": winner address\"}},\"reportTournament(uint32,uint16[],address)\":{\"details\":\"Function to report tournament\",\"params\":{\"endTimestamp\":\": end timestamp of the tournament\",\"matchIds\":\": array of match ids (match have to be already reported and this function called once all the matches are ended)\",\"winner\":\": winner address\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"globalMatchesArray\":{\"details\":\"Array to store all matches uint16: match id Match: match details\"},\"globalTournamentsArray\":{\"details\":\"Array to store all tournaments uint256: tournament id Tournament: tournament details\"},\"goatNft\":{\"details\":\"Variables to store contract addresses\"},\"players\":{\"details\":\"Mapping to store player string: player name to address mapping address: player address\"},\"tournamentTokenIds\":{\"details\":\"tournamentTokenIds to store tournament token ids\"}},\"title\":\"MasterContract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MasterContract.sol\":\"MasterContract\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x1b8691e244f6e11d987459993671db0af33e6a29f7805eac6a9925cc6b601957\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9e2a5efc2e14e98f5fe91bbab769199b4987a40dd3b96075b04957fda2ae80f\",\"dweb:/ipfs/QmbAjrSSVBiJ6MbgF7Jkr53m674iGMZ6haWbbRrWDZJraK\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x39ed367e54765186281efcfe83e47cf0ad62cc879f10e191360712507125f29a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c5ae6d85bd48cca8d6d2fcec8c63efd86f56f8a5832577a47e403ce0e65cb09\",\"dweb:/ipfs/QmUtcS8AbRSWhuc61puYet58os8FvSqm329ChoW8wwZXZk\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0xe52813067c6d5838eeb34e1da8beb2514371a7d778266013b04ca3be1dda7100\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53fb552d625eb5f60ef9dce439c826bb780952cbbafc985db6e48ac6382a5585\",\"dweb:/ipfs/QmSEbLqEWN1SqsWekfqt6RWC4oEajFWtZ5j8i6gKaGdtKr\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0x40399695922383778f9f540a620bec475a2f8e0f08d41f0005682842e28a9855\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://746d295e403931aeb9d6065fd5a0871f43ab5459814a60623611e4b6641a09fd\",\"dweb:/ipfs/QmWrgT8YJrQ9FfD1o3YYArwo57e7MGdpFKuM74qJ4qE34E\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x44f87e91783e88415bde66f1a63f6c7f0076f2d511548820407d5c95643ac56c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13a51bc2b23827744dcf5bad10c69e72528cf015a6fe48c93632cdb2c0eb1251\",\"dweb:/ipfs/QmZwPA47Yqgje1qtkdEFEja8ntTahMStYzKf5q3JRnaR7d\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/MasterContract.sol\":{\"keccak256\":\"0x56dd9cceb7ac254a548165fb3c4be0b36eee24b67f2bb30335e68b4f79d4842a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f0c0ae0ac01b7eed2675b5676f2972eefd421a06138a55ae64a9da4f44c4481\",\"dweb:/ipfs/QmXeQhh8SgmVjENcpGWaCd5fTcWZtXTht2NiMgCSSNtwMy\"]},\"contracts/nfts/GoatNft.sol\":{\"keccak256\":\"0x4c01ee8ee4b3153b63de3625691fdc4b74c4f1e2349c5838cb20d7b6accaf623\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://908a25f0a4edeff31e50339f08d5e03aae61d2f1e492dea49ce1c63944bf1cdb\",\"dweb:/ipfs/QmeCBaQ4EmbA2Hc2uHbTu8V3NyCGBoXVfGw371DRxiRRQ1\"]},\"contracts/nfts/TournamentNft.sol\":{\"keccak256\":\"0x37c809f35105b5859214d658e0cb161959694f1116a9deec6d9708d21ef0d1a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9283f5c42acca245241d2e159e6f89cba23d01488079f57f92439c5aa70f84a8\",\"dweb:/ipfs/QmPSEwxrFoHMTmXK1eWxBpvjQ7NRXRBrBcxDwKjYr1ZQUA\"]},\"contracts/tokens/PongToken.sol\":{\"keccak256\":\"0x08c061801d0d6eb01224539c747f8fef500ed6d3e91ef729a15601fc6b351f56\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://55583c7b08d82095bf767554d8b8c6ec71903ccb6a68f7eb5b73c1b0fa9c7bfd\",\"dweb:/ipfs/QmPsA1zGrkCJCyUbePFCWo8ckcjc2NX8DqbNbWW5DD2Xvo\"]}},\"version\":1}"}},"contracts/nfts/GoatNft.sol":{"GoatNft":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_fromTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_toTokenId","type":"uint256"}],"name":"BatchMetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"MetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Transfert","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getGoatAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"goat","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"goatTokenId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_from","type":"address"},{"internalType":"address","name":"_to","type":"address"}],"name":"transferNft","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_1005":{"entryPoint":null,"id":1005,"parameterSlots":2,"returnSlots":0},"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_8018":{"entryPoint":null,"id":8018,"parameterSlots":0,"returnSlots":0},"@_approve_1825":{"entryPoint":1758,"id":1825,"parameterSlots":4,"returnSlots":0},"@_checkAuthorized_8077":{"entryPoint":1625,"id":8077,"parameterSlots":3,"returnSlots":0},"@_mint_1555":{"entryPoint":640,"id":1555,"parameterSlots":2,"returnSlots":0},"@_ownerOf_1313":{"entryPoint":1564,"id":1313,"parameterSlots":1,"returnSlots":1},"@_requireOwned_1891":{"entryPoint":2277,"id":1891,"parameterSlots":1,"returnSlots":1},"@_setTokenURI_2152":{"entryPoint":903,"id":2152,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":442,"id":146,"parameterSlots":1,"returnSlots":0},"@_update_1505":{"entryPoint":999,"id":1505,"parameterSlots":3,"returnSlots":1},"@isApprovedForAll_1206":{"entryPoint":2424,"id":1206,"parameterSlots":2,"returnSlots":1},"@owner_67":{"entryPoint":2235,"id":67,"parameterSlots":0,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":3489,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_343baf082709e93d6ec72c89c1f25cf13509cddee60cd243e06b5ef8eb5199ff_to_t_string_memory_ptr_fromStack":{"entryPoint":3639,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":3535,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":3506,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_343baf082709e93d6ec72c89c1f25cf13509cddee60cd243e06b5ef8eb5199ff__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3678,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":3552,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":2730,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":2572,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":3581,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":3051,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":3469,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":3437,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":2866,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":3012,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":2886,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":3206,"id":null,"parameterSlots":2,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":2751,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":2677,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":3176,"id":null,"parameterSlots":2,"returnSlots":1},"identity":{"entryPoint":2876,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":3144,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":2630,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":2583,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":2926,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":2767,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":3131,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":2984,"id":null,"parameterSlots":2,"returnSlots":0},"store_literal_in_memory_343baf082709e93d6ec72c89c1f25cf13509cddee60cd243e06b5ef8eb5199ff":{"entryPoint":3598,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":2780,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":2936,"id":null,"parameterSlots":3,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":2979,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:7327:26","statements":[{"body":{"nodeType":"YulBlock","src":"66:40:26","statements":[{"nodeType":"YulAssignment","src":"77:22:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"87:5:26"},"nodeType":"YulFunctionCall","src":"87:12:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"77:6:26"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49:5:26","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"59:6:26","type":""}],"src":"7:99:26"},{"body":{"nodeType":"YulBlock","src":"140:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"157:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"160:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"150:6:26"},"nodeType":"YulFunctionCall","src":"150:88:26"},"nodeType":"YulExpressionStatement","src":"150:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"254:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"257:4:26","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"247:6:26"},"nodeType":"YulFunctionCall","src":"247:15:26"},"nodeType":"YulExpressionStatement","src":"247:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"278:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"281:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"271:6:26"},"nodeType":"YulFunctionCall","src":"271:15:26"},"nodeType":"YulExpressionStatement","src":"271:15:26"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"112:180:26"},{"body":{"nodeType":"YulBlock","src":"326:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"343:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"346:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"336:6:26"},"nodeType":"YulFunctionCall","src":"336:88:26"},"nodeType":"YulExpressionStatement","src":"336:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"443:4:26","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"433:6:26"},"nodeType":"YulFunctionCall","src":"433:15:26"},"nodeType":"YulExpressionStatement","src":"433:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"464:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"467:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"457:6:26"},"nodeType":"YulFunctionCall","src":"457:15:26"},"nodeType":"YulExpressionStatement","src":"457:15:26"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"298:180:26"},{"body":{"nodeType":"YulBlock","src":"535:269:26","statements":[{"nodeType":"YulAssignment","src":"545:22:26","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"559:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"565:1:26","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"555:3:26"},"nodeType":"YulFunctionCall","src":"555:12:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"545:6:26"}]},{"nodeType":"YulVariableDeclaration","src":"576:38:26","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"606:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"612:1:26","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"602:3:26"},"nodeType":"YulFunctionCall","src":"602:12:26"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"580:18:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"653:51:26","statements":[{"nodeType":"YulAssignment","src":"667:27:26","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"681:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"689:4:26","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"677:3:26"},"nodeType":"YulFunctionCall","src":"677:17:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"667:6:26"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"633:18:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"626:6:26"},"nodeType":"YulFunctionCall","src":"626:26:26"},"nodeType":"YulIf","src":"623:81:26"},{"body":{"nodeType":"YulBlock","src":"756:42:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"770:16:26"},"nodeType":"YulFunctionCall","src":"770:18:26"},"nodeType":"YulExpressionStatement","src":"770:18:26"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"720:18:26"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"743:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"751:2:26","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"740:2:26"},"nodeType":"YulFunctionCall","src":"740:14:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"717:2:26"},"nodeType":"YulFunctionCall","src":"717:38:26"},"nodeType":"YulIf","src":"714:84:26"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"519:4:26","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"528:6:26","type":""}],"src":"484:320:26"},{"body":{"nodeType":"YulBlock","src":"864:87:26","statements":[{"nodeType":"YulAssignment","src":"874:11:26","value":{"name":"ptr","nodeType":"YulIdentifier","src":"882:3:26"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"874:4:26"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"902:1:26","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"905:3:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"895:6:26"},"nodeType":"YulFunctionCall","src":"895:14:26"},"nodeType":"YulExpressionStatement","src":"895:14:26"},{"nodeType":"YulAssignment","src":"918:26:26","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"936:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"939:4:26","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"926:9:26"},"nodeType":"YulFunctionCall","src":"926:18:26"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"918:4:26"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"851:3:26","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"859:4:26","type":""}],"src":"810:141:26"},{"body":{"nodeType":"YulBlock","src":"1001:49:26","statements":[{"nodeType":"YulAssignment","src":"1011:33:26","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1029:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"1036:2:26","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1025:3:26"},"nodeType":"YulFunctionCall","src":"1025:14:26"},{"kind":"number","nodeType":"YulLiteral","src":"1041:2:26","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"1021:3:26"},"nodeType":"YulFunctionCall","src":"1021:23:26"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1011:6:26"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"984:5:26","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"994:6:26","type":""}],"src":"957:93:26"},{"body":{"nodeType":"YulBlock","src":"1109:54:26","statements":[{"nodeType":"YulAssignment","src":"1119:37:26","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"1144:4:26"},{"name":"value","nodeType":"YulIdentifier","src":"1150:5:26"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1140:3:26"},"nodeType":"YulFunctionCall","src":"1140:16:26"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"1119:8:26"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"1084:4:26","type":""},{"name":"value","nodeType":"YulTypedName","src":"1090:5:26","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"1100:8:26","type":""}],"src":"1056:107:26"},{"body":{"nodeType":"YulBlock","src":"1245:317:26","statements":[{"nodeType":"YulVariableDeclaration","src":"1255:35:26","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"1276:10:26"},{"kind":"number","nodeType":"YulLiteral","src":"1288:1:26","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1272:3:26"},"nodeType":"YulFunctionCall","src":"1272:18:26"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"1259:9:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1299:109:26","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"1330:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"1341:66:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"1311:18:26"},"nodeType":"YulFunctionCall","src":"1311:97:26"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"1303:4:26","type":""}]},{"nodeType":"YulAssignment","src":"1417:51:26","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"1448:9:26"},{"name":"toInsert","nodeType":"YulIdentifier","src":"1459:8:26"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"1429:18:26"},"nodeType":"YulFunctionCall","src":"1429:39:26"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"1417:8:26"}]},{"nodeType":"YulAssignment","src":"1477:30:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1490:5:26"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"1501:4:26"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1497:3:26"},"nodeType":"YulFunctionCall","src":"1497:9:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1486:3:26"},"nodeType":"YulFunctionCall","src":"1486:21:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1477:5:26"}]},{"nodeType":"YulAssignment","src":"1516:40:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1529:5:26"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"1540:8:26"},{"name":"mask","nodeType":"YulIdentifier","src":"1550:4:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1536:3:26"},"nodeType":"YulFunctionCall","src":"1536:19:26"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1526:2:26"},"nodeType":"YulFunctionCall","src":"1526:30:26"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1516:6:26"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1206:5:26","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"1213:10:26","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"1225:8:26","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"1238:6:26","type":""}],"src":"1169:393:26"},{"body":{"nodeType":"YulBlock","src":"1613:32:26","statements":[{"nodeType":"YulAssignment","src":"1623:16:26","value":{"name":"value","nodeType":"YulIdentifier","src":"1634:5:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1623:7:26"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1595:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1605:7:26","type":""}],"src":"1568:77:26"},{"body":{"nodeType":"YulBlock","src":"1683:28:26","statements":[{"nodeType":"YulAssignment","src":"1693:12:26","value":{"name":"value","nodeType":"YulIdentifier","src":"1700:5:26"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"1693:3:26"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1669:5:26","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"1679:3:26","type":""}],"src":"1651:60:26"},{"body":{"nodeType":"YulBlock","src":"1777:82:26","statements":[{"nodeType":"YulAssignment","src":"1787:66:26","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1845:5:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1827:17:26"},"nodeType":"YulFunctionCall","src":"1827:24:26"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"1818:8:26"},"nodeType":"YulFunctionCall","src":"1818:34:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1800:17:26"},"nodeType":"YulFunctionCall","src":"1800:53:26"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"1787:9:26"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1757:5:26","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"1767:9:26","type":""}],"src":"1717:142:26"},{"body":{"nodeType":"YulBlock","src":"1912:28:26","statements":[{"nodeType":"YulAssignment","src":"1922:12:26","value":{"name":"value","nodeType":"YulIdentifier","src":"1929:5:26"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"1922:3:26"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1898:5:26","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"1908:3:26","type":""}],"src":"1865:75:26"},{"body":{"nodeType":"YulBlock","src":"2022:193:26","statements":[{"nodeType":"YulVariableDeclaration","src":"2032:63:26","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"2087:7:26"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"2056:30:26"},"nodeType":"YulFunctionCall","src":"2056:39:26"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"2036:16:26","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2111:4:26"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2151:4:26"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"2145:5:26"},"nodeType":"YulFunctionCall","src":"2145:11:26"},{"name":"offset","nodeType":"YulIdentifier","src":"2158:6:26"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"2190:16:26"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"2166:23:26"},"nodeType":"YulFunctionCall","src":"2166:41:26"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"2117:27:26"},"nodeType":"YulFunctionCall","src":"2117:91:26"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2104:6:26"},"nodeType":"YulFunctionCall","src":"2104:105:26"},"nodeType":"YulExpressionStatement","src":"2104:105:26"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"1999:4:26","type":""},{"name":"offset","nodeType":"YulTypedName","src":"2005:6:26","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"2013:7:26","type":""}],"src":"1946:269:26"},{"body":{"nodeType":"YulBlock","src":"2270:24:26","statements":[{"nodeType":"YulAssignment","src":"2280:8:26","value":{"kind":"number","nodeType":"YulLiteral","src":"2287:1:26","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"2280:3:26"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"2266:3:26","type":""}],"src":"2221:73:26"},{"body":{"nodeType":"YulBlock","src":"2353:136:26","statements":[{"nodeType":"YulVariableDeclaration","src":"2363:46:26","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"2377:30:26"},"nodeType":"YulFunctionCall","src":"2377:32:26"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"2367:6:26","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2462:4:26"},{"name":"offset","nodeType":"YulIdentifier","src":"2468:6:26"},{"name":"zero_0","nodeType":"YulIdentifier","src":"2476:6:26"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"2418:43:26"},"nodeType":"YulFunctionCall","src":"2418:65:26"},"nodeType":"YulExpressionStatement","src":"2418:65:26"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"2339:4:26","type":""},{"name":"offset","nodeType":"YulTypedName","src":"2345:6:26","type":""}],"src":"2300:189:26"},{"body":{"nodeType":"YulBlock","src":"2545:136:26","statements":[{"body":{"nodeType":"YulBlock","src":"2612:63:26","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2656:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"2663:1:26","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"2626:29:26"},"nodeType":"YulFunctionCall","src":"2626:39:26"},"nodeType":"YulExpressionStatement","src":"2626:39:26"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2565:5:26"},{"name":"end","nodeType":"YulIdentifier","src":"2572:3:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2562:2:26"},"nodeType":"YulFunctionCall","src":"2562:14:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2577:26:26","statements":[{"nodeType":"YulAssignment","src":"2579:22:26","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2592:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"2599:1:26","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2588:3:26"},"nodeType":"YulFunctionCall","src":"2588:13:26"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"2579:5:26"}]}]},"pre":{"nodeType":"YulBlock","src":"2559:2:26","statements":[]},"src":"2555:120:26"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"2533:5:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"2540:3:26","type":""}],"src":"2495:186:26"},{"body":{"nodeType":"YulBlock","src":"2766:464:26","statements":[{"body":{"nodeType":"YulBlock","src":"2792:431:26","statements":[{"nodeType":"YulVariableDeclaration","src":"2806:54:26","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2854:5:26"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"2822:31:26"},"nodeType":"YulFunctionCall","src":"2822:38:26"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"2810:8:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2873:63:26","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"2896:8:26"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"2924:10:26"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"2906:17:26"},"nodeType":"YulFunctionCall","src":"2906:29:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2892:3:26"},"nodeType":"YulFunctionCall","src":"2892:44:26"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"2877:11:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"3093:27:26","statements":[{"nodeType":"YulAssignment","src":"3095:23:26","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"3110:8:26"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"3095:11:26"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"3077:10:26"},{"kind":"number","nodeType":"YulLiteral","src":"3089:2:26","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3074:2:26"},"nodeType":"YulFunctionCall","src":"3074:18:26"},"nodeType":"YulIf","src":"3071:49:26"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"3162:11:26"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"3179:8:26"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"3207:3:26"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"3189:17:26"},"nodeType":"YulFunctionCall","src":"3189:22:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3175:3:26"},"nodeType":"YulFunctionCall","src":"3175:37:26"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"3133:28:26"},"nodeType":"YulFunctionCall","src":"3133:80:26"},"nodeType":"YulExpressionStatement","src":"3133:80:26"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"2783:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"2788:2:26","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2780:2:26"},"nodeType":"YulFunctionCall","src":"2780:11:26"},"nodeType":"YulIf","src":"2777:446:26"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"2742:5:26","type":""},{"name":"len","nodeType":"YulTypedName","src":"2749:3:26","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"2754:10:26","type":""}],"src":"2687:543:26"},{"body":{"nodeType":"YulBlock","src":"3299:54:26","statements":[{"nodeType":"YulAssignment","src":"3309:37:26","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"3334:4:26"},{"name":"value","nodeType":"YulIdentifier","src":"3340:5:26"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3330:3:26"},"nodeType":"YulFunctionCall","src":"3330:16:26"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"3309:8:26"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"3274:4:26","type":""},{"name":"value","nodeType":"YulTypedName","src":"3280:5:26","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"3290:8:26","type":""}],"src":"3236:117:26"},{"body":{"nodeType":"YulBlock","src":"3410:118:26","statements":[{"nodeType":"YulVariableDeclaration","src":"3420:68:26","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3469:1:26","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"3472:5:26"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3465:3:26"},"nodeType":"YulFunctionCall","src":"3465:13:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3484:1:26","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3480:3:26"},"nodeType":"YulFunctionCall","src":"3480:6:26"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"3436:28:26"},"nodeType":"YulFunctionCall","src":"3436:51:26"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3432:3:26"},"nodeType":"YulFunctionCall","src":"3432:56:26"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"3424:4:26","type":""}]},{"nodeType":"YulAssignment","src":"3497:25:26","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3511:4:26"},{"name":"mask","nodeType":"YulIdentifier","src":"3517:4:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3507:3:26"},"nodeType":"YulFunctionCall","src":"3507:15:26"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3497:6:26"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3387:4:26","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"3393:5:26","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"3403:6:26","type":""}],"src":"3359:169:26"},{"body":{"nodeType":"YulBlock","src":"3614:214:26","statements":[{"nodeType":"YulAssignment","src":"3747:37:26","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3774:4:26"},{"name":"len","nodeType":"YulIdentifier","src":"3780:3:26"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"3755:18:26"},"nodeType":"YulFunctionCall","src":"3755:29:26"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"3747:4:26"}]},{"nodeType":"YulAssignment","src":"3793:29:26","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3804:4:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3814:1:26","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"3817:3:26"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3810:3:26"},"nodeType":"YulFunctionCall","src":"3810:11:26"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3801:2:26"},"nodeType":"YulFunctionCall","src":"3801:21:26"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"3793:4:26"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3595:4:26","type":""},{"name":"len","nodeType":"YulTypedName","src":"3601:3:26","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"3609:4:26","type":""}],"src":"3533:295:26"},{"body":{"nodeType":"YulBlock","src":"3925:1303:26","statements":[{"nodeType":"YulVariableDeclaration","src":"3936:51:26","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3983:3:26"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"3950:32:26"},"nodeType":"YulFunctionCall","src":"3950:37:26"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"3940:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"4072:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4074:16:26"},"nodeType":"YulFunctionCall","src":"4074:18:26"},"nodeType":"YulExpressionStatement","src":"4074:18:26"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4044:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"4052:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4041:2:26"},"nodeType":"YulFunctionCall","src":"4041:30:26"},"nodeType":"YulIf","src":"4038:56:26"},{"nodeType":"YulVariableDeclaration","src":"4104:52:26","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4150:4:26"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"4144:5:26"},"nodeType":"YulFunctionCall","src":"4144:11:26"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"4118:25:26"},"nodeType":"YulFunctionCall","src":"4118:38:26"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"4108:6:26","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4249:4:26"},{"name":"oldLen","nodeType":"YulIdentifier","src":"4255:6:26"},{"name":"newLen","nodeType":"YulIdentifier","src":"4263:6:26"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"4203:45:26"},"nodeType":"YulFunctionCall","src":"4203:67:26"},"nodeType":"YulExpressionStatement","src":"4203:67:26"},{"nodeType":"YulVariableDeclaration","src":"4280:18:26","value":{"kind":"number","nodeType":"YulLiteral","src":"4297:1:26","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"4284:9:26","type":""}]},{"nodeType":"YulAssignment","src":"4308:17:26","value":{"kind":"number","nodeType":"YulLiteral","src":"4321:4:26","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"4308:9:26"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"4372:611:26","statements":[{"nodeType":"YulVariableDeclaration","src":"4386:37:26","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4405:6:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4417:4:26","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4413:3:26"},"nodeType":"YulFunctionCall","src":"4413:9:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4401:3:26"},"nodeType":"YulFunctionCall","src":"4401:22:26"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"4390:7:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4437:51:26","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4483:4:26"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"4451:31:26"},"nodeType":"YulFunctionCall","src":"4451:37:26"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"4441:6:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4501:10:26","value":{"kind":"number","nodeType":"YulLiteral","src":"4510:1:26","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"4505:1:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"4569:163:26","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4594:6:26"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4612:3:26"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"4617:9:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4608:3:26"},"nodeType":"YulFunctionCall","src":"4608:19:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4602:5:26"},"nodeType":"YulFunctionCall","src":"4602:26:26"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4587:6:26"},"nodeType":"YulFunctionCall","src":"4587:42:26"},"nodeType":"YulExpressionStatement","src":"4587:42:26"},{"nodeType":"YulAssignment","src":"4646:24:26","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4660:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"4668:1:26","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4656:3:26"},"nodeType":"YulFunctionCall","src":"4656:14:26"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4646:6:26"}]},{"nodeType":"YulAssignment","src":"4687:31:26","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"4704:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"4715:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4700:3:26"},"nodeType":"YulFunctionCall","src":"4700:18:26"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"4687:9:26"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4535:1:26"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"4538:7:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4532:2:26"},"nodeType":"YulFunctionCall","src":"4532:14:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4547:21:26","statements":[{"nodeType":"YulAssignment","src":"4549:17:26","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4558:1:26"},{"kind":"number","nodeType":"YulLiteral","src":"4561:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4554:3:26"},"nodeType":"YulFunctionCall","src":"4554:12:26"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"4549:1:26"}]}]},"pre":{"nodeType":"YulBlock","src":"4528:3:26","statements":[]},"src":"4524:208:26"},{"body":{"nodeType":"YulBlock","src":"4768:156:26","statements":[{"nodeType":"YulVariableDeclaration","src":"4786:43:26","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4813:3:26"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"4818:9:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4809:3:26"},"nodeType":"YulFunctionCall","src":"4809:19:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4803:5:26"},"nodeType":"YulFunctionCall","src":"4803:26:26"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"4790:9:26","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4853:6:26"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"4880:9:26"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4895:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"4903:4:26","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4891:3:26"},"nodeType":"YulFunctionCall","src":"4891:17:26"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"4861:18:26"},"nodeType":"YulFunctionCall","src":"4861:48:26"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4846:6:26"},"nodeType":"YulFunctionCall","src":"4846:64:26"},"nodeType":"YulExpressionStatement","src":"4846:64:26"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"4751:7:26"},{"name":"newLen","nodeType":"YulIdentifier","src":"4760:6:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4748:2:26"},"nodeType":"YulFunctionCall","src":"4748:19:26"},"nodeType":"YulIf","src":"4745:179:26"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4944:4:26"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4958:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"4966:1:26","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4954:3:26"},"nodeType":"YulFunctionCall","src":"4954:14:26"},{"kind":"number","nodeType":"YulLiteral","src":"4970:1:26","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4950:3:26"},"nodeType":"YulFunctionCall","src":"4950:22:26"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4937:6:26"},"nodeType":"YulFunctionCall","src":"4937:36:26"},"nodeType":"YulExpressionStatement","src":"4937:36:26"}]},"nodeType":"YulCase","src":"4365:618:26","value":{"kind":"number","nodeType":"YulLiteral","src":"4370:1:26","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"5000:222:26","statements":[{"nodeType":"YulVariableDeclaration","src":"5014:14:26","value":{"kind":"number","nodeType":"YulLiteral","src":"5027:1:26","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"5018:5:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"5051:67:26","statements":[{"nodeType":"YulAssignment","src":"5069:35:26","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5088:3:26"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"5093:9:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5084:3:26"},"nodeType":"YulFunctionCall","src":"5084:19:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5078:5:26"},"nodeType":"YulFunctionCall","src":"5078:26:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5069:5:26"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"5044:6:26"},"nodeType":"YulIf","src":"5041:77:26"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5138:4:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5197:5:26"},{"name":"newLen","nodeType":"YulIdentifier","src":"5204:6:26"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"5144:52:26"},"nodeType":"YulFunctionCall","src":"5144:67:26"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5131:6:26"},"nodeType":"YulFunctionCall","src":"5131:81:26"},"nodeType":"YulExpressionStatement","src":"5131:81:26"}]},"nodeType":"YulCase","src":"4992:230:26","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4345:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"4353:2:26","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4342:2:26"},"nodeType":"YulFunctionCall","src":"4342:14:26"},"nodeType":"YulSwitch","src":"4335:887:26"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"3914:4:26","type":""},{"name":"src","nodeType":"YulTypedName","src":"3920:3:26","type":""}],"src":"3833:1395:26"},{"body":{"nodeType":"YulBlock","src":"5279:81:26","statements":[{"nodeType":"YulAssignment","src":"5289:65:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5304:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"5311:42:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5300:3:26"},"nodeType":"YulFunctionCall","src":"5300:54:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5289:7:26"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5261:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5271:7:26","type":""}],"src":"5234:126:26"},{"body":{"nodeType":"YulBlock","src":"5411:51:26","statements":[{"nodeType":"YulAssignment","src":"5421:35:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5450:5:26"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"5432:17:26"},"nodeType":"YulFunctionCall","src":"5432:24:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5421:7:26"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5393:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5403:7:26","type":""}],"src":"5366:96:26"},{"body":{"nodeType":"YulBlock","src":"5533:53:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5550:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5573:5:26"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"5555:17:26"},"nodeType":"YulFunctionCall","src":"5555:24:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5543:6:26"},"nodeType":"YulFunctionCall","src":"5543:37:26"},"nodeType":"YulExpressionStatement","src":"5543:37:26"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5521:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5528:3:26","type":""}],"src":"5468:118:26"},{"body":{"nodeType":"YulBlock","src":"5690:124:26","statements":[{"nodeType":"YulAssignment","src":"5700:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5712:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"5723:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5708:3:26"},"nodeType":"YulFunctionCall","src":"5708:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5700:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5780:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5793:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"5804:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5789:3:26"},"nodeType":"YulFunctionCall","src":"5789:17:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"5736:43:26"},"nodeType":"YulFunctionCall","src":"5736:71:26"},"nodeType":"YulExpressionStatement","src":"5736:71:26"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5662:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5674:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5685:4:26","type":""}],"src":"5592:222:26"},{"body":{"nodeType":"YulBlock","src":"5885:53:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5902:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5925:5:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5907:17:26"},"nodeType":"YulFunctionCall","src":"5907:24:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5895:6:26"},"nodeType":"YulFunctionCall","src":"5895:37:26"},"nodeType":"YulExpressionStatement","src":"5895:37:26"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5873:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5880:3:26","type":""}],"src":"5820:118:26"},{"body":{"nodeType":"YulBlock","src":"6042:124:26","statements":[{"nodeType":"YulAssignment","src":"6052:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6064:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"6075:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6060:3:26"},"nodeType":"YulFunctionCall","src":"6060:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6052:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6132:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6145:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"6156:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6141:3:26"},"nodeType":"YulFunctionCall","src":"6141:17:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"6088:43:26"},"nodeType":"YulFunctionCall","src":"6088:71:26"},"nodeType":"YulExpressionStatement","src":"6088:71:26"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6014:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6026:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6037:4:26","type":""}],"src":"5944:222:26"},{"body":{"nodeType":"YulBlock","src":"6268:73:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6285:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"6290:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6278:6:26"},"nodeType":"YulFunctionCall","src":"6278:19:26"},"nodeType":"YulExpressionStatement","src":"6278:19:26"},{"nodeType":"YulAssignment","src":"6306:29:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6325:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"6330:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6321:3:26"},"nodeType":"YulFunctionCall","src":"6321:14:26"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"6306:11:26"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6240:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"6245:6:26","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"6256:11:26","type":""}],"src":"6172:169:26"},{"body":{"nodeType":"YulBlock","src":"6453:74:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6475:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"6483:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6471:3:26"},"nodeType":"YulFunctionCall","src":"6471:14:26"},{"hexValue":"4f6e6c792061646d696e2063616e207472616e7366657220746f6b656e73","kind":"string","nodeType":"YulLiteral","src":"6487:32:26","type":"","value":"Only admin can transfer tokens"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6464:6:26"},"nodeType":"YulFunctionCall","src":"6464:56:26"},"nodeType":"YulExpressionStatement","src":"6464:56:26"}]},"name":"store_literal_in_memory_343baf082709e93d6ec72c89c1f25cf13509cddee60cd243e06b5ef8eb5199ff","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"6445:6:26","type":""}],"src":"6347:180:26"},{"body":{"nodeType":"YulBlock","src":"6679:220:26","statements":[{"nodeType":"YulAssignment","src":"6689:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6755:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"6760:2:26","type":"","value":"30"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6696:58:26"},"nodeType":"YulFunctionCall","src":"6696:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6689:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6861:3:26"}],"functionName":{"name":"store_literal_in_memory_343baf082709e93d6ec72c89c1f25cf13509cddee60cd243e06b5ef8eb5199ff","nodeType":"YulIdentifier","src":"6772:88:26"},"nodeType":"YulFunctionCall","src":"6772:93:26"},"nodeType":"YulExpressionStatement","src":"6772:93:26"},{"nodeType":"YulAssignment","src":"6874:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6885:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"6890:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6881:3:26"},"nodeType":"YulFunctionCall","src":"6881:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6874:3:26"}]}]},"name":"abi_encode_t_stringliteral_343baf082709e93d6ec72c89c1f25cf13509cddee60cd243e06b5ef8eb5199ff_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6667:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6675:3:26","type":""}],"src":"6533:366:26"},{"body":{"nodeType":"YulBlock","src":"7076:248:26","statements":[{"nodeType":"YulAssignment","src":"7086:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7098:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"7109:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7094:3:26"},"nodeType":"YulFunctionCall","src":"7094:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7086:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7133:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"7144:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7129:3:26"},"nodeType":"YulFunctionCall","src":"7129:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7152:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"7158:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7148:3:26"},"nodeType":"YulFunctionCall","src":"7148:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7122:6:26"},"nodeType":"YulFunctionCall","src":"7122:47:26"},"nodeType":"YulExpressionStatement","src":"7122:47:26"},{"nodeType":"YulAssignment","src":"7178:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7312:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_343baf082709e93d6ec72c89c1f25cf13509cddee60cd243e06b5ef8eb5199ff_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7186:124:26"},"nodeType":"YulFunctionCall","src":"7186:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7178:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_343baf082709e93d6ec72c89c1f25cf13509cddee60cd243e06b5ef8eb5199ff__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7056:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7071:4:26","type":""}],"src":"6905:419:26"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_343baf082709e93d6ec72c89c1f25cf13509cddee60cd243e06b5ef8eb5199ff(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only admin can transfer tokens\")\n\n    }\n\n    function abi_encode_t_stringliteral_343baf082709e93d6ec72c89c1f25cf13509cddee60cd243e06b5ef8eb5199ff_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_343baf082709e93d6ec72c89c1f25cf13509cddee60cd243e06b5ef8eb5199ff(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_343baf082709e93d6ec72c89c1f25cf13509cddee60cd243e06b5ef8eb5199ff__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_343baf082709e93d6ec72c89c1f25cf13509cddee60cd243e06b5ef8eb5199ff_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":26,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405261012b6009553480156200001757600080fd5b50336040518060400160405280600981526020017f476f6174546f6b656e00000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f474f415400000000000000000000000000000000000000000000000000000000815250816000908162000096919062000c86565b508060019081620000a8919062000c86565b505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620001205760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040162000117919062000db2565b60405180910390fd5b6200013181620001ba60201b60201c565b5033600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555062000187336009546200028060201b60201c565b620001b46009546040518060800160405280604f81526020016200301d604f91396200038760201b60201c565b62000e80565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620002f55760006040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401620002ec919062000db2565b60405180910390fd5b60006200030b83836000620003e760201b60201c565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614620003825760006040517f73c6ac6e00000000000000000000000000000000000000000000000000000000815260040162000379919062000db2565b60405180910390fd5b505050565b80600660008481526020019081526020016000209081620003a9919062000c86565b507ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce782604051620003db919062000de0565b60405180910390a15050565b600080620003fb846200061c60201b60201c565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146200044657620004458184866200065960201b60201c565b5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614620004e05762000491600085600080620006de60201b60201c565b6001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161462000564576001600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b846002600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b62000669620008bb60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614620006d9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620006d09062000e5e565b60405180910390fd5b505050565b8080620007185750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b15620008635760006200073184620008e560201b60201c565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156200079d57508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b8015620007b95750620007b781846200097860201b60201c565b155b15620007fe57826040517fa9fbf51f000000000000000000000000000000000000000000000000000000008152600401620007f5919062000db2565b60405180910390fd5b81156200086157838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b836004600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080620008f9836200061c60201b60201c565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036200096f57826040517f7e27328900000000000000000000000000000000000000000000000000000000815260040162000966919062000de0565b60405180910390fd5b80915050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168062000a8e57607f821691505b60208210810362000aa45762000aa362000a46565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830262000b0e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000acf565b62000b1a868362000acf565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600062000b6762000b6162000b5b8462000b32565b62000b3c565b62000b32565b9050919050565b6000819050919050565b62000b838362000b46565b62000b9b62000b928262000b6e565b84845462000adc565b825550505050565b600090565b62000bb262000ba3565b62000bbf81848462000b78565b505050565b5b8181101562000be75762000bdb60008262000ba8565b60018101905062000bc5565b5050565b601f82111562000c365762000c008162000aaa565b62000c0b8462000abf565b8101602085101562000c1b578190505b62000c3362000c2a8562000abf565b83018262000bc4565b50505b505050565b600082821c905092915050565b600062000c5b6000198460080262000c3b565b1980831691505092915050565b600062000c76838362000c48565b9150826002028217905092915050565b62000c918262000a0c565b67ffffffffffffffff81111562000cad5762000cac62000a17565b5b62000cb9825462000a75565b62000cc682828562000beb565b600060209050601f83116001811462000cfe576000841562000ce9578287015190505b62000cf5858262000c68565b86555062000d65565b601f19841662000d0e8662000aaa565b60005b8281101562000d385784890151825560018201915060208501945060208101905062000d11565b8683101562000d58578489015162000d54601f89168262000c48565b8355505b6001600288020188555050505b505050505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000d9a8262000d6d565b9050919050565b62000dac8162000d8d565b82525050565b600060208201905062000dc9600083018462000da1565b92915050565b62000dda8162000b32565b82525050565b600060208201905062000df7600083018462000dcf565b92915050565b600082825260208201905092915050565b7f4f6e6c792061646d696e2063616e207472616e7366657220746f6b656e730000600082015250565b600062000e46601e8362000dfd565b915062000e538262000e0e565b602082019050919050565b6000602082019050818103600083015262000e798162000e37565b9050919050565b61218d8062000e906000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c8063715018a6116100ad578063c87b56dd11610071578063c87b56dd1461031b578063e4d9d1221461034b578063e985e9c514610369578063f2fde38b14610399578063f8cacb4c146103b55761012c565b8063715018a61461029d5780638da5cb5b146102a757806395d89b41146102c5578063a22cb465146102e3578063b88d4fde146102ff5761012c565b806323b872dd116100f457806323b872dd146101e757806331d382a21461020357806342842e0e146102215780636352211e1461023d57806370a082311461026d5761012c565b806301ffc9a714610131578063065db7a51461016157806306fdde031461017d578063081812fc1461019b578063095ea7b3146101cb575b600080fd5b61014b60048036038101906101469190611994565b6103d3565b60405161015891906119dc565b60405180910390f35b61017b60048036038101906101769190611a55565b6103e5565b005b6101856104a6565b6040516101929190611b25565b60405180910390f35b6101b560048036038101906101b09190611b7d565b610538565b6040516101c29190611bb9565b60405180910390f35b6101e560048036038101906101e09190611bd4565b610554565b005b61020160048036038101906101fc9190611c14565b61056a565b005b61020b61066c565b6040516102189190611bb9565b60405180910390f35b61023b60048036038101906102369190611c14565b610692565b005b61025760048036038101906102529190611b7d565b6106b2565b6040516102649190611bb9565b60405180910390f35b61028760048036038101906102829190611c67565b6106c4565b6040516102949190611ca3565b60405180910390f35b6102a561077e565b005b6102af610792565b6040516102bc9190611bb9565b60405180910390f35b6102cd6107bc565b6040516102da9190611b25565b60405180910390f35b6102fd60048036038101906102f89190611cea565b61084e565b005b61031960048036038101906103149190611e5f565b610864565b005b61033560048036038101906103309190611b7d565b610889565b6040516103429190611b25565b60405180910390f35b61035361089b565b6040516103609190611ca3565b60405180910390f35b610383600480360381019061037e9190611a55565b6108a1565b60405161039091906119dc565b60405180910390f35b6103b360048036038101906103ae9190611c67565b610935565b005b6103bd6109bb565b6040516103ca9190611bb9565b60405180910390f35b60006103de826109e5565b9050919050565b6103ed610a46565b6103fa8282600954610692565b8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167faf9ff3ada675379ca19fdd908e550417162f2a7370166e8257b25888e55926e76009546040516104599190611ca3565b60405180910390a380600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6060600080546104b590611f11565b80601f01602080910402602001604051908101604052809291908181526020018280546104e190611f11565b801561052e5780601f106105035761010080835404028352916020019161052e565b820191906000526020600020905b81548152906001019060200180831161051157829003601f168201915b5050505050905090565b600061054382610acd565b5061054d82610b55565b9050919050565b6105668282610561610b92565b610b9a565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036105dc5760006040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016105d39190611bb9565b60405180910390fd5b60006105f083836105eb610b92565b610bac565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610666578382826040517f64283d7b00000000000000000000000000000000000000000000000000000000815260040161065d93929190611f42565b60405180910390fd5b50505050565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6106ad83838360405180602001604052806000815250610864565b505050565b60006106bd82610acd565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036107375760006040517f89c62b6400000000000000000000000000000000000000000000000000000000815260040161072e9190611bb9565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610786610a46565b6107906000610dc6565b565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600180546107cb90611f11565b80601f01602080910402602001604051908101604052809291908181526020018280546107f790611f11565b80156108445780601f1061081957610100808354040283529160200191610844565b820191906000526020600020905b81548152906001019060200180831161082757829003601f168201915b5050505050905090565b610860610859610b92565b8383610e8c565b5050565b61086f84848461056a565b61088361087a610b92565b85858585610ffb565b50505050565b6060610894826111ac565b9050919050565b60095481565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b61093d610a46565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036109af5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016109a69190611bb9565b60405180910390fd5b6109b881610dc6565b50565b6000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000634906490660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610a3f5750610a3e826112bf565b5b9050919050565b610a4e610b92565b73ffffffffffffffffffffffffffffffffffffffff16610a6c610792565b73ffffffffffffffffffffffffffffffffffffffff1614610acb57610a8f610b92565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610ac29190611bb9565b60405180910390fd5b565b600080610ad9836113a1565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610b4c57826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610b439190611ca3565b60405180910390fd5b80915050919050565b60006004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600033905090565b610ba783838360016113de565b505050565b600080610bb8846113a1565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610bfa57610bf98184866115a3565b5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610c8b57610c3c6000856000806113de565b6001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610d0e576001600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b846002600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610efd57816040517f5b08ba18000000000000000000000000000000000000000000000000000000008152600401610ef49190611bb9565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610fee91906119dc565b60405180910390a3505050565b60008373ffffffffffffffffffffffffffffffffffffffff163b11156111a5578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02868685856040518563ffffffff1660e01b815260040161105a9493929190611fce565b6020604051808303816000875af192505050801561109657506040513d601f19601f82011682018060405250810190611093919061202f565b60015b61111a573d80600081146110c6576040519150601f19603f3d011682016040523d82523d6000602084013e6110cb565b606091505b50600081510361111257836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016111099190611bb9565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146111a357836040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161119a9190611bb9565b60405180910390fd5b505b5050505050565b60606111b782610acd565b5060006006600084815260200190815260200160002080546111d890611f11565b80601f016020809104026020016040519081016040528092919081815260200182805461120490611f11565b80156112515780601f1061122657610100808354040283529160200191611251565b820191906000526020600020905b81548152906001019060200180831161123457829003601f168201915b50505050509050600061126261161d565b905060008151036112775781925050506112ba565b6000825111156112ac578082604051602001611294929190612098565b604051602081830303815290604052925050506112ba565b6112b584611634565b925050505b919050565b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061138a57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061139a57506113998261169d565b5b9050919050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b80806114175750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b1561154b57600061142784610acd565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561149257508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b80156114a557506114a381846108a1565b155b156114e757826040517fa9fbf51f0000000000000000000000000000000000000000000000000000000081526004016114de9190611bb9565b60405180910390fd5b811561154957838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b836004600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b6115ab610792565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614611618576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161160f90612108565b60405180910390fd5b505050565b606060405180602001604052806000815250905090565b606061163f82610acd565b50600061164a61161d565b9050600081511161166a5760405180602001604052806000815250611695565b8061167484611707565b604051602001611685929190612098565b6040516020818303038152906040525b915050919050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b606060006001611716846117d5565b01905060008167ffffffffffffffff81111561173557611734611d34565b5b6040519080825280601f01601f1916602001820160405280156117675781602001600182028036833780820191505090505b509050600082602001820190505b6001156117ca578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85816117be576117bd612128565b5b04945060008503611775575b819350505050919050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611833577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000838161182957611828612128565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611870576d04ee2d6d415b85acef8100000000838161186657611865612128565b5b0492506020810190505b662386f26fc10000831061189f57662386f26fc10000838161189557611894612128565b5b0492506010810190505b6305f5e10083106118c8576305f5e10083816118be576118bd612128565b5b0492506008810190505b61271083106118ed5761271083816118e3576118e2612128565b5b0492506004810190505b60648310611910576064838161190657611905612128565b5b0492506002810190505b600a831061191f576001810190505b80915050919050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6119718161193c565b811461197c57600080fd5b50565b60008135905061198e81611968565b92915050565b6000602082840312156119aa576119a9611932565b5b60006119b88482850161197f565b91505092915050565b60008115159050919050565b6119d6816119c1565b82525050565b60006020820190506119f160008301846119cd565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611a22826119f7565b9050919050565b611a3281611a17565b8114611a3d57600080fd5b50565b600081359050611a4f81611a29565b92915050565b60008060408385031215611a6c57611a6b611932565b5b6000611a7a85828601611a40565b9250506020611a8b85828601611a40565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611acf578082015181840152602081019050611ab4565b60008484015250505050565b6000601f19601f8301169050919050565b6000611af782611a95565b611b018185611aa0565b9350611b11818560208601611ab1565b611b1a81611adb565b840191505092915050565b60006020820190508181036000830152611b3f8184611aec565b905092915050565b6000819050919050565b611b5a81611b47565b8114611b6557600080fd5b50565b600081359050611b7781611b51565b92915050565b600060208284031215611b9357611b92611932565b5b6000611ba184828501611b68565b91505092915050565b611bb381611a17565b82525050565b6000602082019050611bce6000830184611baa565b92915050565b60008060408385031215611beb57611bea611932565b5b6000611bf985828601611a40565b9250506020611c0a85828601611b68565b9150509250929050565b600080600060608486031215611c2d57611c2c611932565b5b6000611c3b86828701611a40565b9350506020611c4c86828701611a40565b9250506040611c5d86828701611b68565b9150509250925092565b600060208284031215611c7d57611c7c611932565b5b6000611c8b84828501611a40565b91505092915050565b611c9d81611b47565b82525050565b6000602082019050611cb86000830184611c94565b92915050565b611cc7816119c1565b8114611cd257600080fd5b50565b600081359050611ce481611cbe565b92915050565b60008060408385031215611d0157611d00611932565b5b6000611d0f85828601611a40565b9250506020611d2085828601611cd5565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611d6c82611adb565b810181811067ffffffffffffffff82111715611d8b57611d8a611d34565b5b80604052505050565b6000611d9e611928565b9050611daa8282611d63565b919050565b600067ffffffffffffffff821115611dca57611dc9611d34565b5b611dd382611adb565b9050602081019050919050565b82818337600083830152505050565b6000611e02611dfd84611daf565b611d94565b905082815260208101848484011115611e1e57611e1d611d2f565b5b611e29848285611de0565b509392505050565b600082601f830112611e4657611e45611d2a565b5b8135611e56848260208601611def565b91505092915050565b60008060008060808587031215611e7957611e78611932565b5b6000611e8787828801611a40565b9450506020611e9887828801611a40565b9350506040611ea987828801611b68565b925050606085013567ffffffffffffffff811115611eca57611ec9611937565b5b611ed687828801611e31565b91505092959194509250565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611f2957607f821691505b602082108103611f3c57611f3b611ee2565b5b50919050565b6000606082019050611f576000830186611baa565b611f646020830185611c94565b611f716040830184611baa565b949350505050565b600081519050919050565b600082825260208201905092915050565b6000611fa082611f79565b611faa8185611f84565b9350611fba818560208601611ab1565b611fc381611adb565b840191505092915050565b6000608082019050611fe36000830187611baa565b611ff06020830186611baa565b611ffd6040830185611c94565b818103606083015261200f8184611f95565b905095945050505050565b60008151905061202981611968565b92915050565b60006020828403121561204557612044611932565b5b60006120538482850161201a565b91505092915050565b600081905092915050565b600061207282611a95565b61207c818561205c565b935061208c818560208601611ab1565b80840191505092915050565b60006120a48285612067565b91506120b08284612067565b91508190509392505050565b7f4f6e6c792061646d696e2063616e207472616e7366657220746f6b656e730000600082015250565b60006120f2601e83611aa0565b91506120fd826120bc565b602082019050919050565b60006020820190508181036000830152612121816120e5565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fdfea2646970667358221220f50ea23b2708a2e44c4f5063dbdd852352f220509a7208f022b7067fe29d935864736f6c63430008140033697066733a2f2f6261666b72656967796374716535666234353671636679646736706679367a64683632366569643466357a6e776636796a36726e6a6c7a627135612f476f61744e46542e6a736f6e","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH2 0x12B PUSH1 0x9 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x476F6174546F6B656E0000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x474F415400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x0 SWAP1 DUP2 PUSH3 0x96 SWAP2 SWAP1 PUSH3 0xC86 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP2 PUSH3 0xA8 SWAP2 SWAP1 PUSH3 0xC86 JUMP JUMPDEST POP POP POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x120 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x117 SWAP2 SWAP1 PUSH3 0xDB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x131 DUP2 PUSH3 0x1BA PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP CALLER PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH3 0x187 CALLER PUSH1 0x9 SLOAD PUSH3 0x280 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x1B4 PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4F DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x301D PUSH1 0x4F SWAP2 CODECOPY PUSH3 0x387 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xE80 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x2F5 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x2EC SWAP2 SWAP1 PUSH3 0xDB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x30B DUP4 DUP4 PUSH1 0x0 PUSH3 0x3E7 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0x382 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x379 SWAP2 SWAP1 PUSH3 0xDB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP2 PUSH3 0x3A9 SWAP2 SWAP1 PUSH3 0xC86 JUMP JUMPDEST POP PUSH32 0xF8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7 DUP3 PUSH1 0x40 MLOAD PUSH3 0x3DB SWAP2 SWAP1 PUSH3 0xDE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH3 0x3FB DUP5 PUSH3 0x61C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0x446 JUMPI PUSH3 0x445 DUP2 DUP5 DUP7 PUSH3 0x659 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0x4E0 JUMPI PUSH3 0x491 PUSH1 0x0 DUP6 PUSH1 0x0 DUP1 PUSH3 0x6DE PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0x564 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x669 PUSH3 0x8BB PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0x6D9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x6D0 SWAP1 PUSH3 0xE5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST DUP1 DUP1 PUSH3 0x718 JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH3 0x863 JUMPI PUSH1 0x0 PUSH3 0x731 DUP5 PUSH3 0x8E5 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH3 0x79D JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH3 0x7B9 JUMPI POP PUSH3 0x7B7 DUP2 DUP5 PUSH3 0x978 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH3 0x7FE JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x7F5 SWAP2 SWAP1 PUSH3 0xDB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH3 0x861 JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH3 0x8F9 DUP4 PUSH3 0x61C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x96F JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x966 SWAP2 SWAP1 PUSH3 0xDE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0xA8E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0xAA4 JUMPI PUSH3 0xAA3 PUSH3 0xA46 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0xB0E PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0xACF JUMP JUMPDEST PUSH3 0xB1A DUP7 DUP4 PUSH3 0xACF JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xB67 PUSH3 0xB61 PUSH3 0xB5B DUP5 PUSH3 0xB32 JUMP JUMPDEST PUSH3 0xB3C JUMP JUMPDEST PUSH3 0xB32 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xB83 DUP4 PUSH3 0xB46 JUMP JUMPDEST PUSH3 0xB9B PUSH3 0xB92 DUP3 PUSH3 0xB6E JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0xADC JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0xBB2 PUSH3 0xBA3 JUMP JUMPDEST PUSH3 0xBBF DUP2 DUP5 DUP5 PUSH3 0xB78 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0xBE7 JUMPI PUSH3 0xBDB PUSH1 0x0 DUP3 PUSH3 0xBA8 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0xBC5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0xC36 JUMPI PUSH3 0xC00 DUP2 PUSH3 0xAAA JUMP JUMPDEST PUSH3 0xC0B DUP5 PUSH3 0xABF JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0xC1B JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0xC33 PUSH3 0xC2A DUP6 PUSH3 0xABF JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0xBC4 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xC5B PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0xC3B JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xC76 DUP4 DUP4 PUSH3 0xC48 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0xC91 DUP3 PUSH3 0xA0C JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0xCAD JUMPI PUSH3 0xCAC PUSH3 0xA17 JUMP JUMPDEST JUMPDEST PUSH3 0xCB9 DUP3 SLOAD PUSH3 0xA75 JUMP JUMPDEST PUSH3 0xCC6 DUP3 DUP3 DUP6 PUSH3 0xBEB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0xCFE JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0xCE9 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0xCF5 DUP6 DUP3 PUSH3 0xC68 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0xD65 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0xD0E DUP7 PUSH3 0xAAA JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0xD38 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0xD11 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0xD58 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0xD54 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0xC48 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xD9A DUP3 PUSH3 0xD6D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xDAC DUP2 PUSH3 0xD8D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xDC9 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0xDA1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0xDDA DUP2 PUSH3 0xB32 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xDF7 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0xDCF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F6E6C792061646D696E2063616E207472616E7366657220746F6B656E730000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xE46 PUSH1 0x1E DUP4 PUSH3 0xDFD JUMP JUMPDEST SWAP2 POP PUSH3 0xE53 DUP3 PUSH3 0xE0E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0xE79 DUP2 PUSH3 0xE37 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x218D DUP1 PUSH3 0xE90 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xC87B56DD GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x31B JUMPI DUP1 PUSH4 0xE4D9D122 EQ PUSH2 0x34B JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x369 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x399 JUMPI DUP1 PUSH4 0xF8CACB4C EQ PUSH2 0x3B5 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x29D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2A7 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2C5 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2E3 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2FF JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0x31D382A2 EQ PUSH2 0x203 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x26D JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x65DB7A5 EQ PUSH2 0x161 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x17D JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x19B JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1CB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x1994 JUMP JUMPDEST PUSH2 0x3D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x158 SWAP2 SWAP1 PUSH2 0x19DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x176 SWAP2 SWAP1 PUSH2 0x1A55 JUMP JUMPDEST PUSH2 0x3E5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x185 PUSH2 0x4A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x192 SWAP2 SWAP1 PUSH2 0x1B25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B0 SWAP2 SWAP1 PUSH2 0x1B7D JUMP JUMPDEST PUSH2 0x538 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C2 SWAP2 SWAP1 PUSH2 0x1BB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E0 SWAP2 SWAP1 PUSH2 0x1BD4 JUMP JUMPDEST PUSH2 0x554 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x201 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FC SWAP2 SWAP1 PUSH2 0x1C14 JUMP JUMPDEST PUSH2 0x56A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x20B PUSH2 0x66C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x218 SWAP2 SWAP1 PUSH2 0x1BB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x236 SWAP2 SWAP1 PUSH2 0x1C14 JUMP JUMPDEST PUSH2 0x692 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x257 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x252 SWAP2 SWAP1 PUSH2 0x1B7D JUMP JUMPDEST PUSH2 0x6B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x264 SWAP2 SWAP1 PUSH2 0x1BB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x287 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x282 SWAP2 SWAP1 PUSH2 0x1C67 JUMP JUMPDEST PUSH2 0x6C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x294 SWAP2 SWAP1 PUSH2 0x1CA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A5 PUSH2 0x77E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2AF PUSH2 0x792 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BC SWAP2 SWAP1 PUSH2 0x1BB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CD PUSH2 0x7BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DA SWAP2 SWAP1 PUSH2 0x1B25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F8 SWAP2 SWAP1 PUSH2 0x1CEA JUMP JUMPDEST PUSH2 0x84E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x319 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x314 SWAP2 SWAP1 PUSH2 0x1E5F JUMP JUMPDEST PUSH2 0x864 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x335 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x330 SWAP2 SWAP1 PUSH2 0x1B7D JUMP JUMPDEST PUSH2 0x889 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x342 SWAP2 SWAP1 PUSH2 0x1B25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x353 PUSH2 0x89B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x360 SWAP2 SWAP1 PUSH2 0x1CA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x383 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x37E SWAP2 SWAP1 PUSH2 0x1A55 JUMP JUMPDEST PUSH2 0x8A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x390 SWAP2 SWAP1 PUSH2 0x19DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3AE SWAP2 SWAP1 PUSH2 0x1C67 JUMP JUMPDEST PUSH2 0x935 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3BD PUSH2 0x9BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CA SWAP2 SWAP1 PUSH2 0x1BB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x3DE DUP3 PUSH2 0x9E5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3ED PUSH2 0xA46 JUMP JUMPDEST PUSH2 0x3FA DUP3 DUP3 PUSH1 0x9 SLOAD PUSH2 0x692 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xAF9FF3ADA675379CA19FDD908E550417162F2A7370166E8257B25888E55926E7 PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH2 0x459 SWAP2 SWAP1 PUSH2 0x1CA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x4B5 SWAP1 PUSH2 0x1F11 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4E1 SWAP1 PUSH2 0x1F11 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x52E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x503 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x52E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x511 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x543 DUP3 PUSH2 0xACD JUMP JUMPDEST POP PUSH2 0x54D DUP3 PUSH2 0xB55 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x566 DUP3 DUP3 PUSH2 0x561 PUSH2 0xB92 JUMP JUMPDEST PUSH2 0xB9A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5DC JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D3 SWAP2 SWAP1 PUSH2 0x1BB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x5F0 DUP4 DUP4 PUSH2 0x5EB PUSH2 0xB92 JUMP JUMPDEST PUSH2 0xBAC JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x666 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x65D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F42 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x6AD DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x864 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6BD DUP3 PUSH2 0xACD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x737 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x72E SWAP2 SWAP1 PUSH2 0x1BB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x786 PUSH2 0xA46 JUMP JUMPDEST PUSH2 0x790 PUSH1 0x0 PUSH2 0xDC6 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x7CB SWAP1 PUSH2 0x1F11 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7F7 SWAP1 PUSH2 0x1F11 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x844 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x819 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x844 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x827 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x860 PUSH2 0x859 PUSH2 0xB92 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xE8C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x86F DUP5 DUP5 DUP5 PUSH2 0x56A JUMP JUMPDEST PUSH2 0x883 PUSH2 0x87A PUSH2 0xB92 JUMP JUMPDEST DUP6 DUP6 DUP6 DUP6 PUSH2 0xFFB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x894 DUP3 PUSH2 0x11AC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x93D PUSH2 0xA46 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9AF JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9A6 SWAP2 SWAP1 PUSH2 0x1BB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9B8 DUP2 PUSH2 0xDC6 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x49064906 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0xA3F JUMPI POP PUSH2 0xA3E DUP3 PUSH2 0x12BF JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA4E PUSH2 0xB92 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA6C PUSH2 0x792 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xACB JUMPI PUSH2 0xA8F PUSH2 0xB92 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAC2 SWAP2 SWAP1 PUSH2 0x1BB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xAD9 DUP4 PUSH2 0x13A1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB4C JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB43 SWAP2 SWAP1 PUSH2 0x1CA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xBA7 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x13DE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xBB8 DUP5 PUSH2 0x13A1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBFA JUMPI PUSH2 0xBF9 DUP2 DUP5 DUP7 PUSH2 0x15A3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC8B JUMPI PUSH2 0xC3C PUSH1 0x0 DUP6 PUSH1 0x0 DUP1 PUSH2 0x13DE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD0E JUMPI PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEFD JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEF4 SWAP2 SWAP1 PUSH2 0x1BB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xFEE SWAP2 SWAP1 PUSH2 0x19DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x11A5 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 DUP7 DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x105A SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1FCE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1096 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1093 SWAP2 SWAP1 PUSH2 0x202F JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x111A JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x10C6 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x10CB JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x1112 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1109 SWAP2 SWAP1 PUSH2 0x1BB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x11A3 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x119A SWAP2 SWAP1 PUSH2 0x1BB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x11B7 DUP3 PUSH2 0xACD JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x11D8 SWAP1 PUSH2 0x1F11 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1204 SWAP1 PUSH2 0x1F11 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1251 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1226 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1251 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1234 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x1262 PUSH2 0x161D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x1277 JUMPI DUP2 SWAP3 POP POP POP PUSH2 0x12BA JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x12AC JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1294 SWAP3 SWAP2 SWAP1 PUSH2 0x2098 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP PUSH2 0x12BA JUMP JUMPDEST PUSH2 0x12B5 DUP5 PUSH2 0x1634 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x138A JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x139A JUMPI POP PUSH2 0x1399 DUP3 PUSH2 0x169D JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1417 JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x154B JUMPI PUSH1 0x0 PUSH2 0x1427 DUP5 PUSH2 0xACD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1492 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x14A5 JUMPI POP PUSH2 0x14A3 DUP2 DUP5 PUSH2 0x8A1 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x14E7 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14DE SWAP2 SWAP1 PUSH2 0x1BB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x1549 JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x15AB PUSH2 0x792 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1618 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x160F SWAP1 PUSH2 0x2108 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x163F DUP3 PUSH2 0xACD JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x164A PUSH2 0x161D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x166A JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1695 JUMP JUMPDEST DUP1 PUSH2 0x1674 DUP5 PUSH2 0x1707 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1685 SWAP3 SWAP2 SWAP1 PUSH2 0x2098 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x1716 DUP5 PUSH2 0x17D5 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1735 JUMPI PUSH2 0x1734 PUSH2 0x1D34 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1767 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x17CA JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x17BE JUMPI PUSH2 0x17BD PUSH2 0x2128 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0x1775 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1833 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x1829 JUMPI PUSH2 0x1828 PUSH2 0x2128 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1870 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x1866 JUMPI PUSH2 0x1865 PUSH2 0x2128 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x189F JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x1895 JUMPI PUSH2 0x1894 PUSH2 0x2128 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x18C8 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x18BE JUMPI PUSH2 0x18BD PUSH2 0x2128 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x18ED JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x18E3 JUMPI PUSH2 0x18E2 PUSH2 0x2128 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1910 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1906 JUMPI PUSH2 0x1905 PUSH2 0x2128 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x191F JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1971 DUP2 PUSH2 0x193C JUMP JUMPDEST DUP2 EQ PUSH2 0x197C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x198E DUP2 PUSH2 0x1968 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19AA JUMPI PUSH2 0x19A9 PUSH2 0x1932 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19B8 DUP5 DUP3 DUP6 ADD PUSH2 0x197F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19D6 DUP2 PUSH2 0x19C1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19F1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x19CD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A22 DUP3 PUSH2 0x19F7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A32 DUP2 PUSH2 0x1A17 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A3D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A4F DUP2 PUSH2 0x1A29 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A6C JUMPI PUSH2 0x1A6B PUSH2 0x1932 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A7A DUP6 DUP3 DUP7 ADD PUSH2 0x1A40 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A8B DUP6 DUP3 DUP7 ADD PUSH2 0x1A40 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1ACF JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1AB4 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AF7 DUP3 PUSH2 0x1A95 JUMP JUMPDEST PUSH2 0x1B01 DUP2 DUP6 PUSH2 0x1AA0 JUMP JUMPDEST SWAP4 POP PUSH2 0x1B11 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1AB1 JUMP JUMPDEST PUSH2 0x1B1A DUP2 PUSH2 0x1ADB JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B3F DUP2 DUP5 PUSH2 0x1AEC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B5A DUP2 PUSH2 0x1B47 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B77 DUP2 PUSH2 0x1B51 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B93 JUMPI PUSH2 0x1B92 PUSH2 0x1932 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1BA1 DUP5 DUP3 DUP6 ADD PUSH2 0x1B68 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1BB3 DUP2 PUSH2 0x1A17 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BCE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1BAA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BEB JUMPI PUSH2 0x1BEA PUSH2 0x1932 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1BF9 DUP6 DUP3 DUP7 ADD PUSH2 0x1A40 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C0A DUP6 DUP3 DUP7 ADD PUSH2 0x1B68 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1C2D JUMPI PUSH2 0x1C2C PUSH2 0x1932 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C3B DUP7 DUP3 DUP8 ADD PUSH2 0x1A40 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1C4C DUP7 DUP3 DUP8 ADD PUSH2 0x1A40 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1C5D DUP7 DUP3 DUP8 ADD PUSH2 0x1B68 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C7D JUMPI PUSH2 0x1C7C PUSH2 0x1932 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C8B DUP5 DUP3 DUP6 ADD PUSH2 0x1A40 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1C9D DUP2 PUSH2 0x1B47 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CB8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1C94 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1CC7 DUP2 PUSH2 0x19C1 JUMP JUMPDEST DUP2 EQ PUSH2 0x1CD2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1CE4 DUP2 PUSH2 0x1CBE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D01 JUMPI PUSH2 0x1D00 PUSH2 0x1932 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D0F DUP6 DUP3 DUP7 ADD PUSH2 0x1A40 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1D20 DUP6 DUP3 DUP7 ADD PUSH2 0x1CD5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1D6C DUP3 PUSH2 0x1ADB JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1D8B JUMPI PUSH2 0x1D8A PUSH2 0x1D34 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D9E PUSH2 0x1928 JUMP JUMPDEST SWAP1 POP PUSH2 0x1DAA DUP3 DUP3 PUSH2 0x1D63 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1DCA JUMPI PUSH2 0x1DC9 PUSH2 0x1D34 JUMP JUMPDEST JUMPDEST PUSH2 0x1DD3 DUP3 PUSH2 0x1ADB JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E02 PUSH2 0x1DFD DUP5 PUSH2 0x1DAF JUMP JUMPDEST PUSH2 0x1D94 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1E1E JUMPI PUSH2 0x1E1D PUSH2 0x1D2F JUMP JUMPDEST JUMPDEST PUSH2 0x1E29 DUP5 DUP3 DUP6 PUSH2 0x1DE0 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1E46 JUMPI PUSH2 0x1E45 PUSH2 0x1D2A JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1E56 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1DEF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1E79 JUMPI PUSH2 0x1E78 PUSH2 0x1932 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E87 DUP8 DUP3 DUP9 ADD PUSH2 0x1A40 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1E98 DUP8 DUP3 DUP9 ADD PUSH2 0x1A40 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1EA9 DUP8 DUP3 DUP9 ADD PUSH2 0x1B68 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1ECA JUMPI PUSH2 0x1EC9 PUSH2 0x1937 JUMP JUMPDEST JUMPDEST PUSH2 0x1ED6 DUP8 DUP3 DUP9 ADD PUSH2 0x1E31 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1F29 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1F3C JUMPI PUSH2 0x1F3B PUSH2 0x1EE2 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1F57 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1BAA JUMP JUMPDEST PUSH2 0x1F64 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1C94 JUMP JUMPDEST PUSH2 0x1F71 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1BAA JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FA0 DUP3 PUSH2 0x1F79 JUMP JUMPDEST PUSH2 0x1FAA DUP2 DUP6 PUSH2 0x1F84 JUMP JUMPDEST SWAP4 POP PUSH2 0x1FBA DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1AB1 JUMP JUMPDEST PUSH2 0x1FC3 DUP2 PUSH2 0x1ADB JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1FE3 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1BAA JUMP JUMPDEST PUSH2 0x1FF0 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1BAA JUMP JUMPDEST PUSH2 0x1FFD PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1C94 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x200F DUP2 DUP5 PUSH2 0x1F95 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2029 DUP2 PUSH2 0x1968 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2045 JUMPI PUSH2 0x2044 PUSH2 0x1932 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2053 DUP5 DUP3 DUP6 ADD PUSH2 0x201A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2072 DUP3 PUSH2 0x1A95 JUMP JUMPDEST PUSH2 0x207C DUP2 DUP6 PUSH2 0x205C JUMP JUMPDEST SWAP4 POP PUSH2 0x208C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1AB1 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20A4 DUP3 DUP6 PUSH2 0x2067 JUMP JUMPDEST SWAP2 POP PUSH2 0x20B0 DUP3 DUP5 PUSH2 0x2067 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4F6E6C792061646D696E2063616E207472616E7366657220746F6B656E730000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20F2 PUSH1 0x1E DUP4 PUSH2 0x1AA0 JUMP JUMPDEST SWAP2 POP PUSH2 0x20FD DUP3 PUSH2 0x20BC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2121 DUP2 PUSH2 0x20E5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 0xE LOG2 EXTCODESIZE 0x27 ADDMOD LOG2 0xE4 0x4C 0x4F POP PUSH4 0xDBDD8523 MSTORE CALLCODE KECCAK256 POP SWAP11 PUSH19 0x8F022B7067FE29D935864736F6C6343000814 STOP CALLER PUSH10 0x7066733A2F2F6261666B PUSH19 0x65696779637471653566623435367163667964 PUSH8 0x36706679367A6468 CALLDATASIZE ORIGIN CALLDATASIZE PUSH6 0x69643466357A PUSH15 0x776636796A36726E6A6C7A62713561 0x2F SELFBALANCE PUSH16 0x61744E46542E6A736F6E000000000000 ","sourceMap":"327:2467:23:-:0;;;542:3;513:32;;887:288;;;;;;;;;;937:10;1380:113:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1454:5;1446;:13;;;;;;:::i;:::-;;1479:7;1469;:17;;;;;;:::i;:::-;;1380:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;966:10:23::2;959:4;;:17;;;;;;;;;;;;;;;;;;986:30;992:10;1004:11;;986:5;;;:30;;:::i;:::-;1026:142;1052:11;;1026:142;;;;;;;;;;;;;;;;;:12;;;:142;;:::i;:::-;327:2467:::0;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;9978:327:8:-;10059:1;10045:16;;:2;:16;;;10041:87;;10114:1;10084:33;;;;;;;;;;;:::i;:::-;;;;;;;;10041:87;10137:21;10161:32;10169:2;10173:7;10190:1;10161:7;;;:32;;:::i;:::-;10137:56;;10232:1;10207:27;;:13;:27;;;10203:96;;10285:1;10257:31;;;;;;;;;;;:::i;:::-;;;;;;;;10203:96;10031:274;9978:327;;:::o;1923:167:11:-;2036:9;2014:10;:19;2025:7;2014:19;;;;;;;;;;;:31;;;;;;:::i;:::-;;2060:23;2075:7;2060:23;;;;;;:::i;:::-;;;;;;;;1923:167;;:::o;8861:795:8:-;8947:7;8966:12;8981:17;8990:7;8981:8;;;:17;;:::i;:::-;8966:32;;9074:1;9058:18;;:4;:18;;;9054:86;;9092:37;9109:4;9115;9121:7;9092:16;;;:37;;:::i;:::-;9054:86;9200:1;9184:18;;:4;:18;;;9180:256;;9300:48;9317:1;9321:7;9338:1;9342:5;9300:8;;;:48;;:::i;:::-;9410:1;9391:9;:15;9401:4;9391:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;9180:256;9464:1;9450:16;;:2;:16;;;9446:107;;9527:1;9510:9;:13;9520:2;9510:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;9446:107;9582:2;9563:7;:16;9571:7;9563:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;9619:7;9615:2;9600:27;;9609:4;9600:27;;;;;;;;;;;;9645:4;9638:11;;;8861:795;;;;;:::o;5732:115::-;5798:7;5824;:16;5832:7;5824:16;;;;;;;;;;;;;;;;;;;;;5817:23;;5732:115;;;:::o;1915:249:23:-;2076:15;:13;;;:15;;:::i;:::-;2065:26;;:7;:26;;;2061:97;;2107:40;;;;;;;;;;:::i;:::-;;;;;;;;2061:97;1915:249;;;:::o;14794:662:8:-;14954:9;:31;;;;14983:1;14967:18;;:4;:18;;;;14954:31;14950:460;;;15001:13;15017:22;15031:7;15017:13;;;:22;;:::i;:::-;15001:38;;15183:1;15167:18;;:4;:18;;;;:35;;;;;15198:4;15189:13;;:5;:13;;;;15167:35;:69;;;;;15207:29;15224:5;15231:4;15207:16;;;:29;;:::i;:::-;15206:30;15167:69;15163:142;;;15285:4;15263:27;;;;;;;;;;;:::i;:::-;;;;;;;;15163:142;15323:9;15319:81;;;15377:7;15373:2;15357:28;;15366:5;15357:28;;;;;;;;;;;;15319:81;14987:423;14950:460;15447:2;15420:15;:24;15436:7;15420:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;14794:662;;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;16212:241:8:-;16275:7;16294:13;16310:17;16319:7;16310:8;;;:17;;:::i;:::-;16294:33;;16358:1;16341:19;;:5;:19;;;16337:88;;16406:7;16383:31;;;;;;;;;;;:::i;:::-;;;;;;;;16337:88;16441:5;16434:12;;;16212:241;;;:::o;3927:153::-;4015:4;4038:18;:25;4057:5;4038:25;;;;;;;;;;;;;;;:35;4064:8;4038:35;;;;;;;;;;;;;;;;;;;;;;;;;4031:42;;3927:153;;;;:::o;7:99:26:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;5234:126::-;5271:7;5311:42;5304:5;5300:54;5289:65;;5234:126;;;:::o;5366:96::-;5403:7;5432:24;5450:5;5432:24;:::i;:::-;5421:35;;5366:96;;;:::o;5468:118::-;5555:24;5573:5;5555:24;:::i;:::-;5550:3;5543:37;5468:118;;:::o;5592:222::-;5685:4;5723:2;5712:9;5708:18;5700:26;;5736:71;5804:1;5793:9;5789:17;5780:6;5736:71;:::i;:::-;5592:222;;;;:::o;5820:118::-;5907:24;5925:5;5907:24;:::i;:::-;5902:3;5895:37;5820:118;;:::o;5944:222::-;6037:4;6075:2;6064:9;6060:18;6052:26;;6088:71;6156:1;6145:9;6141:17;6132:6;6088:71;:::i;:::-;5944:222;;;;:::o;6172:169::-;6256:11;6290:6;6285:3;6278:19;6330:4;6325:3;6321:14;6306:29;;6172:169;;;;:::o;6347:180::-;6487:32;6483:1;6475:6;6471:14;6464:56;6347:180;:::o;6533:366::-;6675:3;6696:67;6760:2;6755:3;6696:67;:::i;:::-;6689:74;;6772:93;6861:3;6772:93;:::i;:::-;6890:2;6885:3;6881:12;6874:19;;6533:366;;;:::o;6905:419::-;7071:4;7109:2;7098:9;7094:18;7086:26;;7158:9;7152:4;7148:20;7144:1;7133:9;7129:17;7122:47;7186:131;7312:4;7186:131;:::i;:::-;7178:139;;6905:419;;;:::o;327:2467:23:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_approve_1759":{"entryPoint":2970,"id":1759,"parameterSlots":3,"returnSlots":0},"@_approve_1825":{"entryPoint":5086,"id":1825,"parameterSlots":4,"returnSlots":0},"@_baseURI_1140":{"entryPoint":5661,"id":1140,"parameterSlots":0,"returnSlots":1},"@_checkAuthorized_8077":{"entryPoint":5539,"id":8077,"parameterSlots":3,"returnSlots":0},"@_checkOwner_84":{"entryPoint":2630,"id":84,"parameterSlots":0,"returnSlots":0},"@_getApproved_1326":{"entryPoint":2901,"id":1326,"parameterSlots":1,"returnSlots":1},"@_msgSender_2270":{"entryPoint":2962,"id":2270,"parameterSlots":0,"returnSlots":1},"@_ownerOf_1313":{"entryPoint":5025,"id":1313,"parameterSlots":1,"returnSlots":1},"@_requireOwned_1891":{"entryPoint":2765,"id":1891,"parameterSlots":1,"returnSlots":1},"@_setApprovalForAll_1862":{"entryPoint":3724,"id":1862,"parameterSlots":3,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":3526,"id":146,"parameterSlots":1,"returnSlots":0},"@_update_1505":{"entryPoint":2988,"id":1505,"parameterSlots":3,"returnSlots":1},"@approve_1156":{"entryPoint":1364,"id":1156,"parameterSlots":2,"returnSlots":0},"@balanceOf_1064":{"entryPoint":1732,"id":1064,"parameterSlots":1,"returnSlots":1},"@checkOnERC721Received_2257":{"entryPoint":4091,"id":2257,"parameterSlots":5,"returnSlots":0},"@getApproved_1173":{"entryPoint":1336,"id":1173,"parameterSlots":1,"returnSlots":1},"@getGoatAddress_8054":{"entryPoint":2491,"id":8054,"parameterSlots":0,"returnSlots":1},"@goatTokenId_7980":{"entryPoint":2203,"id":7980,"parameterSlots":0,"returnSlots":0},"@goat_7977":{"entryPoint":1644,"id":7977,"parameterSlots":0,"returnSlots":0},"@isApprovedForAll_1206":{"entryPoint":2209,"id":1206,"parameterSlots":2,"returnSlots":1},"@log10_4954":{"entryPoint":6101,"id":4954,"parameterSlots":1,"returnSlots":1},"@name_1086":{"entryPoint":1190,"id":1086,"parameterSlots":0,"returnSlots":1},"@ownerOf_1077":{"entryPoint":1714,"id":1077,"parameterSlots":1,"returnSlots":1},"@owner_67":{"entryPoint":1938,"id":67,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_98":{"entryPoint":1918,"id":98,"parameterSlots":0,"returnSlots":0},"@safeTransferFrom_1270":{"entryPoint":1682,"id":1270,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_1300":{"entryPoint":2148,"id":1300,"parameterSlots":4,"returnSlots":0},"@setApprovalForAll_1189":{"entryPoint":2126,"id":1189,"parameterSlots":2,"returnSlots":0},"@supportsInterface_1036":{"entryPoint":4799,"id":1036,"parameterSlots":1,"returnSlots":1},"@supportsInterface_2076":{"entryPoint":2533,"id":2076,"parameterSlots":1,"returnSlots":1},"@supportsInterface_3563":{"entryPoint":5789,"id":3563,"parameterSlots":1,"returnSlots":1},"@supportsInterface_8094":{"entryPoint":979,"id":8094,"parameterSlots":1,"returnSlots":1},"@symbol_1095":{"entryPoint":1980,"id":1095,"parameterSlots":0,"returnSlots":1},"@toString_2418":{"entryPoint":5895,"id":2418,"parameterSlots":1,"returnSlots":1},"@tokenURI_1131":{"entryPoint":5684,"id":1131,"parameterSlots":1,"returnSlots":1},"@tokenURI_2133":{"entryPoint":4524,"id":2133,"parameterSlots":1,"returnSlots":1},"@tokenURI_8111":{"entryPoint":2185,"id":8111,"parameterSlots":1,"returnSlots":1},"@transferFrom_1252":{"entryPoint":1386,"id":1252,"parameterSlots":3,"returnSlots":0},"@transferNft_8045":{"entryPoint":997,"id":8045,"parameterSlots":2,"returnSlots":0},"@transferOwnership_126":{"entryPoint":2357,"id":126,"parameterSlots":1,"returnSlots":0},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":7663,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":6720,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":7381,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":6527,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4_fromMemory":{"entryPoint":8218,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":7729,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":7016,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":7271,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":6741,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":7188,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":7775,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":7402,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":7124,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":6548,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":8239,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":7037,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":7082,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":6605,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":8085,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":6892,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":8295,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_343baf082709e93d6ec72c89c1f25cf13509cddee60cd243e06b5ef8eb5199ff_to_t_string_memory_ptr_fromStack":{"entryPoint":8421,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":7316,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":8344,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":7097,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":8142,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed":{"entryPoint":8002,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":6620,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6949,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_343baf082709e93d6ec72c89c1f25cf13509cddee60cd243e06b5ef8eb5199ff__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8456,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":7331,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":7572,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":6440,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":7599,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":8057,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":6805,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":8068,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":6816,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":8284,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":6679,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":6593,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":6460,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":6647,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":6983,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory_with_cleanup":{"entryPoint":7648,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":6833,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":7953,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":7523,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x12":{"entryPoint":8488,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":7906,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":7476,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":7466,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":7471,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":6455,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":6450,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":6875,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_343baf082709e93d6ec72c89c1f25cf13509cddee60cd243e06b5ef8eb5199ff":{"entryPoint":8380,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":6697,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":7358,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":6504,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":6993,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:15393:26","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:26","statements":[{"nodeType":"YulAssignment","src":"57:19:26","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:26","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:26"},"nodeType":"YulFunctionCall","src":"67:9:26"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:26"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:26","type":""}],"src":"7:75:26"},{"body":{"nodeType":"YulBlock","src":"177:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:26"},"nodeType":"YulFunctionCall","src":"187:12:26"},"nodeType":"YulExpressionStatement","src":"187:12:26"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:26"},{"body":{"nodeType":"YulBlock","src":"300:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:26"},"nodeType":"YulFunctionCall","src":"310:12:26"},"nodeType":"YulExpressionStatement","src":"310:12:26"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:26"},{"body":{"nodeType":"YulBlock","src":"378:105:26","statements":[{"nodeType":"YulAssignment","src":"388:89:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"403:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"410:66:26","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"399:3:26"},"nodeType":"YulFunctionCall","src":"399:78:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"388:7:26"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"360:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"370:7:26","type":""}],"src":"334:149:26"},{"body":{"nodeType":"YulBlock","src":"531:78:26","statements":[{"body":{"nodeType":"YulBlock","src":"587:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"596:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"599:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"589:6:26"},"nodeType":"YulFunctionCall","src":"589:12:26"},"nodeType":"YulExpressionStatement","src":"589:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"554:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"578:5:26"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"561:16:26"},"nodeType":"YulFunctionCall","src":"561:23:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"551:2:26"},"nodeType":"YulFunctionCall","src":"551:34:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"544:6:26"},"nodeType":"YulFunctionCall","src":"544:42:26"},"nodeType":"YulIf","src":"541:62:26"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"524:5:26","type":""}],"src":"489:120:26"},{"body":{"nodeType":"YulBlock","src":"666:86:26","statements":[{"nodeType":"YulAssignment","src":"676:29:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"698:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"685:12:26"},"nodeType":"YulFunctionCall","src":"685:20:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"676:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"740:5:26"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"714:25:26"},"nodeType":"YulFunctionCall","src":"714:32:26"},"nodeType":"YulExpressionStatement","src":"714:32:26"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"644:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"652:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"660:5:26","type":""}],"src":"615:137:26"},{"body":{"nodeType":"YulBlock","src":"823:262:26","statements":[{"body":{"nodeType":"YulBlock","src":"869:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"871:77:26"},"nodeType":"YulFunctionCall","src":"871:79:26"},"nodeType":"YulExpressionStatement","src":"871:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"844:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"853:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"840:3:26"},"nodeType":"YulFunctionCall","src":"840:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"865:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"836:3:26"},"nodeType":"YulFunctionCall","src":"836:32:26"},"nodeType":"YulIf","src":"833:119:26"},{"nodeType":"YulBlock","src":"962:116:26","statements":[{"nodeType":"YulVariableDeclaration","src":"977:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"991:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"981:6:26","type":""}]},{"nodeType":"YulAssignment","src":"1006:62:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1040:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"1051:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1036:3:26"},"nodeType":"YulFunctionCall","src":"1036:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1060:7:26"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"1016:19:26"},"nodeType":"YulFunctionCall","src":"1016:52:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1006:6:26"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"793:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"804:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"816:6:26","type":""}],"src":"758:327:26"},{"body":{"nodeType":"YulBlock","src":"1133:48:26","statements":[{"nodeType":"YulAssignment","src":"1143:32:26","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1168:5:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1161:6:26"},"nodeType":"YulFunctionCall","src":"1161:13:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1154:6:26"},"nodeType":"YulFunctionCall","src":"1154:21:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1143:7:26"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1115:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1125:7:26","type":""}],"src":"1091:90:26"},{"body":{"nodeType":"YulBlock","src":"1246:50:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1263:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1283:5:26"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"1268:14:26"},"nodeType":"YulFunctionCall","src":"1268:21:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1256:6:26"},"nodeType":"YulFunctionCall","src":"1256:34:26"},"nodeType":"YulExpressionStatement","src":"1256:34:26"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1234:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1241:3:26","type":""}],"src":"1187:109:26"},{"body":{"nodeType":"YulBlock","src":"1394:118:26","statements":[{"nodeType":"YulAssignment","src":"1404:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1416:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"1427:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1412:3:26"},"nodeType":"YulFunctionCall","src":"1412:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1404:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1478:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1491:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"1502:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1487:3:26"},"nodeType":"YulFunctionCall","src":"1487:17:26"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"1440:37:26"},"nodeType":"YulFunctionCall","src":"1440:65:26"},"nodeType":"YulExpressionStatement","src":"1440:65:26"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1366:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1378:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1389:4:26","type":""}],"src":"1302:210:26"},{"body":{"nodeType":"YulBlock","src":"1563:81:26","statements":[{"nodeType":"YulAssignment","src":"1573:65:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1588:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"1595:42:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1584:3:26"},"nodeType":"YulFunctionCall","src":"1584:54:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1573:7:26"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1545:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1555:7:26","type":""}],"src":"1518:126:26"},{"body":{"nodeType":"YulBlock","src":"1695:51:26","statements":[{"nodeType":"YulAssignment","src":"1705:35:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1734:5:26"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"1716:17:26"},"nodeType":"YulFunctionCall","src":"1716:24:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1705:7:26"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1677:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1687:7:26","type":""}],"src":"1650:96:26"},{"body":{"nodeType":"YulBlock","src":"1795:79:26","statements":[{"body":{"nodeType":"YulBlock","src":"1852:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1861:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1864:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1854:6:26"},"nodeType":"YulFunctionCall","src":"1854:12:26"},"nodeType":"YulExpressionStatement","src":"1854:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1818:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1843:5:26"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1825:17:26"},"nodeType":"YulFunctionCall","src":"1825:24:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1815:2:26"},"nodeType":"YulFunctionCall","src":"1815:35:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1808:6:26"},"nodeType":"YulFunctionCall","src":"1808:43:26"},"nodeType":"YulIf","src":"1805:63:26"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1788:5:26","type":""}],"src":"1752:122:26"},{"body":{"nodeType":"YulBlock","src":"1932:87:26","statements":[{"nodeType":"YulAssignment","src":"1942:29:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1964:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1951:12:26"},"nodeType":"YulFunctionCall","src":"1951:20:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1942:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2007:5:26"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"1980:26:26"},"nodeType":"YulFunctionCall","src":"1980:33:26"},"nodeType":"YulExpressionStatement","src":"1980:33:26"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1910:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"1918:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1926:5:26","type":""}],"src":"1880:139:26"},{"body":{"nodeType":"YulBlock","src":"2108:391:26","statements":[{"body":{"nodeType":"YulBlock","src":"2154:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2156:77:26"},"nodeType":"YulFunctionCall","src":"2156:79:26"},"nodeType":"YulExpressionStatement","src":"2156:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2129:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"2138:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2125:3:26"},"nodeType":"YulFunctionCall","src":"2125:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"2150:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2121:3:26"},"nodeType":"YulFunctionCall","src":"2121:32:26"},"nodeType":"YulIf","src":"2118:119:26"},{"nodeType":"YulBlock","src":"2247:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"2262:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"2276:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2266:6:26","type":""}]},{"nodeType":"YulAssignment","src":"2291:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2326:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"2337:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2322:3:26"},"nodeType":"YulFunctionCall","src":"2322:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2346:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2301:20:26"},"nodeType":"YulFunctionCall","src":"2301:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2291:6:26"}]}]},{"nodeType":"YulBlock","src":"2374:118:26","statements":[{"nodeType":"YulVariableDeclaration","src":"2389:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"2403:2:26","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2393:6:26","type":""}]},{"nodeType":"YulAssignment","src":"2419:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2454:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"2465:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2450:3:26"},"nodeType":"YulFunctionCall","src":"2450:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2474:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2429:20:26"},"nodeType":"YulFunctionCall","src":"2429:53:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2419:6:26"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2070:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2081:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2093:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2101:6:26","type":""}],"src":"2025:474:26"},{"body":{"nodeType":"YulBlock","src":"2564:40:26","statements":[{"nodeType":"YulAssignment","src":"2575:22:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2591:5:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2585:5:26"},"nodeType":"YulFunctionCall","src":"2585:12:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2575:6:26"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2547:5:26","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"2557:6:26","type":""}],"src":"2505:99:26"},{"body":{"nodeType":"YulBlock","src":"2706:73:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2723:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"2728:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2716:6:26"},"nodeType":"YulFunctionCall","src":"2716:19:26"},"nodeType":"YulExpressionStatement","src":"2716:19:26"},{"nodeType":"YulAssignment","src":"2744:29:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2763:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"2768:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2759:3:26"},"nodeType":"YulFunctionCall","src":"2759:14:26"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"2744:11:26"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2678:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"2683:6:26","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"2694:11:26","type":""}],"src":"2610:169:26"},{"body":{"nodeType":"YulBlock","src":"2847:184:26","statements":[{"nodeType":"YulVariableDeclaration","src":"2857:10:26","value":{"kind":"number","nodeType":"YulLiteral","src":"2866:1:26","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"2861:1:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"2926:63:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2951:3:26"},{"name":"i","nodeType":"YulIdentifier","src":"2956:1:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2947:3:26"},"nodeType":"YulFunctionCall","src":"2947:11:26"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2970:3:26"},{"name":"i","nodeType":"YulIdentifier","src":"2975:1:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2966:3:26"},"nodeType":"YulFunctionCall","src":"2966:11:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2960:5:26"},"nodeType":"YulFunctionCall","src":"2960:18:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2940:6:26"},"nodeType":"YulFunctionCall","src":"2940:39:26"},"nodeType":"YulExpressionStatement","src":"2940:39:26"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2887:1:26"},{"name":"length","nodeType":"YulIdentifier","src":"2890:6:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2884:2:26"},"nodeType":"YulFunctionCall","src":"2884:13:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2898:19:26","statements":[{"nodeType":"YulAssignment","src":"2900:15:26","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2909:1:26"},{"kind":"number","nodeType":"YulLiteral","src":"2912:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2905:3:26"},"nodeType":"YulFunctionCall","src":"2905:10:26"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"2900:1:26"}]}]},"pre":{"nodeType":"YulBlock","src":"2880:3:26","statements":[]},"src":"2876:113:26"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3009:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"3014:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3005:3:26"},"nodeType":"YulFunctionCall","src":"3005:16:26"},{"kind":"number","nodeType":"YulLiteral","src":"3023:1:26","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2998:6:26"},"nodeType":"YulFunctionCall","src":"2998:27:26"},"nodeType":"YulExpressionStatement","src":"2998:27:26"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"2829:3:26","type":""},{"name":"dst","nodeType":"YulTypedName","src":"2834:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"2839:6:26","type":""}],"src":"2785:246:26"},{"body":{"nodeType":"YulBlock","src":"3085:54:26","statements":[{"nodeType":"YulAssignment","src":"3095:38:26","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3113:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"3120:2:26","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3109:3:26"},"nodeType":"YulFunctionCall","src":"3109:14:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3129:2:26","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3125:3:26"},"nodeType":"YulFunctionCall","src":"3125:7:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3105:3:26"},"nodeType":"YulFunctionCall","src":"3105:28:26"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3095:6:26"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3068:5:26","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"3078:6:26","type":""}],"src":"3037:102:26"},{"body":{"nodeType":"YulBlock","src":"3237:285:26","statements":[{"nodeType":"YulVariableDeclaration","src":"3247:53:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3294:5:26"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"3261:32:26"},"nodeType":"YulFunctionCall","src":"3261:39:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"3251:6:26","type":""}]},{"nodeType":"YulAssignment","src":"3309:78:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3375:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"3380:6:26"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3316:58:26"},"nodeType":"YulFunctionCall","src":"3316:71:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3309:3:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3435:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"3442:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3431:3:26"},"nodeType":"YulFunctionCall","src":"3431:16:26"},{"name":"pos","nodeType":"YulIdentifier","src":"3449:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"3454:6:26"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"3396:34:26"},"nodeType":"YulFunctionCall","src":"3396:65:26"},"nodeType":"YulExpressionStatement","src":"3396:65:26"},{"nodeType":"YulAssignment","src":"3470:46:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3481:3:26"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3508:6:26"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"3486:21:26"},"nodeType":"YulFunctionCall","src":"3486:29:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3477:3:26"},"nodeType":"YulFunctionCall","src":"3477:39:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3470:3:26"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3218:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3225:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3233:3:26","type":""}],"src":"3145:377:26"},{"body":{"nodeType":"YulBlock","src":"3646:195:26","statements":[{"nodeType":"YulAssignment","src":"3656:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3668:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"3679:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3664:3:26"},"nodeType":"YulFunctionCall","src":"3664:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3656:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3703:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"3714:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3699:3:26"},"nodeType":"YulFunctionCall","src":"3699:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3722:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"3728:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3718:3:26"},"nodeType":"YulFunctionCall","src":"3718:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3692:6:26"},"nodeType":"YulFunctionCall","src":"3692:47:26"},"nodeType":"YulExpressionStatement","src":"3692:47:26"},{"nodeType":"YulAssignment","src":"3748:86:26","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3820:6:26"},{"name":"tail","nodeType":"YulIdentifier","src":"3829:4:26"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3756:63:26"},"nodeType":"YulFunctionCall","src":"3756:78:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3748:4:26"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3618:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3630:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3641:4:26","type":""}],"src":"3528:313:26"},{"body":{"nodeType":"YulBlock","src":"3892:32:26","statements":[{"nodeType":"YulAssignment","src":"3902:16:26","value":{"name":"value","nodeType":"YulIdentifier","src":"3913:5:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3902:7:26"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3874:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3884:7:26","type":""}],"src":"3847:77:26"},{"body":{"nodeType":"YulBlock","src":"3973:79:26","statements":[{"body":{"nodeType":"YulBlock","src":"4030:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4039:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4042:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4032:6:26"},"nodeType":"YulFunctionCall","src":"4032:12:26"},"nodeType":"YulExpressionStatement","src":"4032:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3996:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4021:5:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"4003:17:26"},"nodeType":"YulFunctionCall","src":"4003:24:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3993:2:26"},"nodeType":"YulFunctionCall","src":"3993:35:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3986:6:26"},"nodeType":"YulFunctionCall","src":"3986:43:26"},"nodeType":"YulIf","src":"3983:63:26"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3966:5:26","type":""}],"src":"3930:122:26"},{"body":{"nodeType":"YulBlock","src":"4110:87:26","statements":[{"nodeType":"YulAssignment","src":"4120:29:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4142:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4129:12:26"},"nodeType":"YulFunctionCall","src":"4129:20:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4120:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4185:5:26"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"4158:26:26"},"nodeType":"YulFunctionCall","src":"4158:33:26"},"nodeType":"YulExpressionStatement","src":"4158:33:26"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4088:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"4096:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"4104:5:26","type":""}],"src":"4058:139:26"},{"body":{"nodeType":"YulBlock","src":"4269:263:26","statements":[{"body":{"nodeType":"YulBlock","src":"4315:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4317:77:26"},"nodeType":"YulFunctionCall","src":"4317:79:26"},"nodeType":"YulExpressionStatement","src":"4317:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4290:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"4299:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4286:3:26"},"nodeType":"YulFunctionCall","src":"4286:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"4311:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4282:3:26"},"nodeType":"YulFunctionCall","src":"4282:32:26"},"nodeType":"YulIf","src":"4279:119:26"},{"nodeType":"YulBlock","src":"4408:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"4423:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"4437:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4427:6:26","type":""}]},{"nodeType":"YulAssignment","src":"4452:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4487:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"4498:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4483:3:26"},"nodeType":"YulFunctionCall","src":"4483:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4507:7:26"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4462:20:26"},"nodeType":"YulFunctionCall","src":"4462:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4452:6:26"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4239:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4250:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4262:6:26","type":""}],"src":"4203:329:26"},{"body":{"nodeType":"YulBlock","src":"4603:53:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4620:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4643:5:26"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"4625:17:26"},"nodeType":"YulFunctionCall","src":"4625:24:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4613:6:26"},"nodeType":"YulFunctionCall","src":"4613:37:26"},"nodeType":"YulExpressionStatement","src":"4613:37:26"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4591:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4598:3:26","type":""}],"src":"4538:118:26"},{"body":{"nodeType":"YulBlock","src":"4760:124:26","statements":[{"nodeType":"YulAssignment","src":"4770:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4782:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"4793:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4778:3:26"},"nodeType":"YulFunctionCall","src":"4778:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4770:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4850:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4863:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"4874:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4859:3:26"},"nodeType":"YulFunctionCall","src":"4859:17:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4806:43:26"},"nodeType":"YulFunctionCall","src":"4806:71:26"},"nodeType":"YulExpressionStatement","src":"4806:71:26"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4732:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4744:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4755:4:26","type":""}],"src":"4662:222:26"},{"body":{"nodeType":"YulBlock","src":"4973:391:26","statements":[{"body":{"nodeType":"YulBlock","src":"5019:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5021:77:26"},"nodeType":"YulFunctionCall","src":"5021:79:26"},"nodeType":"YulExpressionStatement","src":"5021:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4994:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"5003:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4990:3:26"},"nodeType":"YulFunctionCall","src":"4990:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"5015:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4986:3:26"},"nodeType":"YulFunctionCall","src":"4986:32:26"},"nodeType":"YulIf","src":"4983:119:26"},{"nodeType":"YulBlock","src":"5112:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"5127:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"5141:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5131:6:26","type":""}]},{"nodeType":"YulAssignment","src":"5156:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5191:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"5202:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5187:3:26"},"nodeType":"YulFunctionCall","src":"5187:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5211:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5166:20:26"},"nodeType":"YulFunctionCall","src":"5166:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5156:6:26"}]}]},{"nodeType":"YulBlock","src":"5239:118:26","statements":[{"nodeType":"YulVariableDeclaration","src":"5254:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"5268:2:26","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5258:6:26","type":""}]},{"nodeType":"YulAssignment","src":"5284:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5319:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"5330:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5315:3:26"},"nodeType":"YulFunctionCall","src":"5315:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5339:7:26"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5294:20:26"},"nodeType":"YulFunctionCall","src":"5294:53:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5284:6:26"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4935:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4946:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4958:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4966:6:26","type":""}],"src":"4890:474:26"},{"body":{"nodeType":"YulBlock","src":"5470:519:26","statements":[{"body":{"nodeType":"YulBlock","src":"5516:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5518:77:26"},"nodeType":"YulFunctionCall","src":"5518:79:26"},"nodeType":"YulExpressionStatement","src":"5518:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5491:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"5500:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5487:3:26"},"nodeType":"YulFunctionCall","src":"5487:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"5512:2:26","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5483:3:26"},"nodeType":"YulFunctionCall","src":"5483:32:26"},"nodeType":"YulIf","src":"5480:119:26"},{"nodeType":"YulBlock","src":"5609:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"5624:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"5638:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5628:6:26","type":""}]},{"nodeType":"YulAssignment","src":"5653:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5688:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"5699:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5684:3:26"},"nodeType":"YulFunctionCall","src":"5684:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5708:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5663:20:26"},"nodeType":"YulFunctionCall","src":"5663:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5653:6:26"}]}]},{"nodeType":"YulBlock","src":"5736:118:26","statements":[{"nodeType":"YulVariableDeclaration","src":"5751:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"5765:2:26","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5755:6:26","type":""}]},{"nodeType":"YulAssignment","src":"5781:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5816:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"5827:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5812:3:26"},"nodeType":"YulFunctionCall","src":"5812:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5836:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5791:20:26"},"nodeType":"YulFunctionCall","src":"5791:53:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5781:6:26"}]}]},{"nodeType":"YulBlock","src":"5864:118:26","statements":[{"nodeType":"YulVariableDeclaration","src":"5879:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"5893:2:26","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5883:6:26","type":""}]},{"nodeType":"YulAssignment","src":"5909:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5944:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"5955:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5940:3:26"},"nodeType":"YulFunctionCall","src":"5940:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5964:7:26"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5919:20:26"},"nodeType":"YulFunctionCall","src":"5919:53:26"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5909:6:26"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5424:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5435:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5447:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5455:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5463:6:26","type":""}],"src":"5370:619:26"},{"body":{"nodeType":"YulBlock","src":"6061:263:26","statements":[{"body":{"nodeType":"YulBlock","src":"6107:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6109:77:26"},"nodeType":"YulFunctionCall","src":"6109:79:26"},"nodeType":"YulExpressionStatement","src":"6109:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6082:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"6091:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6078:3:26"},"nodeType":"YulFunctionCall","src":"6078:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"6103:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6074:3:26"},"nodeType":"YulFunctionCall","src":"6074:32:26"},"nodeType":"YulIf","src":"6071:119:26"},{"nodeType":"YulBlock","src":"6200:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"6215:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"6229:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6219:6:26","type":""}]},{"nodeType":"YulAssignment","src":"6244:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6279:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"6290:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6275:3:26"},"nodeType":"YulFunctionCall","src":"6275:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6299:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6254:20:26"},"nodeType":"YulFunctionCall","src":"6254:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6244:6:26"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6031:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6042:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6054:6:26","type":""}],"src":"5995:329:26"},{"body":{"nodeType":"YulBlock","src":"6395:53:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6412:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6435:5:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6417:17:26"},"nodeType":"YulFunctionCall","src":"6417:24:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6405:6:26"},"nodeType":"YulFunctionCall","src":"6405:37:26"},"nodeType":"YulExpressionStatement","src":"6405:37:26"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6383:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6390:3:26","type":""}],"src":"6330:118:26"},{"body":{"nodeType":"YulBlock","src":"6552:124:26","statements":[{"nodeType":"YulAssignment","src":"6562:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6574:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"6585:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6570:3:26"},"nodeType":"YulFunctionCall","src":"6570:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6562:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6642:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6655:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"6666:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6651:3:26"},"nodeType":"YulFunctionCall","src":"6651:17:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"6598:43:26"},"nodeType":"YulFunctionCall","src":"6598:71:26"},"nodeType":"YulExpressionStatement","src":"6598:71:26"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6524:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6536:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6547:4:26","type":""}],"src":"6454:222:26"},{"body":{"nodeType":"YulBlock","src":"6722:76:26","statements":[{"body":{"nodeType":"YulBlock","src":"6776:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6785:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6788:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6778:6:26"},"nodeType":"YulFunctionCall","src":"6778:12:26"},"nodeType":"YulExpressionStatement","src":"6778:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6745:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6767:5:26"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"6752:14:26"},"nodeType":"YulFunctionCall","src":"6752:21:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6742:2:26"},"nodeType":"YulFunctionCall","src":"6742:32:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6735:6:26"},"nodeType":"YulFunctionCall","src":"6735:40:26"},"nodeType":"YulIf","src":"6732:60:26"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6715:5:26","type":""}],"src":"6682:116:26"},{"body":{"nodeType":"YulBlock","src":"6853:84:26","statements":[{"nodeType":"YulAssignment","src":"6863:29:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6885:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6872:12:26"},"nodeType":"YulFunctionCall","src":"6872:20:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6863:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6925:5:26"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"6901:23:26"},"nodeType":"YulFunctionCall","src":"6901:30:26"},"nodeType":"YulExpressionStatement","src":"6901:30:26"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6831:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"6839:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"6847:5:26","type":""}],"src":"6804:133:26"},{"body":{"nodeType":"YulBlock","src":"7023:388:26","statements":[{"body":{"nodeType":"YulBlock","src":"7069:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7071:77:26"},"nodeType":"YulFunctionCall","src":"7071:79:26"},"nodeType":"YulExpressionStatement","src":"7071:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7044:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"7053:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7040:3:26"},"nodeType":"YulFunctionCall","src":"7040:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"7065:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7036:3:26"},"nodeType":"YulFunctionCall","src":"7036:32:26"},"nodeType":"YulIf","src":"7033:119:26"},{"nodeType":"YulBlock","src":"7162:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"7177:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"7191:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7181:6:26","type":""}]},{"nodeType":"YulAssignment","src":"7206:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7241:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"7252:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7237:3:26"},"nodeType":"YulFunctionCall","src":"7237:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7261:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"7216:20:26"},"nodeType":"YulFunctionCall","src":"7216:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7206:6:26"}]}]},{"nodeType":"YulBlock","src":"7289:115:26","statements":[{"nodeType":"YulVariableDeclaration","src":"7304:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"7318:2:26","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7308:6:26","type":""}]},{"nodeType":"YulAssignment","src":"7334:60:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7366:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"7377:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7362:3:26"},"nodeType":"YulFunctionCall","src":"7362:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7386:7:26"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"7344:17:26"},"nodeType":"YulFunctionCall","src":"7344:50:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7334:6:26"}]}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6985:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6996:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7008:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7016:6:26","type":""}],"src":"6943:468:26"},{"body":{"nodeType":"YulBlock","src":"7506:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7523:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7526:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7516:6:26"},"nodeType":"YulFunctionCall","src":"7516:12:26"},"nodeType":"YulExpressionStatement","src":"7516:12:26"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"7417:117:26"},{"body":{"nodeType":"YulBlock","src":"7629:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7646:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7649:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7639:6:26"},"nodeType":"YulFunctionCall","src":"7639:12:26"},"nodeType":"YulExpressionStatement","src":"7639:12:26"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"7540:117:26"},{"body":{"nodeType":"YulBlock","src":"7691:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7708:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7711:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7701:6:26"},"nodeType":"YulFunctionCall","src":"7701:88:26"},"nodeType":"YulExpressionStatement","src":"7701:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7805:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7808:4:26","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7798:6:26"},"nodeType":"YulFunctionCall","src":"7798:15:26"},"nodeType":"YulExpressionStatement","src":"7798:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7829:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7832:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7822:6:26"},"nodeType":"YulFunctionCall","src":"7822:15:26"},"nodeType":"YulExpressionStatement","src":"7822:15:26"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"7663:180:26"},{"body":{"nodeType":"YulBlock","src":"7892:238:26","statements":[{"nodeType":"YulVariableDeclaration","src":"7902:58:26","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7924:6:26"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"7954:4:26"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"7932:21:26"},"nodeType":"YulFunctionCall","src":"7932:27:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7920:3:26"},"nodeType":"YulFunctionCall","src":"7920:40:26"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"7906:10:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"8071:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"8073:16:26"},"nodeType":"YulFunctionCall","src":"8073:18:26"},"nodeType":"YulExpressionStatement","src":"8073:18:26"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"8014:10:26"},{"kind":"number","nodeType":"YulLiteral","src":"8026:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8011:2:26"},"nodeType":"YulFunctionCall","src":"8011:34:26"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"8050:10:26"},{"name":"memPtr","nodeType":"YulIdentifier","src":"8062:6:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8047:2:26"},"nodeType":"YulFunctionCall","src":"8047:22:26"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"8008:2:26"},"nodeType":"YulFunctionCall","src":"8008:62:26"},"nodeType":"YulIf","src":"8005:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8109:2:26","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"8113:10:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8102:6:26"},"nodeType":"YulFunctionCall","src":"8102:22:26"},"nodeType":"YulExpressionStatement","src":"8102:22:26"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"7878:6:26","type":""},{"name":"size","nodeType":"YulTypedName","src":"7886:4:26","type":""}],"src":"7849:281:26"},{"body":{"nodeType":"YulBlock","src":"8177:88:26","statements":[{"nodeType":"YulAssignment","src":"8187:30:26","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"8197:18:26"},"nodeType":"YulFunctionCall","src":"8197:20:26"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8187:6:26"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8246:6:26"},{"name":"size","nodeType":"YulIdentifier","src":"8254:4:26"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"8226:19:26"},"nodeType":"YulFunctionCall","src":"8226:33:26"},"nodeType":"YulExpressionStatement","src":"8226:33:26"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"8161:4:26","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"8170:6:26","type":""}],"src":"8136:129:26"},{"body":{"nodeType":"YulBlock","src":"8337:241:26","statements":[{"body":{"nodeType":"YulBlock","src":"8442:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"8444:16:26"},"nodeType":"YulFunctionCall","src":"8444:18:26"},"nodeType":"YulExpressionStatement","src":"8444:18:26"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8414:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"8422:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8411:2:26"},"nodeType":"YulFunctionCall","src":"8411:30:26"},"nodeType":"YulIf","src":"8408:56:26"},{"nodeType":"YulAssignment","src":"8474:37:26","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8504:6:26"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"8482:21:26"},"nodeType":"YulFunctionCall","src":"8482:29:26"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"8474:4:26"}]},{"nodeType":"YulAssignment","src":"8548:23:26","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"8560:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"8566:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8556:3:26"},"nodeType":"YulFunctionCall","src":"8556:15:26"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"8548:4:26"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"8321:6:26","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"8332:4:26","type":""}],"src":"8271:307:26"},{"body":{"nodeType":"YulBlock","src":"8648:82:26","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8671:3:26"},{"name":"src","nodeType":"YulIdentifier","src":"8676:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"8681:6:26"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"8658:12:26"},"nodeType":"YulFunctionCall","src":"8658:30:26"},"nodeType":"YulExpressionStatement","src":"8658:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8708:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"8713:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8704:3:26"},"nodeType":"YulFunctionCall","src":"8704:16:26"},{"kind":"number","nodeType":"YulLiteral","src":"8722:1:26","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8697:6:26"},"nodeType":"YulFunctionCall","src":"8697:27:26"},"nodeType":"YulExpressionStatement","src":"8697:27:26"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"8630:3:26","type":""},{"name":"dst","nodeType":"YulTypedName","src":"8635:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"8640:6:26","type":""}],"src":"8584:146:26"},{"body":{"nodeType":"YulBlock","src":"8819:340:26","statements":[{"nodeType":"YulAssignment","src":"8829:74:26","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8895:6:26"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"8854:40:26"},"nodeType":"YulFunctionCall","src":"8854:48:26"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"8838:15:26"},"nodeType":"YulFunctionCall","src":"8838:65:26"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"8829:5:26"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"8919:5:26"},{"name":"length","nodeType":"YulIdentifier","src":"8926:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8912:6:26"},"nodeType":"YulFunctionCall","src":"8912:21:26"},"nodeType":"YulExpressionStatement","src":"8912:21:26"},{"nodeType":"YulVariableDeclaration","src":"8942:27:26","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"8957:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"8964:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8953:3:26"},"nodeType":"YulFunctionCall","src":"8953:16:26"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"8946:3:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"9007:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"9009:77:26"},"nodeType":"YulFunctionCall","src":"9009:79:26"},"nodeType":"YulExpressionStatement","src":"9009:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8988:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"8993:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8984:3:26"},"nodeType":"YulFunctionCall","src":"8984:16:26"},{"name":"end","nodeType":"YulIdentifier","src":"9002:3:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8981:2:26"},"nodeType":"YulFunctionCall","src":"8981:25:26"},"nodeType":"YulIf","src":"8978:112:26"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9136:3:26"},{"name":"dst","nodeType":"YulIdentifier","src":"9141:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"9146:6:26"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"9099:36:26"},"nodeType":"YulFunctionCall","src":"9099:54:26"},"nodeType":"YulExpressionStatement","src":"9099:54:26"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"8792:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"8797:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"8805:3:26","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"8813:5:26","type":""}],"src":"8736:423:26"},{"body":{"nodeType":"YulBlock","src":"9239:277:26","statements":[{"body":{"nodeType":"YulBlock","src":"9288:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"9290:77:26"},"nodeType":"YulFunctionCall","src":"9290:79:26"},"nodeType":"YulExpressionStatement","src":"9290:79:26"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9267:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"9275:4:26","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9263:3:26"},"nodeType":"YulFunctionCall","src":"9263:17:26"},{"name":"end","nodeType":"YulIdentifier","src":"9282:3:26"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9259:3:26"},"nodeType":"YulFunctionCall","src":"9259:27:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9252:6:26"},"nodeType":"YulFunctionCall","src":"9252:35:26"},"nodeType":"YulIf","src":"9249:122:26"},{"nodeType":"YulVariableDeclaration","src":"9380:34:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9407:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9394:12:26"},"nodeType":"YulFunctionCall","src":"9394:20:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"9384:6:26","type":""}]},{"nodeType":"YulAssignment","src":"9423:87:26","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9483:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"9491:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9479:3:26"},"nodeType":"YulFunctionCall","src":"9479:17:26"},{"name":"length","nodeType":"YulIdentifier","src":"9498:6:26"},{"name":"end","nodeType":"YulIdentifier","src":"9506:3:26"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"9432:46:26"},"nodeType":"YulFunctionCall","src":"9432:78:26"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"9423:5:26"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"9217:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"9225:3:26","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"9233:5:26","type":""}],"src":"9178:338:26"},{"body":{"nodeType":"YulBlock","src":"9648:817:26","statements":[{"body":{"nodeType":"YulBlock","src":"9695:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"9697:77:26"},"nodeType":"YulFunctionCall","src":"9697:79:26"},"nodeType":"YulExpressionStatement","src":"9697:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9669:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"9678:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9665:3:26"},"nodeType":"YulFunctionCall","src":"9665:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"9690:3:26","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9661:3:26"},"nodeType":"YulFunctionCall","src":"9661:33:26"},"nodeType":"YulIf","src":"9658:120:26"},{"nodeType":"YulBlock","src":"9788:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"9803:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"9817:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9807:6:26","type":""}]},{"nodeType":"YulAssignment","src":"9832:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9867:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"9878:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9863:3:26"},"nodeType":"YulFunctionCall","src":"9863:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9887:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"9842:20:26"},"nodeType":"YulFunctionCall","src":"9842:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9832:6:26"}]}]},{"nodeType":"YulBlock","src":"9915:118:26","statements":[{"nodeType":"YulVariableDeclaration","src":"9930:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"9944:2:26","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9934:6:26","type":""}]},{"nodeType":"YulAssignment","src":"9960:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9995:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"10006:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9991:3:26"},"nodeType":"YulFunctionCall","src":"9991:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10015:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"9970:20:26"},"nodeType":"YulFunctionCall","src":"9970:53:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"9960:6:26"}]}]},{"nodeType":"YulBlock","src":"10043:118:26","statements":[{"nodeType":"YulVariableDeclaration","src":"10058:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"10072:2:26","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10062:6:26","type":""}]},{"nodeType":"YulAssignment","src":"10088:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10123:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"10134:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10119:3:26"},"nodeType":"YulFunctionCall","src":"10119:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10143:7:26"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"10098:20:26"},"nodeType":"YulFunctionCall","src":"10098:53:26"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"10088:6:26"}]}]},{"nodeType":"YulBlock","src":"10171:287:26","statements":[{"nodeType":"YulVariableDeclaration","src":"10186:46:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10217:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"10228:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10213:3:26"},"nodeType":"YulFunctionCall","src":"10213:18:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10200:12:26"},"nodeType":"YulFunctionCall","src":"10200:32:26"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10190:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"10279:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"10281:77:26"},"nodeType":"YulFunctionCall","src":"10281:79:26"},"nodeType":"YulExpressionStatement","src":"10281:79:26"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10251:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"10259:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10248:2:26"},"nodeType":"YulFunctionCall","src":"10248:30:26"},"nodeType":"YulIf","src":"10245:117:26"},{"nodeType":"YulAssignment","src":"10376:72:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10420:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"10431:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10416:3:26"},"nodeType":"YulFunctionCall","src":"10416:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10440:7:26"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"10386:29:26"},"nodeType":"YulFunctionCall","src":"10386:62:26"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"10376:6:26"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9594:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9605:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9617:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9625:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9633:6:26","type":""},{"name":"value3","nodeType":"YulTypedName","src":"9641:6:26","type":""}],"src":"9522:943:26"},{"body":{"nodeType":"YulBlock","src":"10499:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10516:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10519:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10509:6:26"},"nodeType":"YulFunctionCall","src":"10509:88:26"},"nodeType":"YulExpressionStatement","src":"10509:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10613:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"10616:4:26","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10606:6:26"},"nodeType":"YulFunctionCall","src":"10606:15:26"},"nodeType":"YulExpressionStatement","src":"10606:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10637:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10640:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10630:6:26"},"nodeType":"YulFunctionCall","src":"10630:15:26"},"nodeType":"YulExpressionStatement","src":"10630:15:26"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"10471:180:26"},{"body":{"nodeType":"YulBlock","src":"10708:269:26","statements":[{"nodeType":"YulAssignment","src":"10718:22:26","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"10732:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"10738:1:26","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"10728:3:26"},"nodeType":"YulFunctionCall","src":"10728:12:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"10718:6:26"}]},{"nodeType":"YulVariableDeclaration","src":"10749:38:26","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"10779:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"10785:1:26","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10775:3:26"},"nodeType":"YulFunctionCall","src":"10775:12:26"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"10753:18:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"10826:51:26","statements":[{"nodeType":"YulAssignment","src":"10840:27:26","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10854:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"10862:4:26","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10850:3:26"},"nodeType":"YulFunctionCall","src":"10850:17:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"10840:6:26"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"10806:18:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10799:6:26"},"nodeType":"YulFunctionCall","src":"10799:26:26"},"nodeType":"YulIf","src":"10796:81:26"},{"body":{"nodeType":"YulBlock","src":"10929:42:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"10943:16:26"},"nodeType":"YulFunctionCall","src":"10943:18:26"},"nodeType":"YulExpressionStatement","src":"10943:18:26"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"10893:18:26"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10916:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"10924:2:26","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10913:2:26"},"nodeType":"YulFunctionCall","src":"10913:14:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"10890:2:26"},"nodeType":"YulFunctionCall","src":"10890:38:26"},"nodeType":"YulIf","src":"10887:84:26"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"10692:4:26","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"10701:6:26","type":""}],"src":"10657:320:26"},{"body":{"nodeType":"YulBlock","src":"11137:288:26","statements":[{"nodeType":"YulAssignment","src":"11147:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11159:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"11170:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11155:3:26"},"nodeType":"YulFunctionCall","src":"11155:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11147:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11227:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11240:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"11251:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11236:3:26"},"nodeType":"YulFunctionCall","src":"11236:17:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"11183:43:26"},"nodeType":"YulFunctionCall","src":"11183:71:26"},"nodeType":"YulExpressionStatement","src":"11183:71:26"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"11308:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11321:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"11332:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11317:3:26"},"nodeType":"YulFunctionCall","src":"11317:18:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"11264:43:26"},"nodeType":"YulFunctionCall","src":"11264:72:26"},"nodeType":"YulExpressionStatement","src":"11264:72:26"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"11390:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11403:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"11414:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11399:3:26"},"nodeType":"YulFunctionCall","src":"11399:18:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"11346:43:26"},"nodeType":"YulFunctionCall","src":"11346:72:26"},"nodeType":"YulExpressionStatement","src":"11346:72:26"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11093:9:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11105:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11113:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11121:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11132:4:26","type":""}],"src":"10983:442:26"},{"body":{"nodeType":"YulBlock","src":"11489:40:26","statements":[{"nodeType":"YulAssignment","src":"11500:22:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11516:5:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11510:5:26"},"nodeType":"YulFunctionCall","src":"11510:12:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"11500:6:26"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11472:5:26","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"11482:6:26","type":""}],"src":"11431:98:26"},{"body":{"nodeType":"YulBlock","src":"11630:73:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11647:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"11652:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11640:6:26"},"nodeType":"YulFunctionCall","src":"11640:19:26"},"nodeType":"YulExpressionStatement","src":"11640:19:26"},{"nodeType":"YulAssignment","src":"11668:29:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11687:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"11692:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11683:3:26"},"nodeType":"YulFunctionCall","src":"11683:14:26"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"11668:11:26"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11602:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"11607:6:26","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"11618:11:26","type":""}],"src":"11535:168:26"},{"body":{"nodeType":"YulBlock","src":"11799:283:26","statements":[{"nodeType":"YulVariableDeclaration","src":"11809:52:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11855:5:26"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"11823:31:26"},"nodeType":"YulFunctionCall","src":"11823:38:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"11813:6:26","type":""}]},{"nodeType":"YulAssignment","src":"11870:77:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11935:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"11940:6:26"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11877:57:26"},"nodeType":"YulFunctionCall","src":"11877:70:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11870:3:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11995:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"12002:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11991:3:26"},"nodeType":"YulFunctionCall","src":"11991:16:26"},{"name":"pos","nodeType":"YulIdentifier","src":"12009:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"12014:6:26"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"11956:34:26"},"nodeType":"YulFunctionCall","src":"11956:65:26"},"nodeType":"YulExpressionStatement","src":"11956:65:26"},{"nodeType":"YulAssignment","src":"12030:46:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12041:3:26"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"12068:6:26"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"12046:21:26"},"nodeType":"YulFunctionCall","src":"12046:29:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12037:3:26"},"nodeType":"YulFunctionCall","src":"12037:39:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12030:3:26"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11780:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11787:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11795:3:26","type":""}],"src":"11709:373:26"},{"body":{"nodeType":"YulBlock","src":"12288:440:26","statements":[{"nodeType":"YulAssignment","src":"12298:27:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12310:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"12321:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12306:3:26"},"nodeType":"YulFunctionCall","src":"12306:19:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12298:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12379:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12392:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"12403:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12388:3:26"},"nodeType":"YulFunctionCall","src":"12388:17:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"12335:43:26"},"nodeType":"YulFunctionCall","src":"12335:71:26"},"nodeType":"YulExpressionStatement","src":"12335:71:26"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"12460:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12473:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"12484:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12469:3:26"},"nodeType":"YulFunctionCall","src":"12469:18:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"12416:43:26"},"nodeType":"YulFunctionCall","src":"12416:72:26"},"nodeType":"YulExpressionStatement","src":"12416:72:26"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"12542:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12555:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"12566:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12551:3:26"},"nodeType":"YulFunctionCall","src":"12551:18:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"12498:43:26"},"nodeType":"YulFunctionCall","src":"12498:72:26"},"nodeType":"YulExpressionStatement","src":"12498:72:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12591:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"12602:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12587:3:26"},"nodeType":"YulFunctionCall","src":"12587:18:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12611:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"12617:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12607:3:26"},"nodeType":"YulFunctionCall","src":"12607:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12580:6:26"},"nodeType":"YulFunctionCall","src":"12580:48:26"},"nodeType":"YulExpressionStatement","src":"12580:48:26"},{"nodeType":"YulAssignment","src":"12637:84:26","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"12707:6:26"},{"name":"tail","nodeType":"YulIdentifier","src":"12716:4:26"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12645:61:26"},"nodeType":"YulFunctionCall","src":"12645:76:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12637:4:26"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12236:9:26","type":""},{"name":"value3","nodeType":"YulTypedName","src":"12248:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"12256:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12264:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12272:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12283:4:26","type":""}],"src":"12088:640:26"},{"body":{"nodeType":"YulBlock","src":"12796:79:26","statements":[{"nodeType":"YulAssignment","src":"12806:22:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"12821:6:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12815:5:26"},"nodeType":"YulFunctionCall","src":"12815:13:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"12806:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12863:5:26"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"12837:25:26"},"nodeType":"YulFunctionCall","src":"12837:32:26"},"nodeType":"YulExpressionStatement","src":"12837:32:26"}]},"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"12774:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"12782:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"12790:5:26","type":""}],"src":"12734:141:26"},{"body":{"nodeType":"YulBlock","src":"12957:273:26","statements":[{"body":{"nodeType":"YulBlock","src":"13003:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"13005:77:26"},"nodeType":"YulFunctionCall","src":"13005:79:26"},"nodeType":"YulExpressionStatement","src":"13005:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"12978:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"12987:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12974:3:26"},"nodeType":"YulFunctionCall","src":"12974:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"12999:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12970:3:26"},"nodeType":"YulFunctionCall","src":"12970:32:26"},"nodeType":"YulIf","src":"12967:119:26"},{"nodeType":"YulBlock","src":"13096:127:26","statements":[{"nodeType":"YulVariableDeclaration","src":"13111:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"13125:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13115:6:26","type":""}]},{"nodeType":"YulAssignment","src":"13140:73:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13185:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"13196:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13181:3:26"},"nodeType":"YulFunctionCall","src":"13181:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13205:7:26"}],"functionName":{"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulIdentifier","src":"13150:30:26"},"nodeType":"YulFunctionCall","src":"13150:63:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"13140:6:26"}]}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12927:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"12938:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"12950:6:26","type":""}],"src":"12881:349:26"},{"body":{"nodeType":"YulBlock","src":"13350:34:26","statements":[{"nodeType":"YulAssignment","src":"13360:18:26","value":{"name":"pos","nodeType":"YulIdentifier","src":"13375:3:26"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"13360:11:26"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13322:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"13327:6:26","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"13338:11:26","type":""}],"src":"13236:148:26"},{"body":{"nodeType":"YulBlock","src":"13500:280:26","statements":[{"nodeType":"YulVariableDeclaration","src":"13510:53:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13557:5:26"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"13524:32:26"},"nodeType":"YulFunctionCall","src":"13524:39:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"13514:6:26","type":""}]},{"nodeType":"YulAssignment","src":"13572:96:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13656:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"13661:6:26"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"13579:76:26"},"nodeType":"YulFunctionCall","src":"13579:89:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13572:3:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13716:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"13723:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13712:3:26"},"nodeType":"YulFunctionCall","src":"13712:16:26"},{"name":"pos","nodeType":"YulIdentifier","src":"13730:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"13735:6:26"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"13677:34:26"},"nodeType":"YulFunctionCall","src":"13677:65:26"},"nodeType":"YulExpressionStatement","src":"13677:65:26"},{"nodeType":"YulAssignment","src":"13751:23:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13762:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"13767:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13758:3:26"},"nodeType":"YulFunctionCall","src":"13758:16:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13751:3:26"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13481:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"13488:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13496:3:26","type":""}],"src":"13390:390:26"},{"body":{"nodeType":"YulBlock","src":"13970:251:26","statements":[{"nodeType":"YulAssignment","src":"13981:102:26","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14070:6:26"},{"name":"pos","nodeType":"YulIdentifier","src":"14079:3:26"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"13988:81:26"},"nodeType":"YulFunctionCall","src":"13988:95:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13981:3:26"}]},{"nodeType":"YulAssignment","src":"14093:102:26","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"14182:6:26"},{"name":"pos","nodeType":"YulIdentifier","src":"14191:3:26"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"14100:81:26"},"nodeType":"YulFunctionCall","src":"14100:95:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14093:3:26"}]},{"nodeType":"YulAssignment","src":"14205:10:26","value":{"name":"pos","nodeType":"YulIdentifier","src":"14212:3:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14205:3:26"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13941:3:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13947:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13955:6:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13966:3:26","type":""}],"src":"13786:435:26"},{"body":{"nodeType":"YulBlock","src":"14333:74:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14355:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"14363:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14351:3:26"},"nodeType":"YulFunctionCall","src":"14351:14:26"},{"hexValue":"4f6e6c792061646d696e2063616e207472616e7366657220746f6b656e73","kind":"string","nodeType":"YulLiteral","src":"14367:32:26","type":"","value":"Only admin can transfer tokens"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14344:6:26"},"nodeType":"YulFunctionCall","src":"14344:56:26"},"nodeType":"YulExpressionStatement","src":"14344:56:26"}]},"name":"store_literal_in_memory_343baf082709e93d6ec72c89c1f25cf13509cddee60cd243e06b5ef8eb5199ff","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"14325:6:26","type":""}],"src":"14227:180:26"},{"body":{"nodeType":"YulBlock","src":"14559:220:26","statements":[{"nodeType":"YulAssignment","src":"14569:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14635:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"14640:2:26","type":"","value":"30"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14576:58:26"},"nodeType":"YulFunctionCall","src":"14576:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14569:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14741:3:26"}],"functionName":{"name":"store_literal_in_memory_343baf082709e93d6ec72c89c1f25cf13509cddee60cd243e06b5ef8eb5199ff","nodeType":"YulIdentifier","src":"14652:88:26"},"nodeType":"YulFunctionCall","src":"14652:93:26"},"nodeType":"YulExpressionStatement","src":"14652:93:26"},{"nodeType":"YulAssignment","src":"14754:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14765:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"14770:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14761:3:26"},"nodeType":"YulFunctionCall","src":"14761:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14754:3:26"}]}]},"name":"abi_encode_t_stringliteral_343baf082709e93d6ec72c89c1f25cf13509cddee60cd243e06b5ef8eb5199ff_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14547:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14555:3:26","type":""}],"src":"14413:366:26"},{"body":{"nodeType":"YulBlock","src":"14956:248:26","statements":[{"nodeType":"YulAssignment","src":"14966:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14978:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"14989:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14974:3:26"},"nodeType":"YulFunctionCall","src":"14974:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14966:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15013:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"15024:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15009:3:26"},"nodeType":"YulFunctionCall","src":"15009:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15032:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"15038:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15028:3:26"},"nodeType":"YulFunctionCall","src":"15028:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15002:6:26"},"nodeType":"YulFunctionCall","src":"15002:47:26"},"nodeType":"YulExpressionStatement","src":"15002:47:26"},{"nodeType":"YulAssignment","src":"15058:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15192:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_343baf082709e93d6ec72c89c1f25cf13509cddee60cd243e06b5ef8eb5199ff_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15066:124:26"},"nodeType":"YulFunctionCall","src":"15066:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15058:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_343baf082709e93d6ec72c89c1f25cf13509cddee60cd243e06b5ef8eb5199ff__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14936:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14951:4:26","type":""}],"src":"14785:419:26"},{"body":{"nodeType":"YulBlock","src":"15238:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15255:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15258:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15248:6:26"},"nodeType":"YulFunctionCall","src":"15248:88:26"},"nodeType":"YulExpressionStatement","src":"15248:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15352:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"15355:4:26","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15345:6:26"},"nodeType":"YulFunctionCall","src":"15345:15:26"},"nodeType":"YulExpressionStatement","src":"15345:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15376:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15379:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15369:6:26"},"nodeType":"YulFunctionCall","src":"15369:15:26"},"nodeType":"YulExpressionStatement","src":"15369:15:26"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"15210:180:26"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_343baf082709e93d6ec72c89c1f25cf13509cddee60cd243e06b5ef8eb5199ff(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only admin can transfer tokens\")\n\n    }\n\n    function abi_encode_t_stringliteral_343baf082709e93d6ec72c89c1f25cf13509cddee60cd243e06b5ef8eb5199ff_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_343baf082709e93d6ec72c89c1f25cf13509cddee60cd243e06b5ef8eb5199ff(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_343baf082709e93d6ec72c89c1f25cf13509cddee60cd243e06b5ef8eb5199ff__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_343baf082709e93d6ec72c89c1f25cf13509cddee60cd243e06b5ef8eb5199ff_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n}\n","id":26,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061012c5760003560e01c8063715018a6116100ad578063c87b56dd11610071578063c87b56dd1461031b578063e4d9d1221461034b578063e985e9c514610369578063f2fde38b14610399578063f8cacb4c146103b55761012c565b8063715018a61461029d5780638da5cb5b146102a757806395d89b41146102c5578063a22cb465146102e3578063b88d4fde146102ff5761012c565b806323b872dd116100f457806323b872dd146101e757806331d382a21461020357806342842e0e146102215780636352211e1461023d57806370a082311461026d5761012c565b806301ffc9a714610131578063065db7a51461016157806306fdde031461017d578063081812fc1461019b578063095ea7b3146101cb575b600080fd5b61014b60048036038101906101469190611994565b6103d3565b60405161015891906119dc565b60405180910390f35b61017b60048036038101906101769190611a55565b6103e5565b005b6101856104a6565b6040516101929190611b25565b60405180910390f35b6101b560048036038101906101b09190611b7d565b610538565b6040516101c29190611bb9565b60405180910390f35b6101e560048036038101906101e09190611bd4565b610554565b005b61020160048036038101906101fc9190611c14565b61056a565b005b61020b61066c565b6040516102189190611bb9565b60405180910390f35b61023b60048036038101906102369190611c14565b610692565b005b61025760048036038101906102529190611b7d565b6106b2565b6040516102649190611bb9565b60405180910390f35b61028760048036038101906102829190611c67565b6106c4565b6040516102949190611ca3565b60405180910390f35b6102a561077e565b005b6102af610792565b6040516102bc9190611bb9565b60405180910390f35b6102cd6107bc565b6040516102da9190611b25565b60405180910390f35b6102fd60048036038101906102f89190611cea565b61084e565b005b61031960048036038101906103149190611e5f565b610864565b005b61033560048036038101906103309190611b7d565b610889565b6040516103429190611b25565b60405180910390f35b61035361089b565b6040516103609190611ca3565b60405180910390f35b610383600480360381019061037e9190611a55565b6108a1565b60405161039091906119dc565b60405180910390f35b6103b360048036038101906103ae9190611c67565b610935565b005b6103bd6109bb565b6040516103ca9190611bb9565b60405180910390f35b60006103de826109e5565b9050919050565b6103ed610a46565b6103fa8282600954610692565b8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167faf9ff3ada675379ca19fdd908e550417162f2a7370166e8257b25888e55926e76009546040516104599190611ca3565b60405180910390a380600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6060600080546104b590611f11565b80601f01602080910402602001604051908101604052809291908181526020018280546104e190611f11565b801561052e5780601f106105035761010080835404028352916020019161052e565b820191906000526020600020905b81548152906001019060200180831161051157829003601f168201915b5050505050905090565b600061054382610acd565b5061054d82610b55565b9050919050565b6105668282610561610b92565b610b9a565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036105dc5760006040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016105d39190611bb9565b60405180910390fd5b60006105f083836105eb610b92565b610bac565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610666578382826040517f64283d7b00000000000000000000000000000000000000000000000000000000815260040161065d93929190611f42565b60405180910390fd5b50505050565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6106ad83838360405180602001604052806000815250610864565b505050565b60006106bd82610acd565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036107375760006040517f89c62b6400000000000000000000000000000000000000000000000000000000815260040161072e9190611bb9565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610786610a46565b6107906000610dc6565b565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600180546107cb90611f11565b80601f01602080910402602001604051908101604052809291908181526020018280546107f790611f11565b80156108445780601f1061081957610100808354040283529160200191610844565b820191906000526020600020905b81548152906001019060200180831161082757829003601f168201915b5050505050905090565b610860610859610b92565b8383610e8c565b5050565b61086f84848461056a565b61088361087a610b92565b85858585610ffb565b50505050565b6060610894826111ac565b9050919050565b60095481565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b61093d610a46565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036109af5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016109a69190611bb9565b60405180910390fd5b6109b881610dc6565b50565b6000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000634906490660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610a3f5750610a3e826112bf565b5b9050919050565b610a4e610b92565b73ffffffffffffffffffffffffffffffffffffffff16610a6c610792565b73ffffffffffffffffffffffffffffffffffffffff1614610acb57610a8f610b92565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610ac29190611bb9565b60405180910390fd5b565b600080610ad9836113a1565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610b4c57826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610b439190611ca3565b60405180910390fd5b80915050919050565b60006004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600033905090565b610ba783838360016113de565b505050565b600080610bb8846113a1565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610bfa57610bf98184866115a3565b5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610c8b57610c3c6000856000806113de565b6001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610d0e576001600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b846002600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610efd57816040517f5b08ba18000000000000000000000000000000000000000000000000000000008152600401610ef49190611bb9565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610fee91906119dc565b60405180910390a3505050565b60008373ffffffffffffffffffffffffffffffffffffffff163b11156111a5578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02868685856040518563ffffffff1660e01b815260040161105a9493929190611fce565b6020604051808303816000875af192505050801561109657506040513d601f19601f82011682018060405250810190611093919061202f565b60015b61111a573d80600081146110c6576040519150601f19603f3d011682016040523d82523d6000602084013e6110cb565b606091505b50600081510361111257836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016111099190611bb9565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146111a357836040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161119a9190611bb9565b60405180910390fd5b505b5050505050565b60606111b782610acd565b5060006006600084815260200190815260200160002080546111d890611f11565b80601f016020809104026020016040519081016040528092919081815260200182805461120490611f11565b80156112515780601f1061122657610100808354040283529160200191611251565b820191906000526020600020905b81548152906001019060200180831161123457829003601f168201915b50505050509050600061126261161d565b905060008151036112775781925050506112ba565b6000825111156112ac578082604051602001611294929190612098565b604051602081830303815290604052925050506112ba565b6112b584611634565b925050505b919050565b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061138a57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061139a57506113998261169d565b5b9050919050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b80806114175750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b1561154b57600061142784610acd565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561149257508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b80156114a557506114a381846108a1565b155b156114e757826040517fa9fbf51f0000000000000000000000000000000000000000000000000000000081526004016114de9190611bb9565b60405180910390fd5b811561154957838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b836004600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b6115ab610792565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614611618576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161160f90612108565b60405180910390fd5b505050565b606060405180602001604052806000815250905090565b606061163f82610acd565b50600061164a61161d565b9050600081511161166a5760405180602001604052806000815250611695565b8061167484611707565b604051602001611685929190612098565b6040516020818303038152906040525b915050919050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b606060006001611716846117d5565b01905060008167ffffffffffffffff81111561173557611734611d34565b5b6040519080825280601f01601f1916602001820160405280156117675781602001600182028036833780820191505090505b509050600082602001820190505b6001156117ca578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85816117be576117bd612128565b5b04945060008503611775575b819350505050919050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611833577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000838161182957611828612128565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611870576d04ee2d6d415b85acef8100000000838161186657611865612128565b5b0492506020810190505b662386f26fc10000831061189f57662386f26fc10000838161189557611894612128565b5b0492506010810190505b6305f5e10083106118c8576305f5e10083816118be576118bd612128565b5b0492506008810190505b61271083106118ed5761271083816118e3576118e2612128565b5b0492506004810190505b60648310611910576064838161190657611905612128565b5b0492506002810190505b600a831061191f576001810190505b80915050919050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6119718161193c565b811461197c57600080fd5b50565b60008135905061198e81611968565b92915050565b6000602082840312156119aa576119a9611932565b5b60006119b88482850161197f565b91505092915050565b60008115159050919050565b6119d6816119c1565b82525050565b60006020820190506119f160008301846119cd565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611a22826119f7565b9050919050565b611a3281611a17565b8114611a3d57600080fd5b50565b600081359050611a4f81611a29565b92915050565b60008060408385031215611a6c57611a6b611932565b5b6000611a7a85828601611a40565b9250506020611a8b85828601611a40565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611acf578082015181840152602081019050611ab4565b60008484015250505050565b6000601f19601f8301169050919050565b6000611af782611a95565b611b018185611aa0565b9350611b11818560208601611ab1565b611b1a81611adb565b840191505092915050565b60006020820190508181036000830152611b3f8184611aec565b905092915050565b6000819050919050565b611b5a81611b47565b8114611b6557600080fd5b50565b600081359050611b7781611b51565b92915050565b600060208284031215611b9357611b92611932565b5b6000611ba184828501611b68565b91505092915050565b611bb381611a17565b82525050565b6000602082019050611bce6000830184611baa565b92915050565b60008060408385031215611beb57611bea611932565b5b6000611bf985828601611a40565b9250506020611c0a85828601611b68565b9150509250929050565b600080600060608486031215611c2d57611c2c611932565b5b6000611c3b86828701611a40565b9350506020611c4c86828701611a40565b9250506040611c5d86828701611b68565b9150509250925092565b600060208284031215611c7d57611c7c611932565b5b6000611c8b84828501611a40565b91505092915050565b611c9d81611b47565b82525050565b6000602082019050611cb86000830184611c94565b92915050565b611cc7816119c1565b8114611cd257600080fd5b50565b600081359050611ce481611cbe565b92915050565b60008060408385031215611d0157611d00611932565b5b6000611d0f85828601611a40565b9250506020611d2085828601611cd5565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611d6c82611adb565b810181811067ffffffffffffffff82111715611d8b57611d8a611d34565b5b80604052505050565b6000611d9e611928565b9050611daa8282611d63565b919050565b600067ffffffffffffffff821115611dca57611dc9611d34565b5b611dd382611adb565b9050602081019050919050565b82818337600083830152505050565b6000611e02611dfd84611daf565b611d94565b905082815260208101848484011115611e1e57611e1d611d2f565b5b611e29848285611de0565b509392505050565b600082601f830112611e4657611e45611d2a565b5b8135611e56848260208601611def565b91505092915050565b60008060008060808587031215611e7957611e78611932565b5b6000611e8787828801611a40565b9450506020611e9887828801611a40565b9350506040611ea987828801611b68565b925050606085013567ffffffffffffffff811115611eca57611ec9611937565b5b611ed687828801611e31565b91505092959194509250565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611f2957607f821691505b602082108103611f3c57611f3b611ee2565b5b50919050565b6000606082019050611f576000830186611baa565b611f646020830185611c94565b611f716040830184611baa565b949350505050565b600081519050919050565b600082825260208201905092915050565b6000611fa082611f79565b611faa8185611f84565b9350611fba818560208601611ab1565b611fc381611adb565b840191505092915050565b6000608082019050611fe36000830187611baa565b611ff06020830186611baa565b611ffd6040830185611c94565b818103606083015261200f8184611f95565b905095945050505050565b60008151905061202981611968565b92915050565b60006020828403121561204557612044611932565b5b60006120538482850161201a565b91505092915050565b600081905092915050565b600061207282611a95565b61207c818561205c565b935061208c818560208601611ab1565b80840191505092915050565b60006120a48285612067565b91506120b08284612067565b91508190509392505050565b7f4f6e6c792061646d696e2063616e207472616e7366657220746f6b656e730000600082015250565b60006120f2601e83611aa0565b91506120fd826120bc565b602082019050919050565b60006020820190508181036000830152612121816120e5565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fdfea2646970667358221220f50ea23b2708a2e44c4f5063dbdd852352f220509a7208f022b7067fe29d935864736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xC87B56DD GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x31B JUMPI DUP1 PUSH4 0xE4D9D122 EQ PUSH2 0x34B JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x369 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x399 JUMPI DUP1 PUSH4 0xF8CACB4C EQ PUSH2 0x3B5 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x29D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2A7 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2C5 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2E3 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2FF JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0x31D382A2 EQ PUSH2 0x203 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x26D JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x65DB7A5 EQ PUSH2 0x161 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x17D JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x19B JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1CB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x1994 JUMP JUMPDEST PUSH2 0x3D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x158 SWAP2 SWAP1 PUSH2 0x19DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x176 SWAP2 SWAP1 PUSH2 0x1A55 JUMP JUMPDEST PUSH2 0x3E5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x185 PUSH2 0x4A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x192 SWAP2 SWAP1 PUSH2 0x1B25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B0 SWAP2 SWAP1 PUSH2 0x1B7D JUMP JUMPDEST PUSH2 0x538 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C2 SWAP2 SWAP1 PUSH2 0x1BB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E0 SWAP2 SWAP1 PUSH2 0x1BD4 JUMP JUMPDEST PUSH2 0x554 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x201 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FC SWAP2 SWAP1 PUSH2 0x1C14 JUMP JUMPDEST PUSH2 0x56A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x20B PUSH2 0x66C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x218 SWAP2 SWAP1 PUSH2 0x1BB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x236 SWAP2 SWAP1 PUSH2 0x1C14 JUMP JUMPDEST PUSH2 0x692 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x257 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x252 SWAP2 SWAP1 PUSH2 0x1B7D JUMP JUMPDEST PUSH2 0x6B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x264 SWAP2 SWAP1 PUSH2 0x1BB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x287 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x282 SWAP2 SWAP1 PUSH2 0x1C67 JUMP JUMPDEST PUSH2 0x6C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x294 SWAP2 SWAP1 PUSH2 0x1CA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A5 PUSH2 0x77E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2AF PUSH2 0x792 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BC SWAP2 SWAP1 PUSH2 0x1BB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CD PUSH2 0x7BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DA SWAP2 SWAP1 PUSH2 0x1B25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F8 SWAP2 SWAP1 PUSH2 0x1CEA JUMP JUMPDEST PUSH2 0x84E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x319 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x314 SWAP2 SWAP1 PUSH2 0x1E5F JUMP JUMPDEST PUSH2 0x864 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x335 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x330 SWAP2 SWAP1 PUSH2 0x1B7D JUMP JUMPDEST PUSH2 0x889 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x342 SWAP2 SWAP1 PUSH2 0x1B25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x353 PUSH2 0x89B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x360 SWAP2 SWAP1 PUSH2 0x1CA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x383 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x37E SWAP2 SWAP1 PUSH2 0x1A55 JUMP JUMPDEST PUSH2 0x8A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x390 SWAP2 SWAP1 PUSH2 0x19DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3AE SWAP2 SWAP1 PUSH2 0x1C67 JUMP JUMPDEST PUSH2 0x935 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3BD PUSH2 0x9BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CA SWAP2 SWAP1 PUSH2 0x1BB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x3DE DUP3 PUSH2 0x9E5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3ED PUSH2 0xA46 JUMP JUMPDEST PUSH2 0x3FA DUP3 DUP3 PUSH1 0x9 SLOAD PUSH2 0x692 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xAF9FF3ADA675379CA19FDD908E550417162F2A7370166E8257B25888E55926E7 PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH2 0x459 SWAP2 SWAP1 PUSH2 0x1CA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x4B5 SWAP1 PUSH2 0x1F11 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4E1 SWAP1 PUSH2 0x1F11 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x52E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x503 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x52E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x511 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x543 DUP3 PUSH2 0xACD JUMP JUMPDEST POP PUSH2 0x54D DUP3 PUSH2 0xB55 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x566 DUP3 DUP3 PUSH2 0x561 PUSH2 0xB92 JUMP JUMPDEST PUSH2 0xB9A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5DC JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D3 SWAP2 SWAP1 PUSH2 0x1BB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x5F0 DUP4 DUP4 PUSH2 0x5EB PUSH2 0xB92 JUMP JUMPDEST PUSH2 0xBAC JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x666 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x65D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F42 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x6AD DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x864 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6BD DUP3 PUSH2 0xACD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x737 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x72E SWAP2 SWAP1 PUSH2 0x1BB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x786 PUSH2 0xA46 JUMP JUMPDEST PUSH2 0x790 PUSH1 0x0 PUSH2 0xDC6 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x7CB SWAP1 PUSH2 0x1F11 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7F7 SWAP1 PUSH2 0x1F11 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x844 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x819 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x844 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x827 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x860 PUSH2 0x859 PUSH2 0xB92 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xE8C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x86F DUP5 DUP5 DUP5 PUSH2 0x56A JUMP JUMPDEST PUSH2 0x883 PUSH2 0x87A PUSH2 0xB92 JUMP JUMPDEST DUP6 DUP6 DUP6 DUP6 PUSH2 0xFFB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x894 DUP3 PUSH2 0x11AC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x93D PUSH2 0xA46 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9AF JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9A6 SWAP2 SWAP1 PUSH2 0x1BB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9B8 DUP2 PUSH2 0xDC6 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x49064906 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0xA3F JUMPI POP PUSH2 0xA3E DUP3 PUSH2 0x12BF JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA4E PUSH2 0xB92 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA6C PUSH2 0x792 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xACB JUMPI PUSH2 0xA8F PUSH2 0xB92 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAC2 SWAP2 SWAP1 PUSH2 0x1BB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xAD9 DUP4 PUSH2 0x13A1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB4C JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB43 SWAP2 SWAP1 PUSH2 0x1CA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xBA7 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x13DE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xBB8 DUP5 PUSH2 0x13A1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBFA JUMPI PUSH2 0xBF9 DUP2 DUP5 DUP7 PUSH2 0x15A3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC8B JUMPI PUSH2 0xC3C PUSH1 0x0 DUP6 PUSH1 0x0 DUP1 PUSH2 0x13DE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD0E JUMPI PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEFD JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEF4 SWAP2 SWAP1 PUSH2 0x1BB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xFEE SWAP2 SWAP1 PUSH2 0x19DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x11A5 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 DUP7 DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x105A SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1FCE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1096 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1093 SWAP2 SWAP1 PUSH2 0x202F JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x111A JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x10C6 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x10CB JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x1112 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1109 SWAP2 SWAP1 PUSH2 0x1BB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x11A3 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x119A SWAP2 SWAP1 PUSH2 0x1BB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x11B7 DUP3 PUSH2 0xACD JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x11D8 SWAP1 PUSH2 0x1F11 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1204 SWAP1 PUSH2 0x1F11 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1251 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1226 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1251 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1234 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x1262 PUSH2 0x161D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x1277 JUMPI DUP2 SWAP3 POP POP POP PUSH2 0x12BA JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x12AC JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1294 SWAP3 SWAP2 SWAP1 PUSH2 0x2098 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP PUSH2 0x12BA JUMP JUMPDEST PUSH2 0x12B5 DUP5 PUSH2 0x1634 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x138A JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x139A JUMPI POP PUSH2 0x1399 DUP3 PUSH2 0x169D JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1417 JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x154B JUMPI PUSH1 0x0 PUSH2 0x1427 DUP5 PUSH2 0xACD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1492 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x14A5 JUMPI POP PUSH2 0x14A3 DUP2 DUP5 PUSH2 0x8A1 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x14E7 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14DE SWAP2 SWAP1 PUSH2 0x1BB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x1549 JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x15AB PUSH2 0x792 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1618 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x160F SWAP1 PUSH2 0x2108 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x163F DUP3 PUSH2 0xACD JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x164A PUSH2 0x161D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x166A JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1695 JUMP JUMPDEST DUP1 PUSH2 0x1674 DUP5 PUSH2 0x1707 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1685 SWAP3 SWAP2 SWAP1 PUSH2 0x2098 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x1716 DUP5 PUSH2 0x17D5 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1735 JUMPI PUSH2 0x1734 PUSH2 0x1D34 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1767 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x17CA JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x17BE JUMPI PUSH2 0x17BD PUSH2 0x2128 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0x1775 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1833 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x1829 JUMPI PUSH2 0x1828 PUSH2 0x2128 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1870 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x1866 JUMPI PUSH2 0x1865 PUSH2 0x2128 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x189F JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x1895 JUMPI PUSH2 0x1894 PUSH2 0x2128 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x18C8 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x18BE JUMPI PUSH2 0x18BD PUSH2 0x2128 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x18ED JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x18E3 JUMPI PUSH2 0x18E2 PUSH2 0x2128 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1910 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1906 JUMPI PUSH2 0x1905 PUSH2 0x2128 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x191F JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1971 DUP2 PUSH2 0x193C JUMP JUMPDEST DUP2 EQ PUSH2 0x197C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x198E DUP2 PUSH2 0x1968 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19AA JUMPI PUSH2 0x19A9 PUSH2 0x1932 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19B8 DUP5 DUP3 DUP6 ADD PUSH2 0x197F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19D6 DUP2 PUSH2 0x19C1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19F1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x19CD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A22 DUP3 PUSH2 0x19F7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A32 DUP2 PUSH2 0x1A17 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A3D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A4F DUP2 PUSH2 0x1A29 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A6C JUMPI PUSH2 0x1A6B PUSH2 0x1932 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A7A DUP6 DUP3 DUP7 ADD PUSH2 0x1A40 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A8B DUP6 DUP3 DUP7 ADD PUSH2 0x1A40 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1ACF JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1AB4 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AF7 DUP3 PUSH2 0x1A95 JUMP JUMPDEST PUSH2 0x1B01 DUP2 DUP6 PUSH2 0x1AA0 JUMP JUMPDEST SWAP4 POP PUSH2 0x1B11 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1AB1 JUMP JUMPDEST PUSH2 0x1B1A DUP2 PUSH2 0x1ADB JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B3F DUP2 DUP5 PUSH2 0x1AEC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B5A DUP2 PUSH2 0x1B47 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B77 DUP2 PUSH2 0x1B51 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B93 JUMPI PUSH2 0x1B92 PUSH2 0x1932 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1BA1 DUP5 DUP3 DUP6 ADD PUSH2 0x1B68 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1BB3 DUP2 PUSH2 0x1A17 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BCE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1BAA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BEB JUMPI PUSH2 0x1BEA PUSH2 0x1932 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1BF9 DUP6 DUP3 DUP7 ADD PUSH2 0x1A40 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C0A DUP6 DUP3 DUP7 ADD PUSH2 0x1B68 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1C2D JUMPI PUSH2 0x1C2C PUSH2 0x1932 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C3B DUP7 DUP3 DUP8 ADD PUSH2 0x1A40 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1C4C DUP7 DUP3 DUP8 ADD PUSH2 0x1A40 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1C5D DUP7 DUP3 DUP8 ADD PUSH2 0x1B68 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C7D JUMPI PUSH2 0x1C7C PUSH2 0x1932 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C8B DUP5 DUP3 DUP6 ADD PUSH2 0x1A40 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1C9D DUP2 PUSH2 0x1B47 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CB8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1C94 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1CC7 DUP2 PUSH2 0x19C1 JUMP JUMPDEST DUP2 EQ PUSH2 0x1CD2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1CE4 DUP2 PUSH2 0x1CBE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D01 JUMPI PUSH2 0x1D00 PUSH2 0x1932 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D0F DUP6 DUP3 DUP7 ADD PUSH2 0x1A40 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1D20 DUP6 DUP3 DUP7 ADD PUSH2 0x1CD5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1D6C DUP3 PUSH2 0x1ADB JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1D8B JUMPI PUSH2 0x1D8A PUSH2 0x1D34 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D9E PUSH2 0x1928 JUMP JUMPDEST SWAP1 POP PUSH2 0x1DAA DUP3 DUP3 PUSH2 0x1D63 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1DCA JUMPI PUSH2 0x1DC9 PUSH2 0x1D34 JUMP JUMPDEST JUMPDEST PUSH2 0x1DD3 DUP3 PUSH2 0x1ADB JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E02 PUSH2 0x1DFD DUP5 PUSH2 0x1DAF JUMP JUMPDEST PUSH2 0x1D94 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1E1E JUMPI PUSH2 0x1E1D PUSH2 0x1D2F JUMP JUMPDEST JUMPDEST PUSH2 0x1E29 DUP5 DUP3 DUP6 PUSH2 0x1DE0 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1E46 JUMPI PUSH2 0x1E45 PUSH2 0x1D2A JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1E56 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1DEF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1E79 JUMPI PUSH2 0x1E78 PUSH2 0x1932 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E87 DUP8 DUP3 DUP9 ADD PUSH2 0x1A40 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1E98 DUP8 DUP3 DUP9 ADD PUSH2 0x1A40 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1EA9 DUP8 DUP3 DUP9 ADD PUSH2 0x1B68 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1ECA JUMPI PUSH2 0x1EC9 PUSH2 0x1937 JUMP JUMPDEST JUMPDEST PUSH2 0x1ED6 DUP8 DUP3 DUP9 ADD PUSH2 0x1E31 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1F29 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1F3C JUMPI PUSH2 0x1F3B PUSH2 0x1EE2 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1F57 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1BAA JUMP JUMPDEST PUSH2 0x1F64 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1C94 JUMP JUMPDEST PUSH2 0x1F71 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1BAA JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FA0 DUP3 PUSH2 0x1F79 JUMP JUMPDEST PUSH2 0x1FAA DUP2 DUP6 PUSH2 0x1F84 JUMP JUMPDEST SWAP4 POP PUSH2 0x1FBA DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1AB1 JUMP JUMPDEST PUSH2 0x1FC3 DUP2 PUSH2 0x1ADB JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1FE3 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1BAA JUMP JUMPDEST PUSH2 0x1FF0 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1BAA JUMP JUMPDEST PUSH2 0x1FFD PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1C94 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x200F DUP2 DUP5 PUSH2 0x1F95 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2029 DUP2 PUSH2 0x1968 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2045 JUMPI PUSH2 0x2044 PUSH2 0x1932 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2053 DUP5 DUP3 DUP6 ADD PUSH2 0x201A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2072 DUP3 PUSH2 0x1A95 JUMP JUMPDEST PUSH2 0x207C DUP2 DUP6 PUSH2 0x205C JUMP JUMPDEST SWAP4 POP PUSH2 0x208C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1AB1 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20A4 DUP3 DUP6 PUSH2 0x2067 JUMP JUMPDEST SWAP2 POP PUSH2 0x20B0 DUP3 DUP5 PUSH2 0x2067 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4F6E6C792061646D696E2063616E207472616E7366657220746F6B656E730000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20F2 PUSH1 0x1E DUP4 PUSH2 0x1AA0 JUMP JUMPDEST SWAP2 POP PUSH2 0x20FD DUP3 PUSH2 0x20BC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2121 DUP2 PUSH2 0x20E5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 0xE LOG2 EXTCODESIZE 0x27 ADDMOD LOG2 0xE4 0x4C 0x4F POP PUSH4 0xDBDD8523 MSTORE CALLCODE KECCAK256 POP SWAP11 PUSH19 0x8F022B7067FE29D935864736F6C6343000814 STOP CALLER ","sourceMap":"327:2467:23:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2319:183;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1361:193;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2364:89:8;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3496:154;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3322:113;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4142:578;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;488:19:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4786:132:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2184:118;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1919:208;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2517:93:8;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3717:144;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4984:233;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2625:167:23;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;513:32;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3927:153:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1679:84:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2319:183;2436:4;2459:36;2483:11;2459:23;:36::i;:::-;2452:43;;2319:183;;;:::o;1361:193::-;1531:13:0;:11;:13::i;:::-;1437:41:23::1;1454:5;1461:3;1466:11;;1437:16;:41::i;:::-;1510:3;1493:34;;1503:5;1493:34;;;1515:11;;1493:34;;;;;;:::i;:::-;;;;;;;;1544:3;1537:4;;:10;;;;;;;;;;;;;;;;;;1361:193:::0;;:::o;2364:89:8:-;2409:13;2441:5;2434:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2364:89;:::o;3496:154::-;3563:7;3582:22;3596:7;3582:13;:22::i;:::-;;3622:21;3635:7;3622:12;:21::i;:::-;3615:28;;3496:154;;;:::o;3322:113::-;3393:35;3402:2;3406:7;3415:12;:10;:12::i;:::-;3393:8;:35::i;:::-;3322:113;;:::o;4142:578::-;4250:1;4236:16;;:2;:16;;;4232:87;;4305:1;4275:33;;;;;;;;;;;:::i;:::-;;;;;;;;4232:87;4537:21;4561:34;4569:2;4573:7;4582:12;:10;:12::i;:::-;4561:7;:34::i;:::-;4537:58;;4626:4;4609:21;;:13;:21;;;4605:109;;4674:4;4680:7;4689:13;4653:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;4605:109;4222:498;4142:578;;;:::o;488:19:23:-;;;;;;;;;;;;;:::o;4786:132:8:-;4872:39;4889:4;4895:2;4899:7;4872:39;;;;;;;;;;;;:16;:39::i;:::-;4786:132;;;:::o;2184:118::-;2247:7;2273:22;2287:7;2273:13;:22::i;:::-;2266:29;;2184:118;;;:::o;1919:208::-;1982:7;2022:1;2005:19;;:5;:19;;;2001:87;;2074:1;2047:30;;;;;;;;;;;:::i;:::-;;;;;;;;2001:87;2104:9;:16;2114:5;2104:16;;;;;;;;;;;;;;;;2097:23;;1919:208;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2517:93:8:-;2564:13;2596:7;2589:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2517:93;:::o;3717:144::-;3802:52;3821:12;:10;:12::i;:::-;3835:8;3845;3802:18;:52::i;:::-;3717:144;;:::o;4984:233::-;5097:31;5110:4;5116:2;5120:7;5097:12;:31::i;:::-;5138:72;5172:12;:10;:12::i;:::-;5186:4;5192:2;5196:7;5205:4;5138:33;:72::i;:::-;4984:233;;;;:::o;2625:167:23:-;2730:13;2762:23;2777:7;2762:14;:23::i;:::-;2755:30;;2625:167;;;:::o;513:32::-;;;;:::o;3927:153:8:-;4015:4;4038:18;:25;4057:5;4038:25;;;;;;;;;;;;;;;:35;4064:8;4038:35;;;;;;;;;;;;;;;;;;;;;;;;;4031:42;;3927:153;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1679:84:23:-;1726:7;1752:4;;;;;;;;;;;1745:11;;1679:84;:::o;938:207:11:-;1040:4;761:10;754:18;;1063:35;;;:11;:35;;;;:75;;;;1102:36;1126:11;1102:23;:36::i;:::-;1063:75;1056:82;;938:207;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;16212:241:8:-;16275:7;16294:13;16310:17;16319:7;16310:8;:17::i;:::-;16294:33;;16358:1;16341:19;;:5;:19;;;16337:88;;16406:7;16383:31;;;;;;;;;;;:::i;:::-;;;;;;;;16337:88;16441:5;16434:12;;;16212:241;;;:::o;5963:127::-;6033:7;6059:15;:24;6075:7;6059:24;;;;;;;;;;;;;;;;;;;;;6052:31;;5963:127;;;:::o;656:96:14:-;709:7;735:10;728:17;;656:96;:::o;14492:120:8:-;14572:33;14581:2;14585:7;14594:4;14600;14572:8;:33::i;:::-;14492:120;;;:::o;8861:795::-;8947:7;8966:12;8981:17;8990:7;8981:8;:17::i;:::-;8966:32;;9074:1;9058:18;;:4;:18;;;9054:86;;9092:37;9109:4;9115;9121:7;9092:16;:37::i;:::-;9054:86;9200:1;9184:18;;:4;:18;;;9180:256;;9300:48;9317:1;9321:7;9338:1;9342:5;9300:8;:48::i;:::-;9410:1;9391:9;:15;9401:4;9391:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;9180:256;9464:1;9450:16;;:2;:16;;;9446:107;;9527:1;9510:9;:13;9520:2;9510:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;9446:107;9582:2;9563:7;:16;9571:7;9563:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;9619:7;9615:2;9600:27;;9609:4;9600:27;;;;;;;;;;;;9645:4;9638:11;;;8861:795;;;;;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;15665:312:8:-;15792:1;15772:22;;:8;:22;;;15768:91;;15839:8;15817:31;;;;;;;;;;;:::i;:::-;;;;;;;;15768:91;15906:8;15868:18;:25;15887:5;15868:25;;;;;;;;;;;;;;;:35;15894:8;15868:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;15951:8;15929:41;;15944:5;15929:41;;;15961:8;15929:41;;;;;;:::i;:::-;;;;;;;;15665:312;;;:::o;985:924:13:-;1182:1;1165:2;:14;;;:18;1161:742;;;1219:2;1203:36;;;1240:8;1250:4;1256:7;1265:4;1203:67;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;1199:694;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1577:1;1560:6;:13;:18;1556:323;;1700:2;1664:39;;;;;;;;;;;:::i;:::-;;;;;;;;1556:323;1831:6;1825:13;1816:6;1812:2;1808:15;1801:38;1199:694;1327:41;;;1317:51;;;:6;:51;;;;1313:182;;1473:2;1437:39;;;;;;;;;;;:::i;:::-;;;;;;;;1313:182;1271:238;1161:742;985:924;;;;;:::o;1211:593:11:-;1284:13;1309:22;1323:7;1309:13;:22::i;:::-;;1342:23;1368:10;:19;1379:7;1368:19;;;;;;;;;;;1342:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1397:18;1418:10;:8;:10::i;:::-;1397:31;;1523:1;1507:4;1501:18;:23;1497:70;;1547:9;1540:16;;;;;;1497:70;1692:1;1672:9;1666:23;:27;1662:95;;;1730:4;1736:9;1716:30;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1709:37;;;;;;1662:95;1774:23;1789:7;1774:14;:23::i;:::-;1767:30;;;;1211:593;;;;:::o;1560:300:8:-;1662:4;1712:25;1697:40;;;:11;:40;;;;:104;;;;1768:33;1753:48;;;:11;:48;;;;1697:104;:156;;;;1817:36;1841:11;1817:23;:36::i;:::-;1697:156;1678:175;;1560:300;;;:::o;5732:115::-;5798:7;5824;:16;5832:7;5824:16;;;;;;;;;;;;;;;;;;;;;5817:23;;5732:115;;;:::o;14794:662::-;14954:9;:31;;;;14983:1;14967:18;;:4;:18;;;;14954:31;14950:460;;;15001:13;15017:22;15031:7;15017:13;:22::i;:::-;15001:38;;15183:1;15167:18;;:4;:18;;;;:35;;;;;15198:4;15189:13;;:5;:13;;;;15167:35;:69;;;;;15207:29;15224:5;15231:4;15207:16;:29::i;:::-;15206:30;15167:69;15163:142;;;15285:4;15263:27;;;;;;;;;;;:::i;:::-;;;;;;;;15163:142;15323:9;15319:81;;;15377:7;15373:2;15357:28;;15366:5;15357:28;;;;;;;;;;;;15319:81;14987:423;14950:460;15447:2;15420:15;:24;15436:7;15420:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;14794:662;;;;:::o;1915:249:23:-;2076:15;:13;:15::i;:::-;2065:26;;:7;:26;;;2061:97;;2107:40;;;;;;;;;;:::i;:::-;;;;;;;;2061:97;1915:249;;;:::o;3173:92:8:-;3224:13;3249:9;;;;;;;;;;;;;;3173:92;:::o;2676:255::-;2740:13;2765:22;2779:7;2765:13;:22::i;:::-;;2798:21;2822:10;:8;:10::i;:::-;2798:34;;2873:1;2855:7;2849:21;:25;:75;;;;;;;;;;;;;;;;;2891:7;2900:18;:7;:16;:18::i;:::-;2877:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2849:75;2842:82;;;2676:255;;;:::o;763:146:17:-;839:4;877:25;862:40;;;:11;:40;;;;855:47;;763:146;;;:::o;987:632:16:-;1043:13;1092:14;1129:1;1109:17;1120:5;1109:10;:17::i;:::-;:21;1092:38;;1144:20;1178:6;1167:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1144:41;;1199:11;1294:6;1290:2;1286:15;1278:6;1274:28;1267:35;;1329:247;1336:4;1329:247;;;1360:5;;;;;;;;1464:10;1459:2;1452:5;1448:14;1443:32;1438:3;1430:46;1520:2;1511:11;;;;;;:::i;:::-;;;;;1553:1;1544:5;:10;1329:247;1540:21;1329:247;1596:6;1589:13;;;;;987:632;;;:::o;25316:916:19:-;25369:7;25388:14;25405:1;25388:18;;25453:8;25444:5;:17;25440:103;;25490:8;25481:17;;;;;;:::i;:::-;;;;;25526:2;25516:12;;;;25440:103;25569:8;25560:5;:17;25556:103;;25606:8;25597:17;;;;;;:::i;:::-;;;;;25642:2;25632:12;;;;25556:103;25685:8;25676:5;:17;25672:103;;25722:8;25713:17;;;;;;:::i;:::-;;;;;25758:2;25748:12;;;;25672:103;25801:7;25792:5;:16;25788:100;;25837:7;25828:16;;;;;;:::i;:::-;;;;;25872:1;25862:11;;;;25788:100;25914:7;25905:5;:16;25901:100;;25950:7;25941:16;;;;;;:::i;:::-;;;;;25985:1;25975:11;;;;25901:100;26027:7;26018:5;:16;26014:100;;26063:7;26054:16;;;;;;:::i;:::-;;;;;26098:1;26088:11;;;;26014:100;26140:7;26131:5;:16;26127:66;;26177:1;26167:11;;;;26127:66;26219:6;26212:13;;;25316:916;;;:::o;7:75:26:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:126::-;1555:7;1595:42;1588:5;1584:54;1573:65;;1518:126;;;:::o;1650:96::-;1687:7;1716:24;1734:5;1716:24;:::i;:::-;1705:35;;1650:96;;;:::o;1752:122::-;1825:24;1843:5;1825:24;:::i;:::-;1818:5;1815:35;1805:63;;1864:1;1861;1854:12;1805:63;1752:122;:::o;1880:139::-;1926:5;1964:6;1951:20;1942:29;;1980:33;2007:5;1980:33;:::i;:::-;1880:139;;;;:::o;2025:474::-;2093:6;2101;2150:2;2138:9;2129:7;2125:23;2121:32;2118:119;;;2156:79;;:::i;:::-;2118:119;2276:1;2301:53;2346:7;2337:6;2326:9;2322:22;2301:53;:::i;:::-;2291:63;;2247:117;2403:2;2429:53;2474:7;2465:6;2454:9;2450:22;2429:53;:::i;:::-;2419:63;;2374:118;2025:474;;;;;:::o;2505:99::-;2557:6;2591:5;2585:12;2575:22;;2505:99;;;:::o;2610:169::-;2694:11;2728:6;2723:3;2716:19;2768:4;2763:3;2759:14;2744:29;;2610:169;;;;:::o;2785:246::-;2866:1;2876:113;2890:6;2887:1;2884:13;2876:113;;;2975:1;2970:3;2966:11;2960:18;2956:1;2951:3;2947:11;2940:39;2912:2;2909:1;2905:10;2900:15;;2876:113;;;3023:1;3014:6;3009:3;3005:16;2998:27;2847:184;2785:246;;;:::o;3037:102::-;3078:6;3129:2;3125:7;3120:2;3113:5;3109:14;3105:28;3095:38;;3037:102;;;:::o;3145:377::-;3233:3;3261:39;3294:5;3261:39;:::i;:::-;3316:71;3380:6;3375:3;3316:71;:::i;:::-;3309:78;;3396:65;3454:6;3449:3;3442:4;3435:5;3431:16;3396:65;:::i;:::-;3486:29;3508:6;3486:29;:::i;:::-;3481:3;3477:39;3470:46;;3237:285;3145:377;;;;:::o;3528:313::-;3641:4;3679:2;3668:9;3664:18;3656:26;;3728:9;3722:4;3718:20;3714:1;3703:9;3699:17;3692:47;3756:78;3829:4;3820:6;3756:78;:::i;:::-;3748:86;;3528:313;;;;:::o;3847:77::-;3884:7;3913:5;3902:16;;3847:77;;;:::o;3930:122::-;4003:24;4021:5;4003:24;:::i;:::-;3996:5;3993:35;3983:63;;4042:1;4039;4032:12;3983:63;3930:122;:::o;4058:139::-;4104:5;4142:6;4129:20;4120:29;;4158:33;4185:5;4158:33;:::i;:::-;4058:139;;;;:::o;4203:329::-;4262:6;4311:2;4299:9;4290:7;4286:23;4282:32;4279:119;;;4317:79;;:::i;:::-;4279:119;4437:1;4462:53;4507:7;4498:6;4487:9;4483:22;4462:53;:::i;:::-;4452:63;;4408:117;4203:329;;;;:::o;4538:118::-;4625:24;4643:5;4625:24;:::i;:::-;4620:3;4613:37;4538:118;;:::o;4662:222::-;4755:4;4793:2;4782:9;4778:18;4770:26;;4806:71;4874:1;4863:9;4859:17;4850:6;4806:71;:::i;:::-;4662:222;;;;:::o;4890:474::-;4958:6;4966;5015:2;5003:9;4994:7;4990:23;4986:32;4983:119;;;5021:79;;:::i;:::-;4983:119;5141:1;5166:53;5211:7;5202:6;5191:9;5187:22;5166:53;:::i;:::-;5156:63;;5112:117;5268:2;5294:53;5339:7;5330:6;5319:9;5315:22;5294:53;:::i;:::-;5284:63;;5239:118;4890:474;;;;;:::o;5370:619::-;5447:6;5455;5463;5512:2;5500:9;5491:7;5487:23;5483:32;5480:119;;;5518:79;;:::i;:::-;5480:119;5638:1;5663:53;5708:7;5699:6;5688:9;5684:22;5663:53;:::i;:::-;5653:63;;5609:117;5765:2;5791:53;5836:7;5827:6;5816:9;5812:22;5791:53;:::i;:::-;5781:63;;5736:118;5893:2;5919:53;5964:7;5955:6;5944:9;5940:22;5919:53;:::i;:::-;5909:63;;5864:118;5370:619;;;;;:::o;5995:329::-;6054:6;6103:2;6091:9;6082:7;6078:23;6074:32;6071:119;;;6109:79;;:::i;:::-;6071:119;6229:1;6254:53;6299:7;6290:6;6279:9;6275:22;6254:53;:::i;:::-;6244:63;;6200:117;5995:329;;;;:::o;6330:118::-;6417:24;6435:5;6417:24;:::i;:::-;6412:3;6405:37;6330:118;;:::o;6454:222::-;6547:4;6585:2;6574:9;6570:18;6562:26;;6598:71;6666:1;6655:9;6651:17;6642:6;6598:71;:::i;:::-;6454:222;;;;:::o;6682:116::-;6752:21;6767:5;6752:21;:::i;:::-;6745:5;6742:32;6732:60;;6788:1;6785;6778:12;6732:60;6682:116;:::o;6804:133::-;6847:5;6885:6;6872:20;6863:29;;6901:30;6925:5;6901:30;:::i;:::-;6804:133;;;;:::o;6943:468::-;7008:6;7016;7065:2;7053:9;7044:7;7040:23;7036:32;7033:119;;;7071:79;;:::i;:::-;7033:119;7191:1;7216:53;7261:7;7252:6;7241:9;7237:22;7216:53;:::i;:::-;7206:63;;7162:117;7318:2;7344:50;7386:7;7377:6;7366:9;7362:22;7344:50;:::i;:::-;7334:60;;7289:115;6943:468;;;;;:::o;7417:117::-;7526:1;7523;7516:12;7540:117;7649:1;7646;7639:12;7663:180;7711:77;7708:1;7701:88;7808:4;7805:1;7798:15;7832:4;7829:1;7822:15;7849:281;7932:27;7954:4;7932:27;:::i;:::-;7924:6;7920:40;8062:6;8050:10;8047:22;8026:18;8014:10;8011:34;8008:62;8005:88;;;8073:18;;:::i;:::-;8005:88;8113:10;8109:2;8102:22;7892:238;7849:281;;:::o;8136:129::-;8170:6;8197:20;;:::i;:::-;8187:30;;8226:33;8254:4;8246:6;8226:33;:::i;:::-;8136:129;;;:::o;8271:307::-;8332:4;8422:18;8414:6;8411:30;8408:56;;;8444:18;;:::i;:::-;8408:56;8482:29;8504:6;8482:29;:::i;:::-;8474:37;;8566:4;8560;8556:15;8548:23;;8271:307;;;:::o;8584:146::-;8681:6;8676:3;8671;8658:30;8722:1;8713:6;8708:3;8704:16;8697:27;8584:146;;;:::o;8736:423::-;8813:5;8838:65;8854:48;8895:6;8854:48;:::i;:::-;8838:65;:::i;:::-;8829:74;;8926:6;8919:5;8912:21;8964:4;8957:5;8953:16;9002:3;8993:6;8988:3;8984:16;8981:25;8978:112;;;9009:79;;:::i;:::-;8978:112;9099:54;9146:6;9141:3;9136;9099:54;:::i;:::-;8819:340;8736:423;;;;;:::o;9178:338::-;9233:5;9282:3;9275:4;9267:6;9263:17;9259:27;9249:122;;9290:79;;:::i;:::-;9249:122;9407:6;9394:20;9432:78;9506:3;9498:6;9491:4;9483:6;9479:17;9432:78;:::i;:::-;9423:87;;9239:277;9178:338;;;;:::o;9522:943::-;9617:6;9625;9633;9641;9690:3;9678:9;9669:7;9665:23;9661:33;9658:120;;;9697:79;;:::i;:::-;9658:120;9817:1;9842:53;9887:7;9878:6;9867:9;9863:22;9842:53;:::i;:::-;9832:63;;9788:117;9944:2;9970:53;10015:7;10006:6;9995:9;9991:22;9970:53;:::i;:::-;9960:63;;9915:118;10072:2;10098:53;10143:7;10134:6;10123:9;10119:22;10098:53;:::i;:::-;10088:63;;10043:118;10228:2;10217:9;10213:18;10200:32;10259:18;10251:6;10248:30;10245:117;;;10281:79;;:::i;:::-;10245:117;10386:62;10440:7;10431:6;10420:9;10416:22;10386:62;:::i;:::-;10376:72;;10171:287;9522:943;;;;;;;:::o;10471:180::-;10519:77;10516:1;10509:88;10616:4;10613:1;10606:15;10640:4;10637:1;10630:15;10657:320;10701:6;10738:1;10732:4;10728:12;10718:22;;10785:1;10779:4;10775:12;10806:18;10796:81;;10862:4;10854:6;10850:17;10840:27;;10796:81;10924:2;10916:6;10913:14;10893:18;10890:38;10887:84;;10943:18;;:::i;:::-;10887:84;10708:269;10657:320;;;:::o;10983:442::-;11132:4;11170:2;11159:9;11155:18;11147:26;;11183:71;11251:1;11240:9;11236:17;11227:6;11183:71;:::i;:::-;11264:72;11332:2;11321:9;11317:18;11308:6;11264:72;:::i;:::-;11346;11414:2;11403:9;11399:18;11390:6;11346:72;:::i;:::-;10983:442;;;;;;:::o;11431:98::-;11482:6;11516:5;11510:12;11500:22;;11431:98;;;:::o;11535:168::-;11618:11;11652:6;11647:3;11640:19;11692:4;11687:3;11683:14;11668:29;;11535:168;;;;:::o;11709:373::-;11795:3;11823:38;11855:5;11823:38;:::i;:::-;11877:70;11940:6;11935:3;11877:70;:::i;:::-;11870:77;;11956:65;12014:6;12009:3;12002:4;11995:5;11991:16;11956:65;:::i;:::-;12046:29;12068:6;12046:29;:::i;:::-;12041:3;12037:39;12030:46;;11799:283;11709:373;;;;:::o;12088:640::-;12283:4;12321:3;12310:9;12306:19;12298:27;;12335:71;12403:1;12392:9;12388:17;12379:6;12335:71;:::i;:::-;12416:72;12484:2;12473:9;12469:18;12460:6;12416:72;:::i;:::-;12498;12566:2;12555:9;12551:18;12542:6;12498:72;:::i;:::-;12617:9;12611:4;12607:20;12602:2;12591:9;12587:18;12580:48;12645:76;12716:4;12707:6;12645:76;:::i;:::-;12637:84;;12088:640;;;;;;;:::o;12734:141::-;12790:5;12821:6;12815:13;12806:22;;12837:32;12863:5;12837:32;:::i;:::-;12734:141;;;;:::o;12881:349::-;12950:6;12999:2;12987:9;12978:7;12974:23;12970:32;12967:119;;;13005:79;;:::i;:::-;12967:119;13125:1;13150:63;13205:7;13196:6;13185:9;13181:22;13150:63;:::i;:::-;13140:73;;13096:127;12881:349;;;;:::o;13236:148::-;13338:11;13375:3;13360:18;;13236:148;;;;:::o;13390:390::-;13496:3;13524:39;13557:5;13524:39;:::i;:::-;13579:89;13661:6;13656:3;13579:89;:::i;:::-;13572:96;;13677:65;13735:6;13730:3;13723:4;13716:5;13712:16;13677:65;:::i;:::-;13767:6;13762:3;13758:16;13751:23;;13500:280;13390:390;;;;:::o;13786:435::-;13966:3;13988:95;14079:3;14070:6;13988:95;:::i;:::-;13981:102;;14100:95;14191:3;14182:6;14100:95;:::i;:::-;14093:102;;14212:3;14205:10;;13786:435;;;;;:::o;14227:180::-;14367:32;14363:1;14355:6;14351:14;14344:56;14227:180;:::o;14413:366::-;14555:3;14576:67;14640:2;14635:3;14576:67;:::i;:::-;14569:74;;14652:93;14741:3;14652:93;:::i;:::-;14770:2;14765:3;14761:12;14754:19;;14413:366;;;:::o;14785:419::-;14951:4;14989:2;14978:9;14974:18;14966:26;;15038:9;15032:4;15028:20;15024:1;15013:9;15009:17;15002:47;15066:131;15192:4;15066:131;:::i;:::-;15058:139;;14785:419;;;:::o;15210:180::-;15258:77;15255:1;15248:88;15355:4;15352:1;15345:15;15379:4;15376:1;15369:15"},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","getGoatAddress()":"f8cacb4c","goat()":"31d382a2","goatTokenId()":"e4d9d122","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","owner()":"8da5cb5b","ownerOf(uint256)":"6352211e","renounceOwnership()":"715018a6","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd","transferNft(address,address)":"065db7a5","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfert\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGoatAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"goat\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"goatTokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"transferNft\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"},\"Transfert(address,address,uint256)\":{\"details\":\"Transfert event\",\"params\":{\"amount\":\": amount of the token\",\"from\":\": address of the sender\",\"to\":\": address of the receiver\"}}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Constructor to mint a goat token and set the token URI\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"getGoatAddress()\":{\"details\":\"getGoatAddress function to get the address of the goat\",\"returns\":{\"_0\":\"address of the goat\"}},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"override supportsInterface and tokenURI functions\",\"params\":{\"interfaceId\":\": id of the interface\"},\"returns\":{\"_0\":\"boolean\"}},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"override tokenURI function\",\"params\":{\"tokenId\":\": id of the token\"},\"returns\":{\"_0\":\"string\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferNft(address,address)\":{\"details\":\"transferNft function to transfer the goat token to a new address\",\"params\":{\"_from\":\": address of the sender\",\"_to\":\": address of the receiver\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"goat\":{\"details\":\"goat: address of the goatgoatTokenId: id of the goat token\"}},\"title\":\"GoatNft GoatNft - a contract for my non-fungible goats.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/nfts/GoatNft.sol\":\"GoatNft\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x1b8691e244f6e11d987459993671db0af33e6a29f7805eac6a9925cc6b601957\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9e2a5efc2e14e98f5fe91bbab769199b4987a40dd3b96075b04957fda2ae80f\",\"dweb:/ipfs/QmbAjrSSVBiJ6MbgF7Jkr53m674iGMZ6haWbbRrWDZJraK\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x39ed367e54765186281efcfe83e47cf0ad62cc879f10e191360712507125f29a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c5ae6d85bd48cca8d6d2fcec8c63efd86f56f8a5832577a47e403ce0e65cb09\",\"dweb:/ipfs/QmUtcS8AbRSWhuc61puYet58os8FvSqm329ChoW8wwZXZk\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0xe52813067c6d5838eeb34e1da8beb2514371a7d778266013b04ca3be1dda7100\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53fb552d625eb5f60ef9dce439c826bb780952cbbafc985db6e48ac6382a5585\",\"dweb:/ipfs/QmSEbLqEWN1SqsWekfqt6RWC4oEajFWtZ5j8i6gKaGdtKr\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0x40399695922383778f9f540a620bec475a2f8e0f08d41f0005682842e28a9855\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://746d295e403931aeb9d6065fd5a0871f43ab5459814a60623611e4b6641a09fd\",\"dweb:/ipfs/QmWrgT8YJrQ9FfD1o3YYArwo57e7MGdpFKuM74qJ4qE34E\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x44f87e91783e88415bde66f1a63f6c7f0076f2d511548820407d5c95643ac56c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13a51bc2b23827744dcf5bad10c69e72528cf015a6fe48c93632cdb2c0eb1251\",\"dweb:/ipfs/QmZwPA47Yqgje1qtkdEFEja8ntTahMStYzKf5q3JRnaR7d\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/nfts/GoatNft.sol\":{\"keccak256\":\"0x4c01ee8ee4b3153b63de3625691fdc4b74c4f1e2349c5838cb20d7b6accaf623\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://908a25f0a4edeff31e50339f08d5e03aae61d2f1e492dea49ce1c63944bf1cdb\",\"dweb:/ipfs/QmeCBaQ4EmbA2Hc2uHbTu8V3NyCGBoXVfGw371DRxiRRQ1\"]}},\"version\":1}"}},"contracts/nfts/TournamentNft.sol":{"TournamentNft":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getTracking","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"winner","type":"address"},{"internalType":"uint256","name":"tournamentId","type":"uint256"}],"name":"mintTnt","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_1005":{"entryPoint":null,"id":1005,"parameterSlots":2,"returnSlots":0},"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_8139":{"entryPoint":null,"id":8139,"parameterSlots":0,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":306,"id":146,"parameterSlots":1,"returnSlots":0},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":1421,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":1438,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":662,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":504,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":983,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":1401,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":1369,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":798,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":944,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":818,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1138,"id":null,"parameterSlots":2,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":683,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":609,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":1108,"id":null,"parameterSlots":2,"returnSlots":1},"identity":{"entryPoint":808,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":1076,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":562,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":515,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":858,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":699,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":1063,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":916,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":712,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":868,"id":null,"parameterSlots":3,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":911,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:5817:26","statements":[{"body":{"nodeType":"YulBlock","src":"66:40:26","statements":[{"nodeType":"YulAssignment","src":"77:22:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"87:5:26"},"nodeType":"YulFunctionCall","src":"87:12:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"77:6:26"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49:5:26","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"59:6:26","type":""}],"src":"7:99:26"},{"body":{"nodeType":"YulBlock","src":"140:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"157:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"160:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"150:6:26"},"nodeType":"YulFunctionCall","src":"150:88:26"},"nodeType":"YulExpressionStatement","src":"150:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"254:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"257:4:26","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"247:6:26"},"nodeType":"YulFunctionCall","src":"247:15:26"},"nodeType":"YulExpressionStatement","src":"247:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"278:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"281:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"271:6:26"},"nodeType":"YulFunctionCall","src":"271:15:26"},"nodeType":"YulExpressionStatement","src":"271:15:26"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"112:180:26"},{"body":{"nodeType":"YulBlock","src":"326:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"343:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"346:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"336:6:26"},"nodeType":"YulFunctionCall","src":"336:88:26"},"nodeType":"YulExpressionStatement","src":"336:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"443:4:26","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"433:6:26"},"nodeType":"YulFunctionCall","src":"433:15:26"},"nodeType":"YulExpressionStatement","src":"433:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"464:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"467:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"457:6:26"},"nodeType":"YulFunctionCall","src":"457:15:26"},"nodeType":"YulExpressionStatement","src":"457:15:26"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"298:180:26"},{"body":{"nodeType":"YulBlock","src":"535:269:26","statements":[{"nodeType":"YulAssignment","src":"545:22:26","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"559:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"565:1:26","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"555:3:26"},"nodeType":"YulFunctionCall","src":"555:12:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"545:6:26"}]},{"nodeType":"YulVariableDeclaration","src":"576:38:26","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"606:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"612:1:26","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"602:3:26"},"nodeType":"YulFunctionCall","src":"602:12:26"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"580:18:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"653:51:26","statements":[{"nodeType":"YulAssignment","src":"667:27:26","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"681:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"689:4:26","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"677:3:26"},"nodeType":"YulFunctionCall","src":"677:17:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"667:6:26"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"633:18:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"626:6:26"},"nodeType":"YulFunctionCall","src":"626:26:26"},"nodeType":"YulIf","src":"623:81:26"},{"body":{"nodeType":"YulBlock","src":"756:42:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"770:16:26"},"nodeType":"YulFunctionCall","src":"770:18:26"},"nodeType":"YulExpressionStatement","src":"770:18:26"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"720:18:26"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"743:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"751:2:26","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"740:2:26"},"nodeType":"YulFunctionCall","src":"740:14:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"717:2:26"},"nodeType":"YulFunctionCall","src":"717:38:26"},"nodeType":"YulIf","src":"714:84:26"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"519:4:26","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"528:6:26","type":""}],"src":"484:320:26"},{"body":{"nodeType":"YulBlock","src":"864:87:26","statements":[{"nodeType":"YulAssignment","src":"874:11:26","value":{"name":"ptr","nodeType":"YulIdentifier","src":"882:3:26"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"874:4:26"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"902:1:26","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"905:3:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"895:6:26"},"nodeType":"YulFunctionCall","src":"895:14:26"},"nodeType":"YulExpressionStatement","src":"895:14:26"},{"nodeType":"YulAssignment","src":"918:26:26","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"936:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"939:4:26","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"926:9:26"},"nodeType":"YulFunctionCall","src":"926:18:26"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"918:4:26"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"851:3:26","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"859:4:26","type":""}],"src":"810:141:26"},{"body":{"nodeType":"YulBlock","src":"1001:49:26","statements":[{"nodeType":"YulAssignment","src":"1011:33:26","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1029:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"1036:2:26","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1025:3:26"},"nodeType":"YulFunctionCall","src":"1025:14:26"},{"kind":"number","nodeType":"YulLiteral","src":"1041:2:26","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"1021:3:26"},"nodeType":"YulFunctionCall","src":"1021:23:26"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1011:6:26"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"984:5:26","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"994:6:26","type":""}],"src":"957:93:26"},{"body":{"nodeType":"YulBlock","src":"1109:54:26","statements":[{"nodeType":"YulAssignment","src":"1119:37:26","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"1144:4:26"},{"name":"value","nodeType":"YulIdentifier","src":"1150:5:26"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1140:3:26"},"nodeType":"YulFunctionCall","src":"1140:16:26"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"1119:8:26"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"1084:4:26","type":""},{"name":"value","nodeType":"YulTypedName","src":"1090:5:26","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"1100:8:26","type":""}],"src":"1056:107:26"},{"body":{"nodeType":"YulBlock","src":"1245:317:26","statements":[{"nodeType":"YulVariableDeclaration","src":"1255:35:26","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"1276:10:26"},{"kind":"number","nodeType":"YulLiteral","src":"1288:1:26","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1272:3:26"},"nodeType":"YulFunctionCall","src":"1272:18:26"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"1259:9:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1299:109:26","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"1330:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"1341:66:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"1311:18:26"},"nodeType":"YulFunctionCall","src":"1311:97:26"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"1303:4:26","type":""}]},{"nodeType":"YulAssignment","src":"1417:51:26","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"1448:9:26"},{"name":"toInsert","nodeType":"YulIdentifier","src":"1459:8:26"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"1429:18:26"},"nodeType":"YulFunctionCall","src":"1429:39:26"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"1417:8:26"}]},{"nodeType":"YulAssignment","src":"1477:30:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1490:5:26"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"1501:4:26"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1497:3:26"},"nodeType":"YulFunctionCall","src":"1497:9:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1486:3:26"},"nodeType":"YulFunctionCall","src":"1486:21:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1477:5:26"}]},{"nodeType":"YulAssignment","src":"1516:40:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1529:5:26"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"1540:8:26"},{"name":"mask","nodeType":"YulIdentifier","src":"1550:4:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1536:3:26"},"nodeType":"YulFunctionCall","src":"1536:19:26"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1526:2:26"},"nodeType":"YulFunctionCall","src":"1526:30:26"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1516:6:26"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1206:5:26","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"1213:10:26","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"1225:8:26","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"1238:6:26","type":""}],"src":"1169:393:26"},{"body":{"nodeType":"YulBlock","src":"1613:32:26","statements":[{"nodeType":"YulAssignment","src":"1623:16:26","value":{"name":"value","nodeType":"YulIdentifier","src":"1634:5:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1623:7:26"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1595:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1605:7:26","type":""}],"src":"1568:77:26"},{"body":{"nodeType":"YulBlock","src":"1683:28:26","statements":[{"nodeType":"YulAssignment","src":"1693:12:26","value":{"name":"value","nodeType":"YulIdentifier","src":"1700:5:26"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"1693:3:26"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1669:5:26","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"1679:3:26","type":""}],"src":"1651:60:26"},{"body":{"nodeType":"YulBlock","src":"1777:82:26","statements":[{"nodeType":"YulAssignment","src":"1787:66:26","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1845:5:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1827:17:26"},"nodeType":"YulFunctionCall","src":"1827:24:26"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"1818:8:26"},"nodeType":"YulFunctionCall","src":"1818:34:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1800:17:26"},"nodeType":"YulFunctionCall","src":"1800:53:26"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"1787:9:26"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1757:5:26","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"1767:9:26","type":""}],"src":"1717:142:26"},{"body":{"nodeType":"YulBlock","src":"1912:28:26","statements":[{"nodeType":"YulAssignment","src":"1922:12:26","value":{"name":"value","nodeType":"YulIdentifier","src":"1929:5:26"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"1922:3:26"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1898:5:26","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"1908:3:26","type":""}],"src":"1865:75:26"},{"body":{"nodeType":"YulBlock","src":"2022:193:26","statements":[{"nodeType":"YulVariableDeclaration","src":"2032:63:26","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"2087:7:26"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"2056:30:26"},"nodeType":"YulFunctionCall","src":"2056:39:26"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"2036:16:26","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2111:4:26"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2151:4:26"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"2145:5:26"},"nodeType":"YulFunctionCall","src":"2145:11:26"},{"name":"offset","nodeType":"YulIdentifier","src":"2158:6:26"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"2190:16:26"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"2166:23:26"},"nodeType":"YulFunctionCall","src":"2166:41:26"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"2117:27:26"},"nodeType":"YulFunctionCall","src":"2117:91:26"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2104:6:26"},"nodeType":"YulFunctionCall","src":"2104:105:26"},"nodeType":"YulExpressionStatement","src":"2104:105:26"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"1999:4:26","type":""},{"name":"offset","nodeType":"YulTypedName","src":"2005:6:26","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"2013:7:26","type":""}],"src":"1946:269:26"},{"body":{"nodeType":"YulBlock","src":"2270:24:26","statements":[{"nodeType":"YulAssignment","src":"2280:8:26","value":{"kind":"number","nodeType":"YulLiteral","src":"2287:1:26","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"2280:3:26"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"2266:3:26","type":""}],"src":"2221:73:26"},{"body":{"nodeType":"YulBlock","src":"2353:136:26","statements":[{"nodeType":"YulVariableDeclaration","src":"2363:46:26","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"2377:30:26"},"nodeType":"YulFunctionCall","src":"2377:32:26"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"2367:6:26","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2462:4:26"},{"name":"offset","nodeType":"YulIdentifier","src":"2468:6:26"},{"name":"zero_0","nodeType":"YulIdentifier","src":"2476:6:26"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"2418:43:26"},"nodeType":"YulFunctionCall","src":"2418:65:26"},"nodeType":"YulExpressionStatement","src":"2418:65:26"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"2339:4:26","type":""},{"name":"offset","nodeType":"YulTypedName","src":"2345:6:26","type":""}],"src":"2300:189:26"},{"body":{"nodeType":"YulBlock","src":"2545:136:26","statements":[{"body":{"nodeType":"YulBlock","src":"2612:63:26","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2656:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"2663:1:26","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"2626:29:26"},"nodeType":"YulFunctionCall","src":"2626:39:26"},"nodeType":"YulExpressionStatement","src":"2626:39:26"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2565:5:26"},{"name":"end","nodeType":"YulIdentifier","src":"2572:3:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2562:2:26"},"nodeType":"YulFunctionCall","src":"2562:14:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2577:26:26","statements":[{"nodeType":"YulAssignment","src":"2579:22:26","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2592:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"2599:1:26","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2588:3:26"},"nodeType":"YulFunctionCall","src":"2588:13:26"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"2579:5:26"}]}]},"pre":{"nodeType":"YulBlock","src":"2559:2:26","statements":[]},"src":"2555:120:26"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"2533:5:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"2540:3:26","type":""}],"src":"2495:186:26"},{"body":{"nodeType":"YulBlock","src":"2766:464:26","statements":[{"body":{"nodeType":"YulBlock","src":"2792:431:26","statements":[{"nodeType":"YulVariableDeclaration","src":"2806:54:26","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2854:5:26"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"2822:31:26"},"nodeType":"YulFunctionCall","src":"2822:38:26"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"2810:8:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2873:63:26","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"2896:8:26"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"2924:10:26"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"2906:17:26"},"nodeType":"YulFunctionCall","src":"2906:29:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2892:3:26"},"nodeType":"YulFunctionCall","src":"2892:44:26"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"2877:11:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"3093:27:26","statements":[{"nodeType":"YulAssignment","src":"3095:23:26","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"3110:8:26"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"3095:11:26"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"3077:10:26"},{"kind":"number","nodeType":"YulLiteral","src":"3089:2:26","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3074:2:26"},"nodeType":"YulFunctionCall","src":"3074:18:26"},"nodeType":"YulIf","src":"3071:49:26"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"3162:11:26"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"3179:8:26"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"3207:3:26"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"3189:17:26"},"nodeType":"YulFunctionCall","src":"3189:22:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3175:3:26"},"nodeType":"YulFunctionCall","src":"3175:37:26"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"3133:28:26"},"nodeType":"YulFunctionCall","src":"3133:80:26"},"nodeType":"YulExpressionStatement","src":"3133:80:26"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"2783:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"2788:2:26","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2780:2:26"},"nodeType":"YulFunctionCall","src":"2780:11:26"},"nodeType":"YulIf","src":"2777:446:26"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"2742:5:26","type":""},{"name":"len","nodeType":"YulTypedName","src":"2749:3:26","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"2754:10:26","type":""}],"src":"2687:543:26"},{"body":{"nodeType":"YulBlock","src":"3299:54:26","statements":[{"nodeType":"YulAssignment","src":"3309:37:26","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"3334:4:26"},{"name":"value","nodeType":"YulIdentifier","src":"3340:5:26"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3330:3:26"},"nodeType":"YulFunctionCall","src":"3330:16:26"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"3309:8:26"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"3274:4:26","type":""},{"name":"value","nodeType":"YulTypedName","src":"3280:5:26","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"3290:8:26","type":""}],"src":"3236:117:26"},{"body":{"nodeType":"YulBlock","src":"3410:118:26","statements":[{"nodeType":"YulVariableDeclaration","src":"3420:68:26","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3469:1:26","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"3472:5:26"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3465:3:26"},"nodeType":"YulFunctionCall","src":"3465:13:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3484:1:26","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3480:3:26"},"nodeType":"YulFunctionCall","src":"3480:6:26"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"3436:28:26"},"nodeType":"YulFunctionCall","src":"3436:51:26"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3432:3:26"},"nodeType":"YulFunctionCall","src":"3432:56:26"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"3424:4:26","type":""}]},{"nodeType":"YulAssignment","src":"3497:25:26","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3511:4:26"},{"name":"mask","nodeType":"YulIdentifier","src":"3517:4:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3507:3:26"},"nodeType":"YulFunctionCall","src":"3507:15:26"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3497:6:26"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3387:4:26","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"3393:5:26","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"3403:6:26","type":""}],"src":"3359:169:26"},{"body":{"nodeType":"YulBlock","src":"3614:214:26","statements":[{"nodeType":"YulAssignment","src":"3747:37:26","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3774:4:26"},{"name":"len","nodeType":"YulIdentifier","src":"3780:3:26"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"3755:18:26"},"nodeType":"YulFunctionCall","src":"3755:29:26"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"3747:4:26"}]},{"nodeType":"YulAssignment","src":"3793:29:26","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3804:4:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3814:1:26","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"3817:3:26"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3810:3:26"},"nodeType":"YulFunctionCall","src":"3810:11:26"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3801:2:26"},"nodeType":"YulFunctionCall","src":"3801:21:26"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"3793:4:26"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3595:4:26","type":""},{"name":"len","nodeType":"YulTypedName","src":"3601:3:26","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"3609:4:26","type":""}],"src":"3533:295:26"},{"body":{"nodeType":"YulBlock","src":"3925:1303:26","statements":[{"nodeType":"YulVariableDeclaration","src":"3936:51:26","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3983:3:26"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"3950:32:26"},"nodeType":"YulFunctionCall","src":"3950:37:26"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"3940:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"4072:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4074:16:26"},"nodeType":"YulFunctionCall","src":"4074:18:26"},"nodeType":"YulExpressionStatement","src":"4074:18:26"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4044:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"4052:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4041:2:26"},"nodeType":"YulFunctionCall","src":"4041:30:26"},"nodeType":"YulIf","src":"4038:56:26"},{"nodeType":"YulVariableDeclaration","src":"4104:52:26","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4150:4:26"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"4144:5:26"},"nodeType":"YulFunctionCall","src":"4144:11:26"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"4118:25:26"},"nodeType":"YulFunctionCall","src":"4118:38:26"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"4108:6:26","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4249:4:26"},{"name":"oldLen","nodeType":"YulIdentifier","src":"4255:6:26"},{"name":"newLen","nodeType":"YulIdentifier","src":"4263:6:26"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"4203:45:26"},"nodeType":"YulFunctionCall","src":"4203:67:26"},"nodeType":"YulExpressionStatement","src":"4203:67:26"},{"nodeType":"YulVariableDeclaration","src":"4280:18:26","value":{"kind":"number","nodeType":"YulLiteral","src":"4297:1:26","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"4284:9:26","type":""}]},{"nodeType":"YulAssignment","src":"4308:17:26","value":{"kind":"number","nodeType":"YulLiteral","src":"4321:4:26","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"4308:9:26"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"4372:611:26","statements":[{"nodeType":"YulVariableDeclaration","src":"4386:37:26","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4405:6:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4417:4:26","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4413:3:26"},"nodeType":"YulFunctionCall","src":"4413:9:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4401:3:26"},"nodeType":"YulFunctionCall","src":"4401:22:26"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"4390:7:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4437:51:26","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4483:4:26"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"4451:31:26"},"nodeType":"YulFunctionCall","src":"4451:37:26"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"4441:6:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4501:10:26","value":{"kind":"number","nodeType":"YulLiteral","src":"4510:1:26","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"4505:1:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"4569:163:26","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4594:6:26"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4612:3:26"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"4617:9:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4608:3:26"},"nodeType":"YulFunctionCall","src":"4608:19:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4602:5:26"},"nodeType":"YulFunctionCall","src":"4602:26:26"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4587:6:26"},"nodeType":"YulFunctionCall","src":"4587:42:26"},"nodeType":"YulExpressionStatement","src":"4587:42:26"},{"nodeType":"YulAssignment","src":"4646:24:26","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4660:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"4668:1:26","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4656:3:26"},"nodeType":"YulFunctionCall","src":"4656:14:26"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4646:6:26"}]},{"nodeType":"YulAssignment","src":"4687:31:26","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"4704:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"4715:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4700:3:26"},"nodeType":"YulFunctionCall","src":"4700:18:26"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"4687:9:26"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4535:1:26"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"4538:7:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4532:2:26"},"nodeType":"YulFunctionCall","src":"4532:14:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4547:21:26","statements":[{"nodeType":"YulAssignment","src":"4549:17:26","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4558:1:26"},{"kind":"number","nodeType":"YulLiteral","src":"4561:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4554:3:26"},"nodeType":"YulFunctionCall","src":"4554:12:26"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"4549:1:26"}]}]},"pre":{"nodeType":"YulBlock","src":"4528:3:26","statements":[]},"src":"4524:208:26"},{"body":{"nodeType":"YulBlock","src":"4768:156:26","statements":[{"nodeType":"YulVariableDeclaration","src":"4786:43:26","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4813:3:26"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"4818:9:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4809:3:26"},"nodeType":"YulFunctionCall","src":"4809:19:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4803:5:26"},"nodeType":"YulFunctionCall","src":"4803:26:26"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"4790:9:26","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4853:6:26"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"4880:9:26"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4895:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"4903:4:26","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4891:3:26"},"nodeType":"YulFunctionCall","src":"4891:17:26"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"4861:18:26"},"nodeType":"YulFunctionCall","src":"4861:48:26"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4846:6:26"},"nodeType":"YulFunctionCall","src":"4846:64:26"},"nodeType":"YulExpressionStatement","src":"4846:64:26"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"4751:7:26"},{"name":"newLen","nodeType":"YulIdentifier","src":"4760:6:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4748:2:26"},"nodeType":"YulFunctionCall","src":"4748:19:26"},"nodeType":"YulIf","src":"4745:179:26"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4944:4:26"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4958:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"4966:1:26","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4954:3:26"},"nodeType":"YulFunctionCall","src":"4954:14:26"},{"kind":"number","nodeType":"YulLiteral","src":"4970:1:26","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4950:3:26"},"nodeType":"YulFunctionCall","src":"4950:22:26"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4937:6:26"},"nodeType":"YulFunctionCall","src":"4937:36:26"},"nodeType":"YulExpressionStatement","src":"4937:36:26"}]},"nodeType":"YulCase","src":"4365:618:26","value":{"kind":"number","nodeType":"YulLiteral","src":"4370:1:26","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"5000:222:26","statements":[{"nodeType":"YulVariableDeclaration","src":"5014:14:26","value":{"kind":"number","nodeType":"YulLiteral","src":"5027:1:26","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"5018:5:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"5051:67:26","statements":[{"nodeType":"YulAssignment","src":"5069:35:26","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5088:3:26"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"5093:9:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5084:3:26"},"nodeType":"YulFunctionCall","src":"5084:19:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5078:5:26"},"nodeType":"YulFunctionCall","src":"5078:26:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5069:5:26"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"5044:6:26"},"nodeType":"YulIf","src":"5041:77:26"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5138:4:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5197:5:26"},{"name":"newLen","nodeType":"YulIdentifier","src":"5204:6:26"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"5144:52:26"},"nodeType":"YulFunctionCall","src":"5144:67:26"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5131:6:26"},"nodeType":"YulFunctionCall","src":"5131:81:26"},"nodeType":"YulExpressionStatement","src":"5131:81:26"}]},"nodeType":"YulCase","src":"4992:230:26","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4345:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"4353:2:26","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4342:2:26"},"nodeType":"YulFunctionCall","src":"4342:14:26"},"nodeType":"YulSwitch","src":"4335:887:26"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"3914:4:26","type":""},{"name":"src","nodeType":"YulTypedName","src":"3920:3:26","type":""}],"src":"3833:1395:26"},{"body":{"nodeType":"YulBlock","src":"5279:81:26","statements":[{"nodeType":"YulAssignment","src":"5289:65:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5304:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"5311:42:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5300:3:26"},"nodeType":"YulFunctionCall","src":"5300:54:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5289:7:26"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5261:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5271:7:26","type":""}],"src":"5234:126:26"},{"body":{"nodeType":"YulBlock","src":"5411:51:26","statements":[{"nodeType":"YulAssignment","src":"5421:35:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5450:5:26"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"5432:17:26"},"nodeType":"YulFunctionCall","src":"5432:24:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5421:7:26"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5393:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5403:7:26","type":""}],"src":"5366:96:26"},{"body":{"nodeType":"YulBlock","src":"5533:53:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5550:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5573:5:26"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"5555:17:26"},"nodeType":"YulFunctionCall","src":"5555:24:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5543:6:26"},"nodeType":"YulFunctionCall","src":"5543:37:26"},"nodeType":"YulExpressionStatement","src":"5543:37:26"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5521:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5528:3:26","type":""}],"src":"5468:118:26"},{"body":{"nodeType":"YulBlock","src":"5690:124:26","statements":[{"nodeType":"YulAssignment","src":"5700:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5712:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"5723:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5708:3:26"},"nodeType":"YulFunctionCall","src":"5708:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5700:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5780:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5793:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"5804:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5789:3:26"},"nodeType":"YulFunctionCall","src":"5789:17:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"5736:43:26"},"nodeType":"YulFunctionCall","src":"5736:71:26"},"nodeType":"YulExpressionStatement","src":"5736:71:26"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5662:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5674:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5685:4:26","type":""}],"src":"5592:222:26"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":26,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b50336040518060400160405280600f81526020017f546f75726e616d656e74546f6b656e00000000000000000000000000000000008152506040518060400160405280600381526020017f544e540000000000000000000000000000000000000000000000000000000000815250816000908162000090919062000472565b508060019081620000a2919062000472565b505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036200011a5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016200011191906200059e565b60405180910390fd5b6200012b816200013260201b60201c565b50620005bb565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200027a57607f821691505b60208210810362000290576200028f62000232565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620002fa7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620002bb565b620003068683620002bb565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620003536200034d62000347846200031e565b62000328565b6200031e565b9050919050565b6000819050919050565b6200036f8362000332565b620003876200037e826200035a565b848454620002c8565b825550505050565b600090565b6200039e6200038f565b620003ab81848462000364565b505050565b5b81811015620003d357620003c760008262000394565b600181019050620003b1565b5050565b601f8211156200042257620003ec8162000296565b620003f784620002ab565b8101602085101562000407578190505b6200041f6200041685620002ab565b830182620003b0565b50505b505050565b600082821c905092915050565b6000620004476000198460080262000427565b1980831691505092915050565b600062000462838362000434565b9150826002028217905092915050565b6200047d82620001f8565b67ffffffffffffffff81111562000499576200049862000203565b5b620004a5825462000261565b620004b2828285620003d7565b600060209050601f831160018114620004ea5760008415620004d5578287015190505b620004e1858262000454565b86555062000551565b601f198416620004fa8662000296565b60005b828110156200052457848901518255600182019150602085019450602081019050620004fd565b8683101562000544578489015162000540601f89168262000434565b8355505b6001600288020188555050505b505050505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620005868262000559565b9050919050565b620005988162000579565b82525050565b6000602082019050620005b560008301846200058d565b92915050565b61203c80620005cb6000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c8063715018a6116100a2578063ac785e3911610071578063ac785e39146102cb578063b88d4fde146102fb578063c87b56dd14610317578063e985e9c514610347578063f2fde38b1461037757610116565b8063715018a6146102695780638da5cb5b1461027357806395d89b4114610291578063a22cb465146102af57610116565b806323b872dd116100e957806323b872dd146101b557806342842e0e146101d15780634d348eb5146101ed5780636352211e1461020957806370a082311461023957610116565b806301ffc9a71461011b57806306fdde031461014b578063081812fc14610169578063095ea7b314610199575b600080fd5b61013560048036038101906101309190611843565b610393565b604051610142919061188b565b60405180910390f35b610153610475565b6040516101609190611936565b60405180910390f35b610183600480360381019061017e919061198e565b610507565b60405161019091906119fc565b60405180910390f35b6101b360048036038101906101ae9190611a43565b610523565b005b6101cf60048036038101906101ca9190611a83565b610539565b005b6101eb60048036038101906101e69190611a83565b61063b565b005b61020760048036038101906102029190611a43565b61065b565b005b610223600480360381019061021e919061198e565b6106c3565b60405161023091906119fc565b60405180910390f35b610253600480360381019061024e9190611ad6565b6106d5565b6040516102609190611b12565b60405180910390f35b61027161078f565b005b61027b6107a3565b60405161028891906119fc565b60405180910390f35b6102996107cd565b6040516102a69190611936565b60405180910390f35b6102c960048036038101906102c49190611b59565b61085f565b005b6102e560048036038101906102e0919061198e565b610875565b6040516102f291906119fc565b60405180910390f35b61031560048036038101906103109190611cce565b6108b2565b005b610331600480360381019061032c919061198e565b6108d7565b60405161033e9190611936565b60405180910390f35b610361600480360381019061035c9190611d51565b610940565b60405161036e919061188b565b60405180910390f35b610391600480360381019061038c9190611ad6565b6109d4565b005b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061045e57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061046e575061046d82610a5a565b5b9050919050565b60606000805461048490611dc0565b80601f01602080910402602001604051908101604052809291908181526020018280546104b090611dc0565b80156104fd5780601f106104d2576101008083540402835291602001916104fd565b820191906000526020600020905b8154815290600101906020018083116104e057829003601f168201915b5050505050905090565b600061051282610ac4565b5061051c82610b4c565b9050919050565b6105358282610530610b89565b610b91565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036105ab5760006040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016105a291906119fc565b60405180910390fd5b60006105bf83836105ba610b89565b610ba3565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610635578382826040517f64283d7b00000000000000000000000000000000000000000000000000000000815260040161062c93929190611df1565b60405180910390fd5b50505050565b610656838383604051806020016040528060008152506108b2565b505050565b610663610dbd565b61066d8282610e44565b816007600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60006106ce82610ac4565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036107485760006040517f89c62b6400000000000000000000000000000000000000000000000000000000815260040161073f91906119fc565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610797610dbd565b6107a16000610f3d565b565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600180546107dc90611dc0565b80601f016020809104026020016040519081016040528092919081815260200182805461080890611dc0565b80156108555780601f1061082a57610100808354040283529160200191610855565b820191906000526020600020905b81548152906001019060200180831161083857829003601f168201915b5050505050905090565b61087161086a610b89565b8383611003565b5050565b60006007600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6108bd848484610539565b6108d16108c8610b89565b85858585611172565b50505050565b60606108e282610ac4565b5060006108ed611323565b9050600081511161090d5760405180602001604052806000815250610938565b806109178461133a565b604051602001610928929190611e64565b6040516020818303038152906040525b915050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6109dc610dbd565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a4e5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610a4591906119fc565b60405180910390fd5b610a5781610f3d565b50565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600080610ad083611408565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610b4357826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610b3a9190611b12565b60405180910390fd5b80915050919050565b60006004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600033905090565b610b9e8383836001611445565b505050565b600080610baf84611408565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610bf157610bf081848661160a565b5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610c8257610c33600085600080611445565b6001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610d05576001600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b846002600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b610dc5610b89565b73ffffffffffffffffffffffffffffffffffffffff16610de36107a3565b73ffffffffffffffffffffffffffffffffffffffff1614610e4257610e06610b89565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610e3991906119fc565b60405180910390fd5b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610eb65760006040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401610ead91906119fc565b60405180910390fd5b6000610ec483836000610ba3565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610f385760006040517f73c6ac6e000000000000000000000000000000000000000000000000000000008152600401610f2f91906119fc565b60405180910390fd5b505050565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361107457816040517f5b08ba1800000000000000000000000000000000000000000000000000000000815260040161106b91906119fc565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051611165919061188b565b60405180910390a3505050565b60008373ffffffffffffffffffffffffffffffffffffffff163b111561131c578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02868685856040518563ffffffff1660e01b81526004016111d19493929190611edd565b6020604051808303816000875af192505050801561120d57506040513d601f19601f8201168201806040525081019061120a9190611f3e565b60015b611291573d806000811461123d576040519150601f19603f3d011682016040523d82523d6000602084013e611242565b606091505b50600081510361128957836040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161128091906119fc565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461131a57836040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161131191906119fc565b60405180910390fd5b505b5050505050565b606060405180602001604052806000815250905090565b60606000600161134984611684565b01905060008167ffffffffffffffff81111561136857611367611ba3565b5b6040519080825280601f01601f19166020018201604052801561139a5781602001600182028036833780820191505090505b509050600082602001820190505b6001156113fd578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85816113f1576113f0611f6b565b5b049450600085036113a8575b819350505050919050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b808061147e5750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b156115b257600061148e84610ac4565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156114f957508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b801561150c575061150a8184610940565b155b1561154e57826040517fa9fbf51f00000000000000000000000000000000000000000000000000000000815260040161154591906119fc565b60405180910390fd5b81156115b057838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b836004600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b6116126107a3565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161461167f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161167690611fe6565b60405180910390fd5b505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083106116e2577a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083816116d8576116d7611f6b565b5b0492506040810190505b6d04ee2d6d415b85acef8100000000831061171f576d04ee2d6d415b85acef8100000000838161171557611714611f6b565b5b0492506020810190505b662386f26fc10000831061174e57662386f26fc10000838161174457611743611f6b565b5b0492506010810190505b6305f5e1008310611777576305f5e100838161176d5761176c611f6b565b5b0492506008810190505b612710831061179c57612710838161179257611791611f6b565b5b0492506004810190505b606483106117bf57606483816117b5576117b4611f6b565b5b0492506002810190505b600a83106117ce576001810190505b80915050919050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611820816117eb565b811461182b57600080fd5b50565b60008135905061183d81611817565b92915050565b600060208284031215611859576118586117e1565b5b60006118678482850161182e565b91505092915050565b60008115159050919050565b61188581611870565b82525050565b60006020820190506118a0600083018461187c565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156118e05780820151818401526020810190506118c5565b60008484015250505050565b6000601f19601f8301169050919050565b6000611908826118a6565b61191281856118b1565b93506119228185602086016118c2565b61192b816118ec565b840191505092915050565b6000602082019050818103600083015261195081846118fd565b905092915050565b6000819050919050565b61196b81611958565b811461197657600080fd5b50565b60008135905061198881611962565b92915050565b6000602082840312156119a4576119a36117e1565b5b60006119b284828501611979565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006119e6826119bb565b9050919050565b6119f6816119db565b82525050565b6000602082019050611a1160008301846119ed565b92915050565b611a20816119db565b8114611a2b57600080fd5b50565b600081359050611a3d81611a17565b92915050565b60008060408385031215611a5a57611a596117e1565b5b6000611a6885828601611a2e565b9250506020611a7985828601611979565b9150509250929050565b600080600060608486031215611a9c57611a9b6117e1565b5b6000611aaa86828701611a2e565b9350506020611abb86828701611a2e565b9250506040611acc86828701611979565b9150509250925092565b600060208284031215611aec57611aeb6117e1565b5b6000611afa84828501611a2e565b91505092915050565b611b0c81611958565b82525050565b6000602082019050611b276000830184611b03565b92915050565b611b3681611870565b8114611b4157600080fd5b50565b600081359050611b5381611b2d565b92915050565b60008060408385031215611b7057611b6f6117e1565b5b6000611b7e85828601611a2e565b9250506020611b8f85828601611b44565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611bdb826118ec565b810181811067ffffffffffffffff82111715611bfa57611bf9611ba3565b5b80604052505050565b6000611c0d6117d7565b9050611c198282611bd2565b919050565b600067ffffffffffffffff821115611c3957611c38611ba3565b5b611c42826118ec565b9050602081019050919050565b82818337600083830152505050565b6000611c71611c6c84611c1e565b611c03565b905082815260208101848484011115611c8d57611c8c611b9e565b5b611c98848285611c4f565b509392505050565b600082601f830112611cb557611cb4611b99565b5b8135611cc5848260208601611c5e565b91505092915050565b60008060008060808587031215611ce857611ce76117e1565b5b6000611cf687828801611a2e565b9450506020611d0787828801611a2e565b9350506040611d1887828801611979565b925050606085013567ffffffffffffffff811115611d3957611d386117e6565b5b611d4587828801611ca0565b91505092959194509250565b60008060408385031215611d6857611d676117e1565b5b6000611d7685828601611a2e565b9250506020611d8785828601611a2e565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611dd857607f821691505b602082108103611deb57611dea611d91565b5b50919050565b6000606082019050611e0660008301866119ed565b611e136020830185611b03565b611e2060408301846119ed565b949350505050565b600081905092915050565b6000611e3e826118a6565b611e488185611e28565b9350611e588185602086016118c2565b80840191505092915050565b6000611e708285611e33565b9150611e7c8284611e33565b91508190509392505050565b600081519050919050565b600082825260208201905092915050565b6000611eaf82611e88565b611eb98185611e93565b9350611ec98185602086016118c2565b611ed2816118ec565b840191505092915050565b6000608082019050611ef260008301876119ed565b611eff60208301866119ed565b611f0c6040830185611b03565b8181036060830152611f1e8184611ea4565b905095945050505050565b600081519050611f3881611817565b92915050565b600060208284031215611f5457611f536117e1565b5b6000611f6284828501611f29565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4f6e6c792061646d696e2063616e207472616e7366657220746f6b656e730000600082015250565b6000611fd0601e836118b1565b9150611fdb82611f9a565b602082019050919050565b60006020820190508181036000830152611fff81611fc3565b905091905056fea2646970667358221220e47093d348ffb169ebb577a49bca33c4515c466e4d5a9084072eb13ba4efca1464736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x546F75726E616D656E74546F6B656E0000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x544E540000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x0 SWAP1 DUP2 PUSH3 0x90 SWAP2 SWAP1 PUSH3 0x472 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP2 PUSH3 0xA2 SWAP2 SWAP1 PUSH3 0x472 JUMP JUMPDEST POP POP POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x11A JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x111 SWAP2 SWAP1 PUSH3 0x59E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x12B DUP2 PUSH3 0x132 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x5BB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x27A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x290 JUMPI PUSH3 0x28F PUSH3 0x232 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x2FA PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x2BB JUMP JUMPDEST PUSH3 0x306 DUP7 DUP4 PUSH3 0x2BB JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x353 PUSH3 0x34D PUSH3 0x347 DUP5 PUSH3 0x31E JUMP JUMPDEST PUSH3 0x328 JUMP JUMPDEST PUSH3 0x31E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x36F DUP4 PUSH3 0x332 JUMP JUMPDEST PUSH3 0x387 PUSH3 0x37E DUP3 PUSH3 0x35A JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x2C8 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x39E PUSH3 0x38F JUMP JUMPDEST PUSH3 0x3AB DUP2 DUP5 DUP5 PUSH3 0x364 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x3D3 JUMPI PUSH3 0x3C7 PUSH1 0x0 DUP3 PUSH3 0x394 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x3B1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x422 JUMPI PUSH3 0x3EC DUP2 PUSH3 0x296 JUMP JUMPDEST PUSH3 0x3F7 DUP5 PUSH3 0x2AB JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x407 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x41F PUSH3 0x416 DUP6 PUSH3 0x2AB JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x3B0 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x447 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x427 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x462 DUP4 DUP4 PUSH3 0x434 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x47D DUP3 PUSH3 0x1F8 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x499 JUMPI PUSH3 0x498 PUSH3 0x203 JUMP JUMPDEST JUMPDEST PUSH3 0x4A5 DUP3 SLOAD PUSH3 0x261 JUMP JUMPDEST PUSH3 0x4B2 DUP3 DUP3 DUP6 PUSH3 0x3D7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x4EA JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x4D5 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x4E1 DUP6 DUP3 PUSH3 0x454 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x551 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x4FA DUP7 PUSH3 0x296 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x524 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x4FD JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x544 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x540 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x434 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x586 DUP3 PUSH3 0x559 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x598 DUP2 PUSH3 0x579 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x5B5 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x58D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x203C DUP1 PUSH3 0x5CB PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x116 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xAC785E39 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xAC785E39 EQ PUSH2 0x2CB JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2FB JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x317 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x347 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x377 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x269 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x291 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2AF JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B5 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0x4D348EB5 EQ PUSH2 0x1ED JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x239 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x199 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x135 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x130 SWAP2 SWAP1 PUSH2 0x1843 JUMP JUMPDEST PUSH2 0x393 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x142 SWAP2 SWAP1 PUSH2 0x188B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x153 PUSH2 0x475 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x160 SWAP2 SWAP1 PUSH2 0x1936 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x183 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17E SWAP2 SWAP1 PUSH2 0x198E JUMP JUMPDEST PUSH2 0x507 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x190 SWAP2 SWAP1 PUSH2 0x19FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AE SWAP2 SWAP1 PUSH2 0x1A43 JUMP JUMPDEST PUSH2 0x523 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1CF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CA SWAP2 SWAP1 PUSH2 0x1A83 JUMP JUMPDEST PUSH2 0x539 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1EB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E6 SWAP2 SWAP1 PUSH2 0x1A83 JUMP JUMPDEST PUSH2 0x63B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x207 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x202 SWAP2 SWAP1 PUSH2 0x1A43 JUMP JUMPDEST PUSH2 0x65B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x223 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21E SWAP2 SWAP1 PUSH2 0x198E JUMP JUMPDEST PUSH2 0x6C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x230 SWAP2 SWAP1 PUSH2 0x19FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x253 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24E SWAP2 SWAP1 PUSH2 0x1AD6 JUMP JUMPDEST PUSH2 0x6D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x260 SWAP2 SWAP1 PUSH2 0x1B12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x271 PUSH2 0x78F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x27B PUSH2 0x7A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x288 SWAP2 SWAP1 PUSH2 0x19FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x299 PUSH2 0x7CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A6 SWAP2 SWAP1 PUSH2 0x1936 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C4 SWAP2 SWAP1 PUSH2 0x1B59 JUMP JUMPDEST PUSH2 0x85F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E0 SWAP2 SWAP1 PUSH2 0x198E JUMP JUMPDEST PUSH2 0x875 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F2 SWAP2 SWAP1 PUSH2 0x19FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x315 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x310 SWAP2 SWAP1 PUSH2 0x1CCE JUMP JUMPDEST PUSH2 0x8B2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x331 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32C SWAP2 SWAP1 PUSH2 0x198E JUMP JUMPDEST PUSH2 0x8D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33E SWAP2 SWAP1 PUSH2 0x1936 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x361 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35C SWAP2 SWAP1 PUSH2 0x1D51 JUMP JUMPDEST PUSH2 0x940 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36E SWAP2 SWAP1 PUSH2 0x188B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x391 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38C SWAP2 SWAP1 PUSH2 0x1AD6 JUMP JUMPDEST PUSH2 0x9D4 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x45E JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x46E JUMPI POP PUSH2 0x46D DUP3 PUSH2 0xA5A JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x484 SWAP1 PUSH2 0x1DC0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4B0 SWAP1 PUSH2 0x1DC0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4FD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4D2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4FD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4E0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x512 DUP3 PUSH2 0xAC4 JUMP JUMPDEST POP PUSH2 0x51C DUP3 PUSH2 0xB4C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x535 DUP3 DUP3 PUSH2 0x530 PUSH2 0xB89 JUMP JUMPDEST PUSH2 0xB91 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5AB JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5A2 SWAP2 SWAP1 PUSH2 0x19FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x5BF DUP4 DUP4 PUSH2 0x5BA PUSH2 0xB89 JUMP JUMPDEST PUSH2 0xBA3 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x635 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x62C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x656 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x8B2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x663 PUSH2 0xDBD JUMP JUMPDEST PUSH2 0x66D DUP3 DUP3 PUSH2 0xE44 JUMP JUMPDEST DUP2 PUSH1 0x7 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6CE DUP3 PUSH2 0xAC4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x748 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x73F SWAP2 SWAP1 PUSH2 0x19FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x797 PUSH2 0xDBD JUMP JUMPDEST PUSH2 0x7A1 PUSH1 0x0 PUSH2 0xF3D JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x7DC SWAP1 PUSH2 0x1DC0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x808 SWAP1 PUSH2 0x1DC0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x855 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x82A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x855 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x838 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x871 PUSH2 0x86A PUSH2 0xB89 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x1003 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8BD DUP5 DUP5 DUP5 PUSH2 0x539 JUMP JUMPDEST PUSH2 0x8D1 PUSH2 0x8C8 PUSH2 0xB89 JUMP JUMPDEST DUP6 DUP6 DUP6 DUP6 PUSH2 0x1172 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x8E2 DUP3 PUSH2 0xAC4 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x8ED PUSH2 0x1323 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x90D JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x938 JUMP JUMPDEST DUP1 PUSH2 0x917 DUP5 PUSH2 0x133A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x928 SWAP3 SWAP2 SWAP1 PUSH2 0x1E64 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x9DC PUSH2 0xDBD JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA4E JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA45 SWAP2 SWAP1 PUSH2 0x19FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA57 DUP2 PUSH2 0xF3D JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xAD0 DUP4 PUSH2 0x1408 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB43 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB3A SWAP2 SWAP1 PUSH2 0x1B12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xB9E DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1445 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xBAF DUP5 PUSH2 0x1408 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBF1 JUMPI PUSH2 0xBF0 DUP2 DUP5 DUP7 PUSH2 0x160A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC82 JUMPI PUSH2 0xC33 PUSH1 0x0 DUP6 PUSH1 0x0 DUP1 PUSH2 0x1445 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD05 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xDC5 PUSH2 0xB89 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xDE3 PUSH2 0x7A3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE42 JUMPI PUSH2 0xE06 PUSH2 0xB89 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE39 SWAP2 SWAP1 PUSH2 0x19FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEB6 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEAD SWAP2 SWAP1 PUSH2 0x19FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xEC4 DUP4 DUP4 PUSH1 0x0 PUSH2 0xBA3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF38 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF2F SWAP2 SWAP1 PUSH2 0x19FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1074 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x106B SWAP2 SWAP1 PUSH2 0x19FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1165 SWAP2 SWAP1 PUSH2 0x188B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x131C JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 DUP7 DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11D1 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1EDD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x120D JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x120A SWAP2 SWAP1 PUSH2 0x1F3E JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1291 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x123D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1242 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x1289 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1280 SWAP2 SWAP1 PUSH2 0x19FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x131A JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1311 SWAP2 SWAP1 PUSH2 0x19FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x1349 DUP5 PUSH2 0x1684 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1368 JUMPI PUSH2 0x1367 PUSH2 0x1BA3 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x139A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x13FD JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x13F1 JUMPI PUSH2 0x13F0 PUSH2 0x1F6B JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0x13A8 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x147E JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x15B2 JUMPI PUSH1 0x0 PUSH2 0x148E DUP5 PUSH2 0xAC4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x14F9 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x150C JUMPI POP PUSH2 0x150A DUP2 DUP5 PUSH2 0x940 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x154E JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1545 SWAP2 SWAP1 PUSH2 0x19FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x15B0 JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1612 PUSH2 0x7A3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x167F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1676 SWAP1 PUSH2 0x1FE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x16E2 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x16D8 JUMPI PUSH2 0x16D7 PUSH2 0x1F6B JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x171F JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x1715 JUMPI PUSH2 0x1714 PUSH2 0x1F6B JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x174E JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x1744 JUMPI PUSH2 0x1743 PUSH2 0x1F6B JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1777 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x176D JUMPI PUSH2 0x176C PUSH2 0x1F6B JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x179C JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1792 JUMPI PUSH2 0x1791 PUSH2 0x1F6B JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x17BF JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x17B5 JUMPI PUSH2 0x17B4 PUSH2 0x1F6B JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x17CE JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1820 DUP2 PUSH2 0x17EB JUMP JUMPDEST DUP2 EQ PUSH2 0x182B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x183D DUP2 PUSH2 0x1817 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1859 JUMPI PUSH2 0x1858 PUSH2 0x17E1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1867 DUP5 DUP3 DUP6 ADD PUSH2 0x182E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1885 DUP2 PUSH2 0x1870 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18A0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x187C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x18E0 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x18C5 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1908 DUP3 PUSH2 0x18A6 JUMP JUMPDEST PUSH2 0x1912 DUP2 DUP6 PUSH2 0x18B1 JUMP JUMPDEST SWAP4 POP PUSH2 0x1922 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x18C2 JUMP JUMPDEST PUSH2 0x192B DUP2 PUSH2 0x18EC JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1950 DUP2 DUP5 PUSH2 0x18FD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x196B DUP2 PUSH2 0x1958 JUMP JUMPDEST DUP2 EQ PUSH2 0x1976 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1988 DUP2 PUSH2 0x1962 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19A4 JUMPI PUSH2 0x19A3 PUSH2 0x17E1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19B2 DUP5 DUP3 DUP6 ADD PUSH2 0x1979 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19E6 DUP3 PUSH2 0x19BB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19F6 DUP2 PUSH2 0x19DB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A11 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x19ED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A20 DUP2 PUSH2 0x19DB JUMP JUMPDEST DUP2 EQ PUSH2 0x1A2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A3D DUP2 PUSH2 0x1A17 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A5A JUMPI PUSH2 0x1A59 PUSH2 0x17E1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A68 DUP6 DUP3 DUP7 ADD PUSH2 0x1A2E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A79 DUP6 DUP3 DUP7 ADD PUSH2 0x1979 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1A9C JUMPI PUSH2 0x1A9B PUSH2 0x17E1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1AAA DUP7 DUP3 DUP8 ADD PUSH2 0x1A2E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1ABB DUP7 DUP3 DUP8 ADD PUSH2 0x1A2E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1ACC DUP7 DUP3 DUP8 ADD PUSH2 0x1979 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AEC JUMPI PUSH2 0x1AEB PUSH2 0x17E1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1AFA DUP5 DUP3 DUP6 ADD PUSH2 0x1A2E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B0C DUP2 PUSH2 0x1958 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B27 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B03 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B36 DUP2 PUSH2 0x1870 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B53 DUP2 PUSH2 0x1B2D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B70 JUMPI PUSH2 0x1B6F PUSH2 0x17E1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B7E DUP6 DUP3 DUP7 ADD PUSH2 0x1A2E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B8F DUP6 DUP3 DUP7 ADD PUSH2 0x1B44 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1BDB DUP3 PUSH2 0x18EC JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1BFA JUMPI PUSH2 0x1BF9 PUSH2 0x1BA3 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C0D PUSH2 0x17D7 JUMP JUMPDEST SWAP1 POP PUSH2 0x1C19 DUP3 DUP3 PUSH2 0x1BD2 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1C39 JUMPI PUSH2 0x1C38 PUSH2 0x1BA3 JUMP JUMPDEST JUMPDEST PUSH2 0x1C42 DUP3 PUSH2 0x18EC JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C71 PUSH2 0x1C6C DUP5 PUSH2 0x1C1E JUMP JUMPDEST PUSH2 0x1C03 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1C8D JUMPI PUSH2 0x1C8C PUSH2 0x1B9E JUMP JUMPDEST JUMPDEST PUSH2 0x1C98 DUP5 DUP3 DUP6 PUSH2 0x1C4F JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1CB5 JUMPI PUSH2 0x1CB4 PUSH2 0x1B99 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1CC5 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1C5E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1CE8 JUMPI PUSH2 0x1CE7 PUSH2 0x17E1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1CF6 DUP8 DUP3 DUP9 ADD PUSH2 0x1A2E JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1D07 DUP8 DUP3 DUP9 ADD PUSH2 0x1A2E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1D18 DUP8 DUP3 DUP9 ADD PUSH2 0x1979 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1D39 JUMPI PUSH2 0x1D38 PUSH2 0x17E6 JUMP JUMPDEST JUMPDEST PUSH2 0x1D45 DUP8 DUP3 DUP9 ADD PUSH2 0x1CA0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D68 JUMPI PUSH2 0x1D67 PUSH2 0x17E1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D76 DUP6 DUP3 DUP7 ADD PUSH2 0x1A2E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1D87 DUP6 DUP3 DUP7 ADD PUSH2 0x1A2E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1DD8 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1DEB JUMPI PUSH2 0x1DEA PUSH2 0x1D91 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1E06 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x19ED JUMP JUMPDEST PUSH2 0x1E13 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1B03 JUMP JUMPDEST PUSH2 0x1E20 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x19ED JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E3E DUP3 PUSH2 0x18A6 JUMP JUMPDEST PUSH2 0x1E48 DUP2 DUP6 PUSH2 0x1E28 JUMP JUMPDEST SWAP4 POP PUSH2 0x1E58 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x18C2 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E70 DUP3 DUP6 PUSH2 0x1E33 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E7C DUP3 DUP5 PUSH2 0x1E33 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EAF DUP3 PUSH2 0x1E88 JUMP JUMPDEST PUSH2 0x1EB9 DUP2 DUP6 PUSH2 0x1E93 JUMP JUMPDEST SWAP4 POP PUSH2 0x1EC9 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x18C2 JUMP JUMPDEST PUSH2 0x1ED2 DUP2 PUSH2 0x18EC JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1EF2 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x19ED JUMP JUMPDEST PUSH2 0x1EFF PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x19ED JUMP JUMPDEST PUSH2 0x1F0C PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1B03 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1F1E DUP2 DUP5 PUSH2 0x1EA4 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1F38 DUP2 PUSH2 0x1817 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F54 JUMPI PUSH2 0x1F53 PUSH2 0x17E1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F62 DUP5 DUP3 DUP6 ADD PUSH2 0x1F29 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4F6E6C792061646D696E2063616E207472616E7366657220746F6B656E730000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FD0 PUSH1 0x1E DUP4 PUSH2 0x18B1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FDB DUP3 PUSH2 0x1F9A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1FFF DUP2 PUSH2 0x1FC3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 PUSH17 0x93D348FFB169EBB577A49BCA33C4515C46 PUSH15 0x4D5A9084072EB13BA4EFCA1464736F PUSH13 0x63430008140033000000000000 ","sourceMap":"272:1363:24:-:0;;;518:69;;;;;;;;;;573:10;1380:113:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1454:5;1446;:13;;;;;;:::i;:::-;;1479:7;1469;:17;;;;;;:::i;:::-;;1380:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;272:1363:24;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7:99:26:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;5234:126::-;5271:7;5311:42;5304:5;5300:54;5289:65;;5234:126;;;:::o;5366:96::-;5403:7;5432:24;5450:5;5432:24;:::i;:::-;5421:35;;5366:96;;;:::o;5468:118::-;5555:24;5573:5;5555:24;:::i;:::-;5550:3;5543:37;5468:118;;:::o;5592:222::-;5685:4;5723:2;5712:9;5708:18;5700:26;;5736:71;5804:1;5793:9;5789:17;5780:6;5736:71;:::i;:::-;5592:222;;;;:::o;272:1363:24:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_approve_1759":{"entryPoint":2961,"id":1759,"parameterSlots":3,"returnSlots":0},"@_approve_1825":{"entryPoint":5189,"id":1825,"parameterSlots":4,"returnSlots":0},"@_baseURI_1140":{"entryPoint":4899,"id":1140,"parameterSlots":0,"returnSlots":1},"@_checkAuthorized_8184":{"entryPoint":5642,"id":8184,"parameterSlots":3,"returnSlots":0},"@_checkOwner_84":{"entryPoint":3517,"id":84,"parameterSlots":0,"returnSlots":0},"@_getApproved_1326":{"entryPoint":2892,"id":1326,"parameterSlots":1,"returnSlots":1},"@_mint_1555":{"entryPoint":3652,"id":1555,"parameterSlots":2,"returnSlots":0},"@_msgSender_2270":{"entryPoint":2953,"id":2270,"parameterSlots":0,"returnSlots":1},"@_ownerOf_1313":{"entryPoint":5128,"id":1313,"parameterSlots":1,"returnSlots":1},"@_requireOwned_1891":{"entryPoint":2756,"id":1891,"parameterSlots":1,"returnSlots":1},"@_setApprovalForAll_1862":{"entryPoint":4099,"id":1862,"parameterSlots":3,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":3901,"id":146,"parameterSlots":1,"returnSlots":0},"@_update_1505":{"entryPoint":2979,"id":1505,"parameterSlots":3,"returnSlots":1},"@approve_1156":{"entryPoint":1315,"id":1156,"parameterSlots":2,"returnSlots":0},"@balanceOf_1064":{"entryPoint":1749,"id":1064,"parameterSlots":1,"returnSlots":1},"@checkOnERC721Received_2257":{"entryPoint":4466,"id":2257,"parameterSlots":5,"returnSlots":0},"@getApproved_1173":{"entryPoint":1287,"id":1173,"parameterSlots":1,"returnSlots":1},"@getTracking_8197":{"entryPoint":2165,"id":8197,"parameterSlots":1,"returnSlots":1},"@isApprovedForAll_1206":{"entryPoint":2368,"id":1206,"parameterSlots":2,"returnSlots":1},"@log10_4954":{"entryPoint":5764,"id":4954,"parameterSlots":1,"returnSlots":1},"@mintTnt_8161":{"entryPoint":1627,"id":8161,"parameterSlots":2,"returnSlots":0},"@name_1086":{"entryPoint":1141,"id":1086,"parameterSlots":0,"returnSlots":1},"@ownerOf_1077":{"entryPoint":1731,"id":1077,"parameterSlots":1,"returnSlots":1},"@owner_67":{"entryPoint":1955,"id":67,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_98":{"entryPoint":1935,"id":98,"parameterSlots":0,"returnSlots":0},"@safeTransferFrom_1270":{"entryPoint":1595,"id":1270,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_1300":{"entryPoint":2226,"id":1300,"parameterSlots":4,"returnSlots":0},"@setApprovalForAll_1189":{"entryPoint":2143,"id":1189,"parameterSlots":2,"returnSlots":0},"@supportsInterface_1036":{"entryPoint":915,"id":1036,"parameterSlots":1,"returnSlots":1},"@supportsInterface_3563":{"entryPoint":2650,"id":3563,"parameterSlots":1,"returnSlots":1},"@symbol_1095":{"entryPoint":1997,"id":1095,"parameterSlots":0,"returnSlots":1},"@toString_2418":{"entryPoint":4922,"id":2418,"parameterSlots":1,"returnSlots":1},"@tokenURI_1131":{"entryPoint":2263,"id":1131,"parameterSlots":1,"returnSlots":1},"@transferFrom_1252":{"entryPoint":1337,"id":1252,"parameterSlots":3,"returnSlots":0},"@transferOwnership_126":{"entryPoint":2516,"id":126,"parameterSlots":1,"returnSlots":0},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":7262,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":6702,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":6980,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":6190,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4_fromMemory":{"entryPoint":7977,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":7328,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":6521,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":6870,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":7505,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":6787,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":7374,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":7001,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":6723,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":6211,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":7998,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":6542,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":6637,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":6268,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":7844,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":6397,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":7731,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_343baf082709e93d6ec72c89c1f25cf13509cddee60cd243e06b5ef8eb5199ff_to_t_string_memory_ptr_fromStack":{"entryPoint":8131,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":6915,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":7780,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":6652,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":7901,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed":{"entryPoint":7665,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":6283,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6454,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_343baf082709e93d6ec72c89c1f25cf13509cddee60cd243e06b5ef8eb5199ff__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8166,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":6930,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":7171,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":6103,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":7198,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":7816,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":6310,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":7827,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":6321,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":7720,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":6619,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":6256,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":6123,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":6587,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":6488,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory_with_cleanup":{"entryPoint":7247,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":6338,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":7616,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":7122,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x12":{"entryPoint":8043,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":7569,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":7075,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":7065,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":7070,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":6118,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":6113,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":6380,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_343baf082709e93d6ec72c89c1f25cf13509cddee60cd243e06b5ef8eb5199ff":{"entryPoint":8090,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":6679,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":6957,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":6167,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":6498,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:15393:26","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:26","statements":[{"nodeType":"YulAssignment","src":"57:19:26","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:26","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:26"},"nodeType":"YulFunctionCall","src":"67:9:26"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:26"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:26","type":""}],"src":"7:75:26"},{"body":{"nodeType":"YulBlock","src":"177:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:26"},"nodeType":"YulFunctionCall","src":"187:12:26"},"nodeType":"YulExpressionStatement","src":"187:12:26"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:26"},{"body":{"nodeType":"YulBlock","src":"300:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:26"},"nodeType":"YulFunctionCall","src":"310:12:26"},"nodeType":"YulExpressionStatement","src":"310:12:26"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:26"},{"body":{"nodeType":"YulBlock","src":"378:105:26","statements":[{"nodeType":"YulAssignment","src":"388:89:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"403:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"410:66:26","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"399:3:26"},"nodeType":"YulFunctionCall","src":"399:78:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"388:7:26"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"360:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"370:7:26","type":""}],"src":"334:149:26"},{"body":{"nodeType":"YulBlock","src":"531:78:26","statements":[{"body":{"nodeType":"YulBlock","src":"587:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"596:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"599:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"589:6:26"},"nodeType":"YulFunctionCall","src":"589:12:26"},"nodeType":"YulExpressionStatement","src":"589:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"554:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"578:5:26"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"561:16:26"},"nodeType":"YulFunctionCall","src":"561:23:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"551:2:26"},"nodeType":"YulFunctionCall","src":"551:34:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"544:6:26"},"nodeType":"YulFunctionCall","src":"544:42:26"},"nodeType":"YulIf","src":"541:62:26"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"524:5:26","type":""}],"src":"489:120:26"},{"body":{"nodeType":"YulBlock","src":"666:86:26","statements":[{"nodeType":"YulAssignment","src":"676:29:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"698:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"685:12:26"},"nodeType":"YulFunctionCall","src":"685:20:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"676:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"740:5:26"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"714:25:26"},"nodeType":"YulFunctionCall","src":"714:32:26"},"nodeType":"YulExpressionStatement","src":"714:32:26"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"644:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"652:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"660:5:26","type":""}],"src":"615:137:26"},{"body":{"nodeType":"YulBlock","src":"823:262:26","statements":[{"body":{"nodeType":"YulBlock","src":"869:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"871:77:26"},"nodeType":"YulFunctionCall","src":"871:79:26"},"nodeType":"YulExpressionStatement","src":"871:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"844:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"853:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"840:3:26"},"nodeType":"YulFunctionCall","src":"840:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"865:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"836:3:26"},"nodeType":"YulFunctionCall","src":"836:32:26"},"nodeType":"YulIf","src":"833:119:26"},{"nodeType":"YulBlock","src":"962:116:26","statements":[{"nodeType":"YulVariableDeclaration","src":"977:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"991:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"981:6:26","type":""}]},{"nodeType":"YulAssignment","src":"1006:62:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1040:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"1051:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1036:3:26"},"nodeType":"YulFunctionCall","src":"1036:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1060:7:26"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"1016:19:26"},"nodeType":"YulFunctionCall","src":"1016:52:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1006:6:26"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"793:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"804:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"816:6:26","type":""}],"src":"758:327:26"},{"body":{"nodeType":"YulBlock","src":"1133:48:26","statements":[{"nodeType":"YulAssignment","src":"1143:32:26","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1168:5:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1161:6:26"},"nodeType":"YulFunctionCall","src":"1161:13:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1154:6:26"},"nodeType":"YulFunctionCall","src":"1154:21:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1143:7:26"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1115:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1125:7:26","type":""}],"src":"1091:90:26"},{"body":{"nodeType":"YulBlock","src":"1246:50:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1263:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1283:5:26"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"1268:14:26"},"nodeType":"YulFunctionCall","src":"1268:21:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1256:6:26"},"nodeType":"YulFunctionCall","src":"1256:34:26"},"nodeType":"YulExpressionStatement","src":"1256:34:26"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1234:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1241:3:26","type":""}],"src":"1187:109:26"},{"body":{"nodeType":"YulBlock","src":"1394:118:26","statements":[{"nodeType":"YulAssignment","src":"1404:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1416:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"1427:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1412:3:26"},"nodeType":"YulFunctionCall","src":"1412:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1404:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1478:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1491:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"1502:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1487:3:26"},"nodeType":"YulFunctionCall","src":"1487:17:26"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"1440:37:26"},"nodeType":"YulFunctionCall","src":"1440:65:26"},"nodeType":"YulExpressionStatement","src":"1440:65:26"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1366:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1378:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1389:4:26","type":""}],"src":"1302:210:26"},{"body":{"nodeType":"YulBlock","src":"1577:40:26","statements":[{"nodeType":"YulAssignment","src":"1588:22:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1604:5:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1598:5:26"},"nodeType":"YulFunctionCall","src":"1598:12:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1588:6:26"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1560:5:26","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1570:6:26","type":""}],"src":"1518:99:26"},{"body":{"nodeType":"YulBlock","src":"1719:73:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1736:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"1741:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1729:6:26"},"nodeType":"YulFunctionCall","src":"1729:19:26"},"nodeType":"YulExpressionStatement","src":"1729:19:26"},{"nodeType":"YulAssignment","src":"1757:29:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1776:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"1781:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1772:3:26"},"nodeType":"YulFunctionCall","src":"1772:14:26"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"1757:11:26"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1691:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"1696:6:26","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"1707:11:26","type":""}],"src":"1623:169:26"},{"body":{"nodeType":"YulBlock","src":"1860:184:26","statements":[{"nodeType":"YulVariableDeclaration","src":"1870:10:26","value":{"kind":"number","nodeType":"YulLiteral","src":"1879:1:26","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1874:1:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"1939:63:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1964:3:26"},{"name":"i","nodeType":"YulIdentifier","src":"1969:1:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1960:3:26"},"nodeType":"YulFunctionCall","src":"1960:11:26"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1983:3:26"},{"name":"i","nodeType":"YulIdentifier","src":"1988:1:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1979:3:26"},"nodeType":"YulFunctionCall","src":"1979:11:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1973:5:26"},"nodeType":"YulFunctionCall","src":"1973:18:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1953:6:26"},"nodeType":"YulFunctionCall","src":"1953:39:26"},"nodeType":"YulExpressionStatement","src":"1953:39:26"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1900:1:26"},{"name":"length","nodeType":"YulIdentifier","src":"1903:6:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1897:2:26"},"nodeType":"YulFunctionCall","src":"1897:13:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1911:19:26","statements":[{"nodeType":"YulAssignment","src":"1913:15:26","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1922:1:26"},{"kind":"number","nodeType":"YulLiteral","src":"1925:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1918:3:26"},"nodeType":"YulFunctionCall","src":"1918:10:26"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1913:1:26"}]}]},"pre":{"nodeType":"YulBlock","src":"1893:3:26","statements":[]},"src":"1889:113:26"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2022:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"2027:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2018:3:26"},"nodeType":"YulFunctionCall","src":"2018:16:26"},{"kind":"number","nodeType":"YulLiteral","src":"2036:1:26","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2011:6:26"},"nodeType":"YulFunctionCall","src":"2011:27:26"},"nodeType":"YulExpressionStatement","src":"2011:27:26"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1842:3:26","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1847:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"1852:6:26","type":""}],"src":"1798:246:26"},{"body":{"nodeType":"YulBlock","src":"2098:54:26","statements":[{"nodeType":"YulAssignment","src":"2108:38:26","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2126:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"2133:2:26","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2122:3:26"},"nodeType":"YulFunctionCall","src":"2122:14:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2142:2:26","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2138:3:26"},"nodeType":"YulFunctionCall","src":"2138:7:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2118:3:26"},"nodeType":"YulFunctionCall","src":"2118:28:26"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2108:6:26"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2081:5:26","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2091:6:26","type":""}],"src":"2050:102:26"},{"body":{"nodeType":"YulBlock","src":"2250:285:26","statements":[{"nodeType":"YulVariableDeclaration","src":"2260:53:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2307:5:26"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2274:32:26"},"nodeType":"YulFunctionCall","src":"2274:39:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2264:6:26","type":""}]},{"nodeType":"YulAssignment","src":"2322:78:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2388:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"2393:6:26"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2329:58:26"},"nodeType":"YulFunctionCall","src":"2329:71:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2322:3:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2448:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"2455:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2444:3:26"},"nodeType":"YulFunctionCall","src":"2444:16:26"},{"name":"pos","nodeType":"YulIdentifier","src":"2462:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"2467:6:26"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2409:34:26"},"nodeType":"YulFunctionCall","src":"2409:65:26"},"nodeType":"YulExpressionStatement","src":"2409:65:26"},{"nodeType":"YulAssignment","src":"2483:46:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2494:3:26"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2521:6:26"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2499:21:26"},"nodeType":"YulFunctionCall","src":"2499:29:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2490:3:26"},"nodeType":"YulFunctionCall","src":"2490:39:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2483:3:26"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2231:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2238:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2246:3:26","type":""}],"src":"2158:377:26"},{"body":{"nodeType":"YulBlock","src":"2659:195:26","statements":[{"nodeType":"YulAssignment","src":"2669:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2681:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"2692:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2677:3:26"},"nodeType":"YulFunctionCall","src":"2677:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2669:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2716:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"2727:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2712:3:26"},"nodeType":"YulFunctionCall","src":"2712:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2735:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"2741:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2731:3:26"},"nodeType":"YulFunctionCall","src":"2731:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2705:6:26"},"nodeType":"YulFunctionCall","src":"2705:47:26"},"nodeType":"YulExpressionStatement","src":"2705:47:26"},{"nodeType":"YulAssignment","src":"2761:86:26","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2833:6:26"},{"name":"tail","nodeType":"YulIdentifier","src":"2842:4:26"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2769:63:26"},"nodeType":"YulFunctionCall","src":"2769:78:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2761:4:26"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2631:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2643:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2654:4:26","type":""}],"src":"2541:313:26"},{"body":{"nodeType":"YulBlock","src":"2905:32:26","statements":[{"nodeType":"YulAssignment","src":"2915:16:26","value":{"name":"value","nodeType":"YulIdentifier","src":"2926:5:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2915:7:26"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2887:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2897:7:26","type":""}],"src":"2860:77:26"},{"body":{"nodeType":"YulBlock","src":"2986:79:26","statements":[{"body":{"nodeType":"YulBlock","src":"3043:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3052:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3055:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3045:6:26"},"nodeType":"YulFunctionCall","src":"3045:12:26"},"nodeType":"YulExpressionStatement","src":"3045:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3009:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3034:5:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3016:17:26"},"nodeType":"YulFunctionCall","src":"3016:24:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3006:2:26"},"nodeType":"YulFunctionCall","src":"3006:35:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2999:6:26"},"nodeType":"YulFunctionCall","src":"2999:43:26"},"nodeType":"YulIf","src":"2996:63:26"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2979:5:26","type":""}],"src":"2943:122:26"},{"body":{"nodeType":"YulBlock","src":"3123:87:26","statements":[{"nodeType":"YulAssignment","src":"3133:29:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3155:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3142:12:26"},"nodeType":"YulFunctionCall","src":"3142:20:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3133:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3198:5:26"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"3171:26:26"},"nodeType":"YulFunctionCall","src":"3171:33:26"},"nodeType":"YulExpressionStatement","src":"3171:33:26"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3101:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"3109:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3117:5:26","type":""}],"src":"3071:139:26"},{"body":{"nodeType":"YulBlock","src":"3282:263:26","statements":[{"body":{"nodeType":"YulBlock","src":"3328:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3330:77:26"},"nodeType":"YulFunctionCall","src":"3330:79:26"},"nodeType":"YulExpressionStatement","src":"3330:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3303:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"3312:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3299:3:26"},"nodeType":"YulFunctionCall","src":"3299:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"3324:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3295:3:26"},"nodeType":"YulFunctionCall","src":"3295:32:26"},"nodeType":"YulIf","src":"3292:119:26"},{"nodeType":"YulBlock","src":"3421:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"3436:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"3450:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3440:6:26","type":""}]},{"nodeType":"YulAssignment","src":"3465:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3500:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"3511:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3496:3:26"},"nodeType":"YulFunctionCall","src":"3496:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3520:7:26"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3475:20:26"},"nodeType":"YulFunctionCall","src":"3475:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3465:6:26"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3252:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3263:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3275:6:26","type":""}],"src":"3216:329:26"},{"body":{"nodeType":"YulBlock","src":"3596:81:26","statements":[{"nodeType":"YulAssignment","src":"3606:65:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3621:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"3628:42:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3617:3:26"},"nodeType":"YulFunctionCall","src":"3617:54:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3606:7:26"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3578:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3588:7:26","type":""}],"src":"3551:126:26"},{"body":{"nodeType":"YulBlock","src":"3728:51:26","statements":[{"nodeType":"YulAssignment","src":"3738:35:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3767:5:26"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"3749:17:26"},"nodeType":"YulFunctionCall","src":"3749:24:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3738:7:26"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3710:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3720:7:26","type":""}],"src":"3683:96:26"},{"body":{"nodeType":"YulBlock","src":"3850:53:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3867:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3890:5:26"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3872:17:26"},"nodeType":"YulFunctionCall","src":"3872:24:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3860:6:26"},"nodeType":"YulFunctionCall","src":"3860:37:26"},"nodeType":"YulExpressionStatement","src":"3860:37:26"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3838:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3845:3:26","type":""}],"src":"3785:118:26"},{"body":{"nodeType":"YulBlock","src":"4007:124:26","statements":[{"nodeType":"YulAssignment","src":"4017:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4029:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"4040:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4025:3:26"},"nodeType":"YulFunctionCall","src":"4025:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4017:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4097:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4110:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"4121:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4106:3:26"},"nodeType":"YulFunctionCall","src":"4106:17:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4053:43:26"},"nodeType":"YulFunctionCall","src":"4053:71:26"},"nodeType":"YulExpressionStatement","src":"4053:71:26"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3979:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3991:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4002:4:26","type":""}],"src":"3909:222:26"},{"body":{"nodeType":"YulBlock","src":"4180:79:26","statements":[{"body":{"nodeType":"YulBlock","src":"4237:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4246:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4249:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4239:6:26"},"nodeType":"YulFunctionCall","src":"4239:12:26"},"nodeType":"YulExpressionStatement","src":"4239:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4203:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4228:5:26"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"4210:17:26"},"nodeType":"YulFunctionCall","src":"4210:24:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4200:2:26"},"nodeType":"YulFunctionCall","src":"4200:35:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4193:6:26"},"nodeType":"YulFunctionCall","src":"4193:43:26"},"nodeType":"YulIf","src":"4190:63:26"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4173:5:26","type":""}],"src":"4137:122:26"},{"body":{"nodeType":"YulBlock","src":"4317:87:26","statements":[{"nodeType":"YulAssignment","src":"4327:29:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4349:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4336:12:26"},"nodeType":"YulFunctionCall","src":"4336:20:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4327:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4392:5:26"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"4365:26:26"},"nodeType":"YulFunctionCall","src":"4365:33:26"},"nodeType":"YulExpressionStatement","src":"4365:33:26"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4295:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"4303:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"4311:5:26","type":""}],"src":"4265:139:26"},{"body":{"nodeType":"YulBlock","src":"4493:391:26","statements":[{"body":{"nodeType":"YulBlock","src":"4539:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4541:77:26"},"nodeType":"YulFunctionCall","src":"4541:79:26"},"nodeType":"YulExpressionStatement","src":"4541:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4514:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"4523:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4510:3:26"},"nodeType":"YulFunctionCall","src":"4510:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"4535:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4506:3:26"},"nodeType":"YulFunctionCall","src":"4506:32:26"},"nodeType":"YulIf","src":"4503:119:26"},{"nodeType":"YulBlock","src":"4632:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"4647:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"4661:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4651:6:26","type":""}]},{"nodeType":"YulAssignment","src":"4676:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4711:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"4722:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4707:3:26"},"nodeType":"YulFunctionCall","src":"4707:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4731:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4686:20:26"},"nodeType":"YulFunctionCall","src":"4686:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4676:6:26"}]}]},{"nodeType":"YulBlock","src":"4759:118:26","statements":[{"nodeType":"YulVariableDeclaration","src":"4774:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"4788:2:26","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4778:6:26","type":""}]},{"nodeType":"YulAssignment","src":"4804:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4839:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"4850:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4835:3:26"},"nodeType":"YulFunctionCall","src":"4835:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4859:7:26"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4814:20:26"},"nodeType":"YulFunctionCall","src":"4814:53:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4804:6:26"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4455:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4466:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4478:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4486:6:26","type":""}],"src":"4410:474:26"},{"body":{"nodeType":"YulBlock","src":"4990:519:26","statements":[{"body":{"nodeType":"YulBlock","src":"5036:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5038:77:26"},"nodeType":"YulFunctionCall","src":"5038:79:26"},"nodeType":"YulExpressionStatement","src":"5038:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5011:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"5020:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5007:3:26"},"nodeType":"YulFunctionCall","src":"5007:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"5032:2:26","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5003:3:26"},"nodeType":"YulFunctionCall","src":"5003:32:26"},"nodeType":"YulIf","src":"5000:119:26"},{"nodeType":"YulBlock","src":"5129:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"5144:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"5158:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5148:6:26","type":""}]},{"nodeType":"YulAssignment","src":"5173:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5208:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"5219:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5204:3:26"},"nodeType":"YulFunctionCall","src":"5204:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5228:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5183:20:26"},"nodeType":"YulFunctionCall","src":"5183:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5173:6:26"}]}]},{"nodeType":"YulBlock","src":"5256:118:26","statements":[{"nodeType":"YulVariableDeclaration","src":"5271:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"5285:2:26","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5275:6:26","type":""}]},{"nodeType":"YulAssignment","src":"5301:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5336:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"5347:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5332:3:26"},"nodeType":"YulFunctionCall","src":"5332:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5356:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5311:20:26"},"nodeType":"YulFunctionCall","src":"5311:53:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5301:6:26"}]}]},{"nodeType":"YulBlock","src":"5384:118:26","statements":[{"nodeType":"YulVariableDeclaration","src":"5399:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"5413:2:26","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5403:6:26","type":""}]},{"nodeType":"YulAssignment","src":"5429:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5464:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"5475:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5460:3:26"},"nodeType":"YulFunctionCall","src":"5460:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5484:7:26"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5439:20:26"},"nodeType":"YulFunctionCall","src":"5439:53:26"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5429:6:26"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4944:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4955:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4967:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4975:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4983:6:26","type":""}],"src":"4890:619:26"},{"body":{"nodeType":"YulBlock","src":"5581:263:26","statements":[{"body":{"nodeType":"YulBlock","src":"5627:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5629:77:26"},"nodeType":"YulFunctionCall","src":"5629:79:26"},"nodeType":"YulExpressionStatement","src":"5629:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5602:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"5611:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5598:3:26"},"nodeType":"YulFunctionCall","src":"5598:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"5623:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5594:3:26"},"nodeType":"YulFunctionCall","src":"5594:32:26"},"nodeType":"YulIf","src":"5591:119:26"},{"nodeType":"YulBlock","src":"5720:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"5735:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"5749:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5739:6:26","type":""}]},{"nodeType":"YulAssignment","src":"5764:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5799:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"5810:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5795:3:26"},"nodeType":"YulFunctionCall","src":"5795:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5819:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5774:20:26"},"nodeType":"YulFunctionCall","src":"5774:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5764:6:26"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5551:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5562:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5574:6:26","type":""}],"src":"5515:329:26"},{"body":{"nodeType":"YulBlock","src":"5915:53:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5932:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5955:5:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5937:17:26"},"nodeType":"YulFunctionCall","src":"5937:24:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5925:6:26"},"nodeType":"YulFunctionCall","src":"5925:37:26"},"nodeType":"YulExpressionStatement","src":"5925:37:26"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5903:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5910:3:26","type":""}],"src":"5850:118:26"},{"body":{"nodeType":"YulBlock","src":"6072:124:26","statements":[{"nodeType":"YulAssignment","src":"6082:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6094:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"6105:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6090:3:26"},"nodeType":"YulFunctionCall","src":"6090:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6082:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6162:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6175:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"6186:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6171:3:26"},"nodeType":"YulFunctionCall","src":"6171:17:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"6118:43:26"},"nodeType":"YulFunctionCall","src":"6118:71:26"},"nodeType":"YulExpressionStatement","src":"6118:71:26"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6044:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6056:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6067:4:26","type":""}],"src":"5974:222:26"},{"body":{"nodeType":"YulBlock","src":"6242:76:26","statements":[{"body":{"nodeType":"YulBlock","src":"6296:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6305:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6308:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6298:6:26"},"nodeType":"YulFunctionCall","src":"6298:12:26"},"nodeType":"YulExpressionStatement","src":"6298:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6265:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6287:5:26"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"6272:14:26"},"nodeType":"YulFunctionCall","src":"6272:21:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6262:2:26"},"nodeType":"YulFunctionCall","src":"6262:32:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6255:6:26"},"nodeType":"YulFunctionCall","src":"6255:40:26"},"nodeType":"YulIf","src":"6252:60:26"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6235:5:26","type":""}],"src":"6202:116:26"},{"body":{"nodeType":"YulBlock","src":"6373:84:26","statements":[{"nodeType":"YulAssignment","src":"6383:29:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6405:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6392:12:26"},"nodeType":"YulFunctionCall","src":"6392:20:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6383:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6445:5:26"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"6421:23:26"},"nodeType":"YulFunctionCall","src":"6421:30:26"},"nodeType":"YulExpressionStatement","src":"6421:30:26"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6351:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"6359:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"6367:5:26","type":""}],"src":"6324:133:26"},{"body":{"nodeType":"YulBlock","src":"6543:388:26","statements":[{"body":{"nodeType":"YulBlock","src":"6589:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6591:77:26"},"nodeType":"YulFunctionCall","src":"6591:79:26"},"nodeType":"YulExpressionStatement","src":"6591:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6564:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"6573:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6560:3:26"},"nodeType":"YulFunctionCall","src":"6560:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"6585:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6556:3:26"},"nodeType":"YulFunctionCall","src":"6556:32:26"},"nodeType":"YulIf","src":"6553:119:26"},{"nodeType":"YulBlock","src":"6682:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"6697:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"6711:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6701:6:26","type":""}]},{"nodeType":"YulAssignment","src":"6726:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6761:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"6772:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6757:3:26"},"nodeType":"YulFunctionCall","src":"6757:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6781:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6736:20:26"},"nodeType":"YulFunctionCall","src":"6736:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6726:6:26"}]}]},{"nodeType":"YulBlock","src":"6809:115:26","statements":[{"nodeType":"YulVariableDeclaration","src":"6824:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"6838:2:26","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6828:6:26","type":""}]},{"nodeType":"YulAssignment","src":"6854:60:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6886:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"6897:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6882:3:26"},"nodeType":"YulFunctionCall","src":"6882:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6906:7:26"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"6864:17:26"},"nodeType":"YulFunctionCall","src":"6864:50:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6854:6:26"}]}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6505:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6516:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6528:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6536:6:26","type":""}],"src":"6463:468:26"},{"body":{"nodeType":"YulBlock","src":"7026:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7043:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7046:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7036:6:26"},"nodeType":"YulFunctionCall","src":"7036:12:26"},"nodeType":"YulExpressionStatement","src":"7036:12:26"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"6937:117:26"},{"body":{"nodeType":"YulBlock","src":"7149:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7166:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7169:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7159:6:26"},"nodeType":"YulFunctionCall","src":"7159:12:26"},"nodeType":"YulExpressionStatement","src":"7159:12:26"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"7060:117:26"},{"body":{"nodeType":"YulBlock","src":"7211:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7228:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7231:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7221:6:26"},"nodeType":"YulFunctionCall","src":"7221:88:26"},"nodeType":"YulExpressionStatement","src":"7221:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7325:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7328:4:26","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7318:6:26"},"nodeType":"YulFunctionCall","src":"7318:15:26"},"nodeType":"YulExpressionStatement","src":"7318:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7349:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7352:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7342:6:26"},"nodeType":"YulFunctionCall","src":"7342:15:26"},"nodeType":"YulExpressionStatement","src":"7342:15:26"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"7183:180:26"},{"body":{"nodeType":"YulBlock","src":"7412:238:26","statements":[{"nodeType":"YulVariableDeclaration","src":"7422:58:26","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7444:6:26"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"7474:4:26"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"7452:21:26"},"nodeType":"YulFunctionCall","src":"7452:27:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7440:3:26"},"nodeType":"YulFunctionCall","src":"7440:40:26"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"7426:10:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"7591:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7593:16:26"},"nodeType":"YulFunctionCall","src":"7593:18:26"},"nodeType":"YulExpressionStatement","src":"7593:18:26"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7534:10:26"},{"kind":"number","nodeType":"YulLiteral","src":"7546:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7531:2:26"},"nodeType":"YulFunctionCall","src":"7531:34:26"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7570:10:26"},{"name":"memPtr","nodeType":"YulIdentifier","src":"7582:6:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7567:2:26"},"nodeType":"YulFunctionCall","src":"7567:22:26"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7528:2:26"},"nodeType":"YulFunctionCall","src":"7528:62:26"},"nodeType":"YulIf","src":"7525:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7629:2:26","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7633:10:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7622:6:26"},"nodeType":"YulFunctionCall","src":"7622:22:26"},"nodeType":"YulExpressionStatement","src":"7622:22:26"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"7398:6:26","type":""},{"name":"size","nodeType":"YulTypedName","src":"7406:4:26","type":""}],"src":"7369:281:26"},{"body":{"nodeType":"YulBlock","src":"7697:88:26","statements":[{"nodeType":"YulAssignment","src":"7707:30:26","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"7717:18:26"},"nodeType":"YulFunctionCall","src":"7717:20:26"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7707:6:26"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7766:6:26"},{"name":"size","nodeType":"YulIdentifier","src":"7774:4:26"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"7746:19:26"},"nodeType":"YulFunctionCall","src":"7746:33:26"},"nodeType":"YulExpressionStatement","src":"7746:33:26"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"7681:4:26","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"7690:6:26","type":""}],"src":"7656:129:26"},{"body":{"nodeType":"YulBlock","src":"7857:241:26","statements":[{"body":{"nodeType":"YulBlock","src":"7962:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7964:16:26"},"nodeType":"YulFunctionCall","src":"7964:18:26"},"nodeType":"YulExpressionStatement","src":"7964:18:26"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7934:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"7942:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7931:2:26"},"nodeType":"YulFunctionCall","src":"7931:30:26"},"nodeType":"YulIf","src":"7928:56:26"},{"nodeType":"YulAssignment","src":"7994:37:26","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8024:6:26"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"8002:21:26"},"nodeType":"YulFunctionCall","src":"8002:29:26"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"7994:4:26"}]},{"nodeType":"YulAssignment","src":"8068:23:26","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"8080:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"8086:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8076:3:26"},"nodeType":"YulFunctionCall","src":"8076:15:26"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"8068:4:26"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"7841:6:26","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"7852:4:26","type":""}],"src":"7791:307:26"},{"body":{"nodeType":"YulBlock","src":"8168:82:26","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8191:3:26"},{"name":"src","nodeType":"YulIdentifier","src":"8196:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"8201:6:26"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"8178:12:26"},"nodeType":"YulFunctionCall","src":"8178:30:26"},"nodeType":"YulExpressionStatement","src":"8178:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8228:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"8233:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8224:3:26"},"nodeType":"YulFunctionCall","src":"8224:16:26"},{"kind":"number","nodeType":"YulLiteral","src":"8242:1:26","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8217:6:26"},"nodeType":"YulFunctionCall","src":"8217:27:26"},"nodeType":"YulExpressionStatement","src":"8217:27:26"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"8150:3:26","type":""},{"name":"dst","nodeType":"YulTypedName","src":"8155:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"8160:6:26","type":""}],"src":"8104:146:26"},{"body":{"nodeType":"YulBlock","src":"8339:340:26","statements":[{"nodeType":"YulAssignment","src":"8349:74:26","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8415:6:26"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"8374:40:26"},"nodeType":"YulFunctionCall","src":"8374:48:26"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"8358:15:26"},"nodeType":"YulFunctionCall","src":"8358:65:26"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"8349:5:26"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"8439:5:26"},{"name":"length","nodeType":"YulIdentifier","src":"8446:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8432:6:26"},"nodeType":"YulFunctionCall","src":"8432:21:26"},"nodeType":"YulExpressionStatement","src":"8432:21:26"},{"nodeType":"YulVariableDeclaration","src":"8462:27:26","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"8477:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"8484:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8473:3:26"},"nodeType":"YulFunctionCall","src":"8473:16:26"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"8466:3:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"8527:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"8529:77:26"},"nodeType":"YulFunctionCall","src":"8529:79:26"},"nodeType":"YulExpressionStatement","src":"8529:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8508:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"8513:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8504:3:26"},"nodeType":"YulFunctionCall","src":"8504:16:26"},{"name":"end","nodeType":"YulIdentifier","src":"8522:3:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8501:2:26"},"nodeType":"YulFunctionCall","src":"8501:25:26"},"nodeType":"YulIf","src":"8498:112:26"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8656:3:26"},{"name":"dst","nodeType":"YulIdentifier","src":"8661:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"8666:6:26"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"8619:36:26"},"nodeType":"YulFunctionCall","src":"8619:54:26"},"nodeType":"YulExpressionStatement","src":"8619:54:26"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"8312:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"8317:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"8325:3:26","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"8333:5:26","type":""}],"src":"8256:423:26"},{"body":{"nodeType":"YulBlock","src":"8759:277:26","statements":[{"body":{"nodeType":"YulBlock","src":"8808:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"8810:77:26"},"nodeType":"YulFunctionCall","src":"8810:79:26"},"nodeType":"YulExpressionStatement","src":"8810:79:26"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8787:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"8795:4:26","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8783:3:26"},"nodeType":"YulFunctionCall","src":"8783:17:26"},{"name":"end","nodeType":"YulIdentifier","src":"8802:3:26"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8779:3:26"},"nodeType":"YulFunctionCall","src":"8779:27:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8772:6:26"},"nodeType":"YulFunctionCall","src":"8772:35:26"},"nodeType":"YulIf","src":"8769:122:26"},{"nodeType":"YulVariableDeclaration","src":"8900:34:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8927:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8914:12:26"},"nodeType":"YulFunctionCall","src":"8914:20:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"8904:6:26","type":""}]},{"nodeType":"YulAssignment","src":"8943:87:26","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9003:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"9011:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8999:3:26"},"nodeType":"YulFunctionCall","src":"8999:17:26"},{"name":"length","nodeType":"YulIdentifier","src":"9018:6:26"},{"name":"end","nodeType":"YulIdentifier","src":"9026:3:26"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"8952:46:26"},"nodeType":"YulFunctionCall","src":"8952:78:26"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"8943:5:26"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"8737:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"8745:3:26","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"8753:5:26","type":""}],"src":"8698:338:26"},{"body":{"nodeType":"YulBlock","src":"9168:817:26","statements":[{"body":{"nodeType":"YulBlock","src":"9215:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"9217:77:26"},"nodeType":"YulFunctionCall","src":"9217:79:26"},"nodeType":"YulExpressionStatement","src":"9217:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9189:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"9198:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9185:3:26"},"nodeType":"YulFunctionCall","src":"9185:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"9210:3:26","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9181:3:26"},"nodeType":"YulFunctionCall","src":"9181:33:26"},"nodeType":"YulIf","src":"9178:120:26"},{"nodeType":"YulBlock","src":"9308:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"9323:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"9337:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9327:6:26","type":""}]},{"nodeType":"YulAssignment","src":"9352:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9387:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"9398:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9383:3:26"},"nodeType":"YulFunctionCall","src":"9383:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9407:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"9362:20:26"},"nodeType":"YulFunctionCall","src":"9362:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9352:6:26"}]}]},{"nodeType":"YulBlock","src":"9435:118:26","statements":[{"nodeType":"YulVariableDeclaration","src":"9450:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"9464:2:26","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9454:6:26","type":""}]},{"nodeType":"YulAssignment","src":"9480:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9515:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"9526:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9511:3:26"},"nodeType":"YulFunctionCall","src":"9511:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9535:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"9490:20:26"},"nodeType":"YulFunctionCall","src":"9490:53:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"9480:6:26"}]}]},{"nodeType":"YulBlock","src":"9563:118:26","statements":[{"nodeType":"YulVariableDeclaration","src":"9578:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"9592:2:26","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9582:6:26","type":""}]},{"nodeType":"YulAssignment","src":"9608:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9643:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"9654:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9639:3:26"},"nodeType":"YulFunctionCall","src":"9639:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9663:7:26"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"9618:20:26"},"nodeType":"YulFunctionCall","src":"9618:53:26"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"9608:6:26"}]}]},{"nodeType":"YulBlock","src":"9691:287:26","statements":[{"nodeType":"YulVariableDeclaration","src":"9706:46:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9737:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"9748:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9733:3:26"},"nodeType":"YulFunctionCall","src":"9733:18:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9720:12:26"},"nodeType":"YulFunctionCall","src":"9720:32:26"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9710:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"9799:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"9801:77:26"},"nodeType":"YulFunctionCall","src":"9801:79:26"},"nodeType":"YulExpressionStatement","src":"9801:79:26"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9771:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"9779:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9768:2:26"},"nodeType":"YulFunctionCall","src":"9768:30:26"},"nodeType":"YulIf","src":"9765:117:26"},{"nodeType":"YulAssignment","src":"9896:72:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9940:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"9951:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9936:3:26"},"nodeType":"YulFunctionCall","src":"9936:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9960:7:26"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"9906:29:26"},"nodeType":"YulFunctionCall","src":"9906:62:26"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"9896:6:26"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9114:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9125:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9137:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9145:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9153:6:26","type":""},{"name":"value3","nodeType":"YulTypedName","src":"9161:6:26","type":""}],"src":"9042:943:26"},{"body":{"nodeType":"YulBlock","src":"10074:391:26","statements":[{"body":{"nodeType":"YulBlock","src":"10120:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"10122:77:26"},"nodeType":"YulFunctionCall","src":"10122:79:26"},"nodeType":"YulExpressionStatement","src":"10122:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10095:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"10104:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10091:3:26"},"nodeType":"YulFunctionCall","src":"10091:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"10116:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10087:3:26"},"nodeType":"YulFunctionCall","src":"10087:32:26"},"nodeType":"YulIf","src":"10084:119:26"},{"nodeType":"YulBlock","src":"10213:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"10228:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"10242:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10232:6:26","type":""}]},{"nodeType":"YulAssignment","src":"10257:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10292:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"10303:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10288:3:26"},"nodeType":"YulFunctionCall","src":"10288:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10312:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10267:20:26"},"nodeType":"YulFunctionCall","src":"10267:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10257:6:26"}]}]},{"nodeType":"YulBlock","src":"10340:118:26","statements":[{"nodeType":"YulVariableDeclaration","src":"10355:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"10369:2:26","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10359:6:26","type":""}]},{"nodeType":"YulAssignment","src":"10385:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10420:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"10431:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10416:3:26"},"nodeType":"YulFunctionCall","src":"10416:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10440:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10395:20:26"},"nodeType":"YulFunctionCall","src":"10395:53:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"10385:6:26"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10036:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10047:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10059:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10067:6:26","type":""}],"src":"9991:474:26"},{"body":{"nodeType":"YulBlock","src":"10499:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10516:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10519:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10509:6:26"},"nodeType":"YulFunctionCall","src":"10509:88:26"},"nodeType":"YulExpressionStatement","src":"10509:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10613:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"10616:4:26","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10606:6:26"},"nodeType":"YulFunctionCall","src":"10606:15:26"},"nodeType":"YulExpressionStatement","src":"10606:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10637:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10640:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10630:6:26"},"nodeType":"YulFunctionCall","src":"10630:15:26"},"nodeType":"YulExpressionStatement","src":"10630:15:26"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"10471:180:26"},{"body":{"nodeType":"YulBlock","src":"10708:269:26","statements":[{"nodeType":"YulAssignment","src":"10718:22:26","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"10732:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"10738:1:26","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"10728:3:26"},"nodeType":"YulFunctionCall","src":"10728:12:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"10718:6:26"}]},{"nodeType":"YulVariableDeclaration","src":"10749:38:26","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"10779:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"10785:1:26","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10775:3:26"},"nodeType":"YulFunctionCall","src":"10775:12:26"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"10753:18:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"10826:51:26","statements":[{"nodeType":"YulAssignment","src":"10840:27:26","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10854:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"10862:4:26","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10850:3:26"},"nodeType":"YulFunctionCall","src":"10850:17:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"10840:6:26"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"10806:18:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10799:6:26"},"nodeType":"YulFunctionCall","src":"10799:26:26"},"nodeType":"YulIf","src":"10796:81:26"},{"body":{"nodeType":"YulBlock","src":"10929:42:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"10943:16:26"},"nodeType":"YulFunctionCall","src":"10943:18:26"},"nodeType":"YulExpressionStatement","src":"10943:18:26"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"10893:18:26"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10916:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"10924:2:26","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10913:2:26"},"nodeType":"YulFunctionCall","src":"10913:14:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"10890:2:26"},"nodeType":"YulFunctionCall","src":"10890:38:26"},"nodeType":"YulIf","src":"10887:84:26"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"10692:4:26","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"10701:6:26","type":""}],"src":"10657:320:26"},{"body":{"nodeType":"YulBlock","src":"11137:288:26","statements":[{"nodeType":"YulAssignment","src":"11147:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11159:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"11170:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11155:3:26"},"nodeType":"YulFunctionCall","src":"11155:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11147:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11227:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11240:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"11251:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11236:3:26"},"nodeType":"YulFunctionCall","src":"11236:17:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"11183:43:26"},"nodeType":"YulFunctionCall","src":"11183:71:26"},"nodeType":"YulExpressionStatement","src":"11183:71:26"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"11308:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11321:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"11332:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11317:3:26"},"nodeType":"YulFunctionCall","src":"11317:18:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"11264:43:26"},"nodeType":"YulFunctionCall","src":"11264:72:26"},"nodeType":"YulExpressionStatement","src":"11264:72:26"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"11390:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11403:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"11414:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11399:3:26"},"nodeType":"YulFunctionCall","src":"11399:18:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"11346:43:26"},"nodeType":"YulFunctionCall","src":"11346:72:26"},"nodeType":"YulExpressionStatement","src":"11346:72:26"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11093:9:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11105:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11113:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11121:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11132:4:26","type":""}],"src":"10983:442:26"},{"body":{"nodeType":"YulBlock","src":"11545:34:26","statements":[{"nodeType":"YulAssignment","src":"11555:18:26","value":{"name":"pos","nodeType":"YulIdentifier","src":"11570:3:26"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"11555:11:26"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11517:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"11522:6:26","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"11533:11:26","type":""}],"src":"11431:148:26"},{"body":{"nodeType":"YulBlock","src":"11695:280:26","statements":[{"nodeType":"YulVariableDeclaration","src":"11705:53:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11752:5:26"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"11719:32:26"},"nodeType":"YulFunctionCall","src":"11719:39:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"11709:6:26","type":""}]},{"nodeType":"YulAssignment","src":"11767:96:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11851:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"11856:6:26"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"11774:76:26"},"nodeType":"YulFunctionCall","src":"11774:89:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11767:3:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11911:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"11918:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11907:3:26"},"nodeType":"YulFunctionCall","src":"11907:16:26"},{"name":"pos","nodeType":"YulIdentifier","src":"11925:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"11930:6:26"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"11872:34:26"},"nodeType":"YulFunctionCall","src":"11872:65:26"},"nodeType":"YulExpressionStatement","src":"11872:65:26"},{"nodeType":"YulAssignment","src":"11946:23:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11957:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"11962:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11953:3:26"},"nodeType":"YulFunctionCall","src":"11953:16:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11946:3:26"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11676:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11683:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11691:3:26","type":""}],"src":"11585:390:26"},{"body":{"nodeType":"YulBlock","src":"12165:251:26","statements":[{"nodeType":"YulAssignment","src":"12176:102:26","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12265:6:26"},{"name":"pos","nodeType":"YulIdentifier","src":"12274:3:26"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"12183:81:26"},"nodeType":"YulFunctionCall","src":"12183:95:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12176:3:26"}]},{"nodeType":"YulAssignment","src":"12288:102:26","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"12377:6:26"},{"name":"pos","nodeType":"YulIdentifier","src":"12386:3:26"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"12295:81:26"},"nodeType":"YulFunctionCall","src":"12295:95:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12288:3:26"}]},{"nodeType":"YulAssignment","src":"12400:10:26","value":{"name":"pos","nodeType":"YulIdentifier","src":"12407:3:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12400:3:26"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12136:3:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12142:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12150:6:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12161:3:26","type":""}],"src":"11981:435:26"},{"body":{"nodeType":"YulBlock","src":"12480:40:26","statements":[{"nodeType":"YulAssignment","src":"12491:22:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12507:5:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12501:5:26"},"nodeType":"YulFunctionCall","src":"12501:12:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"12491:6:26"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12463:5:26","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"12473:6:26","type":""}],"src":"12422:98:26"},{"body":{"nodeType":"YulBlock","src":"12621:73:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12638:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"12643:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12631:6:26"},"nodeType":"YulFunctionCall","src":"12631:19:26"},"nodeType":"YulExpressionStatement","src":"12631:19:26"},{"nodeType":"YulAssignment","src":"12659:29:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12678:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"12683:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12674:3:26"},"nodeType":"YulFunctionCall","src":"12674:14:26"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"12659:11:26"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12593:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"12598:6:26","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"12609:11:26","type":""}],"src":"12526:168:26"},{"body":{"nodeType":"YulBlock","src":"12790:283:26","statements":[{"nodeType":"YulVariableDeclaration","src":"12800:52:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12846:5:26"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"12814:31:26"},"nodeType":"YulFunctionCall","src":"12814:38:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"12804:6:26","type":""}]},{"nodeType":"YulAssignment","src":"12861:77:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12926:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"12931:6:26"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12868:57:26"},"nodeType":"YulFunctionCall","src":"12868:70:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12861:3:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12986:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"12993:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12982:3:26"},"nodeType":"YulFunctionCall","src":"12982:16:26"},{"name":"pos","nodeType":"YulIdentifier","src":"13000:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"13005:6:26"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"12947:34:26"},"nodeType":"YulFunctionCall","src":"12947:65:26"},"nodeType":"YulExpressionStatement","src":"12947:65:26"},{"nodeType":"YulAssignment","src":"13021:46:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13032:3:26"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"13059:6:26"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"13037:21:26"},"nodeType":"YulFunctionCall","src":"13037:29:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13028:3:26"},"nodeType":"YulFunctionCall","src":"13028:39:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13021:3:26"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12771:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12778:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12786:3:26","type":""}],"src":"12700:373:26"},{"body":{"nodeType":"YulBlock","src":"13279:440:26","statements":[{"nodeType":"YulAssignment","src":"13289:27:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13301:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"13312:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13297:3:26"},"nodeType":"YulFunctionCall","src":"13297:19:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13289:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13370:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13383:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"13394:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13379:3:26"},"nodeType":"YulFunctionCall","src":"13379:17:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"13326:43:26"},"nodeType":"YulFunctionCall","src":"13326:71:26"},"nodeType":"YulExpressionStatement","src":"13326:71:26"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"13451:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13464:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"13475:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13460:3:26"},"nodeType":"YulFunctionCall","src":"13460:18:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"13407:43:26"},"nodeType":"YulFunctionCall","src":"13407:72:26"},"nodeType":"YulExpressionStatement","src":"13407:72:26"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"13533:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13546:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"13557:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13542:3:26"},"nodeType":"YulFunctionCall","src":"13542:18:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"13489:43:26"},"nodeType":"YulFunctionCall","src":"13489:72:26"},"nodeType":"YulExpressionStatement","src":"13489:72:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13582:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"13593:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13578:3:26"},"nodeType":"YulFunctionCall","src":"13578:18:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13602:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"13608:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13598:3:26"},"nodeType":"YulFunctionCall","src":"13598:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13571:6:26"},"nodeType":"YulFunctionCall","src":"13571:48:26"},"nodeType":"YulExpressionStatement","src":"13571:48:26"},{"nodeType":"YulAssignment","src":"13628:84:26","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"13698:6:26"},{"name":"tail","nodeType":"YulIdentifier","src":"13707:4:26"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13636:61:26"},"nodeType":"YulFunctionCall","src":"13636:76:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13628:4:26"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13227:9:26","type":""},{"name":"value3","nodeType":"YulTypedName","src":"13239:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"13247:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13255:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13263:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13274:4:26","type":""}],"src":"13079:640:26"},{"body":{"nodeType":"YulBlock","src":"13787:79:26","statements":[{"nodeType":"YulAssignment","src":"13797:22:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"13812:6:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13806:5:26"},"nodeType":"YulFunctionCall","src":"13806:13:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"13797:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13854:5:26"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"13828:25:26"},"nodeType":"YulFunctionCall","src":"13828:32:26"},"nodeType":"YulExpressionStatement","src":"13828:32:26"}]},"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"13765:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"13773:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"13781:5:26","type":""}],"src":"13725:141:26"},{"body":{"nodeType":"YulBlock","src":"13948:273:26","statements":[{"body":{"nodeType":"YulBlock","src":"13994:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"13996:77:26"},"nodeType":"YulFunctionCall","src":"13996:79:26"},"nodeType":"YulExpressionStatement","src":"13996:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"13969:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"13978:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13965:3:26"},"nodeType":"YulFunctionCall","src":"13965:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"13990:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"13961:3:26"},"nodeType":"YulFunctionCall","src":"13961:32:26"},"nodeType":"YulIf","src":"13958:119:26"},{"nodeType":"YulBlock","src":"14087:127:26","statements":[{"nodeType":"YulVariableDeclaration","src":"14102:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"14116:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14106:6:26","type":""}]},{"nodeType":"YulAssignment","src":"14131:73:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14176:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"14187:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14172:3:26"},"nodeType":"YulFunctionCall","src":"14172:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14196:7:26"}],"functionName":{"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulIdentifier","src":"14141:30:26"},"nodeType":"YulFunctionCall","src":"14141:63:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"14131:6:26"}]}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13918:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"13929:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"13941:6:26","type":""}],"src":"13872:349:26"},{"body":{"nodeType":"YulBlock","src":"14255:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14272:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14275:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14265:6:26"},"nodeType":"YulFunctionCall","src":"14265:88:26"},"nodeType":"YulExpressionStatement","src":"14265:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14369:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"14372:4:26","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14362:6:26"},"nodeType":"YulFunctionCall","src":"14362:15:26"},"nodeType":"YulExpressionStatement","src":"14362:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14393:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14396:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14386:6:26"},"nodeType":"YulFunctionCall","src":"14386:15:26"},"nodeType":"YulExpressionStatement","src":"14386:15:26"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"14227:180:26"},{"body":{"nodeType":"YulBlock","src":"14519:74:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14541:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"14549:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14537:3:26"},"nodeType":"YulFunctionCall","src":"14537:14:26"},{"hexValue":"4f6e6c792061646d696e2063616e207472616e7366657220746f6b656e73","kind":"string","nodeType":"YulLiteral","src":"14553:32:26","type":"","value":"Only admin can transfer tokens"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14530:6:26"},"nodeType":"YulFunctionCall","src":"14530:56:26"},"nodeType":"YulExpressionStatement","src":"14530:56:26"}]},"name":"store_literal_in_memory_343baf082709e93d6ec72c89c1f25cf13509cddee60cd243e06b5ef8eb5199ff","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"14511:6:26","type":""}],"src":"14413:180:26"},{"body":{"nodeType":"YulBlock","src":"14745:220:26","statements":[{"nodeType":"YulAssignment","src":"14755:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14821:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"14826:2:26","type":"","value":"30"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14762:58:26"},"nodeType":"YulFunctionCall","src":"14762:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14755:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14927:3:26"}],"functionName":{"name":"store_literal_in_memory_343baf082709e93d6ec72c89c1f25cf13509cddee60cd243e06b5ef8eb5199ff","nodeType":"YulIdentifier","src":"14838:88:26"},"nodeType":"YulFunctionCall","src":"14838:93:26"},"nodeType":"YulExpressionStatement","src":"14838:93:26"},{"nodeType":"YulAssignment","src":"14940:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14951:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"14956:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14947:3:26"},"nodeType":"YulFunctionCall","src":"14947:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14940:3:26"}]}]},"name":"abi_encode_t_stringliteral_343baf082709e93d6ec72c89c1f25cf13509cddee60cd243e06b5ef8eb5199ff_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14733:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14741:3:26","type":""}],"src":"14599:366:26"},{"body":{"nodeType":"YulBlock","src":"15142:248:26","statements":[{"nodeType":"YulAssignment","src":"15152:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15164:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"15175:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15160:3:26"},"nodeType":"YulFunctionCall","src":"15160:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15152:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15199:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"15210:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15195:3:26"},"nodeType":"YulFunctionCall","src":"15195:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15218:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"15224:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15214:3:26"},"nodeType":"YulFunctionCall","src":"15214:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15188:6:26"},"nodeType":"YulFunctionCall","src":"15188:47:26"},"nodeType":"YulExpressionStatement","src":"15188:47:26"},{"nodeType":"YulAssignment","src":"15244:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15378:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_343baf082709e93d6ec72c89c1f25cf13509cddee60cd243e06b5ef8eb5199ff_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15252:124:26"},"nodeType":"YulFunctionCall","src":"15252:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15244:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_343baf082709e93d6ec72c89c1f25cf13509cddee60cd243e06b5ef8eb5199ff__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15122:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15137:4:26","type":""}],"src":"14971:419:26"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_343baf082709e93d6ec72c89c1f25cf13509cddee60cd243e06b5ef8eb5199ff(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only admin can transfer tokens\")\n\n    }\n\n    function abi_encode_t_stringliteral_343baf082709e93d6ec72c89c1f25cf13509cddee60cd243e06b5ef8eb5199ff_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_343baf082709e93d6ec72c89c1f25cf13509cddee60cd243e06b5ef8eb5199ff(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_343baf082709e93d6ec72c89c1f25cf13509cddee60cd243e06b5ef8eb5199ff__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_343baf082709e93d6ec72c89c1f25cf13509cddee60cd243e06b5ef8eb5199ff_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":26,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101165760003560e01c8063715018a6116100a2578063ac785e3911610071578063ac785e39146102cb578063b88d4fde146102fb578063c87b56dd14610317578063e985e9c514610347578063f2fde38b1461037757610116565b8063715018a6146102695780638da5cb5b1461027357806395d89b4114610291578063a22cb465146102af57610116565b806323b872dd116100e957806323b872dd146101b557806342842e0e146101d15780634d348eb5146101ed5780636352211e1461020957806370a082311461023957610116565b806301ffc9a71461011b57806306fdde031461014b578063081812fc14610169578063095ea7b314610199575b600080fd5b61013560048036038101906101309190611843565b610393565b604051610142919061188b565b60405180910390f35b610153610475565b6040516101609190611936565b60405180910390f35b610183600480360381019061017e919061198e565b610507565b60405161019091906119fc565b60405180910390f35b6101b360048036038101906101ae9190611a43565b610523565b005b6101cf60048036038101906101ca9190611a83565b610539565b005b6101eb60048036038101906101e69190611a83565b61063b565b005b61020760048036038101906102029190611a43565b61065b565b005b610223600480360381019061021e919061198e565b6106c3565b60405161023091906119fc565b60405180910390f35b610253600480360381019061024e9190611ad6565b6106d5565b6040516102609190611b12565b60405180910390f35b61027161078f565b005b61027b6107a3565b60405161028891906119fc565b60405180910390f35b6102996107cd565b6040516102a69190611936565b60405180910390f35b6102c960048036038101906102c49190611b59565b61085f565b005b6102e560048036038101906102e0919061198e565b610875565b6040516102f291906119fc565b60405180910390f35b61031560048036038101906103109190611cce565b6108b2565b005b610331600480360381019061032c919061198e565b6108d7565b60405161033e9190611936565b60405180910390f35b610361600480360381019061035c9190611d51565b610940565b60405161036e919061188b565b60405180910390f35b610391600480360381019061038c9190611ad6565b6109d4565b005b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061045e57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061046e575061046d82610a5a565b5b9050919050565b60606000805461048490611dc0565b80601f01602080910402602001604051908101604052809291908181526020018280546104b090611dc0565b80156104fd5780601f106104d2576101008083540402835291602001916104fd565b820191906000526020600020905b8154815290600101906020018083116104e057829003601f168201915b5050505050905090565b600061051282610ac4565b5061051c82610b4c565b9050919050565b6105358282610530610b89565b610b91565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036105ab5760006040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016105a291906119fc565b60405180910390fd5b60006105bf83836105ba610b89565b610ba3565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610635578382826040517f64283d7b00000000000000000000000000000000000000000000000000000000815260040161062c93929190611df1565b60405180910390fd5b50505050565b610656838383604051806020016040528060008152506108b2565b505050565b610663610dbd565b61066d8282610e44565b816007600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60006106ce82610ac4565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036107485760006040517f89c62b6400000000000000000000000000000000000000000000000000000000815260040161073f91906119fc565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610797610dbd565b6107a16000610f3d565b565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600180546107dc90611dc0565b80601f016020809104026020016040519081016040528092919081815260200182805461080890611dc0565b80156108555780601f1061082a57610100808354040283529160200191610855565b820191906000526020600020905b81548152906001019060200180831161083857829003601f168201915b5050505050905090565b61087161086a610b89565b8383611003565b5050565b60006007600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6108bd848484610539565b6108d16108c8610b89565b85858585611172565b50505050565b60606108e282610ac4565b5060006108ed611323565b9050600081511161090d5760405180602001604052806000815250610938565b806109178461133a565b604051602001610928929190611e64565b6040516020818303038152906040525b915050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6109dc610dbd565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a4e5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610a4591906119fc565b60405180910390fd5b610a5781610f3d565b50565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600080610ad083611408565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610b4357826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610b3a9190611b12565b60405180910390fd5b80915050919050565b60006004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600033905090565b610b9e8383836001611445565b505050565b600080610baf84611408565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610bf157610bf081848661160a565b5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610c8257610c33600085600080611445565b6001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610d05576001600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b846002600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b610dc5610b89565b73ffffffffffffffffffffffffffffffffffffffff16610de36107a3565b73ffffffffffffffffffffffffffffffffffffffff1614610e4257610e06610b89565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610e3991906119fc565b60405180910390fd5b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610eb65760006040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401610ead91906119fc565b60405180910390fd5b6000610ec483836000610ba3565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610f385760006040517f73c6ac6e000000000000000000000000000000000000000000000000000000008152600401610f2f91906119fc565b60405180910390fd5b505050565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361107457816040517f5b08ba1800000000000000000000000000000000000000000000000000000000815260040161106b91906119fc565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051611165919061188b565b60405180910390a3505050565b60008373ffffffffffffffffffffffffffffffffffffffff163b111561131c578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02868685856040518563ffffffff1660e01b81526004016111d19493929190611edd565b6020604051808303816000875af192505050801561120d57506040513d601f19601f8201168201806040525081019061120a9190611f3e565b60015b611291573d806000811461123d576040519150601f19603f3d011682016040523d82523d6000602084013e611242565b606091505b50600081510361128957836040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161128091906119fc565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461131a57836040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161131191906119fc565b60405180910390fd5b505b5050505050565b606060405180602001604052806000815250905090565b60606000600161134984611684565b01905060008167ffffffffffffffff81111561136857611367611ba3565b5b6040519080825280601f01601f19166020018201604052801561139a5781602001600182028036833780820191505090505b509050600082602001820190505b6001156113fd578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85816113f1576113f0611f6b565b5b049450600085036113a8575b819350505050919050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b808061147e5750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b156115b257600061148e84610ac4565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156114f957508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b801561150c575061150a8184610940565b155b1561154e57826040517fa9fbf51f00000000000000000000000000000000000000000000000000000000815260040161154591906119fc565b60405180910390fd5b81156115b057838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b836004600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b6116126107a3565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161461167f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161167690611fe6565b60405180910390fd5b505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083106116e2577a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083816116d8576116d7611f6b565b5b0492506040810190505b6d04ee2d6d415b85acef8100000000831061171f576d04ee2d6d415b85acef8100000000838161171557611714611f6b565b5b0492506020810190505b662386f26fc10000831061174e57662386f26fc10000838161174457611743611f6b565b5b0492506010810190505b6305f5e1008310611777576305f5e100838161176d5761176c611f6b565b5b0492506008810190505b612710831061179c57612710838161179257611791611f6b565b5b0492506004810190505b606483106117bf57606483816117b5576117b4611f6b565b5b0492506002810190505b600a83106117ce576001810190505b80915050919050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611820816117eb565b811461182b57600080fd5b50565b60008135905061183d81611817565b92915050565b600060208284031215611859576118586117e1565b5b60006118678482850161182e565b91505092915050565b60008115159050919050565b61188581611870565b82525050565b60006020820190506118a0600083018461187c565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156118e05780820151818401526020810190506118c5565b60008484015250505050565b6000601f19601f8301169050919050565b6000611908826118a6565b61191281856118b1565b93506119228185602086016118c2565b61192b816118ec565b840191505092915050565b6000602082019050818103600083015261195081846118fd565b905092915050565b6000819050919050565b61196b81611958565b811461197657600080fd5b50565b60008135905061198881611962565b92915050565b6000602082840312156119a4576119a36117e1565b5b60006119b284828501611979565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006119e6826119bb565b9050919050565b6119f6816119db565b82525050565b6000602082019050611a1160008301846119ed565b92915050565b611a20816119db565b8114611a2b57600080fd5b50565b600081359050611a3d81611a17565b92915050565b60008060408385031215611a5a57611a596117e1565b5b6000611a6885828601611a2e565b9250506020611a7985828601611979565b9150509250929050565b600080600060608486031215611a9c57611a9b6117e1565b5b6000611aaa86828701611a2e565b9350506020611abb86828701611a2e565b9250506040611acc86828701611979565b9150509250925092565b600060208284031215611aec57611aeb6117e1565b5b6000611afa84828501611a2e565b91505092915050565b611b0c81611958565b82525050565b6000602082019050611b276000830184611b03565b92915050565b611b3681611870565b8114611b4157600080fd5b50565b600081359050611b5381611b2d565b92915050565b60008060408385031215611b7057611b6f6117e1565b5b6000611b7e85828601611a2e565b9250506020611b8f85828601611b44565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611bdb826118ec565b810181811067ffffffffffffffff82111715611bfa57611bf9611ba3565b5b80604052505050565b6000611c0d6117d7565b9050611c198282611bd2565b919050565b600067ffffffffffffffff821115611c3957611c38611ba3565b5b611c42826118ec565b9050602081019050919050565b82818337600083830152505050565b6000611c71611c6c84611c1e565b611c03565b905082815260208101848484011115611c8d57611c8c611b9e565b5b611c98848285611c4f565b509392505050565b600082601f830112611cb557611cb4611b99565b5b8135611cc5848260208601611c5e565b91505092915050565b60008060008060808587031215611ce857611ce76117e1565b5b6000611cf687828801611a2e565b9450506020611d0787828801611a2e565b9350506040611d1887828801611979565b925050606085013567ffffffffffffffff811115611d3957611d386117e6565b5b611d4587828801611ca0565b91505092959194509250565b60008060408385031215611d6857611d676117e1565b5b6000611d7685828601611a2e565b9250506020611d8785828601611a2e565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611dd857607f821691505b602082108103611deb57611dea611d91565b5b50919050565b6000606082019050611e0660008301866119ed565b611e136020830185611b03565b611e2060408301846119ed565b949350505050565b600081905092915050565b6000611e3e826118a6565b611e488185611e28565b9350611e588185602086016118c2565b80840191505092915050565b6000611e708285611e33565b9150611e7c8284611e33565b91508190509392505050565b600081519050919050565b600082825260208201905092915050565b6000611eaf82611e88565b611eb98185611e93565b9350611ec98185602086016118c2565b611ed2816118ec565b840191505092915050565b6000608082019050611ef260008301876119ed565b611eff60208301866119ed565b611f0c6040830185611b03565b8181036060830152611f1e8184611ea4565b905095945050505050565b600081519050611f3881611817565b92915050565b600060208284031215611f5457611f536117e1565b5b6000611f6284828501611f29565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4f6e6c792061646d696e2063616e207472616e7366657220746f6b656e730000600082015250565b6000611fd0601e836118b1565b9150611fdb82611f9a565b602082019050919050565b60006020820190508181036000830152611fff81611fc3565b905091905056fea2646970667358221220e47093d348ffb169ebb577a49bca33c4515c466e4d5a9084072eb13ba4efca1464736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x116 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xAC785E39 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xAC785E39 EQ PUSH2 0x2CB JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2FB JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x317 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x347 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x377 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x269 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x291 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2AF JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B5 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0x4D348EB5 EQ PUSH2 0x1ED JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x239 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x199 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x135 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x130 SWAP2 SWAP1 PUSH2 0x1843 JUMP JUMPDEST PUSH2 0x393 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x142 SWAP2 SWAP1 PUSH2 0x188B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x153 PUSH2 0x475 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x160 SWAP2 SWAP1 PUSH2 0x1936 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x183 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17E SWAP2 SWAP1 PUSH2 0x198E JUMP JUMPDEST PUSH2 0x507 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x190 SWAP2 SWAP1 PUSH2 0x19FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AE SWAP2 SWAP1 PUSH2 0x1A43 JUMP JUMPDEST PUSH2 0x523 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1CF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CA SWAP2 SWAP1 PUSH2 0x1A83 JUMP JUMPDEST PUSH2 0x539 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1EB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E6 SWAP2 SWAP1 PUSH2 0x1A83 JUMP JUMPDEST PUSH2 0x63B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x207 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x202 SWAP2 SWAP1 PUSH2 0x1A43 JUMP JUMPDEST PUSH2 0x65B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x223 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21E SWAP2 SWAP1 PUSH2 0x198E JUMP JUMPDEST PUSH2 0x6C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x230 SWAP2 SWAP1 PUSH2 0x19FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x253 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24E SWAP2 SWAP1 PUSH2 0x1AD6 JUMP JUMPDEST PUSH2 0x6D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x260 SWAP2 SWAP1 PUSH2 0x1B12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x271 PUSH2 0x78F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x27B PUSH2 0x7A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x288 SWAP2 SWAP1 PUSH2 0x19FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x299 PUSH2 0x7CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A6 SWAP2 SWAP1 PUSH2 0x1936 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C4 SWAP2 SWAP1 PUSH2 0x1B59 JUMP JUMPDEST PUSH2 0x85F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E0 SWAP2 SWAP1 PUSH2 0x198E JUMP JUMPDEST PUSH2 0x875 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F2 SWAP2 SWAP1 PUSH2 0x19FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x315 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x310 SWAP2 SWAP1 PUSH2 0x1CCE JUMP JUMPDEST PUSH2 0x8B2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x331 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32C SWAP2 SWAP1 PUSH2 0x198E JUMP JUMPDEST PUSH2 0x8D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33E SWAP2 SWAP1 PUSH2 0x1936 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x361 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35C SWAP2 SWAP1 PUSH2 0x1D51 JUMP JUMPDEST PUSH2 0x940 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36E SWAP2 SWAP1 PUSH2 0x188B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x391 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38C SWAP2 SWAP1 PUSH2 0x1AD6 JUMP JUMPDEST PUSH2 0x9D4 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x45E JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x46E JUMPI POP PUSH2 0x46D DUP3 PUSH2 0xA5A JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x484 SWAP1 PUSH2 0x1DC0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4B0 SWAP1 PUSH2 0x1DC0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4FD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4D2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4FD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4E0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x512 DUP3 PUSH2 0xAC4 JUMP JUMPDEST POP PUSH2 0x51C DUP3 PUSH2 0xB4C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x535 DUP3 DUP3 PUSH2 0x530 PUSH2 0xB89 JUMP JUMPDEST PUSH2 0xB91 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5AB JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5A2 SWAP2 SWAP1 PUSH2 0x19FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x5BF DUP4 DUP4 PUSH2 0x5BA PUSH2 0xB89 JUMP JUMPDEST PUSH2 0xBA3 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x635 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x62C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x656 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x8B2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x663 PUSH2 0xDBD JUMP JUMPDEST PUSH2 0x66D DUP3 DUP3 PUSH2 0xE44 JUMP JUMPDEST DUP2 PUSH1 0x7 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6CE DUP3 PUSH2 0xAC4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x748 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x73F SWAP2 SWAP1 PUSH2 0x19FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x797 PUSH2 0xDBD JUMP JUMPDEST PUSH2 0x7A1 PUSH1 0x0 PUSH2 0xF3D JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x7DC SWAP1 PUSH2 0x1DC0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x808 SWAP1 PUSH2 0x1DC0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x855 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x82A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x855 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x838 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x871 PUSH2 0x86A PUSH2 0xB89 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x1003 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8BD DUP5 DUP5 DUP5 PUSH2 0x539 JUMP JUMPDEST PUSH2 0x8D1 PUSH2 0x8C8 PUSH2 0xB89 JUMP JUMPDEST DUP6 DUP6 DUP6 DUP6 PUSH2 0x1172 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x8E2 DUP3 PUSH2 0xAC4 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x8ED PUSH2 0x1323 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x90D JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x938 JUMP JUMPDEST DUP1 PUSH2 0x917 DUP5 PUSH2 0x133A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x928 SWAP3 SWAP2 SWAP1 PUSH2 0x1E64 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x9DC PUSH2 0xDBD JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA4E JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA45 SWAP2 SWAP1 PUSH2 0x19FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA57 DUP2 PUSH2 0xF3D JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xAD0 DUP4 PUSH2 0x1408 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB43 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB3A SWAP2 SWAP1 PUSH2 0x1B12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xB9E DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1445 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xBAF DUP5 PUSH2 0x1408 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBF1 JUMPI PUSH2 0xBF0 DUP2 DUP5 DUP7 PUSH2 0x160A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC82 JUMPI PUSH2 0xC33 PUSH1 0x0 DUP6 PUSH1 0x0 DUP1 PUSH2 0x1445 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD05 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xDC5 PUSH2 0xB89 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xDE3 PUSH2 0x7A3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE42 JUMPI PUSH2 0xE06 PUSH2 0xB89 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE39 SWAP2 SWAP1 PUSH2 0x19FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEB6 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEAD SWAP2 SWAP1 PUSH2 0x19FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xEC4 DUP4 DUP4 PUSH1 0x0 PUSH2 0xBA3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF38 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF2F SWAP2 SWAP1 PUSH2 0x19FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1074 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x106B SWAP2 SWAP1 PUSH2 0x19FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1165 SWAP2 SWAP1 PUSH2 0x188B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x131C JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 DUP7 DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11D1 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1EDD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x120D JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x120A SWAP2 SWAP1 PUSH2 0x1F3E JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1291 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x123D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1242 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x1289 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1280 SWAP2 SWAP1 PUSH2 0x19FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x131A JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1311 SWAP2 SWAP1 PUSH2 0x19FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x1349 DUP5 PUSH2 0x1684 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1368 JUMPI PUSH2 0x1367 PUSH2 0x1BA3 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x139A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x13FD JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x13F1 JUMPI PUSH2 0x13F0 PUSH2 0x1F6B JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0x13A8 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x147E JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x15B2 JUMPI PUSH1 0x0 PUSH2 0x148E DUP5 PUSH2 0xAC4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x14F9 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x150C JUMPI POP PUSH2 0x150A DUP2 DUP5 PUSH2 0x940 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x154E JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1545 SWAP2 SWAP1 PUSH2 0x19FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x15B0 JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1612 PUSH2 0x7A3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x167F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1676 SWAP1 PUSH2 0x1FE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x16E2 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x16D8 JUMPI PUSH2 0x16D7 PUSH2 0x1F6B JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x171F JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x1715 JUMPI PUSH2 0x1714 PUSH2 0x1F6B JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x174E JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x1744 JUMPI PUSH2 0x1743 PUSH2 0x1F6B JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1777 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x176D JUMPI PUSH2 0x176C PUSH2 0x1F6B JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x179C JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1792 JUMPI PUSH2 0x1791 PUSH2 0x1F6B JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x17BF JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x17B5 JUMPI PUSH2 0x17B4 PUSH2 0x1F6B JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x17CE JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1820 DUP2 PUSH2 0x17EB JUMP JUMPDEST DUP2 EQ PUSH2 0x182B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x183D DUP2 PUSH2 0x1817 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1859 JUMPI PUSH2 0x1858 PUSH2 0x17E1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1867 DUP5 DUP3 DUP6 ADD PUSH2 0x182E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1885 DUP2 PUSH2 0x1870 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18A0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x187C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x18E0 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x18C5 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1908 DUP3 PUSH2 0x18A6 JUMP JUMPDEST PUSH2 0x1912 DUP2 DUP6 PUSH2 0x18B1 JUMP JUMPDEST SWAP4 POP PUSH2 0x1922 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x18C2 JUMP JUMPDEST PUSH2 0x192B DUP2 PUSH2 0x18EC JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1950 DUP2 DUP5 PUSH2 0x18FD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x196B DUP2 PUSH2 0x1958 JUMP JUMPDEST DUP2 EQ PUSH2 0x1976 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1988 DUP2 PUSH2 0x1962 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19A4 JUMPI PUSH2 0x19A3 PUSH2 0x17E1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19B2 DUP5 DUP3 DUP6 ADD PUSH2 0x1979 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19E6 DUP3 PUSH2 0x19BB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19F6 DUP2 PUSH2 0x19DB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A11 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x19ED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A20 DUP2 PUSH2 0x19DB JUMP JUMPDEST DUP2 EQ PUSH2 0x1A2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A3D DUP2 PUSH2 0x1A17 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A5A JUMPI PUSH2 0x1A59 PUSH2 0x17E1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A68 DUP6 DUP3 DUP7 ADD PUSH2 0x1A2E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A79 DUP6 DUP3 DUP7 ADD PUSH2 0x1979 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1A9C JUMPI PUSH2 0x1A9B PUSH2 0x17E1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1AAA DUP7 DUP3 DUP8 ADD PUSH2 0x1A2E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1ABB DUP7 DUP3 DUP8 ADD PUSH2 0x1A2E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1ACC DUP7 DUP3 DUP8 ADD PUSH2 0x1979 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AEC JUMPI PUSH2 0x1AEB PUSH2 0x17E1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1AFA DUP5 DUP3 DUP6 ADD PUSH2 0x1A2E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B0C DUP2 PUSH2 0x1958 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B27 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B03 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B36 DUP2 PUSH2 0x1870 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B53 DUP2 PUSH2 0x1B2D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B70 JUMPI PUSH2 0x1B6F PUSH2 0x17E1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B7E DUP6 DUP3 DUP7 ADD PUSH2 0x1A2E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B8F DUP6 DUP3 DUP7 ADD PUSH2 0x1B44 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1BDB DUP3 PUSH2 0x18EC JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1BFA JUMPI PUSH2 0x1BF9 PUSH2 0x1BA3 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C0D PUSH2 0x17D7 JUMP JUMPDEST SWAP1 POP PUSH2 0x1C19 DUP3 DUP3 PUSH2 0x1BD2 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1C39 JUMPI PUSH2 0x1C38 PUSH2 0x1BA3 JUMP JUMPDEST JUMPDEST PUSH2 0x1C42 DUP3 PUSH2 0x18EC JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C71 PUSH2 0x1C6C DUP5 PUSH2 0x1C1E JUMP JUMPDEST PUSH2 0x1C03 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1C8D JUMPI PUSH2 0x1C8C PUSH2 0x1B9E JUMP JUMPDEST JUMPDEST PUSH2 0x1C98 DUP5 DUP3 DUP6 PUSH2 0x1C4F JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1CB5 JUMPI PUSH2 0x1CB4 PUSH2 0x1B99 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1CC5 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1C5E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1CE8 JUMPI PUSH2 0x1CE7 PUSH2 0x17E1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1CF6 DUP8 DUP3 DUP9 ADD PUSH2 0x1A2E JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1D07 DUP8 DUP3 DUP9 ADD PUSH2 0x1A2E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1D18 DUP8 DUP3 DUP9 ADD PUSH2 0x1979 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1D39 JUMPI PUSH2 0x1D38 PUSH2 0x17E6 JUMP JUMPDEST JUMPDEST PUSH2 0x1D45 DUP8 DUP3 DUP9 ADD PUSH2 0x1CA0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D68 JUMPI PUSH2 0x1D67 PUSH2 0x17E1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D76 DUP6 DUP3 DUP7 ADD PUSH2 0x1A2E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1D87 DUP6 DUP3 DUP7 ADD PUSH2 0x1A2E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1DD8 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1DEB JUMPI PUSH2 0x1DEA PUSH2 0x1D91 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1E06 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x19ED JUMP JUMPDEST PUSH2 0x1E13 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1B03 JUMP JUMPDEST PUSH2 0x1E20 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x19ED JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E3E DUP3 PUSH2 0x18A6 JUMP JUMPDEST PUSH2 0x1E48 DUP2 DUP6 PUSH2 0x1E28 JUMP JUMPDEST SWAP4 POP PUSH2 0x1E58 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x18C2 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E70 DUP3 DUP6 PUSH2 0x1E33 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E7C DUP3 DUP5 PUSH2 0x1E33 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EAF DUP3 PUSH2 0x1E88 JUMP JUMPDEST PUSH2 0x1EB9 DUP2 DUP6 PUSH2 0x1E93 JUMP JUMPDEST SWAP4 POP PUSH2 0x1EC9 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x18C2 JUMP JUMPDEST PUSH2 0x1ED2 DUP2 PUSH2 0x18EC JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1EF2 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x19ED JUMP JUMPDEST PUSH2 0x1EFF PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x19ED JUMP JUMPDEST PUSH2 0x1F0C PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1B03 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1F1E DUP2 DUP5 PUSH2 0x1EA4 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1F38 DUP2 PUSH2 0x1817 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F54 JUMPI PUSH2 0x1F53 PUSH2 0x17E1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F62 DUP5 DUP3 DUP6 ADD PUSH2 0x1F29 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4F6E6C792061646D696E2063616E207472616E7366657220746F6B656E730000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FD0 PUSH1 0x1E DUP4 PUSH2 0x18B1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FDB DUP3 PUSH2 0x1F9A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1FFF DUP2 PUSH2 0x1FC3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 PUSH17 0x93D348FFB169EBB577A49BCA33C4515C46 PUSH15 0x4D5A9084072EB13BA4EFCA1464736F PUSH13 0x63430008140033000000000000 ","sourceMap":"272:1363:24:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1560:300:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2364:89;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3496:154;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3322:113;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4142:578;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4786:132;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;782:160:24;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2184:118:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1919:208;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2517:93:8;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3717:144;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1521:112:24;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4984:233:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2676:255;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3927:153;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1560:300:8;1662:4;1712:25;1697:40;;;:11;:40;;;;:104;;;;1768:33;1753:48;;;:11;:48;;;;1697:104;:156;;;;1817:36;1841:11;1817:23;:36::i;:::-;1697:156;1678:175;;1560:300;;;:::o;2364:89::-;2409:13;2441:5;2434:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2364:89;:::o;3496:154::-;3563:7;3582:22;3596:7;3582:13;:22::i;:::-;;3622:21;3635:7;3622:12;:21::i;:::-;3615:28;;3496:154;;;:::o;3322:113::-;3393:35;3402:2;3406:7;3415:12;:10;:12::i;:::-;3393:8;:35::i;:::-;3322:113;;:::o;4142:578::-;4250:1;4236:16;;:2;:16;;;4232:87;;4305:1;4275:33;;;;;;;;;;;:::i;:::-;;;;;;;;4232:87;4537:21;4561:34;4569:2;4573:7;4582:12;:10;:12::i;:::-;4561:7;:34::i;:::-;4537:58;;4626:4;4609:21;;:13;:21;;;4605:109;;4674:4;4680:7;4689:13;4653:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;4605:109;4222:498;4142:578;;;:::o;4786:132::-;4872:39;4889:4;4895:2;4899:7;4872:39;;;;;;;;;;;;:16;:39::i;:::-;4786:132;;;:::o;782:160:24:-;1531:13:0;:11;:13::i;:::-;864:27:24::1;870:6;878:12;864:5;:27::i;:::-;929:6;901:11;:25;913:12;901:25;;;;;;;;;;;;:34;;;;;;;;;;;;;;;;;;782:160:::0;;:::o;2184:118:8:-;2247:7;2273:22;2287:7;2273:13;:22::i;:::-;2266:29;;2184:118;;;:::o;1919:208::-;1982:7;2022:1;2005:19;;:5;:19;;;2001:87;;2074:1;2047:30;;;;;;;;;;;:::i;:::-;;;;;;;;2001:87;2104:9;:16;2114:5;2104:16;;;;;;;;;;;;;;;;2097:23;;1919:208;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2517:93:8:-;2564:13;2596:7;2589:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2517:93;:::o;3717:144::-;3802:52;3821:12;:10;:12::i;:::-;3835:8;3845;3802:18;:52::i;:::-;3717:144;;:::o;1521:112:24:-;1580:7;1606:11;:20;1618:7;1606:20;;;;;;;;;;;;;;;;;;;;;1599:27;;1521:112;;;:::o;4984:233:8:-;5097:31;5110:4;5116:2;5120:7;5097:12;:31::i;:::-;5138:72;5172:12;:10;:12::i;:::-;5186:4;5192:2;5196:7;5205:4;5138:33;:72::i;:::-;4984:233;;;;:::o;2676:255::-;2740:13;2765:22;2779:7;2765:13;:22::i;:::-;;2798:21;2822:10;:8;:10::i;:::-;2798:34;;2873:1;2855:7;2849:21;:25;:75;;;;;;;;;;;;;;;;;2891:7;2900:18;:7;:16;:18::i;:::-;2877:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2849:75;2842:82;;;2676:255;;;:::o;3927:153::-;4015:4;4038:18;:25;4057:5;4038:25;;;;;;;;;;;;;;;:35;4064:8;4038:35;;;;;;;;;;;;;;;;;;;;;;;;;4031:42;;3927:153;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;763:146:17:-;839:4;877:25;862:40;;;:11;:40;;;;855:47;;763:146;;;:::o;16212:241:8:-;16275:7;16294:13;16310:17;16319:7;16310:8;:17::i;:::-;16294:33;;16358:1;16341:19;;:5;:19;;;16337:88;;16406:7;16383:31;;;;;;;;;;;:::i;:::-;;;;;;;;16337:88;16441:5;16434:12;;;16212:241;;;:::o;5963:127::-;6033:7;6059:15;:24;6075:7;6059:24;;;;;;;;;;;;;;;;;;;;;6052:31;;5963:127;;;:::o;656:96:14:-;709:7;735:10;728:17;;656:96;:::o;14492:120:8:-;14572:33;14581:2;14585:7;14594:4;14600;14572:8;:33::i;:::-;14492:120;;;:::o;8861:795::-;8947:7;8966:12;8981:17;8990:7;8981:8;:17::i;:::-;8966:32;;9074:1;9058:18;;:4;:18;;;9054:86;;9092:37;9109:4;9115;9121:7;9092:16;:37::i;:::-;9054:86;9200:1;9184:18;;:4;:18;;;9180:256;;9300:48;9317:1;9321:7;9338:1;9342:5;9300:8;:48::i;:::-;9410:1;9391:9;:15;9401:4;9391:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;9180:256;9464:1;9450:16;;:2;:16;;;9446:107;;9527:1;9510:9;:13;9520:2;9510:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;9446:107;9582:2;9563:7;:16;9571:7;9563:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;9619:7;9615:2;9600:27;;9609:4;9600:27;;;;;;;;;;;;9645:4;9638:11;;;8861:795;;;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;9978:327:8:-;10059:1;10045:16;;:2;:16;;;10041:87;;10114:1;10084:33;;;;;;;;;;;:::i;:::-;;;;;;;;10041:87;10137:21;10161:32;10169:2;10173:7;10190:1;10161:7;:32::i;:::-;10137:56;;10232:1;10207:27;;:13;:27;;;10203:96;;10285:1;10257:31;;;;;;;;;;;:::i;:::-;;;;;;;;10203:96;10031:274;9978:327;;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;15665:312:8:-;15792:1;15772:22;;:8;:22;;;15768:91;;15839:8;15817:31;;;;;;;;;;;:::i;:::-;;;;;;;;15768:91;15906:8;15868:18;:25;15887:5;15868:25;;;;;;;;;;;;;;;:35;15894:8;15868:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;15951:8;15929:41;;15944:5;15929:41;;;15961:8;15929:41;;;;;;:::i;:::-;;;;;;;;15665:312;;;:::o;985:924:13:-;1182:1;1165:2;:14;;;:18;1161:742;;;1219:2;1203:36;;;1240:8;1250:4;1256:7;1265:4;1203:67;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;1199:694;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1577:1;1560:6;:13;:18;1556:323;;1700:2;1664:39;;;;;;;;;;;:::i;:::-;;;;;;;;1556:323;1831:6;1825:13;1816:6;1812:2;1808:15;1801:38;1199:694;1327:41;;;1317:51;;;:6;:51;;;;1313:182;;1473:2;1437:39;;;;;;;;;;;:::i;:::-;;;;;;;;1313:182;1271:238;1161:742;985:924;;;;;:::o;3173:92:8:-;3224:13;3249:9;;;;;;;;;;;;;;3173:92;:::o;987:632:16:-;1043:13;1092:14;1129:1;1109:17;1120:5;1109:10;:17::i;:::-;:21;1092:38;;1144:20;1178:6;1167:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1144:41;;1199:11;1294:6;1290:2;1286:15;1278:6;1274:28;1267:35;;1329:247;1336:4;1329:247;;;1360:5;;;;;;;;1464:10;1459:2;1452:5;1448:14;1443:32;1438:3;1430:46;1520:2;1511:11;;;;;;:::i;:::-;;;;;1553:1;1544:5;:10;1329:247;1540:21;1329:247;1596:6;1589:13;;;;;987:632;;;:::o;5732:115:8:-;5798:7;5824;:16;5832:7;5824:16;;;;;;;;;;;;;;;;;;;;;5817:23;;5732:115;;;:::o;14794:662::-;14954:9;:31;;;;14983:1;14967:18;;:4;:18;;;;14954:31;14950:460;;;15001:13;15017:22;15031:7;15017:13;:22::i;:::-;15001:38;;15183:1;15167:18;;:4;:18;;;;:35;;;;;15198:4;15189:13;;:5;:13;;;;15167:35;:69;;;;;15207:29;15224:5;15231:4;15207:16;:29::i;:::-;15206:30;15167:69;15163:142;;;15285:4;15263:27;;;;;;;;;;;:::i;:::-;;;;;;;;15163:142;15323:9;15319:81;;;15377:7;15373:2;15357:28;;15366:5;15357:28;;;;;;;;;;;;15319:81;14987:423;14950:460;15447:2;15420:15;:24;15436:7;15420:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;14794:662;;;;:::o;1085:249:24:-;1246:15;:13;:15::i;:::-;1235:26;;:7;:26;;;1231:97;;1277:40;;;;;;;;;;:::i;:::-;;;;;;;;1231:97;1085:249;;;:::o;25316:916:19:-;25369:7;25388:14;25405:1;25388:18;;25453:8;25444:5;:17;25440:103;;25490:8;25481:17;;;;;;:::i;:::-;;;;;25526:2;25516:12;;;;25440:103;25569:8;25560:5;:17;25556:103;;25606:8;25597:17;;;;;;:::i;:::-;;;;;25642:2;25632:12;;;;25556:103;25685:8;25676:5;:17;25672:103;;25722:8;25713:17;;;;;;:::i;:::-;;;;;25758:2;25748:12;;;;25672:103;25801:7;25792:5;:16;25788:100;;25837:7;25828:16;;;;;;:::i;:::-;;;;;25872:1;25862:11;;;;25788:100;25914:7;25905:5;:16;25901:100;;25950:7;25941:16;;;;;;:::i;:::-;;;;;25985:1;25975:11;;;;25901:100;26027:7;26018:5;:16;26014:100;;26063:7;26054:16;;;;;;:::i;:::-;;;;;26098:1;26088:11;;;;26014:100;26140:7;26131:5;:16;26127:66;;26177:1;26167:11;;;;26127:66;26219:6;26212:13;;;25316:916;;;:::o;7:75:26:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:246::-;1879:1;1889:113;1903:6;1900:1;1897:13;1889:113;;;1988:1;1983:3;1979:11;1973:18;1969:1;1964:3;1960:11;1953:39;1925:2;1922:1;1918:10;1913:15;;1889:113;;;2036:1;2027:6;2022:3;2018:16;2011:27;1860:184;1798:246;;;:::o;2050:102::-;2091:6;2142:2;2138:7;2133:2;2126:5;2122:14;2118:28;2108:38;;2050:102;;;:::o;2158:377::-;2246:3;2274:39;2307:5;2274:39;:::i;:::-;2329:71;2393:6;2388:3;2329:71;:::i;:::-;2322:78;;2409:65;2467:6;2462:3;2455:4;2448:5;2444:16;2409:65;:::i;:::-;2499:29;2521:6;2499:29;:::i;:::-;2494:3;2490:39;2483:46;;2250:285;2158:377;;;;:::o;2541:313::-;2654:4;2692:2;2681:9;2677:18;2669:26;;2741:9;2735:4;2731:20;2727:1;2716:9;2712:17;2705:47;2769:78;2842:4;2833:6;2769:78;:::i;:::-;2761:86;;2541:313;;;;:::o;2860:77::-;2897:7;2926:5;2915:16;;2860:77;;;:::o;2943:122::-;3016:24;3034:5;3016:24;:::i;:::-;3009:5;3006:35;2996:63;;3055:1;3052;3045:12;2996:63;2943:122;:::o;3071:139::-;3117:5;3155:6;3142:20;3133:29;;3171:33;3198:5;3171:33;:::i;:::-;3071:139;;;;:::o;3216:329::-;3275:6;3324:2;3312:9;3303:7;3299:23;3295:32;3292:119;;;3330:79;;:::i;:::-;3292:119;3450:1;3475:53;3520:7;3511:6;3500:9;3496:22;3475:53;:::i;:::-;3465:63;;3421:117;3216:329;;;;:::o;3551:126::-;3588:7;3628:42;3621:5;3617:54;3606:65;;3551:126;;;:::o;3683:96::-;3720:7;3749:24;3767:5;3749:24;:::i;:::-;3738:35;;3683:96;;;:::o;3785:118::-;3872:24;3890:5;3872:24;:::i;:::-;3867:3;3860:37;3785:118;;:::o;3909:222::-;4002:4;4040:2;4029:9;4025:18;4017:26;;4053:71;4121:1;4110:9;4106:17;4097:6;4053:71;:::i;:::-;3909:222;;;;:::o;4137:122::-;4210:24;4228:5;4210:24;:::i;:::-;4203:5;4200:35;4190:63;;4249:1;4246;4239:12;4190:63;4137:122;:::o;4265:139::-;4311:5;4349:6;4336:20;4327:29;;4365:33;4392:5;4365:33;:::i;:::-;4265:139;;;;:::o;4410:474::-;4478:6;4486;4535:2;4523:9;4514:7;4510:23;4506:32;4503:119;;;4541:79;;:::i;:::-;4503:119;4661:1;4686:53;4731:7;4722:6;4711:9;4707:22;4686:53;:::i;:::-;4676:63;;4632:117;4788:2;4814:53;4859:7;4850:6;4839:9;4835:22;4814:53;:::i;:::-;4804:63;;4759:118;4410:474;;;;;:::o;4890:619::-;4967:6;4975;4983;5032:2;5020:9;5011:7;5007:23;5003:32;5000:119;;;5038:79;;:::i;:::-;5000:119;5158:1;5183:53;5228:7;5219:6;5208:9;5204:22;5183:53;:::i;:::-;5173:63;;5129:117;5285:2;5311:53;5356:7;5347:6;5336:9;5332:22;5311:53;:::i;:::-;5301:63;;5256:118;5413:2;5439:53;5484:7;5475:6;5464:9;5460:22;5439:53;:::i;:::-;5429:63;;5384:118;4890:619;;;;;:::o;5515:329::-;5574:6;5623:2;5611:9;5602:7;5598:23;5594:32;5591:119;;;5629:79;;:::i;:::-;5591:119;5749:1;5774:53;5819:7;5810:6;5799:9;5795:22;5774:53;:::i;:::-;5764:63;;5720:117;5515:329;;;;:::o;5850:118::-;5937:24;5955:5;5937:24;:::i;:::-;5932:3;5925:37;5850:118;;:::o;5974:222::-;6067:4;6105:2;6094:9;6090:18;6082:26;;6118:71;6186:1;6175:9;6171:17;6162:6;6118:71;:::i;:::-;5974:222;;;;:::o;6202:116::-;6272:21;6287:5;6272:21;:::i;:::-;6265:5;6262:32;6252:60;;6308:1;6305;6298:12;6252:60;6202:116;:::o;6324:133::-;6367:5;6405:6;6392:20;6383:29;;6421:30;6445:5;6421:30;:::i;:::-;6324:133;;;;:::o;6463:468::-;6528:6;6536;6585:2;6573:9;6564:7;6560:23;6556:32;6553:119;;;6591:79;;:::i;:::-;6553:119;6711:1;6736:53;6781:7;6772:6;6761:9;6757:22;6736:53;:::i;:::-;6726:63;;6682:117;6838:2;6864:50;6906:7;6897:6;6886:9;6882:22;6864:50;:::i;:::-;6854:60;;6809:115;6463:468;;;;;:::o;6937:117::-;7046:1;7043;7036:12;7060:117;7169:1;7166;7159:12;7183:180;7231:77;7228:1;7221:88;7328:4;7325:1;7318:15;7352:4;7349:1;7342:15;7369:281;7452:27;7474:4;7452:27;:::i;:::-;7444:6;7440:40;7582:6;7570:10;7567:22;7546:18;7534:10;7531:34;7528:62;7525:88;;;7593:18;;:::i;:::-;7525:88;7633:10;7629:2;7622:22;7412:238;7369:281;;:::o;7656:129::-;7690:6;7717:20;;:::i;:::-;7707:30;;7746:33;7774:4;7766:6;7746:33;:::i;:::-;7656:129;;;:::o;7791:307::-;7852:4;7942:18;7934:6;7931:30;7928:56;;;7964:18;;:::i;:::-;7928:56;8002:29;8024:6;8002:29;:::i;:::-;7994:37;;8086:4;8080;8076:15;8068:23;;7791:307;;;:::o;8104:146::-;8201:6;8196:3;8191;8178:30;8242:1;8233:6;8228:3;8224:16;8217:27;8104:146;;;:::o;8256:423::-;8333:5;8358:65;8374:48;8415:6;8374:48;:::i;:::-;8358:65;:::i;:::-;8349:74;;8446:6;8439:5;8432:21;8484:4;8477:5;8473:16;8522:3;8513:6;8508:3;8504:16;8501:25;8498:112;;;8529:79;;:::i;:::-;8498:112;8619:54;8666:6;8661:3;8656;8619:54;:::i;:::-;8339:340;8256:423;;;;;:::o;8698:338::-;8753:5;8802:3;8795:4;8787:6;8783:17;8779:27;8769:122;;8810:79;;:::i;:::-;8769:122;8927:6;8914:20;8952:78;9026:3;9018:6;9011:4;9003:6;8999:17;8952:78;:::i;:::-;8943:87;;8759:277;8698:338;;;;:::o;9042:943::-;9137:6;9145;9153;9161;9210:3;9198:9;9189:7;9185:23;9181:33;9178:120;;;9217:79;;:::i;:::-;9178:120;9337:1;9362:53;9407:7;9398:6;9387:9;9383:22;9362:53;:::i;:::-;9352:63;;9308:117;9464:2;9490:53;9535:7;9526:6;9515:9;9511:22;9490:53;:::i;:::-;9480:63;;9435:118;9592:2;9618:53;9663:7;9654:6;9643:9;9639:22;9618:53;:::i;:::-;9608:63;;9563:118;9748:2;9737:9;9733:18;9720:32;9779:18;9771:6;9768:30;9765:117;;;9801:79;;:::i;:::-;9765:117;9906:62;9960:7;9951:6;9940:9;9936:22;9906:62;:::i;:::-;9896:72;;9691:287;9042:943;;;;;;;:::o;9991:474::-;10059:6;10067;10116:2;10104:9;10095:7;10091:23;10087:32;10084:119;;;10122:79;;:::i;:::-;10084:119;10242:1;10267:53;10312:7;10303:6;10292:9;10288:22;10267:53;:::i;:::-;10257:63;;10213:117;10369:2;10395:53;10440:7;10431:6;10420:9;10416:22;10395:53;:::i;:::-;10385:63;;10340:118;9991:474;;;;;:::o;10471:180::-;10519:77;10516:1;10509:88;10616:4;10613:1;10606:15;10640:4;10637:1;10630:15;10657:320;10701:6;10738:1;10732:4;10728:12;10718:22;;10785:1;10779:4;10775:12;10806:18;10796:81;;10862:4;10854:6;10850:17;10840:27;;10796:81;10924:2;10916:6;10913:14;10893:18;10890:38;10887:84;;10943:18;;:::i;:::-;10887:84;10708:269;10657:320;;;:::o;10983:442::-;11132:4;11170:2;11159:9;11155:18;11147:26;;11183:71;11251:1;11240:9;11236:17;11227:6;11183:71;:::i;:::-;11264:72;11332:2;11321:9;11317:18;11308:6;11264:72;:::i;:::-;11346;11414:2;11403:9;11399:18;11390:6;11346:72;:::i;:::-;10983:442;;;;;;:::o;11431:148::-;11533:11;11570:3;11555:18;;11431:148;;;;:::o;11585:390::-;11691:3;11719:39;11752:5;11719:39;:::i;:::-;11774:89;11856:6;11851:3;11774:89;:::i;:::-;11767:96;;11872:65;11930:6;11925:3;11918:4;11911:5;11907:16;11872:65;:::i;:::-;11962:6;11957:3;11953:16;11946:23;;11695:280;11585:390;;;;:::o;11981:435::-;12161:3;12183:95;12274:3;12265:6;12183:95;:::i;:::-;12176:102;;12295:95;12386:3;12377:6;12295:95;:::i;:::-;12288:102;;12407:3;12400:10;;11981:435;;;;;:::o;12422:98::-;12473:6;12507:5;12501:12;12491:22;;12422:98;;;:::o;12526:168::-;12609:11;12643:6;12638:3;12631:19;12683:4;12678:3;12674:14;12659:29;;12526:168;;;;:::o;12700:373::-;12786:3;12814:38;12846:5;12814:38;:::i;:::-;12868:70;12931:6;12926:3;12868:70;:::i;:::-;12861:77;;12947:65;13005:6;13000:3;12993:4;12986:5;12982:16;12947:65;:::i;:::-;13037:29;13059:6;13037:29;:::i;:::-;13032:3;13028:39;13021:46;;12790:283;12700:373;;;;:::o;13079:640::-;13274:4;13312:3;13301:9;13297:19;13289:27;;13326:71;13394:1;13383:9;13379:17;13370:6;13326:71;:::i;:::-;13407:72;13475:2;13464:9;13460:18;13451:6;13407:72;:::i;:::-;13489;13557:2;13546:9;13542:18;13533:6;13489:72;:::i;:::-;13608:9;13602:4;13598:20;13593:2;13582:9;13578:18;13571:48;13636:76;13707:4;13698:6;13636:76;:::i;:::-;13628:84;;13079:640;;;;;;;:::o;13725:141::-;13781:5;13812:6;13806:13;13797:22;;13828:32;13854:5;13828:32;:::i;:::-;13725:141;;;;:::o;13872:349::-;13941:6;13990:2;13978:9;13969:7;13965:23;13961:32;13958:119;;;13996:79;;:::i;:::-;13958:119;14116:1;14141:63;14196:7;14187:6;14176:9;14172:22;14141:63;:::i;:::-;14131:73;;14087:127;13872:349;;;;:::o;14227:180::-;14275:77;14272:1;14265:88;14372:4;14369:1;14362:15;14396:4;14393:1;14386:15;14413:180;14553:32;14549:1;14541:6;14537:14;14530:56;14413:180;:::o;14599:366::-;14741:3;14762:67;14826:2;14821:3;14762:67;:::i;:::-;14755:74;;14838:93;14927:3;14838:93;:::i;:::-;14956:2;14951:3;14947:12;14940:19;;14599:366;;;:::o;14971:419::-;15137:4;15175:2;15164:9;15160:18;15152:26;;15224:9;15218:4;15214:20;15210:1;15199:9;15195:17;15188:47;15252:131;15378:4;15252:131;:::i;:::-;15244:139;;14971:419;;;:::o"},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","getTracking(uint256)":"ac785e39","isApprovedForAll(address,address)":"e985e9c5","mintTnt(address,uint256)":"4d348eb5","name()":"06fdde03","owner()":"8da5cb5b","ownerOf(uint256)":"6352211e","renounceOwnership()":"715018a6","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getTracking\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tournamentId\",\"type\":\"uint256\"}],\"name\":\"mintTnt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Constructor to mint a tournament token\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"getTracking(uint256)\":{\"details\":\"getTracking function to get the winner address of the tournament\",\"params\":{\"tokenId\":\": id of the tournament token\"},\"returns\":{\"_0\":\"address of the winner\"}},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"mintTnt(address,uint256)\":{\"details\":\"mintTnt function to mint a tournament token to a new address\",\"params\":{\"tournamentId\":\": id of the tournament token\",\"winner\":\": address of the winner\"}},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"tntTracking\":{\"details\":\"tntTracking: mapping of tournamentId to winner address\"}},\"title\":\"TournamentNft TournamentNft - a contract for my non-fungible tournament tokens.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/nfts/TournamentNft.sol\":\"TournamentNft\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x39ed367e54765186281efcfe83e47cf0ad62cc879f10e191360712507125f29a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c5ae6d85bd48cca8d6d2fcec8c63efd86f56f8a5832577a47e403ce0e65cb09\",\"dweb:/ipfs/QmUtcS8AbRSWhuc61puYet58os8FvSqm329ChoW8wwZXZk\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0x40399695922383778f9f540a620bec475a2f8e0f08d41f0005682842e28a9855\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://746d295e403931aeb9d6065fd5a0871f43ab5459814a60623611e4b6641a09fd\",\"dweb:/ipfs/QmWrgT8YJrQ9FfD1o3YYArwo57e7MGdpFKuM74qJ4qE34E\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x44f87e91783e88415bde66f1a63f6c7f0076f2d511548820407d5c95643ac56c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13a51bc2b23827744dcf5bad10c69e72528cf015a6fe48c93632cdb2c0eb1251\",\"dweb:/ipfs/QmZwPA47Yqgje1qtkdEFEja8ntTahMStYzKf5q3JRnaR7d\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/nfts/TournamentNft.sol\":{\"keccak256\":\"0x37c809f35105b5859214d658e0cb161959694f1116a9deec6d9708d21ef0d1a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9283f5c42acca245241d2e159e6f89cba23d01488079f57f92439c5aa70f84a8\",\"dweb:/ipfs/QmPSEwxrFoHMTmXK1eWxBpvjQ7NRXRBrBcxDwKjYr1ZQUA\"]}},\"version\":1}"}},"contracts/tokens/PongToken.sol":{"PongToken":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_368":{"entryPoint":null,"id":368,"parameterSlots":2,"returnSlots":0},"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_8221":{"entryPoint":null,"id":8221,"parameterSlots":0,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":306,"id":146,"parameterSlots":1,"returnSlots":0},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":1421,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":1438,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":662,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":504,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":983,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":1401,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":1369,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":798,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":944,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":818,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1138,"id":null,"parameterSlots":2,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":683,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":609,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":1108,"id":null,"parameterSlots":2,"returnSlots":1},"identity":{"entryPoint":808,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":1076,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":562,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":515,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":858,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":699,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":1063,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":916,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":712,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":868,"id":null,"parameterSlots":3,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":911,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:5817:26","statements":[{"body":{"nodeType":"YulBlock","src":"66:40:26","statements":[{"nodeType":"YulAssignment","src":"77:22:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"87:5:26"},"nodeType":"YulFunctionCall","src":"87:12:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"77:6:26"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49:5:26","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"59:6:26","type":""}],"src":"7:99:26"},{"body":{"nodeType":"YulBlock","src":"140:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"157:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"160:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"150:6:26"},"nodeType":"YulFunctionCall","src":"150:88:26"},"nodeType":"YulExpressionStatement","src":"150:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"254:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"257:4:26","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"247:6:26"},"nodeType":"YulFunctionCall","src":"247:15:26"},"nodeType":"YulExpressionStatement","src":"247:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"278:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"281:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"271:6:26"},"nodeType":"YulFunctionCall","src":"271:15:26"},"nodeType":"YulExpressionStatement","src":"271:15:26"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"112:180:26"},{"body":{"nodeType":"YulBlock","src":"326:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"343:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"346:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"336:6:26"},"nodeType":"YulFunctionCall","src":"336:88:26"},"nodeType":"YulExpressionStatement","src":"336:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"443:4:26","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"433:6:26"},"nodeType":"YulFunctionCall","src":"433:15:26"},"nodeType":"YulExpressionStatement","src":"433:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"464:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"467:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"457:6:26"},"nodeType":"YulFunctionCall","src":"457:15:26"},"nodeType":"YulExpressionStatement","src":"457:15:26"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"298:180:26"},{"body":{"nodeType":"YulBlock","src":"535:269:26","statements":[{"nodeType":"YulAssignment","src":"545:22:26","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"559:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"565:1:26","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"555:3:26"},"nodeType":"YulFunctionCall","src":"555:12:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"545:6:26"}]},{"nodeType":"YulVariableDeclaration","src":"576:38:26","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"606:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"612:1:26","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"602:3:26"},"nodeType":"YulFunctionCall","src":"602:12:26"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"580:18:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"653:51:26","statements":[{"nodeType":"YulAssignment","src":"667:27:26","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"681:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"689:4:26","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"677:3:26"},"nodeType":"YulFunctionCall","src":"677:17:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"667:6:26"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"633:18:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"626:6:26"},"nodeType":"YulFunctionCall","src":"626:26:26"},"nodeType":"YulIf","src":"623:81:26"},{"body":{"nodeType":"YulBlock","src":"756:42:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"770:16:26"},"nodeType":"YulFunctionCall","src":"770:18:26"},"nodeType":"YulExpressionStatement","src":"770:18:26"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"720:18:26"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"743:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"751:2:26","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"740:2:26"},"nodeType":"YulFunctionCall","src":"740:14:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"717:2:26"},"nodeType":"YulFunctionCall","src":"717:38:26"},"nodeType":"YulIf","src":"714:84:26"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"519:4:26","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"528:6:26","type":""}],"src":"484:320:26"},{"body":{"nodeType":"YulBlock","src":"864:87:26","statements":[{"nodeType":"YulAssignment","src":"874:11:26","value":{"name":"ptr","nodeType":"YulIdentifier","src":"882:3:26"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"874:4:26"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"902:1:26","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"905:3:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"895:6:26"},"nodeType":"YulFunctionCall","src":"895:14:26"},"nodeType":"YulExpressionStatement","src":"895:14:26"},{"nodeType":"YulAssignment","src":"918:26:26","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"936:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"939:4:26","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"926:9:26"},"nodeType":"YulFunctionCall","src":"926:18:26"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"918:4:26"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"851:3:26","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"859:4:26","type":""}],"src":"810:141:26"},{"body":{"nodeType":"YulBlock","src":"1001:49:26","statements":[{"nodeType":"YulAssignment","src":"1011:33:26","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1029:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"1036:2:26","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1025:3:26"},"nodeType":"YulFunctionCall","src":"1025:14:26"},{"kind":"number","nodeType":"YulLiteral","src":"1041:2:26","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"1021:3:26"},"nodeType":"YulFunctionCall","src":"1021:23:26"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1011:6:26"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"984:5:26","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"994:6:26","type":""}],"src":"957:93:26"},{"body":{"nodeType":"YulBlock","src":"1109:54:26","statements":[{"nodeType":"YulAssignment","src":"1119:37:26","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"1144:4:26"},{"name":"value","nodeType":"YulIdentifier","src":"1150:5:26"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1140:3:26"},"nodeType":"YulFunctionCall","src":"1140:16:26"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"1119:8:26"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"1084:4:26","type":""},{"name":"value","nodeType":"YulTypedName","src":"1090:5:26","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"1100:8:26","type":""}],"src":"1056:107:26"},{"body":{"nodeType":"YulBlock","src":"1245:317:26","statements":[{"nodeType":"YulVariableDeclaration","src":"1255:35:26","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"1276:10:26"},{"kind":"number","nodeType":"YulLiteral","src":"1288:1:26","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1272:3:26"},"nodeType":"YulFunctionCall","src":"1272:18:26"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"1259:9:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1299:109:26","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"1330:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"1341:66:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"1311:18:26"},"nodeType":"YulFunctionCall","src":"1311:97:26"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"1303:4:26","type":""}]},{"nodeType":"YulAssignment","src":"1417:51:26","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"1448:9:26"},{"name":"toInsert","nodeType":"YulIdentifier","src":"1459:8:26"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"1429:18:26"},"nodeType":"YulFunctionCall","src":"1429:39:26"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"1417:8:26"}]},{"nodeType":"YulAssignment","src":"1477:30:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1490:5:26"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"1501:4:26"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1497:3:26"},"nodeType":"YulFunctionCall","src":"1497:9:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1486:3:26"},"nodeType":"YulFunctionCall","src":"1486:21:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1477:5:26"}]},{"nodeType":"YulAssignment","src":"1516:40:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1529:5:26"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"1540:8:26"},{"name":"mask","nodeType":"YulIdentifier","src":"1550:4:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1536:3:26"},"nodeType":"YulFunctionCall","src":"1536:19:26"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1526:2:26"},"nodeType":"YulFunctionCall","src":"1526:30:26"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1516:6:26"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1206:5:26","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"1213:10:26","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"1225:8:26","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"1238:6:26","type":""}],"src":"1169:393:26"},{"body":{"nodeType":"YulBlock","src":"1613:32:26","statements":[{"nodeType":"YulAssignment","src":"1623:16:26","value":{"name":"value","nodeType":"YulIdentifier","src":"1634:5:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1623:7:26"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1595:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1605:7:26","type":""}],"src":"1568:77:26"},{"body":{"nodeType":"YulBlock","src":"1683:28:26","statements":[{"nodeType":"YulAssignment","src":"1693:12:26","value":{"name":"value","nodeType":"YulIdentifier","src":"1700:5:26"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"1693:3:26"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1669:5:26","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"1679:3:26","type":""}],"src":"1651:60:26"},{"body":{"nodeType":"YulBlock","src":"1777:82:26","statements":[{"nodeType":"YulAssignment","src":"1787:66:26","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1845:5:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1827:17:26"},"nodeType":"YulFunctionCall","src":"1827:24:26"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"1818:8:26"},"nodeType":"YulFunctionCall","src":"1818:34:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1800:17:26"},"nodeType":"YulFunctionCall","src":"1800:53:26"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"1787:9:26"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1757:5:26","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"1767:9:26","type":""}],"src":"1717:142:26"},{"body":{"nodeType":"YulBlock","src":"1912:28:26","statements":[{"nodeType":"YulAssignment","src":"1922:12:26","value":{"name":"value","nodeType":"YulIdentifier","src":"1929:5:26"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"1922:3:26"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1898:5:26","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"1908:3:26","type":""}],"src":"1865:75:26"},{"body":{"nodeType":"YulBlock","src":"2022:193:26","statements":[{"nodeType":"YulVariableDeclaration","src":"2032:63:26","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"2087:7:26"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"2056:30:26"},"nodeType":"YulFunctionCall","src":"2056:39:26"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"2036:16:26","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2111:4:26"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2151:4:26"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"2145:5:26"},"nodeType":"YulFunctionCall","src":"2145:11:26"},{"name":"offset","nodeType":"YulIdentifier","src":"2158:6:26"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"2190:16:26"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"2166:23:26"},"nodeType":"YulFunctionCall","src":"2166:41:26"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"2117:27:26"},"nodeType":"YulFunctionCall","src":"2117:91:26"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2104:6:26"},"nodeType":"YulFunctionCall","src":"2104:105:26"},"nodeType":"YulExpressionStatement","src":"2104:105:26"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"1999:4:26","type":""},{"name":"offset","nodeType":"YulTypedName","src":"2005:6:26","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"2013:7:26","type":""}],"src":"1946:269:26"},{"body":{"nodeType":"YulBlock","src":"2270:24:26","statements":[{"nodeType":"YulAssignment","src":"2280:8:26","value":{"kind":"number","nodeType":"YulLiteral","src":"2287:1:26","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"2280:3:26"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"2266:3:26","type":""}],"src":"2221:73:26"},{"body":{"nodeType":"YulBlock","src":"2353:136:26","statements":[{"nodeType":"YulVariableDeclaration","src":"2363:46:26","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"2377:30:26"},"nodeType":"YulFunctionCall","src":"2377:32:26"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"2367:6:26","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2462:4:26"},{"name":"offset","nodeType":"YulIdentifier","src":"2468:6:26"},{"name":"zero_0","nodeType":"YulIdentifier","src":"2476:6:26"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"2418:43:26"},"nodeType":"YulFunctionCall","src":"2418:65:26"},"nodeType":"YulExpressionStatement","src":"2418:65:26"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"2339:4:26","type":""},{"name":"offset","nodeType":"YulTypedName","src":"2345:6:26","type":""}],"src":"2300:189:26"},{"body":{"nodeType":"YulBlock","src":"2545:136:26","statements":[{"body":{"nodeType":"YulBlock","src":"2612:63:26","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2656:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"2663:1:26","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"2626:29:26"},"nodeType":"YulFunctionCall","src":"2626:39:26"},"nodeType":"YulExpressionStatement","src":"2626:39:26"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2565:5:26"},{"name":"end","nodeType":"YulIdentifier","src":"2572:3:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2562:2:26"},"nodeType":"YulFunctionCall","src":"2562:14:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2577:26:26","statements":[{"nodeType":"YulAssignment","src":"2579:22:26","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2592:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"2599:1:26","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2588:3:26"},"nodeType":"YulFunctionCall","src":"2588:13:26"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"2579:5:26"}]}]},"pre":{"nodeType":"YulBlock","src":"2559:2:26","statements":[]},"src":"2555:120:26"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"2533:5:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"2540:3:26","type":""}],"src":"2495:186:26"},{"body":{"nodeType":"YulBlock","src":"2766:464:26","statements":[{"body":{"nodeType":"YulBlock","src":"2792:431:26","statements":[{"nodeType":"YulVariableDeclaration","src":"2806:54:26","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2854:5:26"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"2822:31:26"},"nodeType":"YulFunctionCall","src":"2822:38:26"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"2810:8:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2873:63:26","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"2896:8:26"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"2924:10:26"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"2906:17:26"},"nodeType":"YulFunctionCall","src":"2906:29:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2892:3:26"},"nodeType":"YulFunctionCall","src":"2892:44:26"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"2877:11:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"3093:27:26","statements":[{"nodeType":"YulAssignment","src":"3095:23:26","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"3110:8:26"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"3095:11:26"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"3077:10:26"},{"kind":"number","nodeType":"YulLiteral","src":"3089:2:26","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3074:2:26"},"nodeType":"YulFunctionCall","src":"3074:18:26"},"nodeType":"YulIf","src":"3071:49:26"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"3162:11:26"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"3179:8:26"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"3207:3:26"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"3189:17:26"},"nodeType":"YulFunctionCall","src":"3189:22:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3175:3:26"},"nodeType":"YulFunctionCall","src":"3175:37:26"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"3133:28:26"},"nodeType":"YulFunctionCall","src":"3133:80:26"},"nodeType":"YulExpressionStatement","src":"3133:80:26"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"2783:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"2788:2:26","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2780:2:26"},"nodeType":"YulFunctionCall","src":"2780:11:26"},"nodeType":"YulIf","src":"2777:446:26"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"2742:5:26","type":""},{"name":"len","nodeType":"YulTypedName","src":"2749:3:26","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"2754:10:26","type":""}],"src":"2687:543:26"},{"body":{"nodeType":"YulBlock","src":"3299:54:26","statements":[{"nodeType":"YulAssignment","src":"3309:37:26","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"3334:4:26"},{"name":"value","nodeType":"YulIdentifier","src":"3340:5:26"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3330:3:26"},"nodeType":"YulFunctionCall","src":"3330:16:26"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"3309:8:26"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"3274:4:26","type":""},{"name":"value","nodeType":"YulTypedName","src":"3280:5:26","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"3290:8:26","type":""}],"src":"3236:117:26"},{"body":{"nodeType":"YulBlock","src":"3410:118:26","statements":[{"nodeType":"YulVariableDeclaration","src":"3420:68:26","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3469:1:26","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"3472:5:26"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3465:3:26"},"nodeType":"YulFunctionCall","src":"3465:13:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3484:1:26","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3480:3:26"},"nodeType":"YulFunctionCall","src":"3480:6:26"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"3436:28:26"},"nodeType":"YulFunctionCall","src":"3436:51:26"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3432:3:26"},"nodeType":"YulFunctionCall","src":"3432:56:26"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"3424:4:26","type":""}]},{"nodeType":"YulAssignment","src":"3497:25:26","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3511:4:26"},{"name":"mask","nodeType":"YulIdentifier","src":"3517:4:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3507:3:26"},"nodeType":"YulFunctionCall","src":"3507:15:26"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3497:6:26"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3387:4:26","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"3393:5:26","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"3403:6:26","type":""}],"src":"3359:169:26"},{"body":{"nodeType":"YulBlock","src":"3614:214:26","statements":[{"nodeType":"YulAssignment","src":"3747:37:26","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3774:4:26"},{"name":"len","nodeType":"YulIdentifier","src":"3780:3:26"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"3755:18:26"},"nodeType":"YulFunctionCall","src":"3755:29:26"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"3747:4:26"}]},{"nodeType":"YulAssignment","src":"3793:29:26","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3804:4:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3814:1:26","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"3817:3:26"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3810:3:26"},"nodeType":"YulFunctionCall","src":"3810:11:26"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3801:2:26"},"nodeType":"YulFunctionCall","src":"3801:21:26"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"3793:4:26"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3595:4:26","type":""},{"name":"len","nodeType":"YulTypedName","src":"3601:3:26","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"3609:4:26","type":""}],"src":"3533:295:26"},{"body":{"nodeType":"YulBlock","src":"3925:1303:26","statements":[{"nodeType":"YulVariableDeclaration","src":"3936:51:26","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3983:3:26"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"3950:32:26"},"nodeType":"YulFunctionCall","src":"3950:37:26"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"3940:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"4072:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4074:16:26"},"nodeType":"YulFunctionCall","src":"4074:18:26"},"nodeType":"YulExpressionStatement","src":"4074:18:26"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4044:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"4052:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4041:2:26"},"nodeType":"YulFunctionCall","src":"4041:30:26"},"nodeType":"YulIf","src":"4038:56:26"},{"nodeType":"YulVariableDeclaration","src":"4104:52:26","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4150:4:26"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"4144:5:26"},"nodeType":"YulFunctionCall","src":"4144:11:26"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"4118:25:26"},"nodeType":"YulFunctionCall","src":"4118:38:26"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"4108:6:26","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4249:4:26"},{"name":"oldLen","nodeType":"YulIdentifier","src":"4255:6:26"},{"name":"newLen","nodeType":"YulIdentifier","src":"4263:6:26"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"4203:45:26"},"nodeType":"YulFunctionCall","src":"4203:67:26"},"nodeType":"YulExpressionStatement","src":"4203:67:26"},{"nodeType":"YulVariableDeclaration","src":"4280:18:26","value":{"kind":"number","nodeType":"YulLiteral","src":"4297:1:26","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"4284:9:26","type":""}]},{"nodeType":"YulAssignment","src":"4308:17:26","value":{"kind":"number","nodeType":"YulLiteral","src":"4321:4:26","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"4308:9:26"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"4372:611:26","statements":[{"nodeType":"YulVariableDeclaration","src":"4386:37:26","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4405:6:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4417:4:26","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4413:3:26"},"nodeType":"YulFunctionCall","src":"4413:9:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4401:3:26"},"nodeType":"YulFunctionCall","src":"4401:22:26"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"4390:7:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4437:51:26","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4483:4:26"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"4451:31:26"},"nodeType":"YulFunctionCall","src":"4451:37:26"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"4441:6:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4501:10:26","value":{"kind":"number","nodeType":"YulLiteral","src":"4510:1:26","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"4505:1:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"4569:163:26","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4594:6:26"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4612:3:26"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"4617:9:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4608:3:26"},"nodeType":"YulFunctionCall","src":"4608:19:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4602:5:26"},"nodeType":"YulFunctionCall","src":"4602:26:26"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4587:6:26"},"nodeType":"YulFunctionCall","src":"4587:42:26"},"nodeType":"YulExpressionStatement","src":"4587:42:26"},{"nodeType":"YulAssignment","src":"4646:24:26","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4660:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"4668:1:26","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4656:3:26"},"nodeType":"YulFunctionCall","src":"4656:14:26"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4646:6:26"}]},{"nodeType":"YulAssignment","src":"4687:31:26","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"4704:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"4715:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4700:3:26"},"nodeType":"YulFunctionCall","src":"4700:18:26"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"4687:9:26"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4535:1:26"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"4538:7:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4532:2:26"},"nodeType":"YulFunctionCall","src":"4532:14:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4547:21:26","statements":[{"nodeType":"YulAssignment","src":"4549:17:26","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4558:1:26"},{"kind":"number","nodeType":"YulLiteral","src":"4561:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4554:3:26"},"nodeType":"YulFunctionCall","src":"4554:12:26"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"4549:1:26"}]}]},"pre":{"nodeType":"YulBlock","src":"4528:3:26","statements":[]},"src":"4524:208:26"},{"body":{"nodeType":"YulBlock","src":"4768:156:26","statements":[{"nodeType":"YulVariableDeclaration","src":"4786:43:26","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4813:3:26"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"4818:9:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4809:3:26"},"nodeType":"YulFunctionCall","src":"4809:19:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4803:5:26"},"nodeType":"YulFunctionCall","src":"4803:26:26"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"4790:9:26","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4853:6:26"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"4880:9:26"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4895:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"4903:4:26","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4891:3:26"},"nodeType":"YulFunctionCall","src":"4891:17:26"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"4861:18:26"},"nodeType":"YulFunctionCall","src":"4861:48:26"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4846:6:26"},"nodeType":"YulFunctionCall","src":"4846:64:26"},"nodeType":"YulExpressionStatement","src":"4846:64:26"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"4751:7:26"},{"name":"newLen","nodeType":"YulIdentifier","src":"4760:6:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4748:2:26"},"nodeType":"YulFunctionCall","src":"4748:19:26"},"nodeType":"YulIf","src":"4745:179:26"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4944:4:26"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4958:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"4966:1:26","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4954:3:26"},"nodeType":"YulFunctionCall","src":"4954:14:26"},{"kind":"number","nodeType":"YulLiteral","src":"4970:1:26","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4950:3:26"},"nodeType":"YulFunctionCall","src":"4950:22:26"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4937:6:26"},"nodeType":"YulFunctionCall","src":"4937:36:26"},"nodeType":"YulExpressionStatement","src":"4937:36:26"}]},"nodeType":"YulCase","src":"4365:618:26","value":{"kind":"number","nodeType":"YulLiteral","src":"4370:1:26","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"5000:222:26","statements":[{"nodeType":"YulVariableDeclaration","src":"5014:14:26","value":{"kind":"number","nodeType":"YulLiteral","src":"5027:1:26","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"5018:5:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"5051:67:26","statements":[{"nodeType":"YulAssignment","src":"5069:35:26","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5088:3:26"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"5093:9:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5084:3:26"},"nodeType":"YulFunctionCall","src":"5084:19:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5078:5:26"},"nodeType":"YulFunctionCall","src":"5078:26:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5069:5:26"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"5044:6:26"},"nodeType":"YulIf","src":"5041:77:26"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5138:4:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5197:5:26"},{"name":"newLen","nodeType":"YulIdentifier","src":"5204:6:26"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"5144:52:26"},"nodeType":"YulFunctionCall","src":"5144:67:26"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5131:6:26"},"nodeType":"YulFunctionCall","src":"5131:81:26"},"nodeType":"YulExpressionStatement","src":"5131:81:26"}]},"nodeType":"YulCase","src":"4992:230:26","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4345:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"4353:2:26","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4342:2:26"},"nodeType":"YulFunctionCall","src":"4342:14:26"},"nodeType":"YulSwitch","src":"4335:887:26"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"3914:4:26","type":""},{"name":"src","nodeType":"YulTypedName","src":"3920:3:26","type":""}],"src":"3833:1395:26"},{"body":{"nodeType":"YulBlock","src":"5279:81:26","statements":[{"nodeType":"YulAssignment","src":"5289:65:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5304:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"5311:42:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5300:3:26"},"nodeType":"YulFunctionCall","src":"5300:54:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5289:7:26"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5261:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5271:7:26","type":""}],"src":"5234:126:26"},{"body":{"nodeType":"YulBlock","src":"5411:51:26","statements":[{"nodeType":"YulAssignment","src":"5421:35:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5450:5:26"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"5432:17:26"},"nodeType":"YulFunctionCall","src":"5432:24:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5421:7:26"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5393:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5403:7:26","type":""}],"src":"5366:96:26"},{"body":{"nodeType":"YulBlock","src":"5533:53:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5550:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5573:5:26"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"5555:17:26"},"nodeType":"YulFunctionCall","src":"5555:24:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5543:6:26"},"nodeType":"YulFunctionCall","src":"5543:37:26"},"nodeType":"YulExpressionStatement","src":"5543:37:26"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5521:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5528:3:26","type":""}],"src":"5468:118:26"},{"body":{"nodeType":"YulBlock","src":"5690:124:26","statements":[{"nodeType":"YulAssignment","src":"5700:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5712:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"5723:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5708:3:26"},"nodeType":"YulFunctionCall","src":"5708:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5700:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5780:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5793:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"5804:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5789:3:26"},"nodeType":"YulFunctionCall","src":"5789:17:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"5736:43:26"},"nodeType":"YulFunctionCall","src":"5736:71:26"},"nodeType":"YulExpressionStatement","src":"5736:71:26"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5662:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5674:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5685:4:26","type":""}],"src":"5592:222:26"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":26,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b50336040518060400160405280600981526020017f506f6e67546f6b656e00000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f504f4e4700000000000000000000000000000000000000000000000000000000815250816003908162000090919062000472565b508060049081620000a2919062000472565b505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036200011a5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016200011191906200059e565b60405180910390fd5b6200012b816200013260201b60201c565b50620005bb565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200027a57607f821691505b60208210810362000290576200028f62000232565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620002fa7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620002bb565b620003068683620002bb565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620003536200034d62000347846200031e565b62000328565b6200031e565b9050919050565b6000819050919050565b6200036f8362000332565b620003876200037e826200035a565b848454620002c8565b825550505050565b600090565b6200039e6200038f565b620003ab81848462000364565b505050565b5b81811015620003d357620003c760008262000394565b600181019050620003b1565b5050565b601f8211156200042257620003ec8162000296565b620003f784620002ab565b8101602085101562000407578190505b6200041f6200041685620002ab565b830182620003b0565b50505b505050565b600082821c905092915050565b6000620004476000198460080262000427565b1980831691505092915050565b600062000462838362000434565b9150826002028217905092915050565b6200047d82620001f8565b67ffffffffffffffff81111562000499576200049862000203565b5b620004a5825462000261565b620004b2828285620003d7565b600060209050601f831160018114620004ea5760008415620004d5578287015190505b620004e1858262000454565b86555062000551565b601f198416620004fa8662000296565b60005b828110156200052457848901518255600182019150602085019450602081019050620004fd565b8683101562000544578489015162000540601f89168262000434565b8355505b6001600288020188555050505b505050505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620005868262000559565b9050919050565b620005988162000579565b82525050565b6000602082019050620005b560008301846200058d565b92915050565b61126a80620005cb6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063715018a61161008c5780639dc29fac116100665780639dc29fac1461023b578063a9059cbb14610257578063dd62ed3e14610287578063f2fde38b146102b7576100ea565b8063715018a6146101f55780638da5cb5b146101ff57806395d89b411461021d576100ea565b806323b872dd116100c857806323b872dd1461015b578063313ce5671461018b57806340c10f19146101a957806370a08231146101c5576100ea565b806306fdde03146100ef578063095ea7b31461010d57806318160ddd1461013d575b600080fd5b6100f76102d3565b6040516101049190610ebe565b60405180910390f35b61012760048036038101906101229190610f79565b610365565b6040516101349190610fd4565b60405180910390f35b610145610388565b6040516101529190610ffe565b60405180910390f35b61017560048036038101906101709190611019565b610392565b6040516101829190610fd4565b60405180910390f35b6101936103c1565b6040516101a09190611088565b60405180910390f35b6101c360048036038101906101be9190610f79565b6103ca565b005b6101df60048036038101906101da91906110a3565b6103e0565b6040516101ec9190610ffe565b60405180910390f35b6101fd610428565b005b61020761043c565b60405161021491906110df565b60405180910390f35b610225610466565b6040516102329190610ebe565b60405180910390f35b61025560048036038101906102509190610f79565b6104f8565b005b610271600480360381019061026c9190610f79565b61050e565b60405161027e9190610fd4565b60405180910390f35b6102a1600480360381019061029c91906110fa565b610531565b6040516102ae9190610ffe565b60405180910390f35b6102d160048036038101906102cc91906110a3565b6105b8565b005b6060600380546102e290611169565b80601f016020809104026020016040519081016040528092919081815260200182805461030e90611169565b801561035b5780601f106103305761010080835404028352916020019161035b565b820191906000526020600020905b81548152906001019060200180831161033e57829003601f168201915b5050505050905090565b60008061037061063e565b905061037d818585610646565b600191505092915050565b6000600254905090565b60008061039d61063e565b90506103aa858285610658565b6103b58585856106ed565b60019150509392505050565b60006012905090565b6103d26107e1565b6103dc8282610868565b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6104306107e1565b61043a60006108ea565b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606004805461047590611169565b80601f01602080910402602001604051908101604052809291908181526020018280546104a190611169565b80156104ee5780601f106104c3576101008083540402835291602001916104ee565b820191906000526020600020905b8154815290600101906020018083116104d157829003601f168201915b5050505050905090565b6105006107e1565b61050a82826109b0565b5050565b60008061051961063e565b90506105268185856106ed565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6105c06107e1565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036106325760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161062991906110df565b60405180910390fd5b61063b816108ea565b50565b600033905090565b6106538383836001610a32565b505050565b60006106648484610531565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156106e757818110156106d7578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016106ce9392919061119a565b60405180910390fd5b6106e684848484036000610a32565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361075f5760006040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161075691906110df565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036107d15760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016107c891906110df565b60405180910390fd5b6107dc838383610c09565b505050565b6107e961063e565b73ffffffffffffffffffffffffffffffffffffffff1661080761043c565b73ffffffffffffffffffffffffffffffffffffffff16146108665761082a61063e565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161085d91906110df565b60405180910390fd5b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108da5760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016108d191906110df565b60405180910390fd5b6108e660008383610c09565b5050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a225760006040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610a1991906110df565b60405180910390fd5b610a2e82600083610c09565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610aa45760006040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610a9b91906110df565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b165760006040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610b0d91906110df565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015610c03578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610bfa9190610ffe565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610c5b578060026000828254610c4f9190611200565b92505081905550610d2e565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610ce7578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610cde9392919061119a565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d775780600260008282540392505081905550610dc4565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610e219190610ffe565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610e68578082015181840152602081019050610e4d565b60008484015250505050565b6000601f19601f8301169050919050565b6000610e9082610e2e565b610e9a8185610e39565b9350610eaa818560208601610e4a565b610eb381610e74565b840191505092915050565b60006020820190508181036000830152610ed88184610e85565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610f1082610ee5565b9050919050565b610f2081610f05565b8114610f2b57600080fd5b50565b600081359050610f3d81610f17565b92915050565b6000819050919050565b610f5681610f43565b8114610f6157600080fd5b50565b600081359050610f7381610f4d565b92915050565b60008060408385031215610f9057610f8f610ee0565b5b6000610f9e85828601610f2e565b9250506020610faf85828601610f64565b9150509250929050565b60008115159050919050565b610fce81610fb9565b82525050565b6000602082019050610fe96000830184610fc5565b92915050565b610ff881610f43565b82525050565b60006020820190506110136000830184610fef565b92915050565b60008060006060848603121561103257611031610ee0565b5b600061104086828701610f2e565b935050602061105186828701610f2e565b925050604061106286828701610f64565b9150509250925092565b600060ff82169050919050565b6110828161106c565b82525050565b600060208201905061109d6000830184611079565b92915050565b6000602082840312156110b9576110b8610ee0565b5b60006110c784828501610f2e565b91505092915050565b6110d981610f05565b82525050565b60006020820190506110f460008301846110d0565b92915050565b6000806040838503121561111157611110610ee0565b5b600061111f85828601610f2e565b925050602061113085828601610f2e565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061118157607f821691505b6020821081036111945761119361113a565b5b50919050565b60006060820190506111af60008301866110d0565b6111bc6020830185610fef565b6111c96040830184610fef565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061120b82610f43565b915061121683610f43565b925082820190508082111561122e5761122d6111d1565b5b9291505056fea264697066735822122067053cccaa00c5b8b8be9f8106acdecc9f7a4345e54c4df4779b30743506f3ef64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x506F6E67546F6B656E0000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x504F4E4700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x90 SWAP2 SWAP1 PUSH3 0x472 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0xA2 SWAP2 SWAP1 PUSH3 0x472 JUMP JUMPDEST POP POP POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x11A JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x111 SWAP2 SWAP1 PUSH3 0x59E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x12B DUP2 PUSH3 0x132 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x5BB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x27A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x290 JUMPI PUSH3 0x28F PUSH3 0x232 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x2FA PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x2BB JUMP JUMPDEST PUSH3 0x306 DUP7 DUP4 PUSH3 0x2BB JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x353 PUSH3 0x34D PUSH3 0x347 DUP5 PUSH3 0x31E JUMP JUMPDEST PUSH3 0x328 JUMP JUMPDEST PUSH3 0x31E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x36F DUP4 PUSH3 0x332 JUMP JUMPDEST PUSH3 0x387 PUSH3 0x37E DUP3 PUSH3 0x35A JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x2C8 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x39E PUSH3 0x38F JUMP JUMPDEST PUSH3 0x3AB DUP2 DUP5 DUP5 PUSH3 0x364 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x3D3 JUMPI PUSH3 0x3C7 PUSH1 0x0 DUP3 PUSH3 0x394 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x3B1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x422 JUMPI PUSH3 0x3EC DUP2 PUSH3 0x296 JUMP JUMPDEST PUSH3 0x3F7 DUP5 PUSH3 0x2AB JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x407 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x41F PUSH3 0x416 DUP6 PUSH3 0x2AB JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x3B0 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x447 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x427 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x462 DUP4 DUP4 PUSH3 0x434 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x47D DUP3 PUSH3 0x1F8 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x499 JUMPI PUSH3 0x498 PUSH3 0x203 JUMP JUMPDEST JUMPDEST PUSH3 0x4A5 DUP3 SLOAD PUSH3 0x261 JUMP JUMPDEST PUSH3 0x4B2 DUP3 DUP3 DUP6 PUSH3 0x3D7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x4EA JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x4D5 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x4E1 DUP6 DUP3 PUSH3 0x454 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x551 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x4FA DUP7 PUSH3 0x296 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x524 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x4FD JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x544 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x540 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x434 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x586 DUP3 PUSH3 0x559 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x598 DUP2 PUSH3 0x579 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x5B5 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x58D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x126A DUP1 PUSH3 0x5CB PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x9DC29FAC GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x257 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2B7 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x21D JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1C5 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x13D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF7 PUSH2 0x2D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x104 SWAP2 SWAP1 PUSH2 0xEBE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x127 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x122 SWAP2 SWAP1 PUSH2 0xF79 JUMP JUMPDEST PUSH2 0x365 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x134 SWAP2 SWAP1 PUSH2 0xFD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x145 PUSH2 0x388 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x152 SWAP2 SWAP1 PUSH2 0xFFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x175 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x170 SWAP2 SWAP1 PUSH2 0x1019 JUMP JUMPDEST PUSH2 0x392 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x182 SWAP2 SWAP1 PUSH2 0xFD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x193 PUSH2 0x3C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0x1088 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0xF79 JUMP JUMPDEST PUSH2 0x3CA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DA SWAP2 SWAP1 PUSH2 0x10A3 JUMP JUMPDEST PUSH2 0x3E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EC SWAP2 SWAP1 PUSH2 0xFFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FD PUSH2 0x428 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x207 PUSH2 0x43C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x214 SWAP2 SWAP1 PUSH2 0x10DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x225 PUSH2 0x466 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x232 SWAP2 SWAP1 PUSH2 0xEBE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x255 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x250 SWAP2 SWAP1 PUSH2 0xF79 JUMP JUMPDEST PUSH2 0x4F8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x271 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26C SWAP2 SWAP1 PUSH2 0xF79 JUMP JUMPDEST PUSH2 0x50E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27E SWAP2 SWAP1 PUSH2 0xFD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29C SWAP2 SWAP1 PUSH2 0x10FA JUMP JUMPDEST PUSH2 0x531 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AE SWAP2 SWAP1 PUSH2 0xFFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CC SWAP2 SWAP1 PUSH2 0x10A3 JUMP JUMPDEST PUSH2 0x5B8 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x2E2 SWAP1 PUSH2 0x1169 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x30E SWAP1 PUSH2 0x1169 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x35B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x330 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x35B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x33E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x370 PUSH2 0x63E JUMP JUMPDEST SWAP1 POP PUSH2 0x37D DUP2 DUP6 DUP6 PUSH2 0x646 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x39D PUSH2 0x63E JUMP JUMPDEST SWAP1 POP PUSH2 0x3AA DUP6 DUP3 DUP6 PUSH2 0x658 JUMP JUMPDEST PUSH2 0x3B5 DUP6 DUP6 DUP6 PUSH2 0x6ED JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x3D2 PUSH2 0x7E1 JUMP JUMPDEST PUSH2 0x3DC DUP3 DUP3 PUSH2 0x868 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x430 PUSH2 0x7E1 JUMP JUMPDEST PUSH2 0x43A PUSH1 0x0 PUSH2 0x8EA JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x475 SWAP1 PUSH2 0x1169 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4A1 SWAP1 PUSH2 0x1169 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4EE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4C3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4EE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4D1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x500 PUSH2 0x7E1 JUMP JUMPDEST PUSH2 0x50A DUP3 DUP3 PUSH2 0x9B0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x519 PUSH2 0x63E JUMP JUMPDEST SWAP1 POP PUSH2 0x526 DUP2 DUP6 DUP6 PUSH2 0x6ED JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5C0 PUSH2 0x7E1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x632 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x629 SWAP2 SWAP1 PUSH2 0x10DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x63B DUP2 PUSH2 0x8EA JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x653 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xA32 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x664 DUP5 DUP5 PUSH2 0x531 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x6E7 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x6D7 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x119A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6E6 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0xA32 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x75F JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x756 SWAP2 SWAP1 PUSH2 0x10DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7D1 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C8 SWAP2 SWAP1 PUSH2 0x10DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7DC DUP4 DUP4 DUP4 PUSH2 0xC09 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x7E9 PUSH2 0x63E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x807 PUSH2 0x43C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x866 JUMPI PUSH2 0x82A PUSH2 0x63E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x85D SWAP2 SWAP1 PUSH2 0x10DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8DA JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D1 SWAP2 SWAP1 PUSH2 0x10DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8E6 PUSH1 0x0 DUP4 DUP4 PUSH2 0xC09 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA22 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA19 SWAP2 SWAP1 PUSH2 0x10DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA2E DUP3 PUSH1 0x0 DUP4 PUSH2 0xC09 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAA4 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA9B SWAP2 SWAP1 PUSH2 0x10DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB16 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB0D SWAP2 SWAP1 PUSH2 0x10DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xC03 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xBFA SWAP2 SWAP1 PUSH2 0xFFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC5B JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xC4F SWAP2 SWAP1 PUSH2 0x1200 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xD2E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xCE7 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCDE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x119A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD77 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xDC4 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xE21 SWAP2 SWAP1 PUSH2 0xFFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xE68 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xE4D JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE90 DUP3 PUSH2 0xE2E JUMP JUMPDEST PUSH2 0xE9A DUP2 DUP6 PUSH2 0xE39 JUMP JUMPDEST SWAP4 POP PUSH2 0xEAA DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xE4A JUMP JUMPDEST PUSH2 0xEB3 DUP2 PUSH2 0xE74 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xED8 DUP2 DUP5 PUSH2 0xE85 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF10 DUP3 PUSH2 0xEE5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF20 DUP2 PUSH2 0xF05 JUMP JUMPDEST DUP2 EQ PUSH2 0xF2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF3D DUP2 PUSH2 0xF17 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF56 DUP2 PUSH2 0xF43 JUMP JUMPDEST DUP2 EQ PUSH2 0xF61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF73 DUP2 PUSH2 0xF4D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF90 JUMPI PUSH2 0xF8F PUSH2 0xEE0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF9E DUP6 DUP3 DUP7 ADD PUSH2 0xF2E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xFAF DUP6 DUP3 DUP7 ADD PUSH2 0xF64 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFCE DUP2 PUSH2 0xFB9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFE9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xFC5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xFF8 DUP2 PUSH2 0xF43 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1013 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xFEF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1032 JUMPI PUSH2 0x1031 PUSH2 0xEE0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1040 DUP7 DUP3 DUP8 ADD PUSH2 0xF2E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1051 DUP7 DUP3 DUP8 ADD PUSH2 0xF2E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1062 DUP7 DUP3 DUP8 ADD PUSH2 0xF64 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1082 DUP2 PUSH2 0x106C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x109D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1079 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10B9 JUMPI PUSH2 0x10B8 PUSH2 0xEE0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x10C7 DUP5 DUP3 DUP6 ADD PUSH2 0xF2E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x10D9 DUP2 PUSH2 0xF05 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10F4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x10D0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1111 JUMPI PUSH2 0x1110 PUSH2 0xEE0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x111F DUP6 DUP3 DUP7 ADD PUSH2 0xF2E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1130 DUP6 DUP3 DUP7 ADD PUSH2 0xF2E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1181 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1194 JUMPI PUSH2 0x1193 PUSH2 0x113A JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x11AF PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x10D0 JUMP JUMPDEST PUSH2 0x11BC PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xFEF JUMP JUMPDEST PUSH2 0x11C9 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xFEF JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x120B DUP3 PUSH2 0xF43 JUMP JUMPDEST SWAP2 POP PUSH2 0x1216 DUP4 PUSH2 0xF43 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x122E JUMPI PUSH2 0x122D PUSH2 0x11D1 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH8 0x53CCCAA00C5B8B8 0xBE SWAP16 DUP2 MOD 0xAC 0xDE 0xCC SWAP16 PUSH27 0x4345E54C4DF4779B30743506F3EF64736F6C634300081400330000 ","sourceMap":"283:681:25:-:0;;;433:63;;;;;;;;;;482:10;1601:113:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1675:5;1667;:13;;;;;;:::i;:::-;;1700:7;1690;:17;;;;;;:::i;:::-;;1601:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;283:681:25;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7:99:26:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;5234:126::-;5271:7;5311:42;5304:5;5300:54;5289:65;;5234:126;;;:::o;5366:96::-;5403:7;5432:24;5450:5;5432:24;:::i;:::-;5421:35;;5366:96;;;:::o;5468:118::-;5555:24;5573:5;5555:24;:::i;:::-;5550:3;5543:37;5468:118;;:::o;5592:222::-;5685:4;5723:2;5712:9;5708:18;5700:26;;5736:71;5804:1;5793:9;5789:17;5780:6;5736:71;:::i;:::-;5592:222;;;;:::o;283:681:25:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_approve_722":{"entryPoint":1606,"id":722,"parameterSlots":3,"returnSlots":0},"@_approve_782":{"entryPoint":2610,"id":782,"parameterSlots":4,"returnSlots":0},"@_burn_704":{"entryPoint":2480,"id":704,"parameterSlots":2,"returnSlots":0},"@_checkOwner_84":{"entryPoint":2017,"id":84,"parameterSlots":0,"returnSlots":0},"@_mint_671":{"entryPoint":2152,"id":671,"parameterSlots":2,"returnSlots":0},"@_msgSender_2270":{"entryPoint":1598,"id":2270,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_830":{"entryPoint":1624,"id":830,"parameterSlots":3,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":2282,"id":146,"parameterSlots":1,"returnSlots":0},"@_transfer_561":{"entryPoint":1773,"id":561,"parameterSlots":3,"returnSlots":0},"@_update_638":{"entryPoint":3081,"id":638,"parameterSlots":3,"returnSlots":0},"@allowance_458":{"entryPoint":1329,"id":458,"parameterSlots":2,"returnSlots":1},"@approve_482":{"entryPoint":869,"id":482,"parameterSlots":2,"returnSlots":1},"@balanceOf_417":{"entryPoint":992,"id":417,"parameterSlots":1,"returnSlots":1},"@burn_8253":{"entryPoint":1272,"id":8253,"parameterSlots":2,"returnSlots":0},"@decimals_395":{"entryPoint":961,"id":395,"parameterSlots":0,"returnSlots":1},"@mint_8237":{"entryPoint":970,"id":8237,"parameterSlots":2,"returnSlots":0},"@name_377":{"entryPoint":723,"id":377,"parameterSlots":0,"returnSlots":1},"@owner_67":{"entryPoint":1084,"id":67,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_98":{"entryPoint":1064,"id":98,"parameterSlots":0,"returnSlots":0},"@symbol_386":{"entryPoint":1126,"id":386,"parameterSlots":0,"returnSlots":1},"@totalSupply_404":{"entryPoint":904,"id":404,"parameterSlots":0,"returnSlots":1},"@transferFrom_514":{"entryPoint":914,"id":514,"parameterSlots":3,"returnSlots":1},"@transferOwnership_126":{"entryPoint":1464,"id":126,"parameterSlots":1,"returnSlots":0},"@transfer_441":{"entryPoint":1294,"id":441,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address":{"entryPoint":3886,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":3940,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":4259,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":4346,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":4121,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":3961,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":4304,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":4037,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":3717,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":4079,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":4217,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":4319,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":4506,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":4052,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3774,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":4094,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":4232,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":3630,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":3641,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":4608,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":3845,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":4025,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":3813,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":3907,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":4204,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":3658,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":4457,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":4561,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":4410,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":3808,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":3700,"id":null,"parameterSlots":1,"returnSlots":1},"validator_revert_t_address":{"entryPoint":3863,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":3917,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:7360:26","statements":[{"body":{"nodeType":"YulBlock","src":"66:40:26","statements":[{"nodeType":"YulAssignment","src":"77:22:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"87:5:26"},"nodeType":"YulFunctionCall","src":"87:12:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"77:6:26"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49:5:26","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"59:6:26","type":""}],"src":"7:99:26"},{"body":{"nodeType":"YulBlock","src":"208:73:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"225:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"230:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"218:6:26"},"nodeType":"YulFunctionCall","src":"218:19:26"},"nodeType":"YulExpressionStatement","src":"218:19:26"},{"nodeType":"YulAssignment","src":"246:29:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"265:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"270:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"261:3:26"},"nodeType":"YulFunctionCall","src":"261:14:26"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"246:11:26"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"180:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"185:6:26","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"196:11:26","type":""}],"src":"112:169:26"},{"body":{"nodeType":"YulBlock","src":"349:184:26","statements":[{"nodeType":"YulVariableDeclaration","src":"359:10:26","value":{"kind":"number","nodeType":"YulLiteral","src":"368:1:26","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"363:1:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"428:63:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"453:3:26"},{"name":"i","nodeType":"YulIdentifier","src":"458:1:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"449:3:26"},"nodeType":"YulFunctionCall","src":"449:11:26"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"472:3:26"},{"name":"i","nodeType":"YulIdentifier","src":"477:1:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"468:3:26"},"nodeType":"YulFunctionCall","src":"468:11:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"462:5:26"},"nodeType":"YulFunctionCall","src":"462:18:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"442:6:26"},"nodeType":"YulFunctionCall","src":"442:39:26"},"nodeType":"YulExpressionStatement","src":"442:39:26"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"389:1:26"},{"name":"length","nodeType":"YulIdentifier","src":"392:6:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"386:2:26"},"nodeType":"YulFunctionCall","src":"386:13:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"400:19:26","statements":[{"nodeType":"YulAssignment","src":"402:15:26","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"411:1:26"},{"kind":"number","nodeType":"YulLiteral","src":"414:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"407:3:26"},"nodeType":"YulFunctionCall","src":"407:10:26"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"402:1:26"}]}]},"pre":{"nodeType":"YulBlock","src":"382:3:26","statements":[]},"src":"378:113:26"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"511:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"516:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"507:3:26"},"nodeType":"YulFunctionCall","src":"507:16:26"},{"kind":"number","nodeType":"YulLiteral","src":"525:1:26","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"500:6:26"},"nodeType":"YulFunctionCall","src":"500:27:26"},"nodeType":"YulExpressionStatement","src":"500:27:26"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"331:3:26","type":""},{"name":"dst","nodeType":"YulTypedName","src":"336:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"341:6:26","type":""}],"src":"287:246:26"},{"body":{"nodeType":"YulBlock","src":"587:54:26","statements":[{"nodeType":"YulAssignment","src":"597:38:26","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"615:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"622:2:26","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"611:3:26"},"nodeType":"YulFunctionCall","src":"611:14:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"631:2:26","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"627:3:26"},"nodeType":"YulFunctionCall","src":"627:7:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"607:3:26"},"nodeType":"YulFunctionCall","src":"607:28:26"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"597:6:26"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"570:5:26","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"580:6:26","type":""}],"src":"539:102:26"},{"body":{"nodeType":"YulBlock","src":"739:285:26","statements":[{"nodeType":"YulVariableDeclaration","src":"749:53:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"796:5:26"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"763:32:26"},"nodeType":"YulFunctionCall","src":"763:39:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"753:6:26","type":""}]},{"nodeType":"YulAssignment","src":"811:78:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"877:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"882:6:26"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"818:58:26"},"nodeType":"YulFunctionCall","src":"818:71:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"811:3:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"937:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"944:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"933:3:26"},"nodeType":"YulFunctionCall","src":"933:16:26"},{"name":"pos","nodeType":"YulIdentifier","src":"951:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"956:6:26"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"898:34:26"},"nodeType":"YulFunctionCall","src":"898:65:26"},"nodeType":"YulExpressionStatement","src":"898:65:26"},{"nodeType":"YulAssignment","src":"972:46:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"983:3:26"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1010:6:26"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"988:21:26"},"nodeType":"YulFunctionCall","src":"988:29:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"979:3:26"},"nodeType":"YulFunctionCall","src":"979:39:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"972:3:26"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"720:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"727:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"735:3:26","type":""}],"src":"647:377:26"},{"body":{"nodeType":"YulBlock","src":"1148:195:26","statements":[{"nodeType":"YulAssignment","src":"1158:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1170:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"1181:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1166:3:26"},"nodeType":"YulFunctionCall","src":"1166:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1158:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1205:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"1216:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1201:3:26"},"nodeType":"YulFunctionCall","src":"1201:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1224:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"1230:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1220:3:26"},"nodeType":"YulFunctionCall","src":"1220:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1194:6:26"},"nodeType":"YulFunctionCall","src":"1194:47:26"},"nodeType":"YulExpressionStatement","src":"1194:47:26"},{"nodeType":"YulAssignment","src":"1250:86:26","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1322:6:26"},{"name":"tail","nodeType":"YulIdentifier","src":"1331:4:26"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1258:63:26"},"nodeType":"YulFunctionCall","src":"1258:78:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1250:4:26"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1120:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1132:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1143:4:26","type":""}],"src":"1030:313:26"},{"body":{"nodeType":"YulBlock","src":"1389:35:26","statements":[{"nodeType":"YulAssignment","src":"1399:19:26","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1415:2:26","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1409:5:26"},"nodeType":"YulFunctionCall","src":"1409:9:26"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1399:6:26"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1382:6:26","type":""}],"src":"1349:75:26"},{"body":{"nodeType":"YulBlock","src":"1519:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1536:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1539:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1529:6:26"},"nodeType":"YulFunctionCall","src":"1529:12:26"},"nodeType":"YulExpressionStatement","src":"1529:12:26"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"1430:117:26"},{"body":{"nodeType":"YulBlock","src":"1642:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1659:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1662:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1652:6:26"},"nodeType":"YulFunctionCall","src":"1652:12:26"},"nodeType":"YulExpressionStatement","src":"1652:12:26"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"1553:117:26"},{"body":{"nodeType":"YulBlock","src":"1721:81:26","statements":[{"nodeType":"YulAssignment","src":"1731:65:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1746:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"1753:42:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1742:3:26"},"nodeType":"YulFunctionCall","src":"1742:54:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1731:7:26"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1703:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1713:7:26","type":""}],"src":"1676:126:26"},{"body":{"nodeType":"YulBlock","src":"1853:51:26","statements":[{"nodeType":"YulAssignment","src":"1863:35:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1892:5:26"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"1874:17:26"},"nodeType":"YulFunctionCall","src":"1874:24:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1863:7:26"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1835:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1845:7:26","type":""}],"src":"1808:96:26"},{"body":{"nodeType":"YulBlock","src":"1953:79:26","statements":[{"body":{"nodeType":"YulBlock","src":"2010:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2019:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2022:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2012:6:26"},"nodeType":"YulFunctionCall","src":"2012:12:26"},"nodeType":"YulExpressionStatement","src":"2012:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1976:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2001:5:26"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1983:17:26"},"nodeType":"YulFunctionCall","src":"1983:24:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1973:2:26"},"nodeType":"YulFunctionCall","src":"1973:35:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1966:6:26"},"nodeType":"YulFunctionCall","src":"1966:43:26"},"nodeType":"YulIf","src":"1963:63:26"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1946:5:26","type":""}],"src":"1910:122:26"},{"body":{"nodeType":"YulBlock","src":"2090:87:26","statements":[{"nodeType":"YulAssignment","src":"2100:29:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2122:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2109:12:26"},"nodeType":"YulFunctionCall","src":"2109:20:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2100:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2165:5:26"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"2138:26:26"},"nodeType":"YulFunctionCall","src":"2138:33:26"},"nodeType":"YulExpressionStatement","src":"2138:33:26"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2068:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"2076:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2084:5:26","type":""}],"src":"2038:139:26"},{"body":{"nodeType":"YulBlock","src":"2228:32:26","statements":[{"nodeType":"YulAssignment","src":"2238:16:26","value":{"name":"value","nodeType":"YulIdentifier","src":"2249:5:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2238:7:26"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2210:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2220:7:26","type":""}],"src":"2183:77:26"},{"body":{"nodeType":"YulBlock","src":"2309:79:26","statements":[{"body":{"nodeType":"YulBlock","src":"2366:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2375:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2378:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2368:6:26"},"nodeType":"YulFunctionCall","src":"2368:12:26"},"nodeType":"YulExpressionStatement","src":"2368:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2332:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2357:5:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2339:17:26"},"nodeType":"YulFunctionCall","src":"2339:24:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2329:2:26"},"nodeType":"YulFunctionCall","src":"2329:35:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2322:6:26"},"nodeType":"YulFunctionCall","src":"2322:43:26"},"nodeType":"YulIf","src":"2319:63:26"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2302:5:26","type":""}],"src":"2266:122:26"},{"body":{"nodeType":"YulBlock","src":"2446:87:26","statements":[{"nodeType":"YulAssignment","src":"2456:29:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2478:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2465:12:26"},"nodeType":"YulFunctionCall","src":"2465:20:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2456:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2521:5:26"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2494:26:26"},"nodeType":"YulFunctionCall","src":"2494:33:26"},"nodeType":"YulExpressionStatement","src":"2494:33:26"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2424:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"2432:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2440:5:26","type":""}],"src":"2394:139:26"},{"body":{"nodeType":"YulBlock","src":"2622:391:26","statements":[{"body":{"nodeType":"YulBlock","src":"2668:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2670:77:26"},"nodeType":"YulFunctionCall","src":"2670:79:26"},"nodeType":"YulExpressionStatement","src":"2670:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2643:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"2652:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2639:3:26"},"nodeType":"YulFunctionCall","src":"2639:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"2664:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2635:3:26"},"nodeType":"YulFunctionCall","src":"2635:32:26"},"nodeType":"YulIf","src":"2632:119:26"},{"nodeType":"YulBlock","src":"2761:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"2776:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"2790:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2780:6:26","type":""}]},{"nodeType":"YulAssignment","src":"2805:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2840:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"2851:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2836:3:26"},"nodeType":"YulFunctionCall","src":"2836:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2860:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2815:20:26"},"nodeType":"YulFunctionCall","src":"2815:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2805:6:26"}]}]},{"nodeType":"YulBlock","src":"2888:118:26","statements":[{"nodeType":"YulVariableDeclaration","src":"2903:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"2917:2:26","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2907:6:26","type":""}]},{"nodeType":"YulAssignment","src":"2933:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2968:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"2979:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2964:3:26"},"nodeType":"YulFunctionCall","src":"2964:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2988:7:26"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2943:20:26"},"nodeType":"YulFunctionCall","src":"2943:53:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2933:6:26"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2584:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2595:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2607:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2615:6:26","type":""}],"src":"2539:474:26"},{"body":{"nodeType":"YulBlock","src":"3061:48:26","statements":[{"nodeType":"YulAssignment","src":"3071:32:26","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3096:5:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3089:6:26"},"nodeType":"YulFunctionCall","src":"3089:13:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3082:6:26"},"nodeType":"YulFunctionCall","src":"3082:21:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3071:7:26"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3043:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3053:7:26","type":""}],"src":"3019:90:26"},{"body":{"nodeType":"YulBlock","src":"3174:50:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3191:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3211:5:26"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"3196:14:26"},"nodeType":"YulFunctionCall","src":"3196:21:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3184:6:26"},"nodeType":"YulFunctionCall","src":"3184:34:26"},"nodeType":"YulExpressionStatement","src":"3184:34:26"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3162:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3169:3:26","type":""}],"src":"3115:109:26"},{"body":{"nodeType":"YulBlock","src":"3322:118:26","statements":[{"nodeType":"YulAssignment","src":"3332:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3344:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"3355:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3340:3:26"},"nodeType":"YulFunctionCall","src":"3340:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3332:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3406:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3419:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"3430:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3415:3:26"},"nodeType":"YulFunctionCall","src":"3415:17:26"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"3368:37:26"},"nodeType":"YulFunctionCall","src":"3368:65:26"},"nodeType":"YulExpressionStatement","src":"3368:65:26"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3294:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3306:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3317:4:26","type":""}],"src":"3230:210:26"},{"body":{"nodeType":"YulBlock","src":"3511:53:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3528:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3551:5:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3533:17:26"},"nodeType":"YulFunctionCall","src":"3533:24:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3521:6:26"},"nodeType":"YulFunctionCall","src":"3521:37:26"},"nodeType":"YulExpressionStatement","src":"3521:37:26"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3499:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3506:3:26","type":""}],"src":"3446:118:26"},{"body":{"nodeType":"YulBlock","src":"3668:124:26","statements":[{"nodeType":"YulAssignment","src":"3678:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3690:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"3701:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3686:3:26"},"nodeType":"YulFunctionCall","src":"3686:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3678:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3758:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3771:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"3782:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3767:3:26"},"nodeType":"YulFunctionCall","src":"3767:17:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"3714:43:26"},"nodeType":"YulFunctionCall","src":"3714:71:26"},"nodeType":"YulExpressionStatement","src":"3714:71:26"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3640:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3652:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3663:4:26","type":""}],"src":"3570:222:26"},{"body":{"nodeType":"YulBlock","src":"3898:519:26","statements":[{"body":{"nodeType":"YulBlock","src":"3944:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3946:77:26"},"nodeType":"YulFunctionCall","src":"3946:79:26"},"nodeType":"YulExpressionStatement","src":"3946:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3919:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"3928:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3915:3:26"},"nodeType":"YulFunctionCall","src":"3915:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"3940:2:26","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3911:3:26"},"nodeType":"YulFunctionCall","src":"3911:32:26"},"nodeType":"YulIf","src":"3908:119:26"},{"nodeType":"YulBlock","src":"4037:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"4052:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"4066:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4056:6:26","type":""}]},{"nodeType":"YulAssignment","src":"4081:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4116:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"4127:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4112:3:26"},"nodeType":"YulFunctionCall","src":"4112:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4136:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4091:20:26"},"nodeType":"YulFunctionCall","src":"4091:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4081:6:26"}]}]},{"nodeType":"YulBlock","src":"4164:118:26","statements":[{"nodeType":"YulVariableDeclaration","src":"4179:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"4193:2:26","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4183:6:26","type":""}]},{"nodeType":"YulAssignment","src":"4209:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4244:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"4255:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4240:3:26"},"nodeType":"YulFunctionCall","src":"4240:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4264:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4219:20:26"},"nodeType":"YulFunctionCall","src":"4219:53:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4209:6:26"}]}]},{"nodeType":"YulBlock","src":"4292:118:26","statements":[{"nodeType":"YulVariableDeclaration","src":"4307:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"4321:2:26","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4311:6:26","type":""}]},{"nodeType":"YulAssignment","src":"4337:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4372:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"4383:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4368:3:26"},"nodeType":"YulFunctionCall","src":"4368:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4392:7:26"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4347:20:26"},"nodeType":"YulFunctionCall","src":"4347:53:26"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4337:6:26"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3852:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3863:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3875:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3883:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3891:6:26","type":""}],"src":"3798:619:26"},{"body":{"nodeType":"YulBlock","src":"4466:43:26","statements":[{"nodeType":"YulAssignment","src":"4476:27:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4491:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"4498:4:26","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4487:3:26"},"nodeType":"YulFunctionCall","src":"4487:16:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4476:7:26"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4448:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4458:7:26","type":""}],"src":"4423:86:26"},{"body":{"nodeType":"YulBlock","src":"4576:51:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4593:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4614:5:26"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"4598:15:26"},"nodeType":"YulFunctionCall","src":"4598:22:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4586:6:26"},"nodeType":"YulFunctionCall","src":"4586:35:26"},"nodeType":"YulExpressionStatement","src":"4586:35:26"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4564:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4571:3:26","type":""}],"src":"4515:112:26"},{"body":{"nodeType":"YulBlock","src":"4727:120:26","statements":[{"nodeType":"YulAssignment","src":"4737:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4749:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"4760:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4745:3:26"},"nodeType":"YulFunctionCall","src":"4745:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4737:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4813:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4826:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"4837:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4822:3:26"},"nodeType":"YulFunctionCall","src":"4822:17:26"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"4773:39:26"},"nodeType":"YulFunctionCall","src":"4773:67:26"},"nodeType":"YulExpressionStatement","src":"4773:67:26"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4699:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4711:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4722:4:26","type":""}],"src":"4633:214:26"},{"body":{"nodeType":"YulBlock","src":"4919:263:26","statements":[{"body":{"nodeType":"YulBlock","src":"4965:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4967:77:26"},"nodeType":"YulFunctionCall","src":"4967:79:26"},"nodeType":"YulExpressionStatement","src":"4967:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4940:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"4949:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4936:3:26"},"nodeType":"YulFunctionCall","src":"4936:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"4961:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4932:3:26"},"nodeType":"YulFunctionCall","src":"4932:32:26"},"nodeType":"YulIf","src":"4929:119:26"},{"nodeType":"YulBlock","src":"5058:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"5073:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"5087:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5077:6:26","type":""}]},{"nodeType":"YulAssignment","src":"5102:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5137:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"5148:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5133:3:26"},"nodeType":"YulFunctionCall","src":"5133:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5157:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5112:20:26"},"nodeType":"YulFunctionCall","src":"5112:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5102:6:26"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4889:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4900:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4912:6:26","type":""}],"src":"4853:329:26"},{"body":{"nodeType":"YulBlock","src":"5253:53:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5270:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5293:5:26"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"5275:17:26"},"nodeType":"YulFunctionCall","src":"5275:24:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5263:6:26"},"nodeType":"YulFunctionCall","src":"5263:37:26"},"nodeType":"YulExpressionStatement","src":"5263:37:26"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5241:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5248:3:26","type":""}],"src":"5188:118:26"},{"body":{"nodeType":"YulBlock","src":"5410:124:26","statements":[{"nodeType":"YulAssignment","src":"5420:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5432:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"5443:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5428:3:26"},"nodeType":"YulFunctionCall","src":"5428:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5420:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5500:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5513:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"5524:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5509:3:26"},"nodeType":"YulFunctionCall","src":"5509:17:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"5456:43:26"},"nodeType":"YulFunctionCall","src":"5456:71:26"},"nodeType":"YulExpressionStatement","src":"5456:71:26"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5382:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5394:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5405:4:26","type":""}],"src":"5312:222:26"},{"body":{"nodeType":"YulBlock","src":"5623:391:26","statements":[{"body":{"nodeType":"YulBlock","src":"5669:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5671:77:26"},"nodeType":"YulFunctionCall","src":"5671:79:26"},"nodeType":"YulExpressionStatement","src":"5671:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5644:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"5653:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5640:3:26"},"nodeType":"YulFunctionCall","src":"5640:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"5665:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5636:3:26"},"nodeType":"YulFunctionCall","src":"5636:32:26"},"nodeType":"YulIf","src":"5633:119:26"},{"nodeType":"YulBlock","src":"5762:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"5777:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"5791:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5781:6:26","type":""}]},{"nodeType":"YulAssignment","src":"5806:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5841:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"5852:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5837:3:26"},"nodeType":"YulFunctionCall","src":"5837:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5861:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5816:20:26"},"nodeType":"YulFunctionCall","src":"5816:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5806:6:26"}]}]},{"nodeType":"YulBlock","src":"5889:118:26","statements":[{"nodeType":"YulVariableDeclaration","src":"5904:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"5918:2:26","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5908:6:26","type":""}]},{"nodeType":"YulAssignment","src":"5934:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5969:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"5980:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5965:3:26"},"nodeType":"YulFunctionCall","src":"5965:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5989:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5944:20:26"},"nodeType":"YulFunctionCall","src":"5944:53:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5934:6:26"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5585:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5596:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5608:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5616:6:26","type":""}],"src":"5540:474:26"},{"body":{"nodeType":"YulBlock","src":"6048:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6065:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6068:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6058:6:26"},"nodeType":"YulFunctionCall","src":"6058:88:26"},"nodeType":"YulExpressionStatement","src":"6058:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6162:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6165:4:26","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6155:6:26"},"nodeType":"YulFunctionCall","src":"6155:15:26"},"nodeType":"YulExpressionStatement","src":"6155:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6186:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6189:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6179:6:26"},"nodeType":"YulFunctionCall","src":"6179:15:26"},"nodeType":"YulExpressionStatement","src":"6179:15:26"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"6020:180:26"},{"body":{"nodeType":"YulBlock","src":"6257:269:26","statements":[{"nodeType":"YulAssignment","src":"6267:22:26","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"6281:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"6287:1:26","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6277:3:26"},"nodeType":"YulFunctionCall","src":"6277:12:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6267:6:26"}]},{"nodeType":"YulVariableDeclaration","src":"6298:38:26","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"6328:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"6334:1:26","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6324:3:26"},"nodeType":"YulFunctionCall","src":"6324:12:26"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"6302:18:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"6375:51:26","statements":[{"nodeType":"YulAssignment","src":"6389:27:26","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6403:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"6411:4:26","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6399:3:26"},"nodeType":"YulFunctionCall","src":"6399:17:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6389:6:26"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6355:18:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6348:6:26"},"nodeType":"YulFunctionCall","src":"6348:26:26"},"nodeType":"YulIf","src":"6345:81:26"},{"body":{"nodeType":"YulBlock","src":"6478:42:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"6492:16:26"},"nodeType":"YulFunctionCall","src":"6492:18:26"},"nodeType":"YulExpressionStatement","src":"6492:18:26"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6442:18:26"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6465:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"6473:2:26","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6462:2:26"},"nodeType":"YulFunctionCall","src":"6462:14:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6439:2:26"},"nodeType":"YulFunctionCall","src":"6439:38:26"},"nodeType":"YulIf","src":"6436:84:26"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"6241:4:26","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"6250:6:26","type":""}],"src":"6206:320:26"},{"body":{"nodeType":"YulBlock","src":"6686:288:26","statements":[{"nodeType":"YulAssignment","src":"6696:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6708:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"6719:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6704:3:26"},"nodeType":"YulFunctionCall","src":"6704:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6696:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6776:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6789:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"6800:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6785:3:26"},"nodeType":"YulFunctionCall","src":"6785:17:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"6732:43:26"},"nodeType":"YulFunctionCall","src":"6732:71:26"},"nodeType":"YulExpressionStatement","src":"6732:71:26"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"6857:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6870:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"6881:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6866:3:26"},"nodeType":"YulFunctionCall","src":"6866:18:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"6813:43:26"},"nodeType":"YulFunctionCall","src":"6813:72:26"},"nodeType":"YulExpressionStatement","src":"6813:72:26"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"6939:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6952:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"6963:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6948:3:26"},"nodeType":"YulFunctionCall","src":"6948:18:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"6895:43:26"},"nodeType":"YulFunctionCall","src":"6895:72:26"},"nodeType":"YulExpressionStatement","src":"6895:72:26"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6642:9:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6654:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6662:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6670:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6681:4:26","type":""}],"src":"6532:442:26"},{"body":{"nodeType":"YulBlock","src":"7008:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7025:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7028:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7018:6:26"},"nodeType":"YulFunctionCall","src":"7018:88:26"},"nodeType":"YulExpressionStatement","src":"7018:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7122:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7125:4:26","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7115:6:26"},"nodeType":"YulFunctionCall","src":"7115:15:26"},"nodeType":"YulExpressionStatement","src":"7115:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7146:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7149:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7139:6:26"},"nodeType":"YulFunctionCall","src":"7139:15:26"},"nodeType":"YulExpressionStatement","src":"7139:15:26"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"6980:180:26"},{"body":{"nodeType":"YulBlock","src":"7210:147:26","statements":[{"nodeType":"YulAssignment","src":"7220:25:26","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7243:1:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"7225:17:26"},"nodeType":"YulFunctionCall","src":"7225:20:26"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"7220:1:26"}]},{"nodeType":"YulAssignment","src":"7254:25:26","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"7277:1:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"7259:17:26"},"nodeType":"YulFunctionCall","src":"7259:20:26"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"7254:1:26"}]},{"nodeType":"YulAssignment","src":"7288:16:26","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7299:1:26"},{"name":"y","nodeType":"YulIdentifier","src":"7302:1:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7295:3:26"},"nodeType":"YulFunctionCall","src":"7295:9:26"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"7288:3:26"}]},{"body":{"nodeType":"YulBlock","src":"7328:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"7330:16:26"},"nodeType":"YulFunctionCall","src":"7330:18:26"},"nodeType":"YulExpressionStatement","src":"7330:18:26"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7320:1:26"},{"name":"sum","nodeType":"YulIdentifier","src":"7323:3:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7317:2:26"},"nodeType":"YulFunctionCall","src":"7317:10:26"},"nodeType":"YulIf","src":"7314:36:26"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"7197:1:26","type":""},{"name":"y","nodeType":"YulTypedName","src":"7200:1:26","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"7206:3:26","type":""}],"src":"7166:191:26"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n","id":26,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x9DC29FAC GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x257 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2B7 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x21D JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1C5 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x13D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF7 PUSH2 0x2D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x104 SWAP2 SWAP1 PUSH2 0xEBE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x127 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x122 SWAP2 SWAP1 PUSH2 0xF79 JUMP JUMPDEST PUSH2 0x365 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x134 SWAP2 SWAP1 PUSH2 0xFD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x145 PUSH2 0x388 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x152 SWAP2 SWAP1 PUSH2 0xFFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x175 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x170 SWAP2 SWAP1 PUSH2 0x1019 JUMP JUMPDEST PUSH2 0x392 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x182 SWAP2 SWAP1 PUSH2 0xFD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x193 PUSH2 0x3C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0x1088 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0xF79 JUMP JUMPDEST PUSH2 0x3CA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DA SWAP2 SWAP1 PUSH2 0x10A3 JUMP JUMPDEST PUSH2 0x3E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EC SWAP2 SWAP1 PUSH2 0xFFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FD PUSH2 0x428 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x207 PUSH2 0x43C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x214 SWAP2 SWAP1 PUSH2 0x10DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x225 PUSH2 0x466 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x232 SWAP2 SWAP1 PUSH2 0xEBE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x255 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x250 SWAP2 SWAP1 PUSH2 0xF79 JUMP JUMPDEST PUSH2 0x4F8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x271 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26C SWAP2 SWAP1 PUSH2 0xF79 JUMP JUMPDEST PUSH2 0x50E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27E SWAP2 SWAP1 PUSH2 0xFD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29C SWAP2 SWAP1 PUSH2 0x10FA JUMP JUMPDEST PUSH2 0x531 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AE SWAP2 SWAP1 PUSH2 0xFFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CC SWAP2 SWAP1 PUSH2 0x10A3 JUMP JUMPDEST PUSH2 0x5B8 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x2E2 SWAP1 PUSH2 0x1169 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x30E SWAP1 PUSH2 0x1169 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x35B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x330 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x35B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x33E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x370 PUSH2 0x63E JUMP JUMPDEST SWAP1 POP PUSH2 0x37D DUP2 DUP6 DUP6 PUSH2 0x646 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x39D PUSH2 0x63E JUMP JUMPDEST SWAP1 POP PUSH2 0x3AA DUP6 DUP3 DUP6 PUSH2 0x658 JUMP JUMPDEST PUSH2 0x3B5 DUP6 DUP6 DUP6 PUSH2 0x6ED JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x3D2 PUSH2 0x7E1 JUMP JUMPDEST PUSH2 0x3DC DUP3 DUP3 PUSH2 0x868 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x430 PUSH2 0x7E1 JUMP JUMPDEST PUSH2 0x43A PUSH1 0x0 PUSH2 0x8EA JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x475 SWAP1 PUSH2 0x1169 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4A1 SWAP1 PUSH2 0x1169 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4EE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4C3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4EE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4D1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x500 PUSH2 0x7E1 JUMP JUMPDEST PUSH2 0x50A DUP3 DUP3 PUSH2 0x9B0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x519 PUSH2 0x63E JUMP JUMPDEST SWAP1 POP PUSH2 0x526 DUP2 DUP6 DUP6 PUSH2 0x6ED JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5C0 PUSH2 0x7E1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x632 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x629 SWAP2 SWAP1 PUSH2 0x10DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x63B DUP2 PUSH2 0x8EA JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x653 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xA32 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x664 DUP5 DUP5 PUSH2 0x531 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x6E7 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x6D7 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x119A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6E6 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0xA32 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x75F JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x756 SWAP2 SWAP1 PUSH2 0x10DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7D1 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C8 SWAP2 SWAP1 PUSH2 0x10DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7DC DUP4 DUP4 DUP4 PUSH2 0xC09 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x7E9 PUSH2 0x63E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x807 PUSH2 0x43C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x866 JUMPI PUSH2 0x82A PUSH2 0x63E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x85D SWAP2 SWAP1 PUSH2 0x10DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8DA JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D1 SWAP2 SWAP1 PUSH2 0x10DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8E6 PUSH1 0x0 DUP4 DUP4 PUSH2 0xC09 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA22 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA19 SWAP2 SWAP1 PUSH2 0x10DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA2E DUP3 PUSH1 0x0 DUP4 PUSH2 0xC09 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAA4 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA9B SWAP2 SWAP1 PUSH2 0x10DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB16 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB0D SWAP2 SWAP1 PUSH2 0x10DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xC03 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xBFA SWAP2 SWAP1 PUSH2 0xFFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC5B JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xC4F SWAP2 SWAP1 PUSH2 0x1200 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xD2E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xCE7 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCDE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x119A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD77 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xDC4 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xE21 SWAP2 SWAP1 PUSH2 0xFFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xE68 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xE4D JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE90 DUP3 PUSH2 0xE2E JUMP JUMPDEST PUSH2 0xE9A DUP2 DUP6 PUSH2 0xE39 JUMP JUMPDEST SWAP4 POP PUSH2 0xEAA DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xE4A JUMP JUMPDEST PUSH2 0xEB3 DUP2 PUSH2 0xE74 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xED8 DUP2 DUP5 PUSH2 0xE85 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF10 DUP3 PUSH2 0xEE5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF20 DUP2 PUSH2 0xF05 JUMP JUMPDEST DUP2 EQ PUSH2 0xF2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF3D DUP2 PUSH2 0xF17 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF56 DUP2 PUSH2 0xF43 JUMP JUMPDEST DUP2 EQ PUSH2 0xF61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF73 DUP2 PUSH2 0xF4D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF90 JUMPI PUSH2 0xF8F PUSH2 0xEE0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF9E DUP6 DUP3 DUP7 ADD PUSH2 0xF2E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xFAF DUP6 DUP3 DUP7 ADD PUSH2 0xF64 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFCE DUP2 PUSH2 0xFB9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFE9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xFC5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xFF8 DUP2 PUSH2 0xF43 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1013 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xFEF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1032 JUMPI PUSH2 0x1031 PUSH2 0xEE0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1040 DUP7 DUP3 DUP8 ADD PUSH2 0xF2E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1051 DUP7 DUP3 DUP8 ADD PUSH2 0xF2E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1062 DUP7 DUP3 DUP8 ADD PUSH2 0xF64 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1082 DUP2 PUSH2 0x106C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x109D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1079 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10B9 JUMPI PUSH2 0x10B8 PUSH2 0xEE0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x10C7 DUP5 DUP3 DUP6 ADD PUSH2 0xF2E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x10D9 DUP2 PUSH2 0xF05 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10F4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x10D0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1111 JUMPI PUSH2 0x1110 PUSH2 0xEE0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x111F DUP6 DUP3 DUP7 ADD PUSH2 0xF2E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1130 DUP6 DUP3 DUP7 ADD PUSH2 0xF2E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1181 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1194 JUMPI PUSH2 0x1193 PUSH2 0x113A JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x11AF PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x10D0 JUMP JUMPDEST PUSH2 0x11BC PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xFEF JUMP JUMPDEST PUSH2 0x11C9 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xFEF JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x120B DUP3 PUSH2 0xF43 JUMP JUMPDEST SWAP2 POP PUSH2 0x1216 DUP4 PUSH2 0xF43 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x122E JUMPI PUSH2 0x122D PUSH2 0x11D1 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH8 0x53CCCAA00C5B8B8 0xBE SWAP16 DUP2 MOD 0xAC 0xDE 0xCC SWAP16 PUSH27 0x4345E54C4DF4779B30743506F3EF64736F6C634300081400330000 ","sourceMap":"283:681:25:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3998:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2849:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4776:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2707:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;633:93:25;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3004:116:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1981:93:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;865:97:25;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3315:178:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3551:140;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1779:89:5;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;3998:186::-;4071:4;4087:13;4103:12;:10;:12::i;:::-;4087:28;;4125:31;4134:5;4141:7;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;:::o;2849:97::-;2901:7;2927:12;;2920:19;;2849:97;:::o;4776:244::-;4863:4;4879:15;4897:12;:10;:12::i;:::-;4879:30;;4919:37;4935:4;4941:7;4950:5;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;5009:4;5002:11;;;4776:244;;;;;:::o;2707:82::-;2756:5;2780:2;2773:9;;2707:82;:::o;633:93:25:-;1531:13:0;:11;:13::i;:::-;702:17:25::1;708:2;712:6;702:5;:17::i;:::-;633:93:::0;;:::o;3004:116:5:-;3069:7;3095:9;:18;3105:7;3095:18;;;;;;;;;;;;;;;;3088:25;;3004:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1981:93:5:-;2028:13;2060:7;2053:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1981:93;:::o;865:97:25:-;1531:13:0;:11;:13::i;:::-;936:19:25::1;942:4;948:6;936:5;:19::i;:::-;865:97:::0;;:::o;3315:178:5:-;3384:4;3400:13;3416:12;:10;:12::i;:::-;3400:28;;3438:27;3448:5;3455:2;3459:5;3438:9;:27::i;:::-;3482:4;3475:11;;;3315:178;;;;:::o;3551:140::-;3631:7;3657:11;:18;3669:5;3657:18;;;;;;;;;;;;;;;:27;3676:7;3657:27;;;;;;;;;;;;;;;;3650:34;;3551:140;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;656:96:14:-;709:7;735:10;728:17;;656:96;:::o;8726:128:5:-;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;10415:476::-;10514:24;10541:25;10551:5;10558:7;10541:9;:25::i;:::-;10514:52;;10599:17;10580:16;:36;10576:309;;;10655:5;10636:16;:24;10632:130;;;10714:7;10723:16;10741:5;10687:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10632:130;10803:57;10812:5;10819:7;10847:5;10828:16;:24;10854:5;10803:8;:57::i;:::-;10576:309;10504:387;10415:476;;;:::o;5393:300::-;5492:1;5476:18;;:4;:18;;;5472:86;;5544:1;5517:30;;;;;;;;;;;:::i;:::-;;;;;;;;5472:86;5585:1;5571:16;;:2;:16;;;5567:86;;5639:1;5610:32;;;;;;;;;;;:::i;:::-;;;;;;;;5567:86;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;:::-;5393:300;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;7458:208:5:-;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;:35::i;:::-;7458:208;;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7984:206:5:-;8073:1;8054:21;;:7;:21;;;8050:89;;8125:1;8098:30;;;;;;;;;;;:::i;:::-;;;;;;;;8050:89;8148:35;8156:7;8173:1;8177:5;8148:7;:35::i;:::-;7984:206;;:::o;9701:432::-;9830:1;9813:19;;:5;:19;;;9809:89;;9884:1;9855:32;;;;;;;;;;;:::i;:::-;;;;;;;;9809:89;9930:1;9911:21;;:7;:21;;;9907:90;;9983:1;9955:31;;;;;;;;;;;:::i;:::-;;;;;;;;9907:90;10036:5;10006:11;:18;10018:5;10006:18;;;;;;;;;;;;;;;:27;10025:7;10006:27;;;;;;;;;;;;;;;:35;;;;10055:9;10051:76;;;10101:7;10085:31;;10094:5;10085:31;;;10110:5;10085:31;;;;;;:::i;:::-;;;;;;;;10051:76;9701:432;;;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;7:99:26:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:329::-;4912:6;4961:2;4949:9;4940:7;4936:23;4932:32;4929:119;;;4967:79;;:::i;:::-;4929:119;5087:1;5112:53;5157:7;5148:6;5137:9;5133:22;5112:53;:::i;:::-;5102:63;;5058:117;4853:329;;;;:::o;5188:118::-;5275:24;5293:5;5275:24;:::i;:::-;5270:3;5263:37;5188:118;;:::o;5312:222::-;5405:4;5443:2;5432:9;5428:18;5420:26;;5456:71;5524:1;5513:9;5509:17;5500:6;5456:71;:::i;:::-;5312:222;;;;:::o;5540:474::-;5608:6;5616;5665:2;5653:9;5644:7;5640:23;5636:32;5633:119;;;5671:79;;:::i;:::-;5633:119;5791:1;5816:53;5861:7;5852:6;5841:9;5837:22;5816:53;:::i;:::-;5806:63;;5762:117;5918:2;5944:53;5989:7;5980:6;5969:9;5965:22;5944:53;:::i;:::-;5934:63;;5889:118;5540:474;;;;;:::o;6020:180::-;6068:77;6065:1;6058:88;6165:4;6162:1;6155:15;6189:4;6186:1;6179:15;6206:320;6250:6;6287:1;6281:4;6277:12;6267:22;;6334:1;6328:4;6324:12;6355:18;6345:81;;6411:4;6403:6;6399:17;6389:27;;6345:81;6473:2;6465:6;6462:14;6442:18;6439:38;6436:84;;6492:18;;:::i;:::-;6436:84;6257:269;6206:320;;;:::o;6532:442::-;6681:4;6719:2;6708:9;6704:18;6696:26;;6732:71;6800:1;6789:9;6785:17;6776:6;6732:71;:::i;:::-;6813:72;6881:2;6870:9;6866:18;6857:6;6813:72;:::i;:::-;6895;6963:2;6952:9;6948:18;6939:6;6895:72;:::i;:::-;6532:442;;;;;;:::o;6980:180::-;7028:77;7025:1;7018:88;7125:4;7122:1;7115:15;7149:4;7146:1;7139:15;7166:191;7206:3;7225:20;7243:1;7225:20;:::i;:::-;7220:25;;7259:20;7277:1;7259:20;:::i;:::-;7254:25;;7302:1;7299;7295:9;7288:16;;7323:3;7320:1;7317:10;7314:36;;;7330:18;;:::i;:::-;7314:36;7166:191;;;;:::o"},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(address,uint256)":"9dc29fac","decimals()":"313ce567","mint(address,uint256)":"40c10f19","name()":"06fdde03","owner()":"8da5cb5b","renounceOwnership()":"715018a6","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC20 token contract\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(address,uint256)\":{\"details\":\"Function to burn tokens\",\"params\":{\"amount\":\": amount to burn\",\"from\":\": address to burn tokens\"}},\"constructor\":{\"details\":\"Constructor to mint initial supply name: PongToken symbol: PONG\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"mint(address,uint256)\":{\"details\":\"Function to mint tokens\",\"params\":{\"amount\":\": amount to mint\",\"to\":\": address to mint tokens\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"PongToken\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/tokens/PongToken.sol\":\"PongToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/tokens/PongToken.sol\":{\"keccak256\":\"0x08c061801d0d6eb01224539c747f8fef500ed6d3e91ef729a15601fc6b351f56\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://55583c7b08d82095bf767554d8b8c6ec71903ccb6a68f7eb5b73c1b0fa9c7bfd\",\"dweb:/ipfs/QmPsA1zGrkCJCyUbePFCWo8ckcjc2NX8DqbNbWW5DD2Xvo\"]}},\"version\":1}"}}}}}